[
    {
        "id": 93517,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllergies",
        "executor_version": "v1",
        "executor_display_name": "Allergies",
        "executor_description": "By default, the API returns both active and inactive allergies across dates.You can use the optional query parameters listed below to filter the records by status and obeserved date. To get the allergies observed on a specific date, give the same date in 'from_date' and 'to_date' parameters.",
        "executor_category": "FHIRcharmhealth",
        "executor_category_group": "FHIRcharmhealth",
        "service_provider": "charmhealth",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/patients/{patient_id}/allergies",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            },
            {
                "key": "patient_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "from_date\t",
                "value": "",
                "description": "Observed date of allergy",
                "req": false
            },
            {
                "key": "to_date",
                "value": "",
                "description": "Observed date of allergy",
                "req": false
            },
            {
                "key": "status\t",
                "value": "",
                "description": "Status of the allergy. Allowed Values: 'Active' or 'Inactive'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "oauth_2_0",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1684437373364,
        "lastModifiedTime": 1684438975012,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "0",
                    "message": "success",
                    "data": {
                        "entry": [
                            {
                                "resource": {
                                    "identifier": [
                                        {
                                            "use": "usual",
                                            "value": 100076000000012350
                                        }
                                    ],
                                    "onSetDateTime": "1980-05-10",
                                    "code": {
                                        "coding": [
                                            {
                                                "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                                                "code": "7980",
                                                "display": "penicillin g"
                                            }
                                        ],
                                        "text": "penicillin g"
                                    },
                                    "reaction": [
                                        {
                                            "severity": "moderate",
                                            "manifestation": [
                                                {
                                                    "text": "Hives"
                                                }
                                            ]
                                        }
                                    ],
                                    "verificationStatus": "confirmed",
                                    "patient": {
                                        "reference": "/fhir/patients/100076000000012061",
                                        "display": "Alice Jones Newman"
                                    },
                                    "criticality": "low",
                                    "clinicalStatus": "active",
                                    "type": "allergy",
                                    "category": [
                                        "medication"
                                    ],
                                    "resourceType": "AllergyIntolerance"
                                }
                            },
                            {
                                "resource": {
                                    "identifier": [
                                        {
                                            "use": "usual",
                                            "value": 100076000000012370
                                        }
                                    ],
                                    "onSetDateTime": "1980-05-10",
                                    "code": {
                                        "coding": [
                                            {
                                                "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                                                "code": "733",
                                                "display": "ampicillin"
                                            }
                                        ],
                                        "text": "ampicillin"
                                    },
                                    "reaction": [
                                        {
                                            "severity": "moderate",
                                            "manifestation": [
                                                {
                                                    "text": "Hives"
                                                }
                                            ]
                                        }
                                    ],
                                    "verificationStatus": "confirmed",
                                    "patient": {
                                        "reference": "/fhir/patients/100076000000012061",
                                        "display": "Alice Jones Newman"
                                    },
                                    "criticality": "low",
                                    "clinicalStatus": "active",
                                    "type": "allergy",
                                    "category": [
                                        "medication"
                                    ],
                                    "resourceType": "AllergyIntolerance"
                                }
                            }
                        ],
                        "total": 2,
                        "type": "searchset",
                        "resourceType": "Bundle"
                    }
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized (Invalid AuthToken)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "URL Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Method Not Allowed (Method you have called is not supported for the invoked API)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Rate Limit Exceeded (API usage limit exceeded)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93511,
        "executor_type": "THIRDPARTY",
        "executor_name": "smokingStatus",
        "executor_version": "v1",
        "executor_display_name": "Smoking Status",
        "executor_description": "Get the smoking status of a patient.Use the patient's unique identifier retrieved using the patient selection API as part of the URL.",
        "executor_category": "FHIRcharmhealth",
        "executor_category_group": "FHIRcharmhealth",
        "service_provider": "charmhealth",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/patients/{patient_id}/smokingstatus",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            },
            {
                "key": "patient_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "oauth_2_0",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684436864134,
        "lastModifiedTime": 1684436864134,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "0",
                    "message": "success",
                    "data": {
                        "valueCodeableConcept": {
                            "coding": [
                                {
                                    "system": "http://snomed.info/sct",
                                    "code": "449868002",
                                    "display": "Current every day smoker"
                                }
                            ],
                            "text": "Current every day smoker"
                        },
                        "code": {
                            "coding": [
                                {
                                    "system": "http://loinc.org",
                                    "code": "72166-2",
                                    "display": "Tobacco smoking status"
                                }
                            ],
                            "text": "Tobacco smoking status"
                        },
                        "subject": {
                            "reference": "/fhir/patients/100076000000012061",
                            "display": "Alice Jones Newman"
                        },
                        "category": [
                            {
                                "coding": [
                                    {
                                        "system": "http://hl7.org/fhir/observation-category",
                                        "code": "social-history",
                                        "display": "Social History"
                                    }
                                ],
                                "text": "Social History"
                            }
                        ],
                        "resourceType": "Observation"
                    }
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized (Invalid AuthToken)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "URL Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Method Not Allowed (Method you have called is not supported for the invoked API)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Rate Limit Exceeded (API usage limit exceeded)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93529,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTreatmentPlan",
        "executor_version": "v1",
        "executor_display_name": "Treatment Plan",
        "executor_description": "By default, the API returns both active and inactive devices across dates.You can use the optional query parameters listed below to filter the records by status and implant date. To get the devices implanted on a specific date, give the same date in 'from_date' and 'to_date' parameters.",
        "executor_category": "FHIRcharmhealth",
        "executor_category_group": "FHIRcharmhealth",
        "service_provider": "charmhealth",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/patients/{patient_id}/treatment Plan",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            },
            {
                "key": "patient_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "from_date\t",
                "value": "",
                "description": "Encounter date",
                "req": false
            },
            {
                "key": "to_date",
                "value": "",
                "description": "Encounter date",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "oauth_2_0",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684438134315,
        "lastModifiedTime": 1684438134315,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "0",
                    "message": "success",
                    "data": {
                        "entry": [
                            {
                                "resource": {
                                    "period": {
                                        "start": "2015-06-22"
                                    },
                                    "subject": {
                                        "reference": "/fhir/patients/100076000000012061",
                                        "display": "Alice Jones Newman"
                                    },
                                    "description": "i. Get an EKG done on 6/23/2015.\nii. Get a Chest X-ray done on 6/23/2015 showing the Lower Respiratory Tract\nStructure.\niii. Take Clindamycin 300mg three times a day as needed if pain does not subside/\niv. Schedule follow on visit with Neighborhood Physicians Practice on7/1/2015.",
                                    "title": "Treatment Plan",
                                    "resourceType": "CarePlan"
                                }
                            },
                            {
                                "resource": {
                                    "activity": [
                                        {
                                            "detail": {
                                                "scheduledString": "2015-06-29",
                                                "code": {
                                                    "coding": [
                                                        {
                                                            "system": "http://loinc.org",
                                                            "code": "24357-6",
                                                            "display": "Urinanalysis macro (dipstick) panel"
                                                        }
                                                    ],
                                                    "text": "Urinanalysis macro (dipstick) panel"
                                                },
                                                "category": {
                                                    "coding": [
                                                        {
                                                            "system": "http://hl7.org/fhir/care-plan-activity-category",
                                                            "code": "procedure",
                                                            "display": "Procedure"
                                                        }
                                                    ],
                                                    "text": "Procedure"
                                                }
                                            }
                                        }
                                    ],
                                    "subject": {
                                        "reference": "/fhir/patients/100076000000012061",
                                        "display": "Alice Jones Newman"
                                    },
                                    "title": "Lab Tests",
                                    "resourceType": "CarePlan"
                                }
                            }
                        ],
                        "total": 2,
                        "type": "searchset",
                        "resourceType": "Bundle"
                    }
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized (Invalid AuthToken)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "URL Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Method Not Allowed (Method you have called is not supported for the invoked API)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Rate Limit Exceeded (API usage limit exceeded)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93532,
        "executor_type": "THIRDPARTY",
        "executor_name": "getCareTeamcharm",
        "executor_version": "v1",
        "executor_display_name": "Care Team",
        "executor_description": "Care Team",
        "executor_category": "FHIRcharmhealth",
        "executor_category_group": "FHIRcharmhealth",
        "service_provider": "charmhealth",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/patients/{patient_id}/careTeam",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            },
            {
                "key": "patient_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "oauth_2_0",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684438496424,
        "lastModifiedTime": 1684438496424,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "0",
                    "message": "success",
                    "data": {
                        "identifier": [
                            {
                                "use": "usual",
                                "value": 100076000000012370
                            },
                            {
                                "use": "usual",
                                "value": 100076000000012500
                            }
                        ],
                        "managingOrganization": {
                            "display": "NISTEHRFacility"
                        },
                        "subject": {
                            "reference": "/fhir/patients/100076000000012061",
                            "display": "Alice Jones Newman"
                        },
                        "name": "NISTEHRFacility In-house Care Team",
                        "category": {
                            "coding": [
                                {
                                    "system": "http://hl7.org/fhir/care-team-category",
                                    "code": "longitudinal",
                                    "display": "Longitudinal Care Coordination"
                                }
                            ],
                            "text": "Longitudinal Care Coordination"
                        },
                        "participant": [
                            {
                                "role": {
                                    "text": "Physician"
                                },
                                "member": {
                                    "display": "Albert Davis"
                                }
                            },
                            {
                                "role": {
                                    "text": "Nurse"
                                },
                                "member": {
                                    "display": "Tracy Davis"
                                }
                            }
                        ],
                        "resourceType": "CareTeam",
                        "status": "active"
                    }
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized (Invalid AuthToken)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "URL Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Method Not Allowed (Method you have called is not supported for the invoked API)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Rate Limit Exceeded (API usage limit exceeded)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93515,
        "executor_type": "THIRDPARTY",
        "executor_name": "getMedications",
        "executor_version": "v1",
        "executor_display_name": "Medications",
        "executor_description": "By default, the API returns both active and inactive medications across dates.You can use the optional query parameters listed below to filter the records by status and start date of the medication. To get the medication records on a specific date, give the same date in 'from_date' and 'to_date' parameters.",
        "executor_category": "FHIRcharmhealth",
        "executor_category_group": "FHIRcharmhealth",
        "service_provider": "charmhealth",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/patients/{patient_id}/medications",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            },
            {
                "key": "patient_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "from_date\t",
                "value": "",
                "description": "Start date of the medication",
                "req": false
            },
            {
                "key": "to_date",
                "value": "",
                "description": "Start date of the medication",
                "req": false
            },
            {
                "key": "status\t",
                "value": "",
                "description": "Status of the medication. Allowed Values: 'Active' or 'Inactive'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "oauth_2_0",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1684437255398,
        "lastModifiedTime": 1684438885511,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "0",
                    "message": "success",
                    "data": {
                        "entry": [
                            {
                                "resource": {
                                    "identifier": [
                                        {
                                            "use": "usual",
                                            "value": 100076000000012540
                                        }
                                    ],
                                    "dosage": [
                                        {
                                            "text": "1 unit , Two times daily"
                                        }
                                    ],
                                    "effectivePeriod": {
                                        "start": "2015-06-22",
                                        "end": "2015-06-30"
                                    },
                                    "informationSource": {
                                        "reference": "/fhir/patients/100076000000012061",
                                        "display": "Alice Jones Newman"
                                    },
                                    "subject": {
                                        "reference": "/fhir/patients/100076000000012061",
                                        "display": "Alice Jones Newman"
                                    },
                                    "medicationCodeableConcept": {
                                        "coding": [
                                            {
                                                "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                                                "code": "309090",
                                                "display": "Ceftriaxone 100 mg/mL injectable"
                                            }
                                        ],
                                        "text": "Ceftriaxone 100 mg/mL injectable"
                                    },
                                    "resourceType": "MedicationStatement",
                                    "status": "active"
                                }
                            },
                            {
                                "resource": {
                                    "identifier": [
                                        {
                                            "use": "usual",
                                            "value": 100076000000012560
                                        }
                                    ],
                                    "dosage": [
                                        {
                                            "text": "1 unit ,Once a week"
                                        }
                                    ],
                                    "effectiveDateTime": "2015-06-22",
                                    "informationSource": {
                                        "reference": "/fhir/patients/100076000000012061",
                                        "display": "Alice Jones Newman"
                                    },
                                    "subject": {
                                        "reference": "/fhir/patients/100076000000012061",
                                        "display": "Alice Jones Newman"
                                    },
                                    "medicationCodeableConcept": {
                                        "coding": [
                                            {
                                                "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                                                "code": "731241",
                                                "display": "Aranesp 0.5 mg/mL injectable"
                                            }
                                        ],
                                        "text": "Aranesp 0.5 mg/mL injectable"
                                    },
                                    "resourceType": "MedicationStatement",
                                    "status": "active"
                                }
                            },
                            {
                                "resource": {
                                    "identifier": [
                                        {
                                            "use": "usual",
                                            "value": 100076000000012980
                                        }
                                    ],
                                    "dosage": [
                                        {
                                            "text": "1 unit, As needed"
                                        }
                                    ],
                                    "effectivePeriod": {
                                        "start": "2015-06-22",
                                        "end": "2015-07-02"
                                    },
                                    "informationSource": {
                                        "reference": "/fhir/patients/100076000000012061",
                                        "display": "Alice Jones Newman"
                                    },
                                    "subject": {
                                        "reference": "/fhir/patients/100076000000012061",
                                        "display": "Alice Jones Newman"
                                    },
                                    "medicationCodeableConcept": {
                                        "coding": [
                                            {
                                                "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                                                "code": "209459",
                                                "display": "Tylenol 500 milligram(s) oral"
                                            }
                                        ],
                                        "text": "Tylenol 500 milligram(s) oral"
                                    },
                                    "resourceType": "MedicationStatement",
                                    "status": "active"
                                }
                            }
                        ],
                        "total": 3,
                        "type": "searchset",
                        "resourceType": "Bundle"
                    }
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized (Invalid AuthToken)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "URL Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Method Not Allowed (Method you have called is not supported for the invoked API)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Rate Limit Exceeded (API usage limit exceeded)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93519,
        "executor_type": "THIRDPARTY",
        "executor_name": "getLabResults",
        "executor_version": "v1",
        "executor_display_name": "Lab Results",
        "executor_description": "By default, the API returns all data across dates.You can use the optional query parameters listed below to filter the results by date. To get the lab results on a specific date, give the same date in 'from_date' and 'to_date' parameters.",
        "executor_category": "FHIRcharmhealth",
        "executor_category_group": "FHIRcharmhealth",
        "service_provider": "charmhealth",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/patients/{patient_id}/labresults",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            },
            {
                "key": "patient_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "from_date\t",
                "value": "",
                "description": "Date of lab result",
                "req": false
            },
            {
                "key": "to_date",
                "value": "",
                "description": "Date of lab result",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "oauth_2_0",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1684437512339,
        "lastModifiedTime": 1684439041532,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "0",
                    "message": "success",
                    "data": {
                        "entry": [
                            {
                                "resource": {
                                    "identifier": [
                                        {
                                            "use": "usual",
                                            "value": 100076000000015090
                                        }
                                    ],
                                    "component": [
                                        {
                                            "referenceRange": {
                                                "text": "YELLOW"
                                            },
                                            "code": {
                                                "coding": [
                                                    {
                                                        "system": "http://loinc.org",
                                                        "code": "5778-6",
                                                        "display": "Color of Urine"
                                                    }
                                                ],
                                                "text": "Color of Urine"
                                            },
                                            "valueQuantity": {
                                                "unit": "",
                                                "value": "YELLOW"
                                            }
                                        },
                                        {
                                            "referenceRange": {
                                                "text": "CLEAR"
                                            },
                                            "code": {
                                                "coding": [
                                                    {
                                                        "system": "http://loinc.org",
                                                        "code": "5767-9",
                                                        "display": "Appearance of Urine"
                                                    }
                                                ],
                                                "text": "Appearance of Urine"
                                            },
                                            "valueQuantity": {
                                                "unit": "",
                                                "value": "CLEAR"
                                            }
                                        },
                                        {
                                            "referenceRange": {
                                                "high": {
                                                    "unit": "",
                                                    "value": "1.03"
                                                },
                                                "low": {
                                                    "unit": "",
                                                    "value": "1.005"
                                                }
                                            },
                                            "code": {
                                                "coding": [
                                                    {
                                                        "system": "http://loinc.org",
                                                        "code": "5811-5",
                                                        "display": "Specific gravity of Urine by Test strip"
                                                    }
                                                ],
                                                "text": "Specific gravity of Urine by Test strip"
                                            },
                                            "interpretation": {
                                                "text": "Normal"
                                            },
                                            "valueQuantity": {
                                                "unit": "",
                                                "value": "1.015"
                                            }
                                        },
                                        {
                                            "referenceRange": {
                                                "high": {
                                                    "unit": "[pH]",
                                                    "value": "8.0"
                                                },
                                                "low": {
                                                    "unit": "[pH]",
                                                    "value": "5.0"
                                                }
                                            },
                                            "code": {
                                                "coding": [
                                                    {
                                                        "system": "http://loinc.org",
                                                        "code": "5803-2",
                                                        "display": "pH of Urine by Test strip"
                                                    }
                                                ],
                                                "text": "pH of Urine by Test strip"
                                            },
                                            "interpretation": {
                                                "text": "Normal"
                                            },
                                            "valueQuantity": {
                                                "unit": "[pH]",
                                                "value": "5.0"
                                            }
                                        },
                                        {
                                            "referenceRange": {
                                                "text": "Neg"
                                            },
                                            "code": {
                                                "coding": [
                                                    {
                                                        "system": "http://loinc.org",
                                                        "code": "5792-7",
                                                        "display": "Glucose [Mass/volume] in urine by test strip"
                                                    }
                                                ],
                                                "text": "Glucose [Mass/volume] in urine by test strip"
                                            },
                                            "valueQuantity": {
                                                "unit": "mg/dL",
                                                "value": "50"
                                            }
                                        },
                                        {
                                            "referenceRange": {
                                                "text": "Negative"
                                            },
                                            "code": {
                                                "coding": [
                                                    {
                                                        "system": "http://loinc.org",
                                                        "code": "5797-6",
                                                        "display": "Ketones [Mass/Volume] in urine by test strip"
                                                    }
                                                ],
                                                "text": "Ketones [Mass/Volume] in urine by test strip"
                                            },
                                            "valueQuantity": {
                                                "unit": "",
                                                "value": "Negative"
                                            }
                                        },
                                        {
                                            "referenceRange": {
                                                "text": "negative"
                                            },
                                            "code": {
                                                "coding": [
                                                    {
                                                        "system": "http://loinc.org",
                                                        "code": "5804-0",
                                                        "display": "Protein[Mass/Volume] in urine by test strip"
                                                    }
                                                ],
                                                "text": "Protein[Mass/Volume] in urine by test strip"
                                            },
                                            "valueQuantity": {
                                                "unit": "mg/dL",
                                                "value": "100"
                                            }
                                        }
                                    ],
                                    "code": {
                                        "coding": [
                                            {
                                                "system": "http://loinc.org",
                                                "code": "24357-6",
                                                "display": "Urinanalysis macro (dipstick) panel"
                                            }
                                        ],
                                        "text": "Urinanalysis macro (dipstick) panel"
                                    },
                                    "effectiveDateTime": "2015-06-22",
                                    "subject": {
                                        "reference": "/fhir/patients/100076000000012061",
                                        "display": "Alice Jones Newman"
                                    },
                                    "category": {
                                        "coding": [
                                            {
                                                "system": "http://hl7.org/fhir/observation-category",
                                                "code": "laboratory",
                                                "display": "Laboratory"
                                            }
                                        ],
                                        "text": "Laboratory"
                                    },
                                    "resourceType": "Observation",
                                    "status": "Final"
                                }
                            }
                        ],
                        "total": 1,
                        "type": "searchset",
                        "resourceType": "Bundle"
                    }
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized (Invalid AuthToken)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "URL Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Method Not Allowed (Method you have called is not supported for the invoked API)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Rate Limit Exceeded (API usage limit exceeded)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93514,
        "executor_type": "THIRDPARTY",
        "executor_name": "getproblems",
        "executor_version": "v1",
        "executor_display_name": "Problems",
        "executor_description": "By default, the API returns problems with all statuses (Active, Inactive and Resolved) across dates.You can use the optional query parameters listed below to filter the records by status and start date of the problem. To get the problem records on a specific date, give the same date in 'from_date' and 'to_date' parameters.",
        "executor_category": "FHIRcharmhealth",
        "executor_category_group": "FHIRcharmhealth",
        "service_provider": "charmhealth",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/patients/{patient_id}/problems",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            },
            {
                "key": "patient_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "from_date\t",
                "value": "",
                "description": "Start date of the problem",
                "req": false
            },
            {
                "key": "to_date",
                "value": "",
                "description": "Start date of the problem",
                "req": false
            },
            {
                "key": "status\t",
                "value": "",
                "description": "Status of the problem. Allowed Values: 'Active','Inactive' or 'Resolved'",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "oauth_2_0",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1684437153607,
        "lastModifiedTime": 1684439422639,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "0",
                    "message": "success",
                    "data": {
                        "entry": [
                            {
                                "resource": {
                                    "identifier": [
                                        {
                                            "use": "usual",
                                            "value": 100076000000012270
                                        }
                                    ],
                                    "code": {
                                        "coding": [
                                            {
                                                "system": "http://snomed.info/sct",
                                                "code": "56251003",
                                                "display": "Nebulizer therapy"
                                            }
                                        ],
                                        "text": "Nebulizer therapy"
                                    },
                                    "subject": {
                                        "reference": "/fhir/patients/100076000000012061",
                                        "display": "Alice Jones Newman"
                                    },
                                    "performedDateTime": "2015-06-22",
                                    "resourceType": "Procedure",
                                    "status": "completed",
                                    "notDone": false
                                }
                            },
                            {
                                "resource": {
                                    "identifier": [
                                        {
                                            "use": "usual",
                                            "value": 100076000000012270
                                        }
                                    ],
                                    "code": {
                                        "coding": [
                                            {
                                                "system": "http://snomed.info/sct",
                                                "code": "175135009",
                                                "display": "Introduction of cardiac pacemaker system via vein"
                                            }
                                        ],
                                        "text": "Introduction of cardiac pacemaker system via vein"
                                    },
                                    "subject": {
                                        "reference": "/fhir/patients/100076000000012061",
                                        "display": "Alice Jones Newman"
                                    },
                                    "performedDateTime": "2011-10-05",
                                    "resourceType": "Procedure",
                                    "status": "completed",
                                    "notDone": false
                                }
                            }
                        ],
                        "total": 2,
                        "type": "searchset",
                        "resourceType": "Bundle"
                    }
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized (Invalid AuthToken)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "URL Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Method Not Allowed (Method you have called is not supported for the invoked API)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Rate Limit Exceeded (API usage limit exceeded)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93527,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAssessments",
        "executor_version": "v1",
        "executor_display_name": "Assessments",
        "executor_description": "By default, the API returns both active and inactive devices across dates.You can use the optional query parameters listed below to filter the records by status and implant date. To get the devices implanted on a specific date, give the same date in 'from_date' and 'to_date' parameters.",
        "executor_category": "FHIRcharmhealth",
        "executor_category_group": "FHIRcharmhealth",
        "service_provider": "charmhealth",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/patients/{patient_id}/assessments",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            },
            {
                "key": "patient_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "from_date\t",
                "value": "",
                "description": "Encounter Date",
                "req": false
            },
            {
                "key": "to_date",
                "value": "",
                "description": "Encounter Date",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "oauth_2_0",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1684437998011,
        "lastModifiedTime": 1684439309092,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "0",
                    "message": "success",
                    "data": {
                        "entry": [
                            {
                                "resource": {
                                    "period": {
                                        "start": "2015-06-22"
                                    },
                                    "subject": {
                                        "reference": "/fhir/patients/100076000000012061",
                                        "display": "Alice Jones Newman"
                                    },
                                    "description": "The patient was found to have fever and Dr Davis is suspecting Anemia\nbased on the patient history. So Dr Davis asked the patient to closely\nmonitor the temperature and blood pressure and get admitted to\nCommunity Health Hospitals if the fever does not subside within a day.",
                                    "title": "Assessment",
                                    "resourceType": "CarePlan"
                                }
                            }
                        ],
                        "total": 1,
                        "type": "searchset",
                        "resourceType": "Bundle"
                    }
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized (Invalid AuthToken)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "URL Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Method Not Allowed (Method you have called is not supported for the invoked API)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Rate Limit Exceeded (API usage limit exceeded)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93506,
        "executor_type": "THIRDPARTY",
        "executor_name": "patientSelection",
        "executor_version": "v1",
        "executor_display_name": "Patient Selection",
        "executor_description": "Get the unique identifier of a patient record stored in users' ChARM EHR account matching the given query parameters. The querying application can use the returned identifier to fetch patient's other medical records (medications, allergies etc)",
        "executor_category": "FHIRcharmhealth",
        "executor_category_group": "FHIRcharmhealth",
        "service_provider": "charmhealth",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/patients/id",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "first_name\t",
                "value": "",
                "description": "First Name of the Patient",
                "req": false
            },
            {
                "key": "last_name",
                "value": "",
                "description": "Last Name of the Patient",
                "req": false
            },
            {
                "key": "gender",
                "value": "",
                "description": "Gender of the Patient",
                "req": false
            },
            {
                "key": "dob",
                "value": "",
                "description": "Date of Birth of the Patient",
                "req": false
            },
            {
                "key": "middle_name",
                "value": "",
                "description": "Middle Name of the Patient",
                "req": false
            },
            {
                "key": "email",
                "value": "",
                "description": "Email ID of the Patient",
                "req": false
            },
            {
                "key": "mother_first_name",
                "value": "",
                "description": "Mother's First Name",
                "req": false
            },
            {
                "key": "mobile\t",
                "value": "",
                "description": "Mobile number of the Patient",
                "req": false
            },
            {
                "key": "city",
                "value": "",
                "description": "City of residence",
                "req": false
            },
            {
                "key": "state",
                "value": "",
                "description": "State of residence",
                "req": false
            },
            {
                "key": "zip\t",
                "value": "",
                "description": "Zip Code",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "oauth_2_0",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684436369759,
        "lastModifiedTime": 1684436369759,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "0",
                    "message": "success",
                    "data": {
                        "identifier": [
                            {
                                "use": "usual",
                                "value": 100076000000012060
                            }
                        ],
                        "gender": "female",
                        "name": [
                            {
                                "given": [
                                    "Alice",
                                    "Jones"
                                ],
                                "use": "usual",
                                "text": "Alice Jones Newman",
                                "family": "Newman"
                            }
                        ],
                        "birthDate": "1970-05-01",
                        "resourceType": "Patient"
                    }
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized (Invalid AuthToken)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "URL Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Method Not Allowed (Method you have called is not supported for the invoked API)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Rate Limit Exceeded (API usage limit exceeded)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93523,
        "executor_type": "THIRDPARTY",
        "executor_name": "getVaccines",
        "executor_version": "v1",
        "executor_display_name": "Vaccines",
        "executor_description": "By default, the API returns all data across dates.You can use the optional query parameters listed below to filter the records by vaccination date. To get the vaccines administered on a specific date, give the same date in 'from_date' and 'to_date' parameters.",
        "executor_category": "FHIRcharmhealth",
        "executor_category_group": "FHIRcharmhealth",
        "service_provider": "charmhealth",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/patients/{patient_id}/vaccines",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            },
            {
                "key": "patient_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "from_date\t",
                "value": "",
                "description": "Vaccine data recorded date",
                "req": false
            },
            {
                "key": "to_date",
                "value": "",
                "description": "Vaccine data recorded date",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "oauth_2_0",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1684437826036,
        "lastModifiedTime": 1684439140642,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "0",
                    "message": "success",
                    "data": {
                        "entry": [
                            {
                                "resource": {
                                    "date": "2015-06-22",
                                    "identifier": [
                                        {
                                            "use": "usual"
                                        }
                                    ],
                                    "patient": {
                                        "reference": "/fhir/patients/100076000000012061",
                                        "display": "Alice Jones Newman"
                                    },
                                    "notGiven": "true",
                                    "explanation": {
                                        "reasonNotGiven": [
                                            {
                                                "coding": [
                                                    {
                                                        "system": "http://hl7.org/fhir/v3/ActReason",
                                                        "code": "PATOBJ",
                                                        "display": "patient objection"
                                                    }
                                                ],
                                                "text": "Refusal Reason: Immunization was not given - Patient rejected immunization"
                                            }
                                        ]
                                    },
                                    "vaccineCode": {
                                        "coding": [
                                            {
                                                "system": "http://hl7.org/fhir/sid/cvx",
                                                "code": "166",
                                                "display": "influenza, intradermal, quadrivalent, preservative free"
                                            }
                                        ],
                                        "text": "influenza, intradermal, quadrivalent, preservative free"
                                    },
                                    "resourceType": "Immunization",
                                    "status": "completed"
                                }
                            },
                            {
                                "resource": {
                                    "date": "2014-05-10",
                                    "identifier": [
                                        {
                                            "use": "usual"
                                        }
                                    ],
                                    "primarySource": true,
                                    "practitioner": [
                                        {
                                            "actor": {
                                                "display": "Albert Davis"
                                            },
                                            "role": {
                                                "coding": [
                                                    {
                                                        "system": "http://hl7.org/fhir/v2/0443",
                                                        "code": "OP",
                                                        "display": "Ordering Provider"
                                                    }
                                                ],
                                                "text": "Ordering Provider"
                                            }
                                        }
                                    ],
                                    "notGiven": "false",
                                    "lotNumber": "1",
                                    "manufacturer": {
                                        "display": "Immuno-U.S., Inc."
                                    },
                                    "route": {
                                        "coding": [
                                            {
                                                "system": "NCIT",
                                                "code": "C28161",
                                                "display": "Intramuscular"
                                            }
                                        ],
                                        "text": "Intramuscular"
                                    },
                                    "patient": {
                                        "reference": "/fhir/patients/100076000000012061",
                                        "display": "Alice Jones Newman"
                                    },
                                    "vaccineCode": {
                                        "coding": [
                                            {
                                                "system": "http://hl7.org/fhir/sid/cvx",
                                                "code": "88",
                                                "display": "Influenza Virus Vaccine"
                                            }
                                        ],
                                        "text": "Influenza Virus Vaccine"
                                    },
                                    "resourceType": "Immunization",
                                    "status": "completed",
                                    "expirationDate": "2018-08-08"
                                }
                            },
                            {
                                "resource": {
                                    "date": "2012-01-04",
                                    "identifier": [
                                        {
                                            "use": "usual"
                                        }
                                    ],
                                    "primarySource": true,
                                    "practitioner": [
                                        {
                                            "actor": {
                                                "display": "Albert Davis"
                                            },
                                            "role": {
                                                "coding": [
                                                    {
                                                        "system": "http://hl7.org/fhir/v2/0443",
                                                        "code": "OP",
                                                        "display": "Ordering Provider"
                                                    }
                                                ],
                                                "text": "Ordering Provider"
                                            }
                                        }
                                    ],
                                    "notGiven": "false",
                                    "lotNumber": "2",
                                    "manufacturer": {
                                        "display": "Immuno-U.S., Inc."
                                    },
                                    "route": {
                                        "coding": [
                                            {
                                                "system": "NCIT",
                                                "code": "C38276",
                                                "display": "Intravenous"
                                            }
                                        ],
                                        "text": "Intravenous"
                                    },
                                    "patient": {
                                        "reference": "/fhir/patients/100076000000012061",
                                        "display": "Alice Jones Newman"
                                    },
                                    "vaccineCode": {
                                        "coding": [
                                            {
                                                "system": "http://hl7.org/fhir/sid/cvx",
                                                "code": "106",
                                                "display": "Tetanus and diphtheria toxoids"
                                            }
                                        ],
                                        "text": "Tetanus and diphtheria toxoids"
                                    },
                                    "resourceType": "Immunization",
                                    "status": "completed",
                                    "expirationDate": "2018-01-04"
                                }
                            }
                        ],
                        "total": 3,
                        "type": "searchset",
                        "resourceType": "Bundle"
                    }
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized (Invalid AuthToken)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "URL Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Method Not Allowed (Method you have called is not supported for the invoked API)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Rate Limit Exceeded (API usage limit exceeded)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93525,
        "executor_type": "THIRDPARTY",
        "executor_name": "getImplants",
        "executor_version": "v1",
        "executor_display_name": "Implants",
        "executor_description": "By default, the API returns both active and inactive devices across dates.You can use the optional query parameters listed below to filter the records by status and implant date. To get the devices implanted on a specific date, give the same date in 'from_date' and 'to_date' parameters.",
        "executor_category": "FHIRcharmhealth",
        "executor_category_group": "FHIRcharmhealth",
        "service_provider": "charmhealth",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/patients/{patient_id}/implants",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            },
            {
                "key": "patient_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "from_date\t",
                "value": "",
                "description": "Date of Implant",
                "req": false
            },
            {
                "key": "to_date",
                "value": "",
                "description": "Date of Implant",
                "req": false
            },
            {
                "key": "status",
                "value": "",
                "description": "Status of the implanted device. Allowed Values : Active or Inactive",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "oauth_2_0",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1684437936374,
        "lastModifiedTime": 1684439240514,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "0",
                    "message": "success",
                    "data": {
                        "entry": [
                            {
                                "resource": {
                                    "identifier": [
                                        {
                                            "use": "usual",
                                            "value": 100076000000012340
                                        }
                                    ],
                                    "patient": {
                                        "reference": "/fhir/patients/100076000000012061",
                                        "display": "Alice Jones Newman"
                                    },
                                    "udi": {
                                        "deviceIdentifier": "(01)00643169007222(17)160128(21)BLC200461H",
                                        "name": "Cardiac resynchronization therapy implantable defibrillator"
                                    },
                                    "version": "DTBA1QQ",
                                    "resourceType": "Device",
                                    "status": "active",
                                    "manufacturer": "MEDTRONIC, INC.",
                                    "expirationDate": "2016-01-28"
                                }
                            }
                        ],
                        "total": 1,
                        "type": "searchset",
                        "resourceType": "Bundle"
                    }
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized (Invalid AuthToken)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "URL Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Method Not Allowed (Method you have called is not supported for the invoked API)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Rate Limit Exceeded (API usage limit exceeded)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93531,
        "executor_type": "THIRDPARTY",
        "executor_name": "getHealthConcerns",
        "executor_version": "v1",
        "executor_display_name": "Health Concerns",
        "executor_description": "By default, the API returns all data across encounters.You can use the optional query parameters listed below to filter the records by encounter date. To get the health concerns recorded on a specific date, give the same date in 'from_date' and 'to_date' parameters.",
        "executor_category": "FHIRcharmhealth",
        "executor_category_group": "FHIRcharmhealth",
        "service_provider": "charmhealth",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/patients/{patient_id}/healthconcerns",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            },
            {
                "key": "patient_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "from_date\t",
                "value": "",
                "description": "Encounter date",
                "req": false
            },
            {
                "key": "to_date",
                "value": "",
                "description": "Encounter date",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "oauth_2_0",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684438369433,
        "lastModifiedTime": 1684438369433,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "0",
                    "message": "success",
                    "data": {
                        "entry": [
                            {
                                "resource": {
                                    "code": {
                                        "text": "a. Chronic Sickness exhibited by patient b. HealthCare Concerns refer to underlying clinical facts i. Documented HyperTension problem ii. Documented HypoThyroidism problem iii. Watch Weight of patient"
                                    },
                                    "subject": {
                                        "reference": "/fhir/patients/100076000000012061",
                                        "display": "Alice Jones Newman"
                                    },
                                    "clinicalStatus": "active",
                                    "category": [
                                        {
                                            "coding": [
                                                {
                                                    "system": "http://loinc.org",
                                                    "code": "75310-3",
                                                    "display": "Health concerns"
                                                }
                                            ],
                                            "text": "Health concerns"
                                        }
                                    ],
                                    "onsetDateTime": "2015-06-22",
                                    "resourceType": "Condition"
                                }
                            }
                        ],
                        "total": 1,
                        "type": "searchset",
                        "resourceType": "Bundle"
                    }
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized (Invalid AuthToken)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "URL Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Method Not Allowed (Method you have called is not supported for the invoked API)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Rate Limit Exceeded (API usage limit exceeded)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93510,
        "executor_type": "THIRDPARTY",
        "executor_name": "getdemographics",
        "executor_version": "v1",
        "executor_display_name": "Demographics",
        "executor_description": "Demographics",
        "executor_category": "FHIRcharmhealth",
        "executor_category_group": "FHIRcharmhealth",
        "service_provider": "charmhealth",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/patients/{patient_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            },
            {
                "key": "patient_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "oauth_2_0",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684436615570,
        "lastModifiedTime": 1684436615570,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "0",
                    "message": "success",
                    "data": {
                        "identifier": [
                            {
                                "use": "usual",
                                "value": 100076000000012060
                            }
                        ],
                        "deceasedBoolean": false,
                        "extension": [
                            {
                                "valueCodeableConcept": {
                                    "coding": [
                                        {
                                            "system": "Race and Ethnicity - CDC",
                                            "code": "2106-3",
                                            "display": "White"
                                        },
                                        {
                                            "system": "Race and Ethnicity - CDC",
                                            "code": "2108-9",
                                            "display": "European"
                                        }
                                    ]
                                },
                                "url": "http://hl7.org/fhir/StructureDefinition/us-core-race"
                            },
                            {
                                "valueCodeableConcept": {
                                    "coding": [
                                        {
                                            "system": "Race and Ethnicity - CDC",
                                            "code": "2186-5",
                                            "display": "Not Hispanic Or Latino"
                                        }
                                    ]
                                },
                                "url": "http://hl7.org/fhir/StructureDefinition/us-core-ethnicity"
                            }
                        ],
                        "address": [
                            {
                                "country": "us",
                                "city": "BEAVERTON",
                                "use": "home",
                                "line": [
                                    "1357, Amber Dr"
                                ],
                                "postalCode": "97006",
                                "state": "Oregon",
                                "text": "1357, Amber Dr, BEAVERTON, Oregon 97006, us"
                            }
                        ],
                        "gender": "female",
                        "name": [
                            {
                                "given": [
                                    "Alice",
                                    "Jones"
                                ],
                                "use": "usual",
                                "text": "Alice Jones Newman",
                                "family": "Newman"
                            }
                        ],
                        "active": true,
                        "telecom": [
                            {
                                "system": "phone",
                                "use": "home",
                                "value": "5557231544"
                            },
                            {
                                "system": "phone",
                                "use": "mobile",
                                "value": "5557771234"
                            }
                        ],
                        "communication": [
                            {
                                "language": {
                                    "coding": [
                                        {
                                            "system": "ISO-639-1",
                                            "code": "en",
                                            "display": "English"
                                        }
                                    ]
                                }
                            }
                        ],
                        "birthDate": "1970-05-01",
                        "maritalStatus": {
                            "text": "Married"
                        },
                        "resourceType": "Patient"
                    }
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized (Invalid AuthToken)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "URL Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Method Not Allowed (Method you have called is not supported for the invoked API)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Rate Limit Exceeded (API usage limit exceeded)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93521,
        "executor_type": "THIRDPARTY",
        "executor_name": "getVitals",
        "executor_version": "v1",
        "executor_display_name": "Vitals",
        "executor_description": "By default, the API returns all data across dates.You can use the optional query parameters listed below to filter the records by vital recorded date. To get the vitals recorded on a specific date, give the same date in 'from_date' and 'to_date' parameters.",
        "executor_category": "FHIRcharmhealth",
        "executor_category_group": "FHIRcharmhealth",
        "service_provider": "charmhealth",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/patients/{patient_id}/vitals",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            },
            {
                "key": "patient_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "from_date\t",
                "value": "",
                "description": "Vital recorded date",
                "req": false
            },
            {
                "key": "to_date",
                "value": "",
                "description": "Vital recorded date",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "oauth_2_0",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1684437747048,
        "lastModifiedTime": 1684439087503,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "0",
                    "message": "success",
                    "data": {
                        "entry": [
                            {
                                "resource": {
                                    "code": {
                                        "coding": [
                                            {
                                                "system": "http://loinc.org",
                                                "code": "29463-7",
                                                "display": "weight"
                                            }
                                        ],
                                        "text": "weight"
                                    },
                                    "effectiveDateTime": "2015-06-22",
                                    "category": [
                                        {
                                            "coding": [
                                                {
                                                    "system": "http://hl7.org/fhir/observation-category",
                                                    "code": "vital-signs",
                                                    "display": "Vital Signs"
                                                }
                                            ],
                                            "text": "Vital Signs"
                                        }
                                    ],
                                    "resourceType": "Observation",
                                    "valueQuantity": {
                                        "unit": "lbs",
                                        "value": "194.007"
                                    }
                                }
                            },
                            {
                                "resource": {
                                    "code": {
                                        "coding": [
                                            {
                                                "system": "http://loinc.org",
                                                "code": "8302-2",
                                                "display": "height"
                                            }
                                        ],
                                        "text": "height"
                                    },
                                    "effectiveDateTime": "2015-06-22",
                                    "category": [
                                        {
                                            "coding": [
                                                {
                                                    "system": "http://hl7.org/fhir/observation-category",
                                                    "code": "vital-signs",
                                                    "display": "Vital Signs"
                                                }
                                            ],
                                            "text": "Vital Signs"
                                        }
                                    ],
                                    "resourceType": "Observation",
                                    "valueQuantity": {
                                        "unit": "ins",
                                        "value": "69.685"
                                    }
                                }
                            },
                            {
                                "resource": {
                                    "code": {
                                        "coding": [
                                            {
                                                "system": "http://loinc.org",
                                                "code": "39156-5",
                                                "display": "body mass index"
                                            }
                                        ],
                                        "text": "body mass index"
                                    },
                                    "effectiveDateTime": "2015-06-22",
                                    "category": [
                                        {
                                            "coding": [
                                                {
                                                    "system": "http://hl7.org/fhir/observation-category",
                                                    "code": "vital-signs",
                                                    "display": "Vital Signs"
                                                }
                                            ],
                                            "text": "Vital Signs"
                                        }
                                    ],
                                    "resourceType": "Observation",
                                    "valueQuantity": {
                                        "value": "28.09"
                                    }
                                }
                            },
                            {
                                "resource": {
                                    "code": {
                                        "coding": [
                                            {
                                                "system": "http://loinc.org",
                                                "code": "8310-5",
                                                "display": "body temperature"
                                            }
                                        ],
                                        "text": "body temperature"
                                    },
                                    "effectiveDateTime": "2015-06-22",
                                    "category": [
                                        {
                                            "coding": [
                                                {
                                                    "system": "http://hl7.org/fhir/observation-category",
                                                    "code": "vital-signs",
                                                    "display": "Vital Signs"
                                                }
                                            ],
                                            "text": "Vital Signs"
                                        }
                                    ],
                                    "resourceType": "Observation",
                                    "valueQuantity": {
                                        "unit": "C",
                                        "value": 38
                                    }
                                }
                            },
                            {
                                "resource": {
                                    "code": {
                                        "coding": [
                                            {
                                                "system": "http://loinc.org",
                                                "code": "8480-6",
                                                "display": "Systolic blood pressure"
                                            }
                                        ],
                                        "text": "Systolic blood pressure"
                                    },
                                    "effectiveDateTime": "2015-06-22",
                                    "category": [
                                        {
                                            "coding": [
                                                {
                                                    "system": "http://hl7.org/fhir/observation-category",
                                                    "code": "vital-signs",
                                                    "display": "Vital Signs"
                                                }
                                            ],
                                            "text": "Vital Signs"
                                        }
                                    ],
                                    "resourceType": "Observation",
                                    "valueQuantity": {
                                        "unit": "mmHg",
                                        "value": 145
                                    }
                                }
                            },
                            {
                                "resource": {
                                    "code": {
                                        "coding": [
                                            {
                                                "system": "http://loinc.org",
                                                "code": "8462-4",
                                                "display": "Diastolic blood pressure"
                                            }
                                        ],
                                        "text": "Diastolic blood pressure"
                                    },
                                    "effectiveDateTime": "2015-06-22",
                                    "category": [
                                        {
                                            "coding": [
                                                {
                                                    "system": "http://hl7.org/fhir/observation-category",
                                                    "code": "vital-signs",
                                                    "display": "Vital Signs"
                                                }
                                            ],
                                            "text": "Vital Signs"
                                        }
                                    ],
                                    "resourceType": "Observation",
                                    "valueQuantity": {
                                        "unit": "mmHg",
                                        "value": 88
                                    }
                                }
                            },
                            {
                                "resource": {
                                    "code": {
                                        "coding": [
                                            {
                                                "system": "http://loinc.org",
                                                "code": "8867-4",
                                                "display": "pulse rate"
                                            }
                                        ],
                                        "text": "pulse rate"
                                    },
                                    "effectiveDateTime": "2015-06-22",
                                    "category": [
                                        {
                                            "coding": [
                                                {
                                                    "system": "http://hl7.org/fhir/observation-category",
                                                    "code": "vital-signs",
                                                    "display": "Vital Signs"
                                                }
                                            ],
                                            "text": "Vital Signs"
                                        }
                                    ],
                                    "resourceType": "Observation",
                                    "valueQuantity": {
                                        "unit": "bpm",
                                        "value": 80
                                    }
                                }
                            },
                            {
                                "resource": {
                                    "code": {
                                        "coding": [
                                            {
                                                "system": "http://loinc.org",
                                                "code": "9279-1",
                                                "display": "respiratory rate"
                                            }
                                        ],
                                        "text": "respiratory rate"
                                    },
                                    "effectiveDateTime": "2015-06-22",
                                    "category": [
                                        {
                                            "coding": [
                                                {
                                                    "system": "http://hl7.org/fhir/observation-category",
                                                    "code": "vital-signs",
                                                    "display": "Vital Signs"
                                                }
                                            ],
                                            "text": "Vital Signs"
                                        }
                                    ],
                                    "resourceType": "Observation",
                                    "valueQuantity": {
                                        "unit": "bpm",
                                        "value": 18
                                    }
                                }
                            },
                            {
                                "resource": {
                                    "code": {
                                        "coding": [
                                            {
                                                "system": "http://loinc.org",
                                                "code": "59408-5",
                                                "display": "SPO2"
                                            }
                                        ],
                                        "text": "SPO2"
                                    },
                                    "effectiveDateTime": "2015-06-22",
                                    "category": [
                                        {
                                            "coding": [
                                                {
                                                    "system": "http://hl7.org/fhir/observation-category",
                                                    "code": "vital-signs",
                                                    "display": "Vital Signs"
                                                }
                                            ],
                                            "text": "Vital Signs"
                                        }
                                    ],
                                    "resourceType": "Observation",
                                    "valueQuantity": {
                                        "unit": "%",
                                        "value": 95
                                    }
                                }
                            },
                            {
                                "resource": {
                                    "code": {
                                        "text": "Inhaled Oxygen Concentration"
                                    },
                                    "effectiveDateTime": "2015-06-22",
                                    "category": [
                                        {
                                            "coding": [
                                                {
                                                    "system": "http://hl7.org/fhir/observation-category",
                                                    "code": "vital-signs",
                                                    "display": "Vital Signs"
                                                }
                                            ],
                                            "text": "Vital Signs"
                                        }
                                    ],
                                    "resourceType": "Observation",
                                    "valueQuantity": {
                                        "unit": "%",
                                        "value": "36"
                                    }
                                }
                            }
                        ],
                        "total": 10,
                        "type": "searchset",
                        "resourceType": "Bundle"
                    }
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized (Invalid AuthToken)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "URL Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Method Not Allowed (Method you have called is not supported for the invoked API)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Rate Limit Exceeded (API usage limit exceeded)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93533,
        "executor_type": "THIRDPARTY",
        "executor_name": "getCCDA",
        "executor_version": "v1",
        "executor_display_name": "CCDA",
        "executor_description": "Export medical records of a patient in HL7 CCDA format.",
        "executor_category": "FHIRcharmhealth",
        "executor_category_group": "FHIRcharmhealth",
        "service_provider": "charmhealth",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/patients/{patient_id}/ccda",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            },
            {
                "key": "patient_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "from_date\t",
                "value": "",
                "description": "Date of Record",
                "req": false
            },
            {
                "key": "to_date",
                "value": "",
                "description": "Date of Record",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "oauth_2_0",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684438647961,
        "lastModifiedTime": 1684438647961,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized (Invalid AuthToken)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "URL Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Method Not Allowed (Method you have called is not supported for the invoked API)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Rate Limit Exceeded (API usage limit exceeded)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93512,
        "executor_type": "THIRDPARTY",
        "executor_name": "getprocedures",
        "executor_version": "v1",
        "executor_display_name": "Procedures",
        "executor_description": "By default, the API returns all data across dates.You can use the optional query parameters listed below to filter the records by procedure date. To get the procedures performed on a specific date, give the same date in 'from_date' and 'to_date' parameters.",
        "executor_category": "FHIRcharmhealth",
        "executor_category_group": "FHIRcharmhealth",
        "service_provider": "charmhealth",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/patients/{patient_id}/procedures",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            },
            {
                "key": "patient_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "from_date\t",
                "value": "",
                "description": "Date of procedure",
                "req": false
            },
            {
                "key": "to_date",
                "value": "",
                "description": "Date of procedure",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "oauth_2_0",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684437028603,
        "lastModifiedTime": 1684437028603,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "0",
                    "message": "success",
                    "data": {
                        "entry": [
                            {
                                "resource": {
                                    "identifier": [
                                        {
                                            "use": "usual",
                                            "value": 100076000000012270
                                        }
                                    ],
                                    "code": {
                                        "coding": [
                                            {
                                                "system": "http://snomed.info/sct",
                                                "code": "56251003",
                                                "display": "Nebulizer therapy"
                                            }
                                        ],
                                        "text": "Nebulizer therapy"
                                    },
                                    "subject": {
                                        "reference": "/fhir/patients/100076000000012061",
                                        "display": "Alice Jones Newman"
                                    },
                                    "performedDateTime": "2015-06-22",
                                    "resourceType": "Procedure",
                                    "status": "completed",
                                    "notDone": false
                                }
                            },
                            {
                                "resource": {
                                    "identifier": [
                                        {
                                            "use": "usual",
                                            "value": 100076000000012270
                                        }
                                    ],
                                    "code": {
                                        "coding": [
                                            {
                                                "system": "http://snomed.info/sct",
                                                "code": "175135009",
                                                "display": "Introduction of cardiac pacemaker system via vein"
                                            }
                                        ],
                                        "text": "Introduction of cardiac pacemaker system via vein"
                                    },
                                    "subject": {
                                        "reference": "/fhir/patients/100076000000012061",
                                        "display": "Alice Jones Newman"
                                    },
                                    "performedDateTime": "2011-10-05",
                                    "resourceType": "Procedure",
                                    "status": "completed",
                                    "notDone": false
                                }
                            }
                        ],
                        "total": 2,
                        "type": "searchset",
                        "resourceType": "Bundle"
                    }
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized (Invalid AuthToken)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "URL Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Method Not Allowed (Method you have called is not supported for the invoked API)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Rate Limit Exceeded (API usage limit exceeded)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93530,
        "executor_type": "THIRDPARTY",
        "executor_name": "getGoals",
        "executor_version": "v1",
        "executor_display_name": "Goals",
        "executor_description": "By default, the API returns goals and instructions given across encounters.You can use the optional query parameters listed below to filter the records by encounter date. To get the goals recommended on a specific date, give the same date in 'from_date' and 'to_date' parameters.",
        "executor_category": "FHIRcharmhealth",
        "executor_category_group": "FHIRcharmhealth",
        "service_provider": "charmhealth",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/patients/{patient_id}/goals",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            },
            {
                "key": "patient_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "from_date\t",
                "value": "",
                "description": "Encounter date",
                "req": false
            },
            {
                "key": "to_date",
                "value": "",
                "description": "Encounter date",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "oauth_2_0",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684438216820,
        "lastModifiedTime": 1684438216820,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "0",
                    "message": "success",
                    "data": {
                        "entry": [
                            {
                                "resource": {
                                    "subject": {
                                        "reference": "/fhir/patients/100076000000012061",
                                        "display": "Alice Jones Newman"
                                    },
                                    "description": {
                                        "text": "a. Get rid of intermittent fever that is occurring every few weeks.\nb. Need to gain more energy to do regular activities"
                                    },
                                    "startDate": "2015-06-22",
                                    "resourceType": "Goal",
                                    "status": "proposed"
                                }
                            }
                        ],
                        "total": 1,
                        "type": "searchset",
                        "resourceType": "Bundle"
                    }
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized (Invalid AuthToken)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "URL Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Method Not Allowed (Method you have called is not supported for the invoked API)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Rate Limit Exceeded (API usage limit exceeded)",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    }
]