[
    {
        "id": 92113,
        "executor_type": "THIRDPARTY",
        "executor_name": "receiveOneTestProductProfiles",
        "executor_version": "v1",
        "executor_display_name": "Receive one test product profiles",
        "executor_description": "Receive one test product profile",
        "executor_category": "TestProductProfileService",
        "executor_category_group": "TestProductProfileService",
        "service_provider": "qiagen",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/v1/qciGroups/{group_name}/testProductProfiles/{tpp_name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            },
            {
                "key": "group_name",
                "value": "",
                "description": "Group name"
            },
            {
                "key": "tpp_name",
                "value": "",
                "description": "Test Product Profile"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683611558143,
        "lastModifiedTime": 1683611558143,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "qciGroupName": "groupTest1",
                    "testProductProfile": "productprofile.testproductprofile",
                    "testProductCode": "HR_000031",
                    "reportTemplate": "DemoReport",
                    "reportingMethod": "T",
                    "indications": "hereditary cancer-predisposing syndrome",
                    "workflowType": "hereditary",
                    "treatmentsPolicy": "treatmentsPolicy",
                    "trialsPolicy": "trialsPolicy",
                    "genesTested": [
                        "string"
                    ],
                    "fusionsTested": [
                        "string"
                    ],
                    "cnvLossTested": [
                        "string"
                    ],
                    "cnvGainTested": [
                        "string"
                    ],
                    "preferredTranscripts": [
                        "string"
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized ",
                "description": "authentication is required and has failed or has not yet been provided",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": ""
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "TPP not found User Group not found",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "404",
                    "message": "Test Product Profile/User group not found: {name}"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "An unexpected server error has occurred, please notify support",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92110,
        "executor_type": "THIRDPARTY",
        "executor_name": "receiveAllTestProductProfiles",
        "executor_version": "v1",
        "executor_display_name": "Receive all test product profiles",
        "executor_description": "Receive all test product profiles",
        "executor_category": "TestProductProfileService",
        "executor_category_group": "TestProductProfileService",
        "service_provider": "qiagen",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/v1/testProductProfiles",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683611337832,
        "lastModifiedTime": 1683611337832,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "assessments": [
                        {
                            "qciGroupName": "groupTest1",
                            "testProductProfile": "productprofile.testproductprofile",
                            "testProductCode": "HR_000031",
                            "reportTemplate": "DemoReport",
                            "reportingMethod": "T",
                            "indications": "hereditary cancer-predisposing syndrome",
                            "workflowType": "hereditary",
                            "treatmentsPolicy": "treatmentsPolicy",
                            "trialsPolicy": "trialsPolicy",
                            "genesTested": [
                                "string"
                            ],
                            "fusionsTested": [
                                "string"
                            ],
                            "cnvLossTested": [
                                "string"
                            ],
                            "cnvGainTested": [
                                "string"
                            ],
                            "preferredTranscripts": [
                                "string"
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized ",
                "description": "authentication is required and has failed or has not yet been provided",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": ""
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "An unexpected server error has occurred, please notify support",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": ""
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92085,
        "executor_type": "THIRDPARTY",
        "executor_name": "submitaNewSample",
        "executor_version": "v2",
        "executor_display_name": "Submit a New Sample",
        "executor_description": "Submit a New Sample",
        "executor_category": "Test",
        "executor_category_group": "Test",
        "service_provider": "qiagen",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/v2/sample",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "multipart/form-data",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": [
                {
                    "key": "file",
                    "value": "",
                    "description": "Zip, bz2 or gz file containing primary data and metadata files.",
                    "req": false,
                    "isFile": false,
                    "type": "Text"
                }
            ],
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683609244012,
        "lastModifiedTime": 1683609244012,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad request",
                "description": "The server cannot or will not process the request due to an apparent client error",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized ",
                "description": "authentication is required and has failed or has not yet been provided",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid input",
                "description": "a request method is not supported for the requested resource",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "An unexpected server error has occurred, please notify support",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "method": "partner integration",
                    "creator": "john.doe@abcd.com",
                    "users": [
                        "john.doe@abcd.com"
                    ],
                    "title": "Demo Title",
                    "analysis-name": "Demo Family Analysis v1",
                    "status": "DONE",
                    "stage": "Pipeline successfully completed",
                    "results-url": "https://api.ingenuity.com/datastream/analysisStatus.jsp?packageId=DP_0001",
                    "status-url": "https://api.ingenuity.com/v1/datapackages/DP_0001",
                    "pipeline-name": "QCI Somatic Cancer Pipeline",
                    "precentage-complete": 100,
                    "warnings": [
                        {
                            "code": "isatab.conditionally.recommended.field",
                            "message": "s_DP_0001.txt: The characteristic Patient Name is missing.",
                            "details": {
                                "fieldtype": "characteristic",
                                "value": "the Analysis Pipeline Name is QCI Somatic Cancer Pipeline",
                                "filename": "s_DP_0001.txt",
                                "fieldname": "Patient Name"
                            }
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Too Many Request",
                "description": "if the number of concurrent requests with the current api token exceed a pre-defined limit",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92083,
        "executor_type": "THIRDPARTY",
        "executor_name": "submitaNewTest",
        "executor_version": "v1",
        "executor_display_name": "Submit a New Test",
        "executor_description": "Submit a New Test",
        "executor_category": "Test",
        "executor_category_group": "Test",
        "service_provider": "qiagen",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/v1/datapackages",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "extSampleId",
                "value": "",
                "description": "\"extSampleId\" is for Hereditary Genome workflow only. \"extSampleId\" must match the \"externalID\" annotation from the PhenoTips Simple JSON file",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "multipart/form-data",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": [
                {
                    "key": "file",
                    "value": "",
                    "description": "Zip, bz2 or gz file containing primary data and metadata files.",
                    "req": false,
                    "isFile": false,
                    "type": "Text"
                }
            ],
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683609065164,
        "lastModifiedTime": 1683609065164,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad request",
                "description": "The server cannot or will not process the request due to an apparent client error",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized ",
                "description": "authentication is required and has failed or has not yet been provided",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid input",
                "description": "a request method is not supported for the requested resource",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "An unexpected server error has occurred, please notify support",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "method": "partner integration",
                    "creator": "john.doe@abcd.com",
                    "users": [
                        "john.doe@abcd.com"
                    ],
                    "title": "Demo Title",
                    "analysis-name": "Demo Family Analysis v1",
                    "status": "DONE",
                    "stage": "Pipeline successfully completed",
                    "results-url": "https://api.ingenuity.com/datastream/analysisStatus.jsp?packageId=DP_0001",
                    "status-url": "https://api.ingenuity.com/v1/datapackages/DP_0001",
                    "pipeline-name": "QCI Somatic Cancer Pipeline",
                    "precentage-complete": 100,
                    "warnings": [
                        {
                            "code": "isatab.conditionally.recommended.field",
                            "message": "s_DP_0001.txt: The characteristic Patient Name is missing.",
                            "details": {
                                "fieldtype": "characteristic",
                                "value": "the Analysis Pipeline Name is QCI Somatic Cancer Pipeline",
                                "filename": "s_DP_0001.txt",
                                "fieldname": "Patient Name"
                            }
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92097,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateAssessmentForOneVariantinanExistingQCITest",
        "executor_version": "v2",
        "executor_display_name": "Update assessment for one variant in an existing QCI test.",
        "executor_description": "Update assessment for one variant in an existing QCI test.",
        "executor_category": "Test",
        "executor_category_group": "Test",
        "service_provider": "qiagen",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "{baseurl}/v2/variantAssessment/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Data package ID or Accession ID"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "alternate": "G",
                "assessment": "Likely Pathogenic",
                "author": "john.doe@abcd.com",
                "chromosome": "18",
                "comment": "Pathogenic &nbsp; Cancers and Tumors &nbsp; Reportable",
                "phenotype": "Cardiomyopathy",
                "position": 55238820,
                "reference": "A",
                "status": "Reportable"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683609827973,
        "lastModifiedTime": 1683609827973,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "Variant assessment successfully updated",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "the.response.code",
                    "message": "The response message",
                    "status": "The status code (ex. 200; 400)",
                    "warning": "The warning message in case if there is any"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "invalid accession id  invalid variant  invalid assessment value  invalid status value  comment size exceeds max allowable (4000 chars)  invalid author value",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "the.response.code",
                    "message": "The response message",
                    "status": "The status code (ex. 200; 400)",
                    "warning": "The warning message in case if there is any"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "author does not have access to this accession id",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "the.response.code",
                    "message": "The response message",
                    "status": "The status code (ex. 200; 400)",
                    "warning": "The warning message in case if there is any"
                }
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "Invalid input",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "the.response.code",
                    "message": "The response message",
                    "status": "The status code (ex. 200; 400)",
                    "warning": "The warning message in case if there is any"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": "An unexpected server error has occurred, please notify support",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "the.response.code",
                    "message": "The response message",
                    "status": "The status code (ex. 200; 400)",
                    "warning": "The warning message in case if there is any"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92106,
        "executor_type": "THIRDPARTY",
        "executor_name": "fetchReportsOfTheTest",
        "executor_version": "v1",
        "executor_display_name": "Fetch interpreted variants, annotated with various data sources. Fetch reports of the test",
        "executor_description": "Fetch interpreted variants, annotated with various data sources. Fetch reports of the test",
        "executor_category": "Test",
        "executor_category_group": "Test",
        "service_provider": "qiagen",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/v1/export/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Data package ID or Accession ID"
            }
        ],
        "queryParams": [
            {
                "key": "view",
                "value": "",
                "description": "Test resource to export. Can be vcf (variant VCF file with QIAGEN Clinical Insight annotations), analysisXml (test analysis in xml), reportXml (test report in xml), classificationXml (test classification xml) or reportXmlNoComment (test report in xml without comments). (vcf - default)  Available values : vcf, analysisXml, reportXml, pdf, classificationXml, reportXmlNoComment",
                "req": false
            },
            {
                "key": "email",
                "value": "",
                "description": "Perform the export on behalf of this user's email account. If none provided, defaults to the first user on the user list for the data package.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683610721412,
        "lastModifiedTime": 1683610721412,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Returns HTTPS stream of annotated VCF file",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 299,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Use of deprecated view parameter: view=xml, recommended use: view=report",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized ",
                "description": "authentication is required and has failed or has not yet been provided",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Unable to export by email",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Data Package or Accession Id was not found",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid input",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Too Many Requests - if the number of concurrent requests with the current api token exceed a pre-defined limit",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "An unexpected server error has occurred, please notify support",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92101,
        "executor_type": "THIRDPARTY",
        "executor_name": "checkTheDataProcessingStatusOfAnExistingTest",
        "executor_version": "v1",
        "executor_display_name": "Check the data processing status of an existing test",
        "executor_description": "Check the data processing status of an existing test",
        "executor_category": "Test",
        "executor_category_group": "Test",
        "service_provider": "qiagen",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/v1/datapackages/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Data package ID or Accession ID"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683610109746,
        "lastModifiedTime": 1683610109746,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "method": "partner integration",
                    "creator": "john.doe@abcd.com",
                    "users": [
                        "john.doe@abcd.com"
                    ],
                    "title": "Demo Title",
                    "analysis-name": "Demo Family Analysis v1",
                    "status": "DONE",
                    "stage": "Pipeline successfully completed",
                    "results-url": "https://api.ingenuity.com/datastream/analysisStatus.jsp?packageId=DP_0001",
                    "status-url": "https://api.ingenuity.com/v1/datapackages/DP_0001",
                    "pipeline-name": "QCI Somatic Cancer Pipeline",
                    "precentage-complete": 100,
                    "warnings": [
                        {
                            "code": "isatab.conditionally.recommended.field",
                            "message": "s_DP_0001.txt: The characteristic Patient Name is missing.",
                            "details": {
                                "fieldtype": "characteristic",
                                "value": "the Analysis Pipeline Name is QCI Somatic Cancer Pipeline",
                                "filename": "s_DP_0001.txt",
                                "fieldname": "Patient Name"
                            }
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized ",
                "description": "authentication is required and has failed or has not yet been provided",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Data package was not found",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Invalid input",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "if the number of concurrent requests with the current api token exceed a pre-defined limit",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "An unexpected server error has occurred, please notify support",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92103,
        "executor_type": "THIRDPARTY",
        "executor_name": "shareListOfUsers",
        "executor_version": "v1",
        "executor_display_name": "Share a test with a group or list of users",
        "executor_description": "Share a test with a group or list of users",
        "executor_category": "Test",
        "executor_category_group": "Test",
        "service_provider": "qiagen",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/v1/datapackages/{id}/users",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Data package ID or Accession ID"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": [
                {
                    "email": "john.doe@abcd.com"
                }
            ],
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683610393323,
        "lastModifiedTime": 1683610393323,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    "string"
                ]
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Specified Data Package ID does not exist",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": "Data package is not done processing, wait until DP status = DONE before adding additional users to the data package",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Forbidden",
                "description": "Requester must own the data package in order to append additional users",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92082,
        "executor_type": "THIRDPARTY",
        "executor_name": "searchforsubmittedtestssatisfyingusersuppliedcriteria",
        "executor_version": "v1",
        "executor_display_name": "Search for submitted tests satisfying user-supplied criteria",
        "executor_description": "Search for submitted tests satisfying user-supplied criteria.",
        "executor_category": "Test",
        "executor_category_group": "Test",
        "service_provider": "qiagen",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/v1/clinical",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "state",
                "value": "",
                "description": "Limit search results to tests in a specific state.  Available values : pending, in_review, needs_approval, final",
                "req": false
            },
            {
                "key": "startReceivedDate",
                "value": "",
                "description": "Beginning of the range of dates to search format: yyyy-mm-dd.",
                "req": false
            },
            {
                "key": "endReceivedDate",
                "value": "",
                "description": "End of the range of dates to search format: yyyy-mm-dd.",
                "req": false
            },
            {
                "key": "sort",
                "value": "",
                "description": "Order for the list of results. (receivedDateDesc - default)  Available values : receivedDateAsc, receivedDateDesc",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683608707261,
        "lastModifiedTime": 1683608707262,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "dataPackageID": "DP_0001",
                        "accessionID": "CT54354",
                        "applicationUrl": "https://variants.ingenuity.com/vcs/view/analysis/001",
                        "exportUrl": "https://api.ingenuity.com/v1/export/DP_0001",
                        "state": "IN_REVIEW",
                        "receivedDate": "2018-05-17T05:17:28Z"
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad request",
                "description": "Request Parameter value is not recognized",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized ",
                "description": "authentication is required and has failed or has not yet been provided",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid input",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Acceptable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "An unexpected server error has occurred, please notify support",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92107,
        "executor_type": "THIRDPARTY",
        "executor_name": "signoutofanExistingTest",
        "executor_version": "v1",
        "executor_display_name": "Signout of an existing test",
        "executor_description": "Signout of an existing test",
        "executor_category": "Test",
        "executor_category_group": "Test",
        "service_provider": "qiagen",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/v1/signout/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Data package ID or Accession ID"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "note": "some note"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683610969815,
        "lastModifiedTime": 1683610969815,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Successful signout of the test",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "author": "author_of_the_test",
                    "note": "some note",
                    "signoutDate": 1234567,
                    "status": "success"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized ",
                "description": "authentication is required and has failed or has not yet been provided",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "the.error.code",
                    "message": "The error message",
                    "status": "failed"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Data package was not found",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "the.error.code",
                    "message": "The error message",
                    "status": "failed"
                }
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid input",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "the.error.code",
                    "message": "The error message",
                    "status": "failed"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "An unexpected server error has occurred, please notify support",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "the.error.code",
                    "message": "The error message",
                    "status": "failed"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    }
]