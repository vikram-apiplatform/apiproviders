[
    {
        "id": 125729,
        "executor_type": "THIRDPARTY",
        "executor_name": "createcompany",
        "executor_version": "v1",
        "executor_display_name": "Create company",
        "executor_description": "Create company",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://unify.apideck.com/crm/companies",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": "Include raw response. Mostly used for debugging purposes",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-idstring",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "SpaceX",
                "owner_id": "12345",
                "image": "https://www.spacex.com/static/images/share.jpg",
                "description": "Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.",
                "vat_number": "BE0689615164",
                "currency": "USD",
                "status": "Open",
                "fax": "+12129876543",
                "annual_revenue": "+$35m",
                "number_of_employees": "500-1000",
                "industry": "Apparel",
                "ownership": "Public",
                "sales_tax_number": "12456EN",
                "payee_number": "78932EN",
                "abn_or_tfn": "46 115 614 695",
                "abn_branch": "123",
                "acn": "XXX XXX XXX",
                "first_name": "Elon",
                "last_name": "Musk",
                "bank_accounts": [
                    {
                        "bank_name": "Monzo",
                        "account_number": "123465",
                        "account_name": "SPACEX LLC",
                        "account_type": "credit_card",
                        "iban": "CH2989144532982975332",
                        "bic": "AUDSCHGGXXX",
                        "routing_number": "012345678",
                        "bsb_number": "062-001",
                        "branch_identifier": "001",
                        "bank_code": "BNH",
                        "currency": "USD"
                    }
                ],
                "websites": [
                    {
                        "id": "12345",
                        "url": "http://example.com",
                        "type": "primary"
                    }
                ],
                "addresses": [
                    {
                        "id": "123",
                        "type": "primary",
                        "string": "25 Spring Street, Blackburn, VIC 3130",
                        "name": "HQ US",
                        "line1": "Main street",
                        "line2": "apt #",
                        "line3": "Suite #",
                        "line4": "delivery instructions",
                        "street_number": "25",
                        "city": "San Francisco",
                        "state": "CA",
                        "postal_code": "94104",
                        "country": "US",
                        "latitude": "40.759211",
                        "longitude": "-73.984638",
                        "county": "Santa Clara",
                        "contact_name": "Elon Musk",
                        "salutation": "Mr",
                        "phone_number": "111-111-1111",
                        "fax": "122-111-1111",
                        "email": "elon@musk.com",
                        "website": "https://elonmusk.com",
                        "notes": "Address notes or delivery instructions.",
                        "row_version": "1-12345"
                    }
                ],
                "social_links": [
                    {
                        "id": "12345",
                        "url": "https://www.twitter.com/apideck",
                        "type": "twitter"
                    }
                ],
                "phone_numbers": [
                    {
                        "id": "12345",
                        "country_code": "1",
                        "area_code": "323",
                        "number": "111-111-1111",
                        "extension": "105",
                        "type": "primary"
                    }
                ],
                "emails": [
                    {
                        "id": "123",
                        "email": "elon@musk.com",
                        "type": "primary"
                    }
                ],
                "row_type": {
                    "id": "12345",
                    "name": "Customer Account"
                },
                "custom_fields": [
                    {
                        "id": "2389328923893298",
                        "name": "employee_level",
                        "description": "Employee Level",
                        "value": "Uses Salesforce and Marketo"
                    }
                ],
                "tags": [
                    "New"
                ],
                "read_only": false,
                "salutation": "Mr",
                "birthday": "2000-08-12"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710418138520,
        "lastModifiedTime": 1710418138520,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Company created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "companies",
                    "operation": "add",
                    "data": {
                        "id": "12345"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125730,
        "executor_type": "THIRDPARTY",
        "executor_name": "getcompany",
        "executor_version": "v1",
        "executor_display_name": "Get company",
        "executor_description": "Get company",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://unify.apideck.com/crm/companies/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": "Include raw response. Mostly used for debugging purposes",
                "req": false
            },
            {
                "key": "fields",
                "value": "",
                "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation.  Example: fields=name,email,addresses.city  In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710476524534,
        "lastModifiedTime": 1710476524534,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Company",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "companies",
                    "operation": "one",
                    "data": {
                        "id": "12345",
                        "name": "SpaceX",
                        "interaction_count": 1,
                        "owner_id": "12345",
                        "image": "https://www.spacex.com/static/images/share.jpg",
                        "description": "Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.",
                        "vat_number": "BE0689615164",
                        "currency": "USD",
                        "status": "Open",
                        "fax": "+12129876543",
                        "annual_revenue": "+$35m",
                        "number_of_employees": "500-1000",
                        "industry": "Apparel",
                        "ownership": "Public",
                        "sales_tax_number": "12456EN",
                        "payee_number": "78932EN",
                        "abn_or_tfn": "46 115 614 695",
                        "abn_branch": "123",
                        "acn": "XXX XXX XXX",
                        "first_name": "Elon",
                        "last_name": "Musk",
                        "parent_id": "22345",
                        "bank_accounts": [
                            {
                                "bank_name": "Monzo",
                                "account_number": "123465",
                                "account_name": "SPACEX LLC",
                                "account_type": "credit_card",
                                "iban": "CH2989144532982975332",
                                "bic": "AUDSCHGGXXX",
                                "routing_number": "012345678",
                                "bsb_number": "062-001",
                                "branch_identifier": "001",
                                "bank_code": "BNH",
                                "currency": "USD"
                            }
                        ],
                        "websites": [
                            {
                                "id": "12345",
                                "url": "http://example.com",
                                "type": "primary"
                            }
                        ],
                        "addresses": [
                            {
                                "id": "123",
                                "type": "primary",
                                "string": "25 Spring Street, Blackburn, VIC 3130",
                                "name": "HQ US",
                                "line1": "Main street",
                                "line2": "apt #",
                                "line3": "Suite #",
                                "line4": "delivery instructions",
                                "street_number": "25",
                                "city": "San Francisco",
                                "state": "CA",
                                "postal_code": "94104",
                                "country": "US",
                                "latitude": "40.759211",
                                "longitude": "-73.984638",
                                "county": "Santa Clara",
                                "contact_name": "Elon Musk",
                                "salutation": "Mr",
                                "phone_number": "111-111-1111",
                                "fax": "122-111-1111",
                                "email": "elon@musk.com",
                                "website": "https://elonmusk.com",
                                "notes": "Address notes or delivery instructions.",
                                "row_version": "1-12345"
                            }
                        ],
                        "social_links": [
                            {
                                "id": "12345",
                                "url": "https://www.twitter.com/apideck",
                                "type": "twitter"
                            }
                        ],
                        "phone_numbers": [
                            {
                                "id": "12345",
                                "country_code": "1",
                                "area_code": "323",
                                "number": "111-111-1111",
                                "extension": "105",
                                "type": "primary"
                            }
                        ],
                        "emails": [
                            {
                                "id": "123",
                                "email": "elon@musk.com",
                                "type": "primary"
                            }
                        ],
                        "row_type": {
                            "id": "12345",
                            "name": "Customer Account"
                        },
                        "custom_fields": [
                            {
                                "id": "2389328923893298",
                                "name": "employee_level",
                                "description": "Employee Level",
                                "value": "Uses Salesforce and Marketo"
                            }
                        ],
                        "tags": [
                            "New"
                        ],
                        "read_only": false,
                        "last_activity_at": "2020-09-30T07:43:32.000Z",
                        "deleted": false,
                        "salutation": "Mr",
                        "birthday": "2000-08-12",
                        "custom_mappings": {},
                        "updated_by": "12345",
                        "created_by": "12345",
                        "updated_at": "2020-09-30T07:43:32.000Z",
                        "created_at": "2020-09-30T07:43:32.000Z"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125731,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateCompanies",
        "executor_version": "v1",
        "executor_display_name": "Update company",
        "executor_description": "Update company ",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://unify.apideck.com/crm/companies/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": "Include raw response. Mostly used for debugging purposes",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "SpaceX",
                "owner_id": "12345",
                "image": "https://www.spacex.com/static/images/share.jpg",
                "description": "Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.",
                "vat_number": "BE0689615164",
                "currency": "USD",
                "status": "Open",
                "fax": "+12129876543",
                "annual_revenue": "+$35m",
                "number_of_employees": "500-1000",
                "industry": "Apparel",
                "ownership": "Public",
                "sales_tax_number": "12456EN",
                "payee_number": "78932EN",
                "abn_or_tfn": "46 115 614 695",
                "abn_branch": "123",
                "acn": "XXX XXX XXX",
                "first_name": "Elon",
                "last_name": "Musk",
                "bank_accounts": [
                    {
                        "bank_name": "Monzo",
                        "account_number": "123465",
                        "account_name": "SPACEX LLC",
                        "account_type": "credit_card",
                        "iban": "CH2989144532982975332",
                        "bic": "AUDSCHGGXXX",
                        "routing_number": "012345678",
                        "bsb_number": "062-001",
                        "branch_identifier": "001",
                        "bank_code": "BNH",
                        "currency": "USD"
                    }
                ],
                "websites": [
                    {
                        "id": "12345",
                        "url": "http://example.com",
                        "type": "primary"
                    }
                ],
                "addresses": [
                    {
                        "id": "123",
                        "type": "primary",
                        "string": "25 Spring Street, Blackburn, VIC 3130",
                        "name": "HQ US",
                        "line1": "Main street",
                        "line2": "apt #",
                        "line3": "Suite #",
                        "line4": "delivery instructions",
                        "street_number": "25",
                        "city": "San Francisco",
                        "state": "CA",
                        "postal_code": "94104",
                        "country": "US",
                        "latitude": "40.759211",
                        "longitude": "-73.984638",
                        "county": "Santa Clara",
                        "contact_name": "Elon Musk",
                        "salutation": "Mr",
                        "phone_number": "111-111-1111",
                        "fax": "122-111-1111",
                        "email": "elon@musk.com",
                        "website": "https://elonmusk.com",
                        "notes": "Address notes or delivery instructions.",
                        "row_version": "1-12345"
                    }
                ],
                "social_links": [
                    {
                        "id": "12345",
                        "url": "https://www.twitter.com/apideck",
                        "type": "twitter"
                    }
                ],
                "phone_numbers": [
                    {
                        "id": "12345",
                        "country_code": "1",
                        "area_code": "323",
                        "number": "111-111-1111",
                        "extension": "105",
                        "type": "primary"
                    }
                ],
                "emails": [
                    {
                        "id": "123",
                        "email": "elon@musk.com",
                        "type": "primary"
                    }
                ],
                "row_type": {
                    "id": "12345",
                    "name": "Customer Account"
                },
                "custom_fields": [
                    {
                        "id": "2389328923893298",
                        "name": "employee_level",
                        "description": "Employee Level",
                        "value": "Uses Salesforce and Marketo"
                    }
                ],
                "tags": [
                    "New"
                ],
                "read_only": false,
                "salutation": "Mr",
                "birthday": "2000-08-12"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710477018678,
        "lastModifiedTime": 1710477018678,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "companies",
                    "operation": "update",
                    "data": {
                        "id": "12345"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125732,
        "executor_type": "THIRDPARTY",
        "executor_name": "deletecompany",
        "executor_version": "v1",
        "executor_display_name": "Delete company",
        "executor_description": "Delete company",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://unify.apideck.com/crm/companies/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710477171343,
        "lastModifiedTime": 1710477171343,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Company deleted",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "companies",
                    "operation": "delete",
                    "data": {
                        "id": "12345"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125722,
        "executor_type": "THIRDPARTY",
        "executor_name": "listcompanies",
        "executor_version": "v1",
        "executor_display_name": "List companies",
        "executor_description": "List companies",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://unify.apideck.com/crm/companies",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": "Include raw response. Mostly used for debugging purposes",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Number of results to return. Minimum 1, Maximum 200, Default 20",
                "req": false
            },
            {
                "key": "filter",
                "value": "",
                "description": "Apply filters",
                "req": false
            },
            {
                "key": "sort",
                "value": "",
                "description": "Apply sorting",
                "req": false
            },
            {
                "key": "pass_through",
                "value": "",
                "description": "Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads",
                "req": false
            },
            {
                "key": "fields",
                "value": "",
                "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation.  Example: fields=name,email,addresses.city  In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-idstring",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710417925019,
        "lastModifiedTime": 1710417925019,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Companies",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "companies",
                    "operation": "all",
                    "data": [
                        {
                            "id": "12345",
                            "name": "SpaceX",
                            "interaction_count": 1,
                            "owner_id": "12345",
                            "image": "https://www.spacex.com/static/images/share.jpg",
                            "description": "Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.",
                            "vat_number": "BE0689615164",
                            "currency": "USD",
                            "status": "Open",
                            "fax": "+12129876543",
                            "annual_revenue": "+$35m",
                            "number_of_employees": "500-1000",
                            "industry": "Apparel",
                            "ownership": "Public",
                            "sales_tax_number": "12456EN",
                            "payee_number": "78932EN",
                            "abn_or_tfn": "46 115 614 695",
                            "abn_branch": "123",
                            "acn": "XXX XXX XXX",
                            "first_name": "Elon",
                            "last_name": "Musk",
                            "parent_id": "22345",
                            "bank_accounts": [
                                {
                                    "bank_name": "Monzo",
                                    "account_number": "123465",
                                    "account_name": "SPACEX LLC",
                                    "account_type": "credit_card",
                                    "iban": "CH2989144532982975332",
                                    "bic": "AUDSCHGGXXX",
                                    "routing_number": "012345678",
                                    "bsb_number": "062-001",
                                    "branch_identifier": "001",
                                    "bank_code": "BNH",
                                    "currency": "USD"
                                }
                            ],
                            "websites": [
                                {
                                    "id": "12345",
                                    "url": "http://example.com",
                                    "type": "primary"
                                }
                            ],
                            "addresses": [
                                {
                                    "id": "123",
                                    "type": "primary",
                                    "string": "25 Spring Street, Blackburn, VIC 3130",
                                    "name": "HQ US",
                                    "line1": "Main street",
                                    "line2": "apt #",
                                    "line3": "Suite #",
                                    "line4": "delivery instructions",
                                    "street_number": "25",
                                    "city": "San Francisco",
                                    "state": "CA",
                                    "postal_code": "94104",
                                    "country": "US",
                                    "latitude": "40.759211",
                                    "longitude": "-73.984638",
                                    "county": "Santa Clara",
                                    "contact_name": "Elon Musk",
                                    "salutation": "Mr",
                                    "phone_number": "111-111-1111",
                                    "fax": "122-111-1111",
                                    "email": "elon@musk.com",
                                    "website": "https://elonmusk.com",
                                    "notes": "Address notes or delivery instructions.",
                                    "row_version": "1-12345"
                                }
                            ],
                            "social_links": [
                                {
                                    "id": "12345",
                                    "url": "https://www.twitter.com/apideck",
                                    "type": "twitter"
                                }
                            ],
                            "phone_numbers": [
                                {
                                    "id": "12345",
                                    "country_code": "1",
                                    "area_code": "323",
                                    "number": "111-111-1111",
                                    "extension": "105",
                                    "type": "primary"
                                }
                            ],
                            "emails": [
                                {
                                    "id": "123",
                                    "email": "elon@musk.com",
                                    "type": "primary"
                                }
                            ],
                            "row_type": {
                                "id": "12345",
                                "name": "Customer Account"
                            },
                            "custom_fields": [
                                {
                                    "id": "2389328923893298",
                                    "name": "employee_level",
                                    "description": "Employee Level",
                                    "value": "Uses Salesforce and Marketo"
                                }
                            ],
                            "tags": [
                                "New"
                            ],
                            "read_only": false,
                            "last_activity_at": "2020-09-30T07:43:32.000Z",
                            "deleted": false,
                            "salutation": "Mr",
                            "birthday": "2000-08-12",
                            "custom_mappings": {},
                            "updated_by": "12345",
                            "created_by": "12345",
                            "updated_at": "2020-09-30T07:43:32.000Z",
                            "created_at": "2020-09-30T07:43:32.000Z"
                        }
                    ],
                    "meta": {
                        "items_on_page": 50,
                        "cursors": {
                            "previous": "em9oby1jcm06OnBhZ2U6OjE=",
                            "current": "em9oby1jcm06OnBhZ2U6OjI=",
                            "next": "em9oby1jcm06OnBhZ2U6OjM="
                        }
                    },
                    "links": {
                        "previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D",
                        "current": "https://unify.apideck.com/crm/companies",
                        "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125744,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteopportunity",
        "executor_version": "v1",
        "executor_display_name": "Delete opportunity",
        "executor_description": "Delete opportunity",
        "executor_category": "Opportunities",
        "executor_category_group": "Opportunities",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://unify.apideck.com/crm/opportunities/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": "Include raw response. Mostly used for debugging purposes",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710484777179,
        "lastModifiedTime": 1710484777179,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Opportunity deleted",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "companies",
                    "operation": "delete",
                    "data": {
                        "id": "12345"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125740,
        "executor_type": "THIRDPARTY",
        "executor_name": "listopportunities",
        "executor_version": "v1",
        "executor_display_name": "List opportunities",
        "executor_description": "List opportunities",
        "executor_category": "Opportunities",
        "executor_category_group": "Opportunities",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://unify.apideck.com/crm/opportunities",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": "Include raw response. Mostly used for debugging purposes",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Number of results to return. Minimum 1, Maximum 200, Default 20",
                "req": false
            },
            {
                "key": "filter",
                "value": "",
                "description": "Apply filters",
                "req": false
            },
            {
                "key": "sort",
                "value": "",
                "description": "Apply sorting",
                "req": false
            },
            {
                "key": "pass_through",
                "value": "",
                "description": "Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads",
                "req": false
            },
            {
                "key": "fields",
                "value": "",
                "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation.  Example: fields=name,email,addresses.city  In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710483531682,
        "lastModifiedTime": 1710483531682,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Opportunities",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "opportunities",
                    "operation": "all",
                    "data": [
                        {
                            "id": "12345",
                            "title": "New Rocket",
                            "primary_contact_id": "12345",
                            "description": "Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.",
                            "type": "Existing Customer - Upgrade",
                            "monetary_amount": 75000,
                            "currency": "USD",
                            "win_probability": 40,
                            "expected_revenue": 75000,
                            "close_date": "2020-10-30",
                            "loss_reason_id": "12345",
                            "loss_reason": "No budget",
                            "won_reason_id": "12345",
                            "won_reason": "Best pitch",
                            "pipeline_id": "12345",
                            "pipeline_stage_id": "12345",
                            "source_id": "12345",
                            "lead_id": "12345",
                            "lead_source": "Website",
                            "contact_id": "12345",
                            "contact_ids": [
                                "12345"
                            ],
                            "company_id": "12345",
                            "company_name": "Copper",
                            "owner_id": "12345",
                            "priority": "None",
                            "status": "Open",
                            "status_id": "12345",
                            "tags": [
                                "New"
                            ],
                            "interaction_count": 0,
                            "custom_fields": [
                                {
                                    "id": "2389328923893298",
                                    "name": "employee_level",
                                    "description": "Employee Level",
                                    "value": "Uses Salesforce and Marketo"
                                }
                            ],
                            "stage_last_changed_at": "2020-09-30T07:43:32.000Z",
                            "last_activity_at": "2020-09-30T07:43:32.000Z",
                            "deleted": false,
                            "date_stage_changed": "2020-09-30T00:00:00.000Z",
                            "date_last_contacted": "2020-09-30T00:00:00.000Z",
                            "date_lead_created": "2020-09-30T00:00:00.000Z",
                            "custom_mappings": {},
                            "updated_by": "12345",
                            "created_by": "12345",
                            "updated_at": "2020-09-30T07:43:32.000Z",
                            "created_at": "2020-09-30T07:43:32.000Z"
                        }
                    ],
                    "meta": {
                        "items_on_page": 50,
                        "cursors": {
                            "previous": "em9oby1jcm06OnBhZ2U6OjE=",
                            "current": "em9oby1jcm06OnBhZ2U6OjI=",
                            "next": "em9oby1jcm06OnBhZ2U6OjM="
                        }
                    },
                    "links": {
                        "previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D",
                        "current": "https://unify.apideck.com/crm/companies",
                        "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125741,
        "executor_type": "THIRDPARTY",
        "executor_name": "createopportunity",
        "executor_version": "v1",
        "executor_display_name": "Create opportunity",
        "executor_description": "Create opportunity",
        "executor_category": "Opportunities",
        "executor_category_group": "Opportunities",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://unify.apideck.com/crm/opportunities",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": "Include raw response. Mostly used for debugging purposes",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "title": "New Rocket",
                "primary_contact_id": "12345",
                "description": "Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.",
                "type": "Existing Customer - Upgrade",
                "monetary_amount": 75000,
                "currency": "USD",
                "win_probability": 40,
                "close_date": "2020-10-30",
                "loss_reason_id": "12345",
                "loss_reason": "No budget",
                "won_reason_id": "12345",
                "won_reason": "Best pitch",
                "pipeline_id": "12345",
                "pipeline_stage_id": "12345",
                "source_id": "12345",
                "lead_id": "12345",
                "lead_source": "Website",
                "contact_id": "12345",
                "contact_ids": [
                    "12345"
                ],
                "company_id": "12345",
                "company_name": "Copper",
                "owner_id": "12345",
                "priority": "None",
                "status": "Open",
                "status_id": "12345",
                "tags": [
                    "New"
                ],
                "custom_fields": [
                    {
                        "id": "2389328923893298",
                        "name": "employee_level",
                        "description": "Employee Level",
                        "value": "Uses Salesforce and Marketo"
                    }
                ],
                "stage_last_changed_at": "2020-09-30T07:43:32.000Z"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710483851213,
        "lastModifiedTime": 1710483851213,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Opportunity created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "opportunities",
                    "operation": "add",
                    "data": {
                        "id": "12345"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125742,
        "executor_type": "THIRDPARTY",
        "executor_name": "getopportunity",
        "executor_version": "v1",
        "executor_display_name": "Get opportunity",
        "executor_description": "Get opportunity",
        "executor_category": "Opportunities",
        "executor_category_group": "Opportunities",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://unify.apideck.com/crm/opportunities/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": "Include raw response. Mostly used for debugging purposes",
                "req": false
            },
            {
                "key": "fields",
                "value": "",
                "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation.  Example: fields=name,email,addresses.city  In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710484120056,
        "lastModifiedTime": 1710484120056,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Opportunity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "opportunities",
                    "operation": "one",
                    "data": {
                        "id": "12345",
                        "title": "New Rocket",
                        "primary_contact_id": "12345",
                        "description": "Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.",
                        "type": "Existing Customer - Upgrade",
                        "monetary_amount": 75000,
                        "currency": "USD",
                        "win_probability": 40,
                        "expected_revenue": 75000,
                        "close_date": "2020-10-30",
                        "loss_reason_id": "12345",
                        "loss_reason": "No budget",
                        "won_reason_id": "12345",
                        "won_reason": "Best pitch",
                        "pipeline_id": "12345",
                        "pipeline_stage_id": "12345",
                        "source_id": "12345",
                        "lead_id": "12345",
                        "lead_source": "Website",
                        "contact_id": "12345",
                        "contact_ids": [
                            "12345"
                        ],
                        "company_id": "12345",
                        "company_name": "Copper",
                        "owner_id": "12345",
                        "priority": "None",
                        "status": "Open",
                        "status_id": "12345",
                        "tags": [
                            "New"
                        ],
                        "interaction_count": 0,
                        "custom_fields": [
                            {
                                "id": "2389328923893298",
                                "name": "employee_level",
                                "description": "Employee Level",
                                "value": "Uses Salesforce and Marketo"
                            }
                        ],
                        "stage_last_changed_at": "2020-09-30T07:43:32.000Z",
                        "last_activity_at": "2020-09-30T07:43:32.000Z",
                        "deleted": false,
                        "date_stage_changed": "2020-09-30T00:00:00.000Z",
                        "date_last_contacted": "2020-09-30T00:00:00.000Z",
                        "date_lead_created": "2020-09-30T00:00:00.000Z",
                        "custom_mappings": {},
                        "updated_by": "12345",
                        "created_by": "12345",
                        "updated_at": "2020-09-30T07:43:32.000Z",
                        "created_at": "2020-09-30T07:43:32.000Z"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125743,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateopportunity",
        "executor_version": "v1",
        "executor_display_name": "Update opportunity",
        "executor_description": "Update opportunity",
        "executor_category": "Opportunities",
        "executor_category_group": "Opportunities",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://unify.apideck.com/crm/opportunities/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": "Include raw response. Mostly used for debugging purposes",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "title": "New Rocket",
                "primary_contact_id": "12345",
                "description": "Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.",
                "type": "Existing Customer - Upgrade",
                "monetary_amount": 75000,
                "currency": "USD",
                "win_probability": 40,
                "close_date": "2020-10-30",
                "loss_reason_id": "12345",
                "loss_reason": "No budget",
                "won_reason_id": "12345",
                "won_reason": "Best pitch",
                "pipeline_id": "12345",
                "pipeline_stage_id": "12345",
                "source_id": "12345",
                "lead_id": "12345",
                "lead_source": "Website",
                "contact_id": "12345",
                "contact_ids": [
                    "12345"
                ],
                "company_id": "12345",
                "company_name": "Copper",
                "owner_id": "12345",
                "priority": "None",
                "status": "Open",
                "status_id": "12345",
                "tags": [
                    "New"
                ],
                "custom_fields": [
                    {
                        "id": "2389328923893298",
                        "name": "employee_level",
                        "description": "Employee Level",
                        "value": "Uses Salesforce and Marketo"
                    }
                ],
                "stage_last_changed_at": "2020-09-30T07:43:32.000Z"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710484357771,
        "lastModifiedTime": 1710484357771,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Opportunity updated",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "companies",
                    "operation": "update",
                    "data": {
                        "id": "12345"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125749,
        "executor_type": "THIRDPARTY",
        "executor_name": "deletelead",
        "executor_version": "v1",
        "executor_display_name": "Delete lead",
        "executor_description": "Delete lead",
        "executor_category": "Leads",
        "executor_category_group": "Leads",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://unify.apideck.com/crm/leads/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": "Include raw response. Mostly used for debugging purposes",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710486961606,
        "lastModifiedTime": 1710486961606,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Lead updated",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "companies",
                    "operation": "update",
                    "data": {
                        "id": "12345"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125745,
        "executor_type": "THIRDPARTY",
        "executor_name": "listleads",
        "executor_version": "v1",
        "executor_display_name": "List leads",
        "executor_description": "List leads",
        "executor_category": "Leads",
        "executor_category_group": "Leads",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://unify.apideck.com/crm/leads",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": "Include raw response. Mostly used for debugging purposes",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Number of results to return. Minimum 1, Maximum 200, Default 20",
                "req": false
            },
            {
                "key": "filter",
                "value": "",
                "description": "Apply filters",
                "req": false
            },
            {
                "key": "sort",
                "value": "",
                "description": "Apply sorting",
                "req": false
            },
            {
                "key": "pass_through",
                "value": "",
                "description": "Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads",
                "req": false
            },
            {
                "key": "fields",
                "value": "",
                "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation.  Example: fields=name,email,addresses.city  In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded.",
                "req": false
            },
            {
                "key": "property name",
                "value": "",
                "description": "Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710485465989,
        "lastModifiedTime": 1710485465989,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Leads",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "companies",
                    "operation": "all",
                    "data": [
                        {
                            "id": "12345",
                            "name": "Elon Musk",
                            "company_name": "Spacex",
                            "owner_id": "54321",
                            "company_id": "2",
                            "lead_id": "2",
                            "lead_source": "Cold Call",
                            "first_name": "Elon",
                            "last_name": "Musk",
                            "description": "A thinker",
                            "prefix": "Sir",
                            "title": "CEO",
                            "language": "EN",
                            "status": "New",
                            "monetary_amount": 75000,
                            "currency": "USD",
                            "fax": "+12129876543",
                            "websites": [
                                {
                                    "id": "12345",
                                    "url": "http://example.com",
                                    "type": "primary"
                                }
                            ],
                            "addresses": [
                                {
                                    "id": "123",
                                    "type": "primary",
                                    "string": "25 Spring Street, Blackburn, VIC 3130",
                                    "name": "HQ US",
                                    "line1": "Main street",
                                    "line2": "apt #",
                                    "line3": "Suite #",
                                    "line4": "delivery instructions",
                                    "street_number": "25",
                                    "city": "San Francisco",
                                    "state": "CA",
                                    "postal_code": "94104",
                                    "country": "US",
                                    "latitude": "40.759211",
                                    "longitude": "-73.984638",
                                    "county": "Santa Clara",
                                    "contact_name": "Elon Musk",
                                    "salutation": "Mr",
                                    "phone_number": "111-111-1111",
                                    "fax": "122-111-1111",
                                    "email": "elon@musk.com",
                                    "website": "https://elonmusk.com",
                                    "notes": "Address notes or delivery instructions.",
                                    "row_version": "1-12345"
                                }
                            ],
                            "social_links": [
                                {
                                    "id": "12345",
                                    "url": "https://www.twitter.com/apideck",
                                    "type": "twitter"
                                }
                            ],
                            "phone_numbers": [
                                {
                                    "id": "12345",
                                    "country_code": "1",
                                    "area_code": "323",
                                    "number": "111-111-1111",
                                    "extension": "105",
                                    "type": "primary"
                                }
                            ],
                            "emails": [
                                {
                                    "id": "123",
                                    "email": "elon@musk.com",
                                    "type": "primary"
                                }
                            ],
                            "custom_fields": [
                                {
                                    "id": "2389328923893298",
                                    "name": "employee_level",
                                    "description": "Employee Level",
                                    "value": "Uses Salesforce and Marketo"
                                }
                            ],
                            "tags": [
                                "New"
                            ],
                            "custom_mappings": {},
                            "updated_at": "2020-09-30T07:43:32.000Z",
                            "created_at": "2020-09-30T07:43:32.000Z"
                        }
                    ],
                    "meta": {
                        "items_on_page": 50,
                        "cursors": {
                            "previous": "em9oby1jcm06OnBhZ2U6OjE=",
                            "current": "em9oby1jcm06OnBhZ2U6OjI=",
                            "next": "em9oby1jcm06OnBhZ2U6OjM="
                        }
                    },
                    "links": {
                        "previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D",
                        "current": "https://unify.apideck.com/crm/companies",
                        "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125746,
        "executor_type": "THIRDPARTY",
        "executor_name": "createlead",
        "executor_version": "v1",
        "executor_display_name": "Create lead",
        "executor_description": "Create lead",
        "executor_category": "Leads",
        "executor_category_group": "Leads",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://unify.apideck.com/crm/leads",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": "Include raw response. Mostly used for debugging purposes",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "Elon Musk",
                "company_name": "Spacex",
                "owner_id": "54321",
                "company_id": "2",
                "lead_id": "2",
                "lead_source": "Cold Call",
                "first_name": "Elon",
                "last_name": "Musk",
                "description": "A thinker",
                "prefix": "Sir",
                "title": "CEO",
                "language": "EN",
                "status": "New",
                "monetary_amount": 75000,
                "currency": "USD",
                "fax": "+12129876543",
                "websites": [
                    {
                        "id": "12345",
                        "url": "http://example.com",
                        "type": "primary"
                    }
                ],
                "addresses": [
                    {
                        "id": "123",
                        "type": "primary",
                        "string": "25 Spring Street, Blackburn, VIC 3130",
                        "name": "HQ US",
                        "line1": "Main street",
                        "line2": "apt #",
                        "line3": "Suite #",
                        "line4": "delivery instructions",
                        "street_number": "25",
                        "city": "San Francisco",
                        "state": "CA",
                        "postal_code": "94104",
                        "country": "US",
                        "latitude": "40.759211",
                        "longitude": "-73.984638",
                        "county": "Santa Clara",
                        "contact_name": "Elon Musk",
                        "salutation": "Mr",
                        "phone_number": "111-111-1111",
                        "fax": "122-111-1111",
                        "email": "elon@musk.com",
                        "website": "https://elonmusk.com",
                        "notes": "Address notes or delivery instructions.",
                        "row_version": "1-12345"
                    }
                ],
                "social_links": [
                    {
                        "id": "12345",
                        "url": "https://www.twitter.com/apideck",
                        "type": "twitter"
                    }
                ],
                "phone_numbers": [
                    {
                        "id": "12345",
                        "country_code": "1",
                        "area_code": "323",
                        "number": "111-111-1111",
                        "extension": "105",
                        "type": "primary"
                    }
                ],
                "emails": [
                    {
                        "id": "123",
                        "email": "elon@musk.com",
                        "type": "primary"
                    }
                ],
                "custom_fields": [
                    {
                        "id": "2389328923893298",
                        "name": "employee_level",
                        "description": "Employee Level",
                        "value": "Uses Salesforce and Marketo"
                    }
                ],
                "tags": [
                    "New"
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710486257606,
        "lastModifiedTime": 1710486257606,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Lead created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "companies",
                    "operation": "add",
                    "data": {
                        "id": "12345"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125747,
        "executor_type": "THIRDPARTY",
        "executor_name": "getlead",
        "executor_version": "v1",
        "executor_display_name": "Get lead",
        "executor_description": "Get lead",
        "executor_category": "Leads",
        "executor_category_group": "Leads",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://unify.apideck.com/crm/leads/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": "Include raw response. Mostly used for debugging purposes",
                "req": false
            },
            {
                "key": "fields",
                "value": "",
                "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation.  Example: fields=name,email,addresses.city  In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710486699626,
        "lastModifiedTime": 1710486699626,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Lead",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "companies",
                    "operation": "one",
                    "data": {
                        "id": "12345",
                        "name": "Elon Musk",
                        "company_name": "Spacex",
                        "owner_id": "54321",
                        "company_id": "2",
                        "lead_id": "2",
                        "lead_source": "Cold Call",
                        "first_name": "Elon",
                        "last_name": "Musk",
                        "description": "A thinker",
                        "prefix": "Sir",
                        "title": "CEO",
                        "language": "EN",
                        "status": "New",
                        "monetary_amount": 75000,
                        "currency": "USD",
                        "fax": "+12129876543",
                        "websites": [
                            {
                                "id": "12345",
                                "url": "http://example.com",
                                "type": "primary"
                            }
                        ],
                        "addresses": [
                            {
                                "id": "123",
                                "type": "primary",
                                "string": "25 Spring Street, Blackburn, VIC 3130",
                                "name": "HQ US",
                                "line1": "Main street",
                                "line2": "apt #",
                                "line3": "Suite #",
                                "line4": "delivery instructions",
                                "street_number": "25",
                                "city": "San Francisco",
                                "state": "CA",
                                "postal_code": "94104",
                                "country": "US",
                                "latitude": "40.759211",
                                "longitude": "-73.984638",
                                "county": "Santa Clara",
                                "contact_name": "Elon Musk",
                                "salutation": "Mr",
                                "phone_number": "111-111-1111",
                                "fax": "122-111-1111",
                                "email": "elon@musk.com",
                                "website": "https://elonmusk.com",
                                "notes": "Address notes or delivery instructions.",
                                "row_version": "1-12345"
                            }
                        ],
                        "social_links": [
                            {
                                "id": "12345",
                                "url": "https://www.twitter.com/apideck",
                                "type": "twitter"
                            }
                        ],
                        "phone_numbers": [
                            {
                                "id": "12345",
                                "country_code": "1",
                                "area_code": "323",
                                "number": "111-111-1111",
                                "extension": "105",
                                "type": "primary"
                            }
                        ],
                        "emails": [
                            {
                                "id": "123",
                                "email": "elon@musk.com",
                                "type": "primary"
                            }
                        ],
                        "custom_fields": [
                            {
                                "id": "2389328923893298",
                                "name": "employee_level",
                                "description": "Employee Level",
                                "value": "Uses Salesforce and Marketo"
                            }
                        ],
                        "tags": [
                            "New"
                        ],
                        "custom_mappings": {},
                        "updated_at": "2020-09-30T07:43:32.000Z",
                        "created_at": "2020-09-30T07:43:32.000Z"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125748,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatelead",
        "executor_version": "v1",
        "executor_display_name": "Update lead",
        "executor_description": "Update lead",
        "executor_category": "Leads",
        "executor_category_group": "Leads",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://unify.apideck.com/crm/leads/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": "Include raw response. Mostly used for debugging purposes",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "Elon Musk",
                "company_name": "Spacex",
                "owner_id": "54321",
                "company_id": "2",
                "lead_id": "2",
                "lead_source": "Cold Call",
                "first_name": "Elon",
                "last_name": "Musk",
                "description": "A thinker",
                "prefix": "Sir",
                "title": "CEO",
                "language": "EN",
                "status": "New",
                "monetary_amount": 75000,
                "currency": "USD",
                "fax": "+12129876543",
                "websites": [
                    {
                        "id": "12345",
                        "url": "http://example.com",
                        "type": "primary"
                    }
                ],
                "addresses": [
                    {
                        "id": "123",
                        "type": "primary",
                        "string": "25 Spring Street, Blackburn, VIC 3130",
                        "name": "HQ US",
                        "line1": "Main street",
                        "line2": "apt #",
                        "line3": "Suite #",
                        "line4": "delivery instructions",
                        "street_number": "25",
                        "city": "San Francisco",
                        "state": "CA",
                        "postal_code": "94104",
                        "country": "US",
                        "latitude": "40.759211",
                        "longitude": "-73.984638",
                        "county": "Santa Clara",
                        "contact_name": "Elon Musk",
                        "salutation": "Mr",
                        "phone_number": "111-111-1111",
                        "fax": "122-111-1111",
                        "email": "elon@musk.com",
                        "website": "https://elonmusk.com",
                        "notes": "Address notes or delivery instructions.",
                        "row_version": "1-12345"
                    }
                ],
                "social_links": [
                    {
                        "id": "12345",
                        "url": "https://www.twitter.com/apideck",
                        "type": "twitter"
                    }
                ],
                "phone_numbers": [
                    {
                        "id": "12345",
                        "country_code": "1",
                        "area_code": "323",
                        "number": "111-111-1111",
                        "extension": "105",
                        "type": "primary"
                    }
                ],
                "emails": [
                    {
                        "id": "123",
                        "email": "elon@musk.com",
                        "type": "primary"
                    }
                ],
                "custom_fields": [
                    {
                        "id": "2389328923893298",
                        "name": "employee_level",
                        "description": "Employee Level",
                        "value": "Uses Salesforce and Marketo"
                    }
                ],
                "tags": [
                    "New"
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710486835882,
        "lastModifiedTime": 1710486835882,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Lead updated",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "companies",
                    "operation": "update",
                    "data": {
                        "id": "12345"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126387,
        "executor_type": "THIRDPARTY",
        "executor_name": "listpipelines",
        "executor_version": "v1",
        "executor_display_name": "List pipelines",
        "executor_description": "List pipelines",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://unify.apideck.com/crm/pipelines",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": " Include raw response. Mostly used for debugging purposes",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Number of results to return. Minimum 1, Maximum 200, Default 20",
                "req": false
            },
            {
                "key": "pass_through",
                "value": "",
                "description": "Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads",
                "req": false
            },
            {
                "key": "fields",
                "value": "",
                "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation.  Example: fields=name,email,addresses.city  In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711092218592,
        "lastModifiedTime": 1711092218592,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Pipelines",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "pipelines",
                    "operation": "all",
                    "data": [
                        {
                            "id": "default",
                            "name": "Sales Pipeline",
                            "currency": "USD",
                            "archived": false,
                            "active": false,
                            "display_order": 1,
                            "win_probability_enabled": true,
                            "stages": [
                                {
                                    "id": "contractsent",
                                    "name": "Contract Sent",
                                    "value": "CONTRACT_SENT",
                                    "win_probability": 50,
                                    "display_order": 1
                                }
                            ],
                            "updated_at": "2020-09-30T07:43:32.000Z",
                            "created_at": "2020-09-30T07:43:32.000Z"
                        }
                    ],
                    "meta": {
                        "items_on_page": 50,
                        "cursors": {
                            "previous": "em9oby1jcm06OnBhZ2U6OjE=",
                            "current": "em9oby1jcm06OnBhZ2U6OjI=",
                            "next": "em9oby1jcm06OnBhZ2U6OjM="
                        }
                    },
                    "links": {
                        "previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D",
                        "current": "https://unify.apideck.com/crm/companies",
                        "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126396,
        "executor_type": "THIRDPARTY",
        "executor_name": "deletepipeline",
        "executor_version": "v1",
        "executor_display_name": "Delete pipeline",
        "executor_description": "Delete pipeline",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://unify.apideck.com/crm/pipelines/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": " Include raw response. Mostly used for debugging purposes",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711093507118,
        "lastModifiedTime": 1711093507118,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Pipeline deleted",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "companies",
                    "operation": "delete",
                    "data": {
                        "id": "12345"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126395,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatepipeline",
        "executor_version": "v1",
        "executor_display_name": "Update pipeline",
        "executor_description": "Update pipeline",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://unify.apideck.com/crm/pipelines/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": " Include raw response. Mostly used for debugging purposes",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "id": "default",
                "name": "Sales Pipeline",
                "currency": "USD",
                "archived": false,
                "active": false,
                "display_order": 1,
                "win_probability_enabled": true,
                "stages": [
                    {
                        "name": "Contract Sent",
                        "value": "CONTRACT_SENT",
                        "win_probability": 50,
                        "display_order": 1
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711093280050,
        "lastModifiedTime": 1711093280050,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Pipeline updated",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "pipelines",
                    "operation": "update",
                    "data": {
                        "id": "12345"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126390,
        "executor_type": "THIRDPARTY",
        "executor_name": "getpipeline",
        "executor_version": "v1",
        "executor_display_name": "Get pipeline",
        "executor_description": "Get pipeline",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://unify.apideck.com/crm/pipelines/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": " Include raw response. Mostly used for debugging purposes",
                "req": false
            },
            {
                "key": "fields",
                "value": "",
                "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation.  Example: fields=name,email,addresses.city  In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711092689650,
        "lastModifiedTime": 1711092689650,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Pipeline",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "pipelines",
                    "operation": "one",
                    "data": {
                        "id": "default",
                        "name": "Sales Pipeline",
                        "currency": "USD",
                        "archived": false,
                        "active": false,
                        "display_order": 1,
                        "win_probability_enabled": true,
                        "stages": [
                            {
                                "id": "contractsent",
                                "name": "Contract Sent",
                                "value": "CONTRACT_SENT",
                                "win_probability": 50,
                                "display_order": 1
                            }
                        ],
                        "updated_at": "2020-09-30T07:43:32.000Z",
                        "created_at": "2020-09-30T07:43:32.000Z"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126389,
        "executor_type": "THIRDPARTY",
        "executor_name": "createpipeline",
        "executor_version": "v1",
        "executor_display_name": "Create pipeline",
        "executor_description": "Create pipeline",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://unify.apideck.com/crm/pipelines",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": " Include raw response. Mostly used for debugging purposes",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "id": "default",
                "name": "Sales Pipeline",
                "currency": "USD",
                "archived": false,
                "active": false,
                "display_order": 1,
                "win_probability_enabled": true,
                "stages": [
                    {
                        "name": "Contract Sent",
                        "value": "CONTRACT_SENT",
                        "win_probability": 50,
                        "display_order": 1
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711092385105,
        "lastModifiedTime": 1711092385105,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Pipeline created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "pipelines",
                    "operation": "add",
                    "data": {
                        "id": "12345"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126399,
        "executor_type": "THIRDPARTY",
        "executor_name": "getNoteapideck",
        "executor_version": "v1",
        "executor_display_name": "Get note",
        "executor_description": "Get note",
        "executor_category": "Notes",
        "executor_category_group": "Notes",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://unify.apideck.com/crm/notes/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": " Include raw response. Mostly used for debugging purposes",
                "req": false
            },
            {
                "key": "fields",
                "value": "",
                "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation.  Example: fields=name,email,addresses.city  In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711094317506,
        "lastModifiedTime": 1711094317506,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Note",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "notes",
                    "operation": "one",
                    "data": {
                        "id": "12345",
                        "title": "Meeting Notes",
                        "content": "Office hours are 9AM-6PM",
                        "owner_id": "12345",
                        "contact_id": "12345",
                        "company_id": "12345",
                        "opportunity_id": "12345",
                        "lead_id": "12345",
                        "active": true,
                        "custom_mappings": {},
                        "updated_by": "12345",
                        "created_by": "12345",
                        "updated_at": "2020-09-30T07:43:32.000Z",
                        "created_at": "2020-09-30T07:43:32.000Z"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126398,
        "executor_type": "THIRDPARTY",
        "executor_name": "createNote",
        "executor_version": "v1",
        "executor_display_name": "Create note",
        "executor_description": "Create note",
        "executor_category": "Notes",
        "executor_category_group": "Notes",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://unify.apideck.com/crm/notes",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": " Include raw response. Mostly used for debugging purposes",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "title": "Meeting Notes",
                "content": "Office hours are 9AM-6PM",
                "owner_id": "12345",
                "contact_id": "12345",
                "company_id": "12345",
                "opportunity_id": "12345",
                "lead_id": "12345",
                "active": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711093944655,
        "lastModifiedTime": 1711093944655,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Note created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "notes",
                    "operation": "add",
                    "data": {
                        "id": "12345"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126400,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateNoteapideck",
        "executor_version": "v1",
        "executor_display_name": "Update note",
        "executor_description": "Update note",
        "executor_category": "Notes",
        "executor_category_group": "Notes",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://unify.apideck.com/crm/notes/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": " Include raw response. Mostly used for debugging purposes",
                "req": false
            },
            {
                "key": "fields",
                "value": "",
                "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation.  Example: fields=name,email,addresses.city  In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "title": "Meeting Notes",
                "content": "Office hours are 9AM-6PM",
                "owner_id": "12345",
                "contact_id": "12345",
                "company_id": "12345",
                "opportunity_id": "12345",
                "lead_id": "12345",
                "active": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711094439510,
        "lastModifiedTime": 1711094439510,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Note updated",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "notes",
                    "operation": "update",
                    "data": {
                        "id": "12345"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126401,
        "executor_type": "THIRDPARTY",
        "executor_name": "deletenoteapideck",
        "executor_version": "v1",
        "executor_display_name": "Delete note",
        "executor_description": "Delete note",
        "executor_category": "Notes",
        "executor_category_group": "Notes",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://unify.apideck.com/crm/notes/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": " Include raw response. Mostly used for debugging purposes",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711094708455,
        "lastModifiedTime": 1711094708455,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Note deleted",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "notes",
                    "operation": "delete",
                    "data": {
                        "id": "12345"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126397,
        "executor_type": "THIRDPARTY",
        "executor_name": "getlistnotes",
        "executor_version": "v1",
        "executor_display_name": "List notes",
        "executor_description": "List notes",
        "executor_category": "Notes",
        "executor_category_group": "Notes",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://unify.apideck.com/crm/notes",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": " Include raw response. Mostly used for debugging purposes",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Number of results to return. Minimum 1, Maximum 200, Default 20",
                "req": false
            },
            {
                "key": "pass_through",
                "value": "",
                "description": "Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads",
                "req": false
            },
            {
                "key": "fields",
                "value": "",
                "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation.  Example: fields=name,email,addresses.city  In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711093754677,
        "lastModifiedTime": 1711093754677,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Notes",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "notes",
                    "operation": "all",
                    "data": [
                        {
                            "id": "12345",
                            "title": "Meeting Notes",
                            "content": "Office hours are 9AM-6PM",
                            "owner_id": "12345",
                            "contact_id": "12345",
                            "company_id": "12345",
                            "opportunity_id": "12345",
                            "lead_id": "12345",
                            "active": true,
                            "custom_mappings": {},
                            "updated_by": "12345",
                            "created_by": "12345",
                            "updated_at": "2020-09-30T07:43:32.000Z",
                            "created_at": "2020-09-30T07:43:32.000Z"
                        }
                    ],
                    "meta": {
                        "items_on_page": 50,
                        "cursors": {
                            "previous": "em9oby1jcm06OnBhZ2U6OjE=",
                            "current": "em9oby1jcm06OnBhZ2U6OjI=",
                            "next": "em9oby1jcm06OnBhZ2U6OjM="
                        }
                    },
                    "links": {
                        "previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D",
                        "current": "https://unify.apideck.com/crm/companies",
                        "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126412,
        "executor_type": "THIRDPARTY",
        "executor_name": "getUserapideck",
        "executor_version": "v1",
        "executor_display_name": "Get user",
        "executor_description": "Get user",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://unify.apideck.com/crm/users/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": " Include raw response. Mostly used for debugging purposes",
                "req": false
            },
            {
                "key": "fields",
                "value": "",
                "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation.  Example: fields=name,email,addresses.city  In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711097074072,
        "lastModifiedTime": 1711097074072,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "User",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "companies",
                    "operation": "one",
                    "data": {
                        "id": "12345",
                        "parent_id": "54321",
                        "username": "masterofcoin",
                        "first_name": "Elon",
                        "last_name": "Musk",
                        "title": "CEO",
                        "division": "Europe",
                        "department": "R&D",
                        "company_name": "SpaceX",
                        "employee_number": "123456-AB",
                        "description": "A description",
                        "image": "https://logo.clearbit.com/spacex.com?s=128",
                        "language": "EN",
                        "status": "active",
                        "addresses": [
                            {
                                "id": "123",
                                "type": "primary",
                                "string": "25 Spring Street, Blackburn, VIC 3130",
                                "name": "HQ US",
                                "line1": "Main street",
                                "line2": "apt #",
                                "line3": "Suite #",
                                "line4": "delivery instructions",
                                "street_number": "25",
                                "city": "San Francisco",
                                "state": "CA",
                                "postal_code": "94104",
                                "country": "US",
                                "latitude": "40.759211",
                                "longitude": "-73.984638",
                                "county": "Santa Clara",
                                "contact_name": "Elon Musk",
                                "salutation": "Mr",
                                "phone_number": "111-111-1111",
                                "fax": "122-111-1111",
                                "email": "elon@musk.com",
                                "website": "https://elonmusk.com",
                                "notes": "Address notes or delivery instructions.",
                                "row_version": "1-12345"
                            }
                        ],
                        "phone_numbers": [
                            {
                                "id": "12345",
                                "country_code": "1",
                                "area_code": "323",
                                "number": "111-111-1111",
                                "extension": "105",
                                "type": "primary"
                            }
                        ],
                        "emails": [
                            {
                                "id": "123",
                                "email": "elon@musk.com",
                                "type": "primary"
                            }
                        ],
                        "custom_mappings": {},
                        "updated_at": "2017-08-12T20:43:21.291Z",
                        "created_at": "2017-08-12T20:43:21.291Z"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126405,
        "executor_type": "THIRDPARTY",
        "executor_name": "getListusers",
        "executor_version": "v1",
        "executor_display_name": "List users",
        "executor_description": "List users",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://unify.apideck.com/crm/users",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": " Include raw response. Mostly used for debugging purposes",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Number of results to return. Minimum 1, Maximum 200, Default 20",
                "req": false
            },
            {
                "key": "pass_through",
                "value": "",
                "description": "Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads",
                "req": false
            },
            {
                "key": "fields",
                "value": "",
                "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation.  Example: fields=name,email,addresses.city  In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711095333285,
        "lastModifiedTime": 1711095333285,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Users",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "users",
                    "operation": "all",
                    "data": [
                        {
                            "id": "12345",
                            "parent_id": "54321",
                            "username": "masterofcoin",
                            "first_name": "Elon",
                            "last_name": "Musk",
                            "title": "CEO",
                            "division": "Europe",
                            "department": "R&D",
                            "company_name": "SpaceX",
                            "employee_number": "123456-AB",
                            "description": "A description",
                            "image": "https://logo.clearbit.com/spacex.com?s=128",
                            "language": "EN",
                            "status": "active",
                            "addresses": [
                                {
                                    "id": "123",
                                    "type": "primary",
                                    "string": "25 Spring Street, Blackburn, VIC 3130",
                                    "name": "HQ US",
                                    "line1": "Main street",
                                    "line2": "apt #",
                                    "line3": "Suite #",
                                    "line4": "delivery instructions",
                                    "street_number": "25",
                                    "city": "San Francisco",
                                    "state": "CA",
                                    "postal_code": "94104",
                                    "country": "US",
                                    "latitude": "40.759211",
                                    "longitude": "-73.984638",
                                    "county": "Santa Clara",
                                    "contact_name": "Elon Musk",
                                    "salutation": "Mr",
                                    "phone_number": "111-111-1111",
                                    "fax": "122-111-1111",
                                    "email": "elon@musk.com",
                                    "website": "https://elonmusk.com",
                                    "notes": "Address notes or delivery instructions.",
                                    "row_version": "1-12345"
                                }
                            ],
                            "phone_numbers": [
                                {
                                    "id": "12345",
                                    "country_code": "1",
                                    "area_code": "323",
                                    "number": "111-111-1111",
                                    "extension": "105",
                                    "type": "primary"
                                }
                            ],
                            "emails": [
                                {
                                    "id": "123",
                                    "email": "elon@musk.com",
                                    "type": "primary"
                                }
                            ],
                            "custom_mappings": {},
                            "updated_at": "2017-08-12T20:43:21.291Z",
                            "created_at": "2017-08-12T20:43:21.291Z"
                        }
                    ],
                    "meta": {
                        "items_on_page": 50,
                        "cursors": {
                            "previous": "em9oby1jcm06OnBhZ2U6OjE=",
                            "current": "em9oby1jcm06OnBhZ2U6OjI=",
                            "next": "em9oby1jcm06OnBhZ2U6OjM="
                        }
                    },
                    "links": {
                        "previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D",
                        "current": "https://unify.apideck.com/crm/companies",
                        "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126416,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteuserapideck",
        "executor_version": "v1",
        "executor_display_name": "Delete user",
        "executor_description": "Delete user",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://unify.apideck.com/crm/users/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": "Include raw response. Mostly used for debugging purposes",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711097599054,
        "lastModifiedTime": 1711097599054,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "User deleted",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "users",
                    "operation": "delete",
                    "data": {
                        "id": "12345"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126407,
        "executor_type": "THIRDPARTY",
        "executor_name": "postCreateUser",
        "executor_version": "v1",
        "executor_display_name": "Create user",
        "executor_description": "Create user",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://unify.apideck.com/crm/users",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": " Include raw response. Mostly used for debugging purposes",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "parent_id": "54321",
                "username": "masterofcoin",
                "first_name": "Elon",
                "last_name": "Musk",
                "title": "CEO",
                "division": "Europe",
                "department": "R&D",
                "company_name": "SpaceX",
                "employee_number": "123456-AB",
                "description": "A description",
                "image": "https://logo.clearbit.com/spacex.com?s=128",
                "language": "EN",
                "status": "active",
                "password": "supersecretpassword",
                "addresses": [
                    {
                        "id": "123",
                        "type": "primary",
                        "string": "25 Spring Street, Blackburn, VIC 3130",
                        "name": "HQ US",
                        "line1": "Main street",
                        "line2": "apt #",
                        "line3": "Suite #",
                        "line4": "delivery instructions",
                        "street_number": "25",
                        "city": "San Francisco",
                        "state": "CA",
                        "postal_code": "94104",
                        "country": "US",
                        "latitude": "40.759211",
                        "longitude": "-73.984638",
                        "county": "Santa Clara",
                        "contact_name": "Elon Musk",
                        "salutation": "Mr",
                        "phone_number": "111-111-1111",
                        "fax": "122-111-1111",
                        "email": "elon@musk.com",
                        "website": "https://elonmusk.com",
                        "notes": "Address notes or delivery instructions.",
                        "row_version": "1-12345"
                    }
                ],
                "phone_numbers": [
                    {
                        "id": "12345",
                        "country_code": "1",
                        "area_code": "323",
                        "number": "111-111-1111",
                        "extension": "105",
                        "type": "primary"
                    }
                ],
                "emails": [
                    {
                        "id": "123",
                        "email": "elon@musk.com",
                        "type": "primary"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1711095639275,
        "lastModifiedTime": 1711096763371,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "User created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "users",
                    "operation": "add",
                    "data": {
                        "id": "12345"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 126414,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateuserapideck",
        "executor_version": "v1",
        "executor_display_name": "Update user",
        "executor_description": "Update user",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://unify.apideck.com/crm/users/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": "Include raw response. Mostly used for debugging purposes",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "parent_id": "54321",
                "username": "masterofcoin",
                "first_name": "Elon",
                "last_name": "Musk",
                "title": "CEO",
                "division": "Europe",
                "department": "R&D",
                "company_name": "SpaceX",
                "employee_number": "123456-AB",
                "description": "A description",
                "image": "https://logo.clearbit.com/spacex.com?s=128",
                "language": "EN",
                "status": "active",
                "password": "supersecretpassword",
                "addresses": [
                    {
                        "id": "123",
                        "type": "primary",
                        "string": "25 Spring Street, Blackburn, VIC 3130",
                        "name": "HQ US",
                        "line1": "Main street",
                        "line2": "apt #",
                        "line3": "Suite #",
                        "line4": "delivery instructions",
                        "street_number": "25",
                        "city": "San Francisco",
                        "state": "CA",
                        "postal_code": "94104",
                        "country": "US",
                        "latitude": "40.759211",
                        "longitude": "-73.984638",
                        "county": "Santa Clara",
                        "contact_name": "Elon Musk",
                        "salutation": "Mr",
                        "phone_number": "111-111-1111",
                        "fax": "122-111-1111",
                        "email": "elon@musk.com",
                        "website": "https://elonmusk.com",
                        "notes": "Address notes or delivery instructions.",
                        "row_version": "1-12345"
                    }
                ],
                "phone_numbers": [
                    {
                        "id": "12345",
                        "country_code": "1",
                        "area_code": "323",
                        "number": "111-111-1111",
                        "extension": "105",
                        "type": "primary"
                    }
                ],
                "emails": [
                    {
                        "id": "123",
                        "email": "elon@musk.com",
                        "type": "primary"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711097441198,
        "lastModifiedTime": 1711097441198,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "User updated",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "companies",
                    "operation": "update",
                    "data": {
                        "id": "12345"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126420,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateActivity",
        "executor_version": "v1",
        "executor_display_name": "Update activity",
        "executor_description": "Update activity",
        "executor_category": "Activities",
        "executor_category_group": "Activities",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://unify.apideck.com/crm/activities/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": "Include raw response. Mostly used for debugging purposes",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "activity_datetime": "2021-05-01T12:00:00.000Z",
                "duration_seconds": 1800,
                "user_id": "12345",
                "account_id": "12345",
                "contact_id": "12345",
                "company_id": "12345",
                "opportunity_id": "12345",
                "lead_id": "12345",
                "owner_id": "12345",
                "campaign_id": "12345",
                "case_id": "12345",
                "asset_id": "12345",
                "contract_id": "12345",
                "product_id": "12345",
                "solution_id": "12345",
                "custom_object_id": "12345",
                "type": "meeting",
                "title": "Meeting",
                "description": "More info about the meeting",
                "note": "An internal note about the meeting",
                "location": "Space",
                "location_address": {
                    "id": "123",
                    "type": "primary",
                    "string": "25 Spring Street, Blackburn, VIC 3130",
                    "name": "HQ US",
                    "line1": "Main street",
                    "line2": "apt #",
                    "line3": "Suite #",
                    "line4": "delivery instructions",
                    "street_number": "25",
                    "city": "San Francisco",
                    "state": "CA",
                    "postal_code": "94104",
                    "country": "US",
                    "latitude": "40.759211",
                    "longitude": "-73.984638",
                    "county": "Santa Clara",
                    "contact_name": "Elon Musk",
                    "salutation": "Mr",
                    "phone_number": "111-111-1111",
                    "fax": "122-111-1111",
                    "email": "elon@musk.com",
                    "website": "https://elonmusk.com",
                    "notes": "Address notes or delivery instructions.",
                    "row_version": "1-12345"
                },
                "all_day_event": false,
                "private": true,
                "group_event": true,
                "event_sub_type": "debrief",
                "group_event_type": "Proposed",
                "child": false,
                "archived": false,
                "deleted": false,
                "show_as": "busy",
                "done": false,
                "start_datetime": "2021-05-01T12:00:00.000Z",
                "end_datetime": "2021-05-01T12:30:00.000Z",
                "activity_date": "2021-05-01",
                "end_date": "2021-05-01",
                "recurrent": false,
                "reminder_datetime": "2021-05-01T17:00:00.000Z",
                "reminder_set": false,
                "video_conference_url": "https://us02web.zoom.us/j/88120759396",
                "video_conference_id": "zoom:88120759396",
                "custom_fields": [
                    {
                        "id": "2389328923893298",
                        "name": "employee_level",
                        "description": "Employee Level",
                        "value": "Uses Salesforce and Marketo"
                    }
                ],
                "attendees": [
                    {
                        "name": "Elon Musk",
                        "first_name": "Elon",
                        "middle_name": "D.",
                        "last_name": "Musk",
                        "prefix": "Mr.",
                        "suffix": "PhD",
                        "email_address": "elon@musk.com",
                        "is_organizer": true,
                        "status": "accepted"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711099093796,
        "lastModifiedTime": 1711099093796,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Activity updated",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "activities",
                    "operation": "update",
                    "data": {
                        "id": "12345"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126417,
        "executor_type": "THIRDPARTY",
        "executor_name": "listactivities",
        "executor_version": "v1",
        "executor_display_name": "List activities",
        "executor_description": "List activities",
        "executor_category": "Activities",
        "executor_category_group": "Activities",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://unify.apideck.com/crm/activities",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": "Include raw response. Mostly used for debugging purposes",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Number of results to return. Minimum 1, Maximum 200, Default 20",
                "req": false
            },
            {
                "key": "filter",
                "value": "",
                "description": "Apply filters",
                "req": false
            },
            {
                "key": "sort",
                "value": "",
                "description": "Apply sorting",
                "req": false
            },
            {
                "key": "pass_through",
                "value": "",
                "description": "Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads",
                "req": false
            },
            {
                "key": "fields",
                "value": "",
                "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation.  Example: fields=name,email,addresses.city  In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711098319374,
        "lastModifiedTime": 1711098319374,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Activities",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "activities",
                    "operation": "all",
                    "data": [
                        {
                            "id": "12345",
                            "downstream_id": "12345",
                            "activity_datetime": "2021-05-01T12:00:00.000Z",
                            "duration_seconds": 1800,
                            "user_id": "12345",
                            "account_id": "12345",
                            "contact_id": "12345",
                            "company_id": "12345",
                            "opportunity_id": "12345",
                            "lead_id": "12345",
                            "owner_id": "12345",
                            "campaign_id": "12345",
                            "case_id": "12345",
                            "asset_id": "12345",
                            "contract_id": "12345",
                            "product_id": "12345",
                            "solution_id": "12345",
                            "custom_object_id": "12345",
                            "type": "meeting",
                            "title": "Meeting",
                            "description": "More info about the meeting",
                            "note": "An internal note about the meeting",
                            "location": "Space",
                            "location_address": {
                                "id": "123",
                                "type": "primary",
                                "string": "25 Spring Street, Blackburn, VIC 3130",
                                "name": "HQ US",
                                "line1": "Main street",
                                "line2": "apt #",
                                "line3": "Suite #",
                                "line4": "delivery instructions",
                                "street_number": "25",
                                "city": "San Francisco",
                                "state": "CA",
                                "postal_code": "94104",
                                "country": "US",
                                "latitude": "40.759211",
                                "longitude": "-73.984638",
                                "county": "Santa Clara",
                                "contact_name": "Elon Musk",
                                "salutation": "Mr",
                                "phone_number": "111-111-1111",
                                "fax": "122-111-1111",
                                "email": "elon@musk.com",
                                "website": "https://elonmusk.com",
                                "notes": "Address notes or delivery instructions.",
                                "row_version": "1-12345"
                            },
                            "all_day_event": false,
                            "private": true,
                            "group_event": true,
                            "event_sub_type": "debrief",
                            "group_event_type": "Proposed",
                            "child": false,
                            "archived": false,
                            "deleted": false,
                            "show_as": "busy",
                            "done": false,
                            "start_datetime": "2021-05-01T12:00:00.000Z",
                            "end_datetime": "2021-05-01T12:30:00.000Z",
                            "duration_minutes": 30,
                            "activity_date": "2021-05-01",
                            "end_date": "2021-05-01",
                            "recurrent": false,
                            "reminder_datetime": "2021-05-01T17:00:00.000Z",
                            "reminder_set": false,
                            "video_conference_url": "https://us02web.zoom.us/j/88120759396",
                            "video_conference_id": "zoom:88120759396",
                            "custom_fields": [
                                {
                                    "id": "2389328923893298",
                                    "name": "employee_level",
                                    "description": "Employee Level",
                                    "value": "Uses Salesforce and Marketo"
                                }
                            ],
                            "attendees": [
                                {
                                    "id": "12345",
                                    "name": "Elon Musk",
                                    "first_name": "Elon",
                                    "middle_name": "D.",
                                    "last_name": "Musk",
                                    "prefix": "Mr.",
                                    "suffix": "PhD",
                                    "email_address": "elon@musk.com",
                                    "is_organizer": true,
                                    "status": "accepted",
                                    "user_id": "12345",
                                    "contact_id": "12345",
                                    "updated_at": "2017-08-12T20:43:21.291Z",
                                    "created_at": "2017-08-12T20:43:21.291Z"
                                }
                            ],
                            "custom_mappings": {},
                            "updated_by": "12345",
                            "created_by": "12345",
                            "updated_at": "2020-09-30T07:43:32.000Z",
                            "created_at": "2020-09-30T07:43:32.000Z"
                        }
                    ],
                    "meta": {
                        "items_on_page": 50,
                        "cursors": {
                            "previous": "em9oby1jcm06OnBhZ2U6OjE=",
                            "current": "em9oby1jcm06OnBhZ2U6OjI=",
                            "next": "em9oby1jcm06OnBhZ2U6OjM="
                        }
                    },
                    "links": {
                        "previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D",
                        "current": "https://unify.apideck.com/crm/companies",
                        "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126418,
        "executor_type": "THIRDPARTY",
        "executor_name": "createActivity",
        "executor_version": "v1",
        "executor_display_name": "Create activity",
        "executor_description": "Create activity",
        "executor_category": "Activities",
        "executor_category_group": "Activities",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://unify.apideck.com/crm/activities",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": "Include raw response. Mostly used for debugging purposes",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "activity_datetime": "2021-05-01T12:00:00.000Z",
                "duration_seconds": 1800,
                "user_id": "12345",
                "account_id": "12345",
                "contact_id": "12345",
                "company_id": "12345",
                "opportunity_id": "12345",
                "lead_id": "12345",
                "owner_id": "12345",
                "campaign_id": "12345",
                "case_id": "12345",
                "asset_id": "12345",
                "contract_id": "12345",
                "product_id": "12345",
                "solution_id": "12345",
                "custom_object_id": "12345",
                "type": "meeting",
                "title": "Meeting",
                "description": "More info about the meeting",
                "note": "An internal note about the meeting",
                "location": "Space",
                "location_address": {
                    "id": "123",
                    "type": "primary",
                    "string": "25 Spring Street, Blackburn, VIC 3130",
                    "name": "HQ US",
                    "line1": "Main street",
                    "line2": "apt #",
                    "line3": "Suite #",
                    "line4": "delivery instructions",
                    "street_number": "25",
                    "city": "San Francisco",
                    "state": "CA",
                    "postal_code": "94104",
                    "country": "US",
                    "latitude": "40.759211",
                    "longitude": "-73.984638",
                    "county": "Santa Clara",
                    "contact_name": "Elon Musk",
                    "salutation": "Mr",
                    "phone_number": "111-111-1111",
                    "fax": "122-111-1111",
                    "email": "elon@musk.com",
                    "website": "https://elonmusk.com",
                    "notes": "Address notes or delivery instructions.",
                    "row_version": "1-12345"
                },
                "all_day_event": false,
                "private": true,
                "group_event": true,
                "event_sub_type": "debrief",
                "group_event_type": "Proposed",
                "child": false,
                "archived": false,
                "deleted": false,
                "show_as": "busy",
                "done": false,
                "start_datetime": "2021-05-01T12:00:00.000Z",
                "end_datetime": "2021-05-01T12:30:00.000Z",
                "activity_date": "2021-05-01",
                "end_date": "2021-05-01",
                "recurrent": false,
                "reminder_datetime": "2021-05-01T17:00:00.000Z",
                "reminder_set": false,
                "video_conference_url": "https://us02web.zoom.us/j/88120759396",
                "video_conference_id": "zoom:88120759396",
                "custom_fields": [
                    {
                        "id": "2389328923893298",
                        "name": "employee_level",
                        "description": "Employee Level",
                        "value": "Uses Salesforce and Marketo"
                    }
                ],
                "attendees": [
                    {
                        "name": "Elon Musk",
                        "first_name": "Elon",
                        "middle_name": "D.",
                        "last_name": "Musk",
                        "prefix": "Mr.",
                        "suffix": "PhD",
                        "email_address": "elon@musk.com",
                        "is_organizer": true,
                        "status": "accepted"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711098754356,
        "lastModifiedTime": 1711098754356,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Activity created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "activities",
                    "operation": "add",
                    "data": {
                        "id": "12345"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126419,
        "executor_type": "THIRDPARTY",
        "executor_name": "getActivityapideck",
        "executor_version": "v1",
        "executor_display_name": "Get activity",
        "executor_description": "Get activity",
        "executor_category": "Activities",
        "executor_category_group": "Activities",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://unify.apideck.com/crm/activities/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": "Include raw response. Mostly used for debugging purposes",
                "req": false
            },
            {
                "key": "fields",
                "value": "",
                "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation.  Example: fields=name,email,addresses.city  In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711098948052,
        "lastModifiedTime": 1711098948052,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Activity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "activities",
                    "operation": "one",
                    "data": {
                        "id": "12345",
                        "downstream_id": "12345",
                        "activity_datetime": "2021-05-01T12:00:00.000Z",
                        "duration_seconds": 1800,
                        "user_id": "12345",
                        "account_id": "12345",
                        "contact_id": "12345",
                        "company_id": "12345",
                        "opportunity_id": "12345",
                        "lead_id": "12345",
                        "owner_id": "12345",
                        "campaign_id": "12345",
                        "case_id": "12345",
                        "asset_id": "12345",
                        "contract_id": "12345",
                        "product_id": "12345",
                        "solution_id": "12345",
                        "custom_object_id": "12345",
                        "type": "meeting",
                        "title": "Meeting",
                        "description": "More info about the meeting",
                        "note": "An internal note about the meeting",
                        "location": "Space",
                        "location_address": {
                            "id": "123",
                            "type": "primary",
                            "string": "25 Spring Street, Blackburn, VIC 3130",
                            "name": "HQ US",
                            "line1": "Main street",
                            "line2": "apt #",
                            "line3": "Suite #",
                            "line4": "delivery instructions",
                            "street_number": "25",
                            "city": "San Francisco",
                            "state": "CA",
                            "postal_code": "94104",
                            "country": "US",
                            "latitude": "40.759211",
                            "longitude": "-73.984638",
                            "county": "Santa Clara",
                            "contact_name": "Elon Musk",
                            "salutation": "Mr",
                            "phone_number": "111-111-1111",
                            "fax": "122-111-1111",
                            "email": "elon@musk.com",
                            "website": "https://elonmusk.com",
                            "notes": "Address notes or delivery instructions.",
                            "row_version": "1-12345"
                        },
                        "all_day_event": false,
                        "private": true,
                        "group_event": true,
                        "event_sub_type": "debrief",
                        "group_event_type": "Proposed",
                        "child": false,
                        "archived": false,
                        "deleted": false,
                        "show_as": "busy",
                        "done": false,
                        "start_datetime": "2021-05-01T12:00:00.000Z",
                        "end_datetime": "2021-05-01T12:30:00.000Z",
                        "duration_minutes": 30,
                        "activity_date": "2021-05-01",
                        "end_date": "2021-05-01",
                        "recurrent": false,
                        "reminder_datetime": "2021-05-01T17:00:00.000Z",
                        "reminder_set": false,
                        "video_conference_url": "https://us02web.zoom.us/j/88120759396",
                        "video_conference_id": "zoom:88120759396",
                        "custom_fields": [
                            {
                                "id": "2389328923893298",
                                "name": "employee_level",
                                "description": "Employee Level",
                                "value": "Uses Salesforce and Marketo"
                            }
                        ],
                        "attendees": [
                            {
                                "id": "12345",
                                "name": "Elon Musk",
                                "first_name": "Elon",
                                "middle_name": "D.",
                                "last_name": "Musk",
                                "prefix": "Mr.",
                                "suffix": "PhD",
                                "email_address": "elon@musk.com",
                                "is_organizer": true,
                                "status": "accepted",
                                "user_id": "12345",
                                "contact_id": "12345",
                                "updated_at": "2017-08-12T20:43:21.291Z",
                                "created_at": "2017-08-12T20:43:21.291Z"
                            }
                        ],
                        "custom_mappings": {},
                        "updated_by": "12345",
                        "created_by": "12345",
                        "updated_at": "2020-09-30T07:43:32.000Z",
                        "created_at": "2020-09-30T07:43:32.000Z"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126421,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteactivityapideck",
        "executor_version": "v1",
        "executor_display_name": "Delete activity",
        "executor_description": "Delete activity",
        "executor_category": "Activities",
        "executor_category_group": "Activities",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://unify.apideck.com/crm/activities/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": "Include raw response. Mostly used for debugging purposes",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711099207011,
        "lastModifiedTime": 1711099207011,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Activity deleted",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "activities",
                    "operation": "delete",
                    "data": {
                        "id": "12345"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126378,
        "executor_type": "THIRDPARTY",
        "executor_name": "getContacts",
        "executor_version": "v1",
        "executor_display_name": "Get contact",
        "executor_description": "Get contact",
        "executor_category": "Contacts",
        "executor_category_group": "Contacts",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://unify.apideck.com/crm/contacts/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": " Include raw response. Mostly used for debugging purposes",
                "req": false
            },
            {
                "key": "fields",
                "value": "",
                "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation.  Example: fields=name,email,addresses.city  In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711091567211,
        "lastModifiedTime": 1711091567211,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Contact",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "companies",
                    "operation": "one",
                    "data": {
                        "id": "12345",
                        "name": "Elon Musk",
                        "owner_id": "54321",
                        "type": "personal",
                        "company_id": "23456",
                        "company_name": "23456",
                        "lead_id": "34567",
                        "first_name": "Elon",
                        "middle_name": "D.",
                        "last_name": "Musk",
                        "prefix": "Mr.",
                        "suffix": "PhD",
                        "title": "CEO",
                        "department": "Engineering",
                        "language": "EN",
                        "gender": "female",
                        "birthday": "2000-08-12",
                        "image": "https://unavatar.io/elon-musk",
                        "photo_url": "https://unavatar.io/elon-musk",
                        "lead_source": "Cold Call",
                        "fax": "+12129876543",
                        "description": "Internal champion",
                        "current_balance": 10.5,
                        "status": "open",
                        "active": true,
                        "websites": [
                            {
                                "id": "12345",
                                "url": "http://example.com",
                                "type": "primary"
                            }
                        ],
                        "addresses": [
                            {
                                "id": "123",
                                "type": "primary",
                                "string": "25 Spring Street, Blackburn, VIC 3130",
                                "name": "HQ US",
                                "line1": "Main street",
                                "line2": "apt #",
                                "line3": "Suite #",
                                "line4": "delivery instructions",
                                "street_number": "25",
                                "city": "San Francisco",
                                "state": "CA",
                                "postal_code": "94104",
                                "country": "US",
                                "latitude": "40.759211",
                                "longitude": "-73.984638",
                                "county": "Santa Clara",
                                "contact_name": "Elon Musk",
                                "salutation": "Mr",
                                "phone_number": "111-111-1111",
                                "fax": "122-111-1111",
                                "email": "elon@musk.com",
                                "website": "https://elonmusk.com",
                                "notes": "Address notes or delivery instructions.",
                                "row_version": "1-12345"
                            }
                        ],
                        "social_links": [
                            {
                                "id": "12345",
                                "url": "https://www.twitter.com/apideck",
                                "type": "twitter"
                            }
                        ],
                        "phone_numbers": [
                            {
                                "id": "12345",
                                "country_code": "1",
                                "area_code": "323",
                                "number": "111-111-1111",
                                "extension": "105",
                                "type": "primary"
                            }
                        ],
                        "emails": [
                            {
                                "id": "123",
                                "email": "elon@musk.com",
                                "type": "primary"
                            }
                        ],
                        "email_domain": "gmail.com",
                        "custom_fields": [
                            {
                                "id": "2389328923893298",
                                "name": "employee_level",
                                "description": "Employee Level",
                                "value": "Uses Salesforce and Marketo"
                            }
                        ],
                        "tags": [
                            "New"
                        ],
                        "first_call_at": "2020-09-30T07:43:32.000Z",
                        "first_email_at": "2020-09-30T07:43:32.000Z",
                        "last_activity_at": "2020-09-30T07:43:32.000Z",
                        "custom_mappings": {},
                        "updated_at": "2017-08-12T20:43:21.291Z",
                        "created_at": "2017-08-12T20:43:21.291Z"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126374,
        "executor_type": "THIRDPARTY",
        "executor_name": "postcreateContact",
        "executor_version": "v1",
        "executor_display_name": "Create contact",
        "executor_description": "Create contact",
        "executor_category": "Contacts",
        "executor_category_group": "Contacts",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://unify.apideck.com/crm/contacts",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": "Include raw response. Mostly used for debugging purposes",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "Elon Musk",
                "owner_id": "54321",
                "type": "personal",
                "company_id": "23456",
                "company_name": "23456",
                "lead_id": "34567",
                "first_name": "Elon",
                "middle_name": "D.",
                "last_name": "Musk",
                "prefix": "Mr.",
                "suffix": "PhD",
                "title": "CEO",
                "department": "Engineering",
                "language": "EN",
                "gender": "female",
                "birthday": "2000-08-12",
                "image": "https://unavatar.io/elon-musk",
                "photo_url": "https://unavatar.io/elon-musk",
                "lead_source": "Cold Call",
                "fax": "+12129876543",
                "description": "Internal champion",
                "current_balance": 10.5,
                "status": "open",
                "active": true,
                "websites": [
                    {
                        "id": "12345",
                        "url": "http://example.com",
                        "type": "primary"
                    }
                ],
                "addresses": [
                    {
                        "id": "123",
                        "type": "primary",
                        "string": "25 Spring Street, Blackburn, VIC 3130",
                        "name": "HQ US",
                        "line1": "Main street",
                        "line2": "apt #",
                        "line3": "Suite #",
                        "line4": "delivery instructions",
                        "street_number": "25",
                        "city": "San Francisco",
                        "state": "CA",
                        "postal_code": "94104",
                        "country": "US",
                        "latitude": "40.759211",
                        "longitude": "-73.984638",
                        "county": "Santa Clara",
                        "contact_name": "Elon Musk",
                        "salutation": "Mr",
                        "phone_number": "111-111-1111",
                        "fax": "122-111-1111",
                        "email": "elon@musk.com",
                        "website": "https://elonmusk.com",
                        "notes": "Address notes or delivery instructions.",
                        "row_version": "1-12345"
                    }
                ],
                "social_links": [
                    {
                        "id": "12345",
                        "url": "https://www.twitter.com/apideck",
                        "type": "twitter"
                    }
                ],
                "phone_numbers": [
                    {
                        "id": "12345",
                        "country_code": "1",
                        "area_code": "323",
                        "number": "111-111-1111",
                        "extension": "105",
                        "type": "primary"
                    }
                ],
                "emails": [
                    {
                        "id": "123",
                        "email": "elon@musk.com",
                        "type": "primary"
                    }
                ],
                "email_domain": "gmail.com",
                "custom_fields": [
                    {
                        "id": "2389328923893298",
                        "name": "employee_level",
                        "description": "Employee Level",
                        "value": "Uses Salesforce and Marketo"
                    }
                ],
                "tags": [
                    "New"
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711091330669,
        "lastModifiedTime": 1711091330669,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Contact created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "contacts",
                    "operation": "add",
                    "data": {
                        "id": "12345"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126371,
        "executor_type": "THIRDPARTY",
        "executor_name": "getListContacts",
        "executor_version": "v1",
        "executor_display_name": "List contacts",
        "executor_description": "List contacts",
        "executor_category": "Contacts",
        "executor_category_group": "Contacts",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://unify.apideck.com/crm/contacts",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": "Include raw response. Mostly used for debugging purposes",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "Number of results to return. Minimum 1, Maximum 200, Default 20",
                "req": false
            },
            {
                "key": "filter",
                "value": "",
                "description": "Apply filters",
                "req": false
            },
            {
                "key": "sort",
                "value": "",
                "description": "Apply sorting",
                "req": false
            },
            {
                "key": "pass_through",
                "value": "",
                "description": "Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads",
                "req": false
            },
            {
                "key": "fields",
                "value": "",
                "description": "The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation.  Example: fields=name,email,addresses.city  In the example above, the response will only include the fields \"name\", \"email\" and \"addresses.city\". If any other fields are available, they will be excluded.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711091085922,
        "lastModifiedTime": 1711091085922,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Contacts",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "contacts",
                    "operation": "all",
                    "data": [
                        {
                            "id": "12345",
                            "name": "Elon Musk",
                            "owner_id": "54321",
                            "type": "personal",
                            "company_id": "23456",
                            "company_name": "23456",
                            "lead_id": "34567",
                            "first_name": "Elon",
                            "middle_name": "D.",
                            "last_name": "Musk",
                            "prefix": "Mr.",
                            "suffix": "PhD",
                            "title": "CEO",
                            "department": "Engineering",
                            "language": "EN",
                            "gender": "female",
                            "birthday": "2000-08-12",
                            "image": "https://unavatar.io/elon-musk",
                            "photo_url": "https://unavatar.io/elon-musk",
                            "lead_source": "Cold Call",
                            "fax": "+12129876543",
                            "description": "Internal champion",
                            "current_balance": 10.5,
                            "status": "open",
                            "active": true,
                            "websites": [
                                {
                                    "id": "12345",
                                    "url": "http://example.com",
                                    "type": "primary"
                                }
                            ],
                            "addresses": [
                                {
                                    "id": "123",
                                    "type": "primary",
                                    "string": "25 Spring Street, Blackburn, VIC 3130",
                                    "name": "HQ US",
                                    "line1": "Main street",
                                    "line2": "apt #",
                                    "line3": "Suite #",
                                    "line4": "delivery instructions",
                                    "street_number": "25",
                                    "city": "San Francisco",
                                    "state": "CA",
                                    "postal_code": "94104",
                                    "country": "US",
                                    "latitude": "40.759211",
                                    "longitude": "-73.984638",
                                    "county": "Santa Clara",
                                    "contact_name": "Elon Musk",
                                    "salutation": "Mr",
                                    "phone_number": "111-111-1111",
                                    "fax": "122-111-1111",
                                    "email": "elon@musk.com",
                                    "website": "https://elonmusk.com",
                                    "notes": "Address notes or delivery instructions.",
                                    "row_version": "1-12345"
                                }
                            ],
                            "social_links": [
                                {
                                    "id": "12345",
                                    "url": "https://www.twitter.com/apideck",
                                    "type": "twitter"
                                }
                            ],
                            "phone_numbers": [
                                {
                                    "id": "12345",
                                    "country_code": "1",
                                    "area_code": "323",
                                    "number": "111-111-1111",
                                    "extension": "105",
                                    "type": "primary"
                                }
                            ],
                            "emails": [
                                {
                                    "id": "123",
                                    "email": "elon@musk.com",
                                    "type": "primary"
                                }
                            ],
                            "email_domain": "gmail.com",
                            "custom_fields": [
                                {
                                    "id": "2389328923893298",
                                    "name": "employee_level",
                                    "description": "Employee Level",
                                    "value": "Uses Salesforce and Marketo"
                                }
                            ],
                            "tags": [
                                "New"
                            ],
                            "first_call_at": "2020-09-30T07:43:32.000Z",
                            "first_email_at": "2020-09-30T07:43:32.000Z",
                            "last_activity_at": "2020-09-30T07:43:32.000Z",
                            "custom_mappings": {},
                            "updated_at": "2017-08-12T20:43:21.291Z",
                            "created_at": "2017-08-12T20:43:21.291Z"
                        }
                    ],
                    "meta": {
                        "items_on_page": 50,
                        "cursors": {
                            "previous": "em9oby1jcm06OnBhZ2U6OjE=",
                            "current": "em9oby1jcm06OnBhZ2U6OjI=",
                            "next": "em9oby1jcm06OnBhZ2U6OjM="
                        }
                    },
                    "links": {
                        "previous": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D",
                        "current": "https://unify.apideck.com/crm/companies",
                        "next": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126383,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteContactapideck",
        "executor_version": "v1",
        "executor_display_name": "Delete contact",
        "executor_description": "Delete contact",
        "executor_category": "Contacts",
        "executor_category_group": "Contacts",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://unify.apideck.com/crm/contacts/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": " Include raw response. Mostly used for debugging purposes",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711091936078,
        "lastModifiedTime": 1711091936078,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Contact deleted",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "contacts",
                    "operation": "delete",
                    "data": {
                        "id": "12345"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 126381,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateContacts",
        "executor_version": "v1",
        "executor_display_name": "Update contact",
        "executor_description": "Update contact",
        "executor_category": "Contacts",
        "executor_category_group": "Contacts",
        "service_provider": "apideck",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://unify.apideck.com/crm/contacts/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "ID of the record you are acting upon."
            }
        ],
        "queryParams": [
            {
                "key": "raw",
                "value": "",
                "description": " Include raw response. Mostly used for debugging purposes",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "x-apideck-consumer-id",
                "value": "",
                "description": "ID of the consumer which you want to get or push data from",
                "req": true
            },
            {
                "key": "x-apideck-app-id",
                "value": "",
                "description": "The ID of your Unify application",
                "req": true
            },
            {
                "key": "x-apideck-service-id",
                "value": "",
                "description": "Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "Elon Musk",
                "owner_id": "54321",
                "type": "personal",
                "company_id": "23456",
                "company_name": "23456",
                "lead_id": "34567",
                "first_name": "Elon",
                "middle_name": "D.",
                "last_name": "Musk",
                "prefix": "Mr.",
                "suffix": "PhD",
                "title": "CEO",
                "department": "Engineering",
                "language": "EN",
                "gender": "female",
                "birthday": "2000-08-12",
                "image": "https://unavatar.io/elon-musk",
                "photo_url": "https://unavatar.io/elon-musk",
                "lead_source": "Cold Call",
                "fax": "+12129876543",
                "description": "Internal champion",
                "current_balance": 10.5,
                "status": "open",
                "active": true,
                "websites": [
                    {
                        "id": "12345",
                        "url": "http://example.com",
                        "type": "primary"
                    }
                ],
                "addresses": [
                    {
                        "id": "123",
                        "type": "primary",
                        "string": "25 Spring Street, Blackburn, VIC 3130",
                        "name": "HQ US",
                        "line1": "Main street",
                        "line2": "apt #",
                        "line3": "Suite #",
                        "line4": "delivery instructions",
                        "street_number": "25",
                        "city": "San Francisco",
                        "state": "CA",
                        "postal_code": "94104",
                        "country": "US",
                        "latitude": "40.759211",
                        "longitude": "-73.984638",
                        "county": "Santa Clara",
                        "contact_name": "Elon Musk",
                        "salutation": "Mr",
                        "phone_number": "111-111-1111",
                        "fax": "122-111-1111",
                        "email": "elon@musk.com",
                        "website": "https://elonmusk.com",
                        "notes": "Address notes or delivery instructions.",
                        "row_version": "1-12345"
                    }
                ],
                "social_links": [
                    {
                        "id": "12345",
                        "url": "https://www.twitter.com/apideck",
                        "type": "twitter"
                    }
                ],
                "phone_numbers": [
                    {
                        "id": "12345",
                        "country_code": "1",
                        "area_code": "323",
                        "number": "111-111-1111",
                        "extension": "105",
                        "type": "primary"
                    }
                ],
                "emails": [
                    {
                        "id": "123",
                        "email": "elon@musk.com",
                        "type": "primary"
                    }
                ],
                "email_domain": "gmail.com",
                "custom_fields": [
                    {
                        "id": "2389328923893298",
                        "name": "employee_level",
                        "description": "Employee Level",
                        "value": "Uses Salesforce and Marketo"
                    }
                ],
                "tags": [
                    "New"
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1711091808946,
        "lastModifiedTime": 1711091808946,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 400,
                    "error": "Bad Request",
                    "type_name": "RequestValidationError",
                    "message": "Invalid Params",
                    "detail": "Missing property foobar",
                    "ref": "https://developers.apideck.com/errors#requestvalidationerror"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 401,
                    "error": "Unauthorized",
                    "type_name": "UnauthorizedError",
                    "message": "Unauthorized Request",
                    "detail": "Missing authentication",
                    "ref": "https://developers.apideck.com/errors#unauthorizederror"
                }
            },
            {
                "statusCode": 402,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Payment Required",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 402,
                    "error": "Payment Required",
                    "type_name": "RequestLimitError",
                    "message": "Request Limit Reached",
                    "detail": "You have reached your limit of 2000",
                    "ref": "https://developers.apideck.com/errors#requestlimiterror"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The specified resource was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 404,
                    "error": "Not Found",
                    "type_name": "EntityNotFoundError",
                    "message": "Unknown Widget",
                    "detail": "Could not find widget with id: '123'",
                    "ref": "https://developers.apideck.com/errors#entitynotfounderror"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unprocessable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 422,
                    "error": "Unprocessable Entity",
                    "type_name": "InvalidStateError",
                    "message": "Invalid State",
                    "detail": "Unprocessable request, please verify your request headers and body.",
                    "ref": "https://developers.apideck.com/errors#invalidstateerror"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Contact updated",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "status_code": 200,
                    "status": "OK",
                    "service": "zoho-crm",
                    "resource": "contacts",
                    "operation": "update",
                    "data": {
                        "id": "12345"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    }
]