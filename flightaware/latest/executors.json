[
    {
        "id": 93256,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAnImageOfFlightsTrackOnaMap",
        "executor_version": "v4",
        "executor_display_name": "Get an image of a flight's track on a map",
        "executor_description": "Returns a flight's track as a base64-encoded image. Image can contain a variety of additional data layers beyond just the track. Data from up to 10 days ago can be obtained. If looking for older data, please use the corresponding historical endpoint.",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/flights/{id}/map",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "The fa_flight_id to fetch. If looking for data from more than 10 days ago, please use the corresponding historical endpoint.  Example: UAL1234-1234567890-airline-0123"
            }
        ],
        "queryParams": [
            {
                "key": "height",
                "value": "",
                "description": "Default: 480 Min 1\u2503Max 1500 Height of requested image (pixels)",
                "req": false
            },
            {
                "key": "width",
                "value": "",
                "description": "Default: 640 Min 1\u2503Max 1500 Width of requested image (pixels)",
                "req": false
            },
            {
                "key": "layer_on",
                "value": "",
                "description": "Allowed: US Cities \u2503 european country boundaries \u2503 asia country boundaries \u2503 major airports \u2503 country boundaries \u2503 US state boundaries \u2503 water \u2503 US major roads \u2503 radar \u2503 track \u2503 flights \u2503 airports List of map layers to enable",
                "req": false
            },
            {
                "key": "layer_off",
                "value": "",
                "description": "Allowed: US Cities \u2503 european country boundaries \u2503 asia country boundaries \u2503 major airports \u2503 country boundaries \u2503 US state boundaries \u2503 water \u2503 US major roads \u2503 radar \u2503 track \u2503 flights \u2503 airports List of map layers to disable",
                "req": false
            },
            {
                "key": "show_data_block",
                "value": "",
                "description": "Whether a textual caption containing the ident, type, heading, altitude, origin, and destination should be displayed by the flight's position.",
                "req": false
            },
            {
                "key": "airports_expand_view",
                "value": "",
                "description": "Whether to force zoom area to ensure origin/destination airports are visible. Enabling this flag forcefully enables the show_airports flag as well.",
                "req": false
            },
            {
                "key": "show_airports",
                "value": "",
                "description": "Whether to show the origin/destination airports for the flight as labeled points on the map.",
                "req": false
            },
            {
                "key": "bounding_box",
                "value": "",
                "description": "Manually specify the zoom area of the map using custom bounds. Should be a list of 4 coordinates representing the top, right, bottom, and left sides of the area (in that order).",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684235745374,
        "lastModifiedTime": 1684235745374,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "map": ""
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Incorrect parameter (id). Id may be missing or may not be fa_flight_id format. Bounding box corners may be incorrectly defined.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93266,
        "executor_type": "THIRDPARTY",
        "executor_name": "getFlightsTrack",
        "executor_version": "v4",
        "executor_display_name": "Get flight's track",
        "executor_description": "Returns the track for a flight as an array of positions. Data from up to 10 days ago can be obtained. If looking for older data, please use the corresponding historical endpoint.",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/flights/{id}/track",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "The fa_flight_id to fetch. If looking for data from more than 10 days ago, please use the corresponding historical endpoint.  Example: UAL1234-1234567890-airline-0123"
            }
        ],
        "queryParams": [
            {
                "key": "include_estimated_positions",
                "value": "",
                "description": "Whether to include estimated positions in the flight track",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684237602281,
        "lastModifiedTime": 1684237602281,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "positions": [
                        {
                            "fa_flight_id": "string",
                            "altitude": 0,
                            "altitude_change": "C",
                            "groundspeed": 0,
                            "heading": 0,
                            "latitude": 0,
                            "longitude": 0,
                            "timestamp": "2021-12-31T19:59:59Z",
                            "update_type": "P"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Incorrect parameter(s). Id may be missing or may not be fa_flight_id format. Aircraft may be blocked.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93269,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTheCanonicalIdentofaFlight",
        "executor_version": "v4",
        "executor_display_name": "Get the canonical ident of a flight",
        "executor_description": "When the ident parameter is a code that could map to multiple other codes, this endpoint returns an array of information about all the possible codes. An optional ident type and country code can be provided to refine ambiguous idents to a single result. The ident type should either be designator or registration to describe the ident being passed in. The country code should represent a country the operator of the flight operates within.",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/flights/{ident}/canonical",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "ident",
                "value": "",
                "description": "The flight designator or aircraft registration  Example: B6109"
            }
        ],
        "queryParams": [
            {
                "key": "ident_type",
                "value": "",
                "description": "Type of ident provided in the ident parameter",
                "req": false
            },
            {
                "key": "country_code",
                "value": "",
                "description": "An ISO 3166-1 alpha-2 country code.  Example: US",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684238292540,
        "lastModifiedTime": 1684238292540,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "idents": [
                        {
                            "ident": "string",
                            "ident_type": "designator"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Incorrect parameter(s). ident, ident_type, or country_code may be invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93268,
        "executor_type": "THIRDPARTY",
        "executor_name": "getInformationForAFlight",
        "executor_version": "v4",
        "executor_display_name": "Get information for a flight",
        "executor_description": "Returns the flight info status summary for a registration, ident, or fa_flight_id. If a fa_flight_id is specified then a maximum of 1 flight is returned, unless the flight has been diverted in which case both the original flight and any diversions will be returned with a duplicate fa_flight_id. If a registration or ident is specified, approximately 14 days of recent and scheduled flight information is returned, ordered by scheduled_out (or scheduled_off if scheduled_out is missing) descending. Alternately, specify a start and end parameter to find your flight(s) of interest, including up to 10 days of flight history.",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/flights/{ident}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "ident",
                "value": "",
                "description": "The ident, registration, or fa_flight_id to fetch  Example: UAL4 \u2503 N123HQ \u2503 UAL1234-1234567890-airline-0123"
            }
        ],
        "queryParams": [
            {
                "key": "ident_type",
                "value": "",
                "description": "Type of ident provided in the ident parameter. By default, the passed ident is interpreted as a registration if possible. This parameter can force the ident to be interpreted as a designator instead.",
                "req": false
            },
            {
                "key": "start",
                "value": "",
                "description": "The starting date range for flight results, comparing against flights' scheduled_out field (or scheduled_off if scheduled_out is missing). The format is ISO8601 date or datetime, and the bound is inclusive. Specified start date must be no further than 10 days in the past and 2 days in the future. If not specified, will default to departures starting approximately 11 days in the past. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The ending date range for flight results, comparing against flights' scheduled_out field (or scheduled_off if scheduled_out is missing). The format is ISO8601 date or datetime, and the bound is exclusive. Specified end date must be no further than 10 days in the past and 2 days in the future. If not specified, will default to departures starting approximately 2 days in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "max_pages",
                "value": "",
                "description": "Default: 1 Min 1 Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684238025731,
        "lastModifiedTime": 1684238025731,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "flights": [
                        {
                            "ident": "string",
                            "ident_icao": "string",
                            "ident_iata": "string",
                            "fa_flight_id": "string",
                            "operator": "string",
                            "operator_icao": "string",
                            "operator_iata": "string",
                            "flight_number": "string",
                            "registration": "string",
                            "atc_ident": "string",
                            "inbound_fa_flight_id": "string",
                            "codeshares": [
                                "string"
                            ],
                            "codeshares_iata": [
                                "string"
                            ],
                            "blocked": false,
                            "diverted": false,
                            "cancelled": false,
                            "position_only": false,
                            "origin": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "destination": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "departure_delay": 0,
                            "arrival_delay": 0,
                            "filed_ete": 0,
                            "progress_percent": 0,
                            "status": "string",
                            "aircraft_type": "string",
                            "route_distance": 0,
                            "filed_airspeed": 0,
                            "filed_altitude": 0,
                            "route": "string",
                            "baggage_claim": "string",
                            "seats_cabin_business": 0,
                            "seats_cabin_coach": 0,
                            "seats_cabin_first": 0,
                            "gate_origin": "string",
                            "gate_destination": "string",
                            "terminal_origin": "string",
                            "terminal_destination": "string",
                            "type": "General_Aviation",
                            "scheduled_out": "2021-12-31T19:59:59Z",
                            "estimated_out": "2021-12-31T19:59:59Z",
                            "actual_out": "2021-12-31T19:59:59Z",
                            "scheduled_off": "2021-12-31T19:59:59Z",
                            "estimated_off": "2021-12-31T19:59:59Z",
                            "actual_off": "2021-12-31T19:59:59Z",
                            "scheduled_on": "2021-12-31T19:59:59Z",
                            "estimated_on": "2021-12-31T19:59:59Z",
                            "actual_on": "2021-12-31T19:59:59Z",
                            "scheduled_in": "2021-12-31T19:59:59Z",
                            "estimated_in": "2021-12-31T19:59:59Z",
                            "actual_in": "2021-12-31T19:59:59Z",
                            "foresight_predictions_available": true
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Incorrect parameter(s). Ident may be missing or not in fa_flight_id format or pages may be < 1.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93264,
        "executor_type": "THIRDPARTY",
        "executor_name": "getFlightsFiledRoute",
        "executor_version": "v4",
        "executor_display_name": "Get flight's filed route",
        "executor_description": "Returns information about a flight's filed route including coordinates, names, and types of fixes along the route. Not all flight routes can be successfully decoded by this endpoint, particularly if the flight is not entirely within the continental U.S. airspace, since this function only has access to navaids within that area. If data on a waypoint is missing then the type will be listed as \"UNKNOWN\". Data from up to 10 days ago can be obtained. If looking for older data, please use the corresponding historical endpoint.",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/flights/{id}/route",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "The fa_flight_id to fetch. If looking for data from more than 10 days ago, please use the corresponding historical endpoint."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684237497704,
        "lastModifiedTime": 1684237497704,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "route_distance": "string",
                    "fixes": [
                        {
                            "name": "string",
                            "latitude": 0,
                            "longitude": 0,
                            "distance_from_origin": 0,
                            "distance_this_leg": 0,
                            "distance_to_destination": 0,
                            "outbound_course": 0,
                            "type": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Incorrect parameter (id). Id may be missing or may not be fa_flight_id format.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "No route is available for this flight.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93261,
        "executor_type": "THIRDPARTY",
        "executor_name": "getFlightsCurrentPosition",
        "executor_version": "v4",
        "executor_display_name": "Get flight's current position",
        "executor_description": "Returns the latest position for a flight",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/flights/{id}/position",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "The fa_flight_id to fetch. If looking for data from more than 10 days ago, please use the corresponding historical endpoint.  Example: UAL1234-1234567890-airline-0123"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684237379078,
        "lastModifiedTime": 1684237379078,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "ident": "string",
                    "ident_icao": "string",
                    "ident_iata": "string",
                    "fa_flight_id": "string",
                    "origin": {
                        "code": "string",
                        "code_icao": "string",
                        "code_iata": "string",
                        "code_lid": "string",
                        "timezone": "America/New_York",
                        "name": "LaGuardia",
                        "city": "New York",
                        "airport_info_url": ""
                    },
                    "destination": {
                        "code": "string",
                        "code_icao": "string",
                        "code_iata": "string",
                        "code_lid": "string",
                        "timezone": "America/New_York",
                        "name": "LaGuardia",
                        "city": "New York",
                        "airport_info_url": ""
                    },
                    "waypoints": [
                        0
                    ],
                    "first_position_time": "2021-12-31T19:59:59Z",
                    "last_position": {
                        "fa_flight_id": "string",
                        "altitude": 0,
                        "altitude_change": "C",
                        "groundspeed": 0,
                        "heading": 0,
                        "latitude": 0,
                        "longitude": 0,
                        "timestamp": "2021-12-31T19:59:59Z",
                        "update_type": "P"
                    },
                    "bounding_box": [
                        0
                    ],
                    "ident_prefix": "string",
                    "aircraft_type": "string",
                    "actual_off": "2021-12-31T19:59:59Z",
                    "actual_on": "2021-12-31T19:59:59Z",
                    "foresight_predictions_available": true,
                    "predicted_out": null,
                    "predicted_off": null,
                    "predicted_on": null,
                    "predicted_in": null,
                    "predicted_out_source": null,
                    "predicted_off_source": null,
                    "predicted_on_source": null,
                    "predicted_in_source": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Incorrect parameter (id). Id may be missing or may not be fa_flight_id format.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93276,
        "executor_type": "THIRDPARTY",
        "executor_name": "submitaFlightIntent",
        "executor_version": "v4",
        "executor_display_name": "Submit a Flight Intent",
        "executor_description": "This operation informs FlightAware of an upcoming (or recently departed) flight. This information is used solely by FlightAware for improving the accuracy of flight tracking. This method does not transmit to any ANSP/ATC facility for flight separation or operational services. Access to this endpoint requires special account authorization. The FlightAware account must also be subscribed to FlightAware Global and the specified registration or ident must be on the Global account.",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/flights/{ident}/intents",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "ident",
                "value": "",
                "description": "The ident or registration of the Flight Intent  Example: RPA4854 \u2503 N123HQ"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "aircraft_type": "C162",
                "origin": "KSGR",
                "destination": "50R",
                "intended_off": "2021-10-16T21:30:00Z",
                "intended_on": "2021-10-16T22:50:00Z",
                "altitude": 3500,
                "airspeed": 86,
                "route": "MAPGP VICUC"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684239580245,
        "lastModifiedTime": 1684239580245,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Incorrect parameter(s). Ident may be missing or pages may be < 1. Body may be incomplete. User may lack permissions to post flight intent for this ident. Arrival/departure times, duration, or aircraft type may be invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93795,
        "executor_type": "THIRDPARTY",
        "executor_name": "searchForFlightsUsingAdvancedSyntax",
        "executor_version": "v4",
        "executor_display_name": "Search for flights using advanced syntax",
        "executor_description": "Returns currently or recently airborne flights based on geospatial search parameters.  Query parameters include a latitude/longitude box, aircraft ident with wildcards, type with wildcards, prefix, origin airport, destination airport, origin or destination airport, groundspeed, and altitude. It takes search terms in a single string comprising of {operator key value} elements and returns an array of flight structures. Each search term must be enclosed in curly braces. Multiple search terms can be combined in an implicit boolean \"and\" by separating the terms with at least one space. This function only searches flight data representing approximately the last 24 hours. Codeshares and alternate idents are NOT searched when matching against the ident key.<div class=\"m-markdown\"> <p>The supported operators include (note that operators take different numbers of arguments):</p> <ul> <li>false - results must have the specified boolean key set to a value of false. Example: {false arrived}</li> <li>true - results must have the specified boolean key set to a value of true. Example: {true lifeguard}</li> <li>null - results must have the specified key set to a null value. Example: {null waypoints}</li> <li>notnull - results must have the specified key not set to a null value. Example: {notnull aircraftType}</li> <li>= - results must have a key that exactly matches the specified value. Example: {= aircraftType C172}</li> <li>!= - results must have a key that must not match the specified value. Example: {!= prefix H}</li> <li>&lt; - results must have a key that is lexicographically less-than a specified value. Example: {&lt; arrivalTime 1276811040}</li> <li>&gt; - results must have a key that is lexicographically greater-than a specified value. Example: {&gt; speed 500}</li> <li>&lt;= - results must have a key that is lexicographically less-than-or-equal-to a specified value. Example: {&lt;= alt 8000}</li> <li>&gt;= - results must have a key that is lexicographically greater-than-or-equal-to a specified value.</li> <li>match - results must have a key that matches against a case-insensitive wildcard pattern. Example: {match ident AAL*}</li> <li>notmatch - results must have a key that does not match against a case-insensitive wildcard pattern. Example: {notmatch aircraftType B76*}</li> <li>range - results must have a key that is numerically between the two specified values. Example: {range alt 8000 20000}</li> <li>in - results must have a key that exactly matches one of the specified values. Example: {in orig {KLAX KBUR KSNA KLGB}}</li> <li>orig_or_dest - results must have either the origin or destination key exactly match one of the specified values. Example: {orig_or_dest {KLAX KBUR KSNA KLGB}}</li> <li>airline - results will only include airline flight if the argument is 1, or will only include GA flights if the argument is 0. Example: {airline 1}</li> <li>aircraftType - results must have an aircraftType key that matches one of the specified case-insensitive wildcard patterns. Example: {aircraftType {B76* B77*}}</li> <li>ident - results must have an ident key that matches one of the specified case-insensitive wildcard patterns. Example: {ident {N123* N456* AAL* UAL*}}</li> <li>ident_or_reg - results must have an ident key or was known to be operated by an aircraft registration that matches one of the specified case-insensitive wildcard patterns. Example: {ident_or_reg {N123* N456* AAL* UAL*}}</li> </ul> <p>The supported key names include (note that not all of these key names are returned in the result structure, and some have slightly different names):</p> <ul> <li>actualDepartureTime - Actual time of departure, or null if not departed yet. UNIX epoch timestamp seconds since 1970</li> <li>aircraftType - aircraft type ID (for example: B763)</li> <li>alt - altitude at last reported position (hundreds of feet or Flight Level)</li> <li>altChange - altitude change indication (for example: \"C\" if climbing, \"D\" if descending, and empty if it is level)</li> <li>arrivalTime - Actual time of arrival, or null if not arrived yet. UNIX epoch timestamp seconds since 1970</li> <li>arrived - true if the flight has arrived at its destination.</li> <li>cancelled - true if the flight has been cancelled. The meaning of cancellation is that the flight is no longer being tracked by FlightAware. There are a number of reasons a flight may be cancelled including cancellation by the airline, but that will not always be the case.</li> <li>cdt - Controlled Departure Time, set if there is a ground hold on the flight. UNIX epoch timestamp seconds since 1970</li> <li>clock - Time of last received position. UNIX epoch timestamp seconds since 1970</li> <li>cta - Controlled Time of Arrival, set if there is a ground hold on the flight. UNIX epoch timestamp seconds since 1970</li> <li>dest - ICAO airport code of destination (for example: KLAX)</li> <li>edt - Estimated Departure Time. Epoch timestamp seconds since 1970</li> <li>eta - Estimated Time of Arrival. Epoch timestamp seconds since 1970</li> <li>fdt - Field Departure Time. UNIX epoch timestamp seconds since 1970</li> <li>firstPositionTime - Time when first reported position was received, or 0 if no position has been received yet. Epoch timestamp seconds since 1970</li> <li>fixes - intersections and/or VORs along the route (for example: SLS AMERO ARTOM VODIR NOTOS ULAPA ACA NUXCO OLULA PERAS ALIPO UPN GDL KEDMA BRISA CUL PERTI CEN PPE ALTAR ASUTA JLI RONLD LAADY WYVIL OLDEE RAL PDZ ARNES BASET WELLZ CIVET)</li> <li>fp - unique identifier assigned by FlightAware for this flight, aka fa_flight_id.</li> <li>gs - ground speed at last reported position, in kts.</li> <li>heading - direction of travel at last reported position.</li> <li>hiLat - highest latitude travelled by flight.</li> <li>hiLon - highest longitude travelled by flight.</li> <li>ident - flight identifier or registration of aircraft.</li> <li>lastPositionTime - Time when last reported position was received, or 0 if no position has been received yet. Epoch timestamp seconds since 1970.</li> <li>lat - latitude of last reported position.</li> <li>lifeguard - true if a \"lifeguard\" rescue flight.</li> <li>lon - longitude of last reported position.</li> <li>lowLat - lowest latitude travelled by flight.</li> <li>lowLon - lowest longitude travelled by flight.</li> <li>ogta - Original Time of Arrival. UNIX epoch timestamp seconds since 1970</li> <li>ogtd - Original Time of Departure. UNIX epoch timestamp seconds since 1970</li> <li>orig - ICAO airport code of origin (for example: KIAH)</li> <li>physClass - physical class (for example: J is jet)</li> <li>prefix - A one or two character identifier prefix code (common values: G or GG Medevac, L Lifeguard, A Air Taxi, H Heavy, M Medium).</li> <li>speed - ground speed, in kts.</li> <li>status - Single letter code for current flight status, can be S Scheduled, F Filed, A Active, Z Completed, or X Cancelled.</li> <li>updateType - data source of last position (P=projected, O=oceanic, Z=radar, A=ADS-B, M=multilateration, D=datalink, X=surface and near surface (ADS-B and ASDE-X), S=space-based).</li> <li>waypoints - all of the intersections and VORs comprising the route</li> </ul> <!----></div>",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/flights/search/advanced",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "query",
                "value": "",
                "description": "Query to search for airborne or recently arrived flights. It should not exceed 1000 bytes in length. Search criteria is only applied to the most recent position for a flight. This function only searches flights within approximately the last 24 hours. The supported operators include (note that operators take different numbers of arguments):  false - results must have the specified boolean key set to a value of false. Example: {false arrived} true - results must have the specified boolean key set to a value of true. Example: {true lifeguard} null - results must have the specified key set to a null value. Example: {null waypoints} notnull - results must have the specified key not set to a null value. Example: {notnull aircraftType} = - results must have a key that exactly matches the specified value. Example: {= aircraftType C172} != - results must have a key that must not match the specified value. Example: {!= prefix H} < - results must have a key that is lexicographically less-than a specified value. Example: {< arrivalTime 1276811040} > - results must have a key that is lexicographically greater-than a specified value. Example: {> speed 500} <= - results must have a key that is lexicographically less-than-or-equal-to a specified value. Example: {<= alt 8000} >= - results must have a key that is lexicographically greater-than-or-equal-to a specified value. match - results must have a key that matches against a case-insensitive wildcard pattern. Example: {match ident AAL*} notmatch - results must have a key that does not match against a case-insensitive wildcard pattern. Example: {notmatch aircraftType B76*} range - results must have a key that is numerically between the two specified values. Example: {range alt 8000 20000} in - results must have a key that exactly matches one of the specified values. Example: {in orig {KLAX KBUR KSNA KLGB}} orig_or_dest - results must have either the origin or destination key exactly match one of the specified values. Example: {orig_or_dest {KLAX KBUR KSNA KLGB}} airline - results will only include airline flight if the argument is 1, or will only include GA flights if the argument is 0. Example: {airline 1} aircraftType - results must have an aircraftType key that matches one of the specified case-insensitive wildcard patterns. Example: {aircraftType {B76* B77*}} ident - results must have an ident key that matches one of the specified case-insensitive wildcard patterns. Example: {ident {N123* N456* AAL* UAL*}} ident_or_reg - results must have an ident key or was known to be operated by an aircraft registration that matches one of the specified case-insensitive wildcard patterns. Example: {ident_or_reg {N123* N456* AAL* UAL*}} The supported key names include (note that not all of these key names are returned in the result structure, and some have slightly different names):  actualDepartureTime - Actual time of departure, or null if not departed yet. UNIX epoch timestamp seconds since 1970 aircraftType - aircraft type ID (for example: B763) alt - altitude at last reported position (hundreds of feet or Flight Level) altChange - altitude change indication (for example: \"C\" if climbing, \"D\" if descending, and empty if it is level) arrivalTime - Actual time of arrival, or null if not arrived yet. UNIX epoch timestamp seconds since 1970 arrived - true if the flight has arrived at its destination. cancelled - true if the flight has been cancelled. The meaning of cancellation is that the flight is no longer being tracked by FlightAware. There are a number of reasons a flight may be cancelled including cancellation by the airline, but that will not always be the case. cdt - Controlled Departure Time, set if there is a ground hold on the flight. UNIX epoch timestamp seconds since 1970 clock - Time of last received position. UNIX epoch timestamp seconds since 1970 cta - Controlled Time of Arrival, set if there is a ground hold on the flight. UNIX epoch timestamp seconds since 1970 dest - ICAO airport code of destination (for example: KLAX) edt - Estimated Departure Time. Epoch timestamp seconds since 1970 eta - Estimated Time of Arrival. Epoch timestamp seconds since 1970 fdt - Field Departure Time. UNIX epoch timestamp seconds since 1970 firstPositionTime - Time when first reported position was received, or 0 if no position has been received yet. Epoch timestamp seconds since 1970 fixes - intersections and/or VORs along the route (for example: SLS AMERO ARTOM VODIR NOTOS ULAPA ACA NUXCO OLULA PERAS ALIPO UPN GDL KEDMA BRISA CUL PERTI CEN PPE ALTAR ASUTA JLI RONLD LAADY WYVIL OLDEE RAL PDZ ARNES BASET WELLZ CIVET) fp - unique identifier assigned by FlightAware for this flight, aka fa_flight_id. gs - ground speed at last reported position, in kts. heading - direction of travel at last reported position. hiLat - highest latitude travelled by flight. hiLon - highest longitude travelled by flight. ident - flight identifier or registration of aircraft. lastPositionTime - Time when last reported position was received, or 0 if no position has been received yet. Epoch timestamp seconds since 1970. lat - latitude of last reported position. lifeguard - true if a \"lifeguard\" rescue flight. lon - longitude of last reported position. lowLat - lowest latitude travelled by flight. lowLon - lowest longitude travelled by flight. ogta - Original Time of Arrival. UNIX epoch timestamp seconds since 1970 ogtd - Original Time of Departure. UNIX epoch timestamp seconds since 1970 orig - ICAO airport code of origin (for example: KIAH) physClass - physical class (for example: J is jet) prefix - A one or two character identifier prefix code (common values: G or GG Medevac, L Lifeguard, A Air Taxi, H Heavy, M Medium). speed - ground speed, in kts. status - Single letter code for current flight status, can be S Scheduled, F Filed, A Active, Z Completed, or X Cancelled. updateType - data source of last position (P=projected, O=oceanic, Z=radar, A=ADS-B, M=multilateration, D=datalink, X=surface and near surface (ADS-B and ASDE-X), S=space-based). waypoints - all of the intersections and VORs comprising the route Example: {orig_or_dest {KLAX KBUR KSNA KLGB}} {<= alt 8000} {match ident AAL*}",
                "req": false
            },
            {
                "key": "max_pages",
                "value": "",
                "description": "Min 1 Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684496766396,
        "lastModifiedTime": 1684496766396,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "flights": [
                        {
                            "ident": "string",
                            "ident_icao": "string",
                            "ident_iata": "string",
                            "fa_flight_id": "string",
                            "origin": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "destination": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "waypoints": [
                                0
                            ],
                            "first_position_time": "2021-12-31T19:59:59Z",
                            "last_position": {
                                "fa_flight_id": "string",
                                "altitude": 0,
                                "altitude_change": "C",
                                "groundspeed": 0,
                                "heading": 0,
                                "latitude": 0,
                                "longitude": 0,
                                "timestamp": "2021-12-31T19:59:59Z",
                                "update_type": "P"
                            },
                            "bounding_box": [
                                0
                            ],
                            "ident_prefix": "string",
                            "aircraft_type": "string",
                            "actual_off": "2021-12-31T19:59:59Z",
                            "actual_on": "2021-12-31T19:59:59Z",
                            "foresight_predictions_available": true,
                            "predicted_out": null,
                            "predicted_off": null,
                            "predicted_on": null,
                            "predicted_in": null,
                            "predicted_out_source": null,
                            "predicted_off_source": null,
                            "predicted_on_source": null,
                            "predicted_in_source": null
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter(s). Id may be missing or may not be fa_flight_id format.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93794,
        "executor_type": "THIRDPARTY",
        "executor_name": "searchForFlights",
        "executor_version": "v4",
        "executor_display_name": "Search for flights",
        "executor_description": "Search for airborne flights by matching against various parameters including geospatial data. Uses a simplified query syntax compared to /flights/search/advanced.",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/flights/search",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "query",
                "value": "",
                "description": "Query to search for flights with a simplified syntax (compared to /flights/search/advanced). It should not exceed 1000 bytes in length. Query syntax allows filtering by latitude/longitude box, aircraft ident with wildcards, type with wildcards, prefix, origin airport, destination airport, origin or destination airport, groundspeed, and altitude. It takes search terms in a single string comprising \"-key value\" pairs. Codeshares and alternate idents are NOT searched when using the -idents clause.  Keys include:  -prefix STRING -type STRING -idents STRING -identOrReg STRING -airline STRING -destination STRING -origin STRING -originOrDestination STRING -aboveAltitude INTEGER -belowAltitude INTEGER -aboveGroundspeed INTEGER -belowGroundspeed INTEGER -latlong \"MINLAT MINLON MAXLAT MAXLON\" -filter {ga|airline} Example: -latlong \"44.953469 -111.045360 40.962321 -104.046577\"",
                "req": false
            },
            {
                "key": "max_pages",
                "value": "",
                "description": "Min 1 Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684496273831,
        "lastModifiedTime": 1684496273831,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "flights": [
                        {
                            "ident": "string",
                            "ident_icao": "string",
                            "ident_iata": "string",
                            "fa_flight_id": "string",
                            "origin": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "destination": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "waypoints": [
                                0
                            ],
                            "first_position_time": "2021-12-31T19:59:59Z",
                            "last_position": {
                                "fa_flight_id": "string",
                                "altitude": 0,
                                "altitude_change": "C",
                                "groundspeed": 0,
                                "heading": 0,
                                "latitude": 0,
                                "longitude": 0,
                                "timestamp": "2021-12-31T19:59:59Z",
                                "update_type": "P"
                            },
                            "bounding_box": [
                                0
                            ],
                            "ident_prefix": "string",
                            "aircraft_type": "string",
                            "actual_off": "2021-12-31T19:59:59Z",
                            "actual_on": "2021-12-31T19:59:59Z",
                            "foresight_predictions_available": true,
                            "predicted_out": null,
                            "predicted_off": null,
                            "predicted_on": null,
                            "predicted_in": null,
                            "predicted_out_source": null,
                            "predicted_off_source": null,
                            "predicted_on_source": null,
                            "predicted_in_source": null
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter(s). Query may be empty.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93796,
        "executor_type": "THIRDPARTY",
        "executor_name": "getCountOfFlightsMatchingSearchParameters",
        "executor_version": "v4",
        "executor_display_name": "Get count of flights matching search parameters",
        "executor_description": "Full search query documentation is available at the /flights/search endpoint.",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/flights/search/count",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "query",
                "value": "",
                "description": "Query to search for flights with a simplified syntax (compared to /flights/search/advanced). It should not exceed 1000 bytes in length. Query syntax allows filtering by latitude/longitude box, aircraft ident with wildcards, type with wildcards, prefix, origin airport, destination airport, origin or destination airport, groundspeed, and altitude. It takes search terms in a single string comprising \"-key value\" pairs. Codeshares and alternate idents are NOT searched when using the -idents clause.  Keys include:  -prefix STRING -type STRING -idents STRING -identOrReg STRING -airline STRING -destination STRING -origin STRING -originOrDestination STRING -aboveAltitude INTEGER -belowAltitude INTEGER -aboveGroundspeed INTEGER -belowGroundspeed INTEGER -latlong \"MINLAT MINLON MAXLAT MAXLON\" Example: -latlong \"44.953469 -111.045360 40.962321 -104.046577\"",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684496926109,
        "lastModifiedTime": 1684496926109,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "count": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93798,
        "executor_type": "THIRDPARTY",
        "executor_name": "searchForFlightPositions",
        "executor_version": "v4",
        "executor_display_name": "Search for flight positions",
        "executor_description": "Returns flight positions based on geospatial search parameters. This allows you to locate flights that have ever flown within a specific a latitude/longitude box, groundspeed, and altitude. It takes search terms in a single string comprising of {operator key value} elements and returns an array of flight structures. Each search term must be enclosed in curly braces. Multiple search terms can be combined in an implicit boolean \"and\" by separating the terms with at least one space. This function only searches flight data representing approximately the last 24 hours.<div class=\"m-markdown\">  <p>The supported operators include (note that operators take different numbers of arguments):</p> <ul> <li>false - results must have the specified boolean key set to a value of false. Example: {false preferred}</li> <li>true - results must have the specified boolean key set to a value of true. Example: {true preferred}</li> <li>null - results must have the specified key set to a null value. Example: {null waypoints}</li> <li>notnull - results must have the specified key not set to a null value. Example: {notnull aircraftType}</li> <li>= - results must have a key that exactly matches the specified value. Example: {= fp C172}</li> <li>!= - results must have a key that must not match the specified value. Example: {!= prefix H}</li> <li>&lt; - results must have a key that is lexicographically less-than a specified value. Example: {&lt; arrivalTime 1276811040}</li> <li>&gt; - results must have a key that is lexicographically greater-than a specified value. Example: {&gt; speed 500}</li> <li>&lt;= - results must have a key that is lexicographically less-than-or-equal-to a specified value. Example: {&lt;= alt 8000}</li> <li>&gt;= - results must have a key that is lexicographically greater-than-or-equal-to a specified value.</li> <li>match - results must have a key that matches against a case-insensitive wildcard pattern. Example: {match ident AAL*}</li> <li>notmatch - results must have a key that does not match against a case-insensitive wildcard pattern. Example: {notmatch aircraftType B76*}</li> <li>range - results must have a key that is numerically between the two specified values. Example: {range alt 8000 20000}</li> <li>in - results must have a key that exactly matches one of the specified values. Example: {in orig {KLAX KBUR KSNA KLGB}}</li> </ul> <p>The supported key names include (note that not all of these key names are returned in the result structure, and some have slightly different names):</p> <ul> <li>alt - Altitude, measured in hundreds of feet or Flight Level.</li> <li>altChange - a one-character code indicating the change in altitude.</li> <li>cid - a three-character cid code</li> <li>clock - UNIX epoch timestamp seconds since 1970</li> <li>fp - unique identifier assigned by FlightAware for this flight, aka fa_flight_id.</li> <li>gs - ground speed, measured in kts.</li> <li>lat - latitude of the reported position.</li> <li>lon - longitude of the reported position</li> <li>updateType - source of the last reported position (P=projected, O=oceanic, Z=radar, A=ADS-B, M=multilateration, D=datalink, X=surface and near surface (ADS-B and ASDE-X), S=space-based)</li> </ul> <!----></div>",
        "executor_category": "Flights",
        "executor_category_group": "Flights",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/flights/search/positions",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "query",
                "value": "",
                "description": "Query to search for flight positions. It should not exceed 1000 bytes in length. Search criteria is applied against all positions of a flight. This function only searches flights within approximately the last 24 hours. The supported operators include (note that operators take different numbers of arguments):  false - results must have the specified boolean key set to a value of false. Example: {false preferred} true - results must have the specified boolean key set to a value of true. Example: {true preferred} null - results must have the specified key set to a null value. Example: {null waypoints} notnull - results must have the specified key not set to a null value. Example: {notnull aircraftType} = - results must have a key that exactly matches the specified value. Example: {= fp C172} != - results must have a key that must not match the specified value. Example: {!= prefix H} < - results must have a key that is lexicographically less-than a specified value. Example: {< arrivalTime 1276811040} > - results must have a key that is lexicographically greater-than a specified value. Example: {> speed 500} <= - results must have a key that is lexicographically less-than-or-equal-to a specified value. Example: {<= alt 8000} >= - results must have a key that is lexicographically greater-than-or-equal-to a specified value. match - results must have a key that matches against a case-insensitive wildcard pattern. Example: {match ident AAL*} notmatch - results must have a key that does not match against a case-insensitive wildcard pattern. Example: {notmatch aircraftType B76*} range - results must have a key that is numerically between the two specified values. Example: {range alt 8000 20000} in - results must have a key that exactly matches one of the specified values. Example: {in orig {KLAX KBUR KSNA KLGB}} The supported key names include (note that not all of these key names are returned in the result structure, and some have slightly different names):  alt - Altitude, measured in hundreds of feet or Flight Level. altChange - a one-character code indicating the change in altitude. altMax - Altitude, measured in hundreds of feet or Flight Level. cid - a three-character cid code cidfac - a four-character cidfac code clock - UNIX epoch timestamp seconds since 1970 fp - unique identifier assigned by FlightAware for this flight, aka fa_flight_id. gs - ground speed, measured in kts. lat - latitude of the reported position. lon - longitude of the reported position preferred - boolean indicator of position quality recvd - UNIX epoch timestamp seconds since 1970 updateType - source of the last reported position (P=projected, O=oceanic, Z=radar, A=ADS-B, M=multilateration, D=datalink, X=surface and near surface (ADS-B and ASDE-X), S=space-based) Example: {< alt 500} {range gs 10 100}",
                "req": false
            },
            {
                "key": "unique_flights",
                "value": "",
                "description": "Whether to return only a single position per unique fa_flight_id.",
                "req": false
            },
            {
                "key": "max_pages",
                "value": "",
                "description": "Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684497198734,
        "lastModifiedTime": 1684497198734,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "positions": [
                        {
                            "fa_flight_id": "string",
                            "altitude": 0,
                            "altitude_change": "C",
                            "groundspeed": 0,
                            "heading": 0,
                            "latitude": 0,
                            "longitude": 0,
                            "timestamp": "2021-12-31T19:59:59Z",
                            "update_type": "P"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter(s). Expected: pages > 0.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95053,
        "executor_type": "THIRDPARTY",
        "executor_name": "getCanonicalCodeAirport",
        "executor_version": "v4",
        "executor_display_name": "Get the canonical code of an airport",
        "executor_description": "Returns a list of ICAO airport codes corresponding to the given IATA or LID airport code. IATA codes can be identical to some LID codes, so if id_type is specified, only 1 ICAO code will be returned. If no id_type is specified and there are two possible ICAO codes, both will be returned.",
        "executor_category": "Airports",
        "executor_category_group": "Airports",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/airports/{id}/canonical",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "ICAO, IATA or LID ID of destination airport to fetch. ICAO is highly preferred to prevent ambiguity.  Example: KIAH \u2503 IAH"
            }
        ],
        "queryParams": [
            {
                "key": "id_type",
                "value": "",
                "description": "Type of airport code provided in the id parameter",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685334844242,
        "lastModifiedTime": 1685334844243,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "airports": [
                        {
                            "id": "string",
                            "id_type": "icao"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter (id). Id must be a valid airport code and cannot be empty.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95078,
        "executor_type": "THIRDPARTY",
        "executor_name": "getFlightsWithSpecificOriginDestination",
        "executor_version": "v4",
        "executor_display_name": "Get flights with a specific origin and destination",
        "executor_description": "This endpoint is quite similar to the FindFlight operator in prior versions of AeroAPI. Results may include both non-stop and one-stop flights. Note that because the returned flights can include multiple legs, the response format differs from most other flight-returning endpoints. If the optional start or end query parameters are not provided start will default to 1 day in the future, while end will default to 7 days in the past relative to the time the query is made.",
        "executor_category": "Airports",
        "executor_category_group": "Airports",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/airports/{id}/flights/to/{dest_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "ICAO, IATA or LID ID of destination airport to fetch. ICAO is highly preferred to prevent ambiguity.  Example: KIAH \u2503 IAH"
            },
            {
                "key": "dest_id",
                "value": "",
                "description": "ICAO, IATA or LID ID of destination airport to fetch. ICAO is highly preferred to prevent ambiguity.  Example: KIAH \u2503 IAH"
            }
        ],
        "queryParams": [
            {
                "key": "type",
                "value": "",
                "description": "Type of flights to return.",
                "req": false
            },
            {
                "key": "connection",
                "value": "",
                "description": "Whether flights should be filtered based on their connection status. Leaving this blank will result in a mix of flights being returned, with a preference for nonstop flights. One-stop flights are identified with a custom heuristic.",
                "req": false
            },
            {
                "key": "start",
                "value": "",
                "description": "The starting date range for flight results. The format is ISO8601 date or datetime, and the bound is inclusive. Specified start date must be no further than 10 days in the past and 2 days in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The ending date range for flight results. The format is ISO8601 date or datetime, and the bound is exclusive. Specified end date must be no further than 10 days in the past and 2 days in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "max_pages",
                "value": "",
                "description": "Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685340651185,
        "lastModifiedTime": 1685340651185,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "flights": [
                        {
                            "segments": [
                                {
                                    "ident": "string",
                                    "ident_icao": "string",
                                    "ident_iata": "string",
                                    "fa_flight_id": "string",
                                    "operator": "string",
                                    "operator_icao": "string",
                                    "operator_iata": "string",
                                    "flight_number": "string",
                                    "registration": "string",
                                    "atc_ident": "string",
                                    "inbound_fa_flight_id": "string",
                                    "codeshares": [
                                        "string"
                                    ],
                                    "codeshares_iata": [
                                        "string"
                                    ],
                                    "blocked": false,
                                    "diverted": false,
                                    "cancelled": false,
                                    "position_only": false,
                                    "origin": {
                                        "code": "string",
                                        "code_icao": "string",
                                        "code_iata": "string",
                                        "code_lid": "string",
                                        "timezone": "America/New_York",
                                        "name": "LaGuardia",
                                        "city": "New York",
                                        "airport_info_url": ""
                                    },
                                    "destination": {
                                        "code": "string",
                                        "code_icao": "string",
                                        "code_iata": "string",
                                        "code_lid": "string",
                                        "timezone": "America/New_York",
                                        "name": "LaGuardia",
                                        "city": "New York",
                                        "airport_info_url": ""
                                    },
                                    "departure_delay": 0,
                                    "arrival_delay": 0,
                                    "filed_ete": 0,
                                    "progress_percent": 0,
                                    "status": "string",
                                    "aircraft_type": "string",
                                    "route_distance": 0,
                                    "filed_airspeed": 0,
                                    "filed_altitude": 0,
                                    "route": "string",
                                    "baggage_claim": "string",
                                    "seats_cabin_business": 0,
                                    "seats_cabin_coach": 0,
                                    "seats_cabin_first": 0,
                                    "gate_origin": "string",
                                    "gate_destination": "string",
                                    "terminal_origin": "string",
                                    "terminal_destination": "string",
                                    "type": "General_Aviation",
                                    "scheduled_out": "2021-12-31T19:59:59Z",
                                    "estimated_out": "2021-12-31T19:59:59Z",
                                    "actual_out": "2021-12-31T19:59:59Z",
                                    "scheduled_off": "2021-12-31T19:59:59Z",
                                    "estimated_off": "2021-12-31T19:59:59Z",
                                    "actual_off": "2021-12-31T19:59:59Z",
                                    "scheduled_on": "2021-12-31T19:59:59Z",
                                    "estimated_on": "2021-12-31T19:59:59Z",
                                    "actual_on": "2021-12-31T19:59:59Z",
                                    "scheduled_in": "2021-12-31T19:59:59Z",
                                    "estimated_in": "2021-12-31T19:59:59Z",
                                    "actual_in": "2021-12-31T19:59:59Z"
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter(s). Id and dest_id must be valid airport codes and cannot be empty.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95082,
        "executor_type": "THIRDPARTY",
        "executor_name": "getWeatherConditionsForGivenAirport",
        "executor_version": "v4",
        "executor_display_name": "Get weather conditions for given airport",
        "executor_description": "Returns weather for an airport in the form of a decoded METAR, starting from the latest report and working backwards in time as more data is requested. Data is provided in parsed, human-readable, and raw formats.",
        "executor_category": "Airports",
        "executor_category_group": "Airports",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/airports/{id}/weather/observations",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "ICAO, IATA or LID ID of destination airport to fetch. ICAO is highly preferred to prevent ambiguity.  Example: KIAH \u2503 IAH"
            }
        ],
        "queryParams": [
            {
                "key": "temperature_units",
                "value": "",
                "description": "Default: Celsius Allowed: C \u2503 F \u2503 Celsius \u2503 Fahrenheit Units to use for temperature fields.",
                "req": false
            },
            {
                "key": "return_nearby_weather",
                "value": "",
                "description": "If the requested airport does not have a weather conditions report then the weather for the nearest airport within 30 miles will be returned instead.",
                "req": false
            },
            {
                "key": "timestamp",
                "value": "",
                "description": "\t Timestamp from which to begin returning weather data in a 1 day range. Because weather data is returned in reverse chronological order, all returned weather reports will be from before this timestamp. If unspecified, weather is returned starting from now up to or less than the user history limit, normally 14 days.  Example: 2021-12-31T19:59:59Z",
                "req": false
            },
            {
                "key": "max_pages",
                "value": "",
                "description": "Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685341361578,
        "lastModifiedTime": 1685341361578,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "observations": [
                        {
                            "airport_code": "string",
                            "cloud_friendly": "Overcast skies",
                            "clouds": [
                                {
                                    "altitude": 0,
                                    "symbol": "string",
                                    "type": "string"
                                }
                            ],
                            "conditions": "BR",
                            "pressure": 0,
                            "pressure_units": null,
                            "raw_data": "string",
                            "temp_air": 0,
                            "temp_dewpoint": 0,
                            "temp_perceived": 0,
                            "relative_humidity": 0,
                            "time": "2021-12-31T19:59:59Z",
                            "visibility": 0,
                            "visibility_units": null,
                            "wind_direction": 0,
                            "wind_friendly": "Very windy",
                            "wind_speed": 0,
                            "wind_speed_gust": 0,
                            "wind_units": "MPS"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter (id). Id must be a valid airport code and cannot be empty. Temperature_units may be invalid. Timestamp may be before user's history limit.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95061,
        "executor_type": "THIRDPARTY",
        "executor_name": "getFlightsThatHaveRecentlyArrivedAirport",
        "executor_version": "v4",
        "executor_display_name": "Get flights that have recently arrived at an airport",
        "executor_description": "Returns flights that have arrived at an airport, orderd by actual_on descending. The start parameter's default value is 24 hours before the current time. The end parameter's default value is the current time.",
        "executor_category": "Airports",
        "executor_category_group": "Airports",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/airports/{id}/flights/arrivals",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "ICAO, IATA or LID ID of destination airport to fetch. ICAO is highly preferred to prevent ambiguity.  Example: KIAH \u2503 IAH"
            }
        ],
        "queryParams": [
            {
                "key": "airline",
                "value": "",
                "description": "Airline to filter flights by. Do not provide airline if type is provided.  Example: UAL",
                "req": false
            },
            {
                "key": "type",
                "value": "",
                "description": "Type of flights to return. Do not provide type if airline is provided.",
                "req": false
            },
            {
                "key": "start",
                "value": "",
                "description": "The starting date range for flight results. The format is ISO8601 date or datetime, and the bound is inclusive. Specified start date must be no further than 10 days in the past and 2 days in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The ending date range for flight results. The format is ISO8601 date or datetime, and the bound is exclusive. Specified end date must be no further than 10 days in the past and 2 days in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "max_pages",
                "value": "",
                "description": "Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685337276130,
        "lastModifiedTime": 1685337276130,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "arrivals": [
                        {
                            "ident": "string",
                            "ident_icao": "string",
                            "ident_iata": "string",
                            "fa_flight_id": "string",
                            "operator": "string",
                            "operator_icao": "string",
                            "operator_iata": "string",
                            "flight_number": "string",
                            "registration": "string",
                            "atc_ident": "string",
                            "inbound_fa_flight_id": "string",
                            "codeshares": [
                                "string"
                            ],
                            "codeshares_iata": [
                                "string"
                            ],
                            "blocked": false,
                            "diverted": false,
                            "cancelled": false,
                            "position_only": false,
                            "origin": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "destination": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "departure_delay": 0,
                            "arrival_delay": 0,
                            "filed_ete": 0,
                            "progress_percent": 0,
                            "status": "string",
                            "aircraft_type": "string",
                            "route_distance": 0,
                            "filed_airspeed": 0,
                            "filed_altitude": 0,
                            "route": "string",
                            "baggage_claim": "string",
                            "seats_cabin_business": 0,
                            "seats_cabin_coach": 0,
                            "seats_cabin_first": 0,
                            "gate_origin": "string",
                            "gate_destination": "string",
                            "terminal_origin": "string",
                            "terminal_destination": "string",
                            "type": "General_Aviation",
                            "scheduled_out": "2021-12-31T19:59:59Z",
                            "estimated_out": "2021-12-31T19:59:59Z",
                            "actual_out": "2021-12-31T19:59:59Z",
                            "scheduled_off": "2021-12-31T19:59:59Z",
                            "estimated_off": "2021-12-31T19:59:59Z",
                            "actual_off": "2021-12-31T19:59:59Z",
                            "scheduled_on": "2021-12-31T19:59:59Z",
                            "estimated_on": "2021-12-31T19:59:59Z",
                            "actual_on": "2021-12-31T19:59:59Z",
                            "scheduled_in": "2021-12-31T19:59:59Z",
                            "estimated_in": "2021-12-31T19:59:59Z",
                            "actual_in": "2021-12-31T19:59:59Z"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter(s). Id must be a valid airport code and cannot be empty. Airline and type query params cannot both be set.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95079,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAirportsNearAirport",
        "executor_version": "v4",
        "executor_display_name": "Get airports near an airport",
        "executor_description": "Returns a list of airports located within a given distance from the specified airport.",
        "executor_category": "Airports",
        "executor_category_group": "Airports",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/airports/{id}/nearby",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "ICAO, IATA or LID ID of destination airport to fetch. ICAO is highly preferred to prevent ambiguity.  Example: KIAH \u2503 IAH"
            }
        ],
        "queryParams": [
            {
                "key": "radius",
                "value": "",
                "description": "The search radius to use for finding nearby airports (statue miles)",
                "req": false
            },
            {
                "key": "only_iap",
                "value": "",
                "description": "Return only nearby airports with Instrument Approaches (also limits results to North American airports)",
                "req": false
            },
            {
                "key": "max_pages",
                "value": "",
                "description": "Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685340808315,
        "lastModifiedTime": 1685340808315,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "airports": [
                        {
                            "airport_code": "KHOU",
                            "code_icao": "KHOU",
                            "code_iata": "HOU",
                            "code_lid": "HOU",
                            "name": "London Heathrow",
                            "type": "Airport",
                            "elevation": 0,
                            "city": "string",
                            "state": "string",
                            "longitude": 0,
                            "latitude": 0,
                            "timezone": "America/Chicago",
                            "country_code": "string",
                            "wiki_url": "http://example.com",
                            "airport_flights_url": "",
                            "distance": 0,
                            "heading": 1,
                            "direction": "N"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter(s). Id must be a valid airport code and cannot be empty, radius > 0.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93805,
        "executor_type": "THIRDPARTY",
        "executor_name": "getStaticInformationAboutAnAirport",
        "executor_version": "v4",
        "executor_display_name": "Get static information about an airport",
        "executor_description": "Returns information about an airport given an ICAO or LID airport code such as KLAX, KIAH, O07, etc. Data returned includes airport name, city, state (when known), latitude, longitude, and timezone.",
        "executor_category": "Airports",
        "executor_category_group": "Airports",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/airports/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "ICAO, IATA or LID ID of destination airport to fetch. ICAO is highly preferred to prevent ambiguity.  Example: KIAH \u2503 IAH"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684498274219,
        "lastModifiedTime": 1684498274219,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Information about the requested airport.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "airport_code": "KHOU",
                    "code_icao": "KHOU",
                    "code_iata": "HOU",
                    "code_lid": "HOU",
                    "name": "London Heathrow",
                    "type": "Airport",
                    "elevation": 0,
                    "city": "string",
                    "state": "string",
                    "longitude": 0,
                    "latitude": 0,
                    "timezone": "America/Chicago",
                    "country_code": "string",
                    "wiki_url": "http://example.com",
                    "airport_flights_url": "",
                    "alternatives": [
                        {
                            "airport_code": "KHOU",
                            "code_icao": "KHOU",
                            "code_iata": "HOU",
                            "code_lid": "HOU",
                            "name": "London Heathrow",
                            "type": "Airport",
                            "elevation": 0,
                            "city": "string",
                            "state": "string",
                            "longitude": 0,
                            "latitude": 0,
                            "timezone": "America/Chicago",
                            "country_code": "string",
                            "wiki_url": "http://example.com",
                            "airport_flights_url": ""
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter (id). Id must be a valid airport code and cannot be empty.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95085,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAirportsNearLocation",
        "executor_version": "v4",
        "executor_display_name": "Get airports near a location",
        "executor_description": "Returns a list of airports located within a given distance from the given location.",
        "executor_category": "Airports",
        "executor_category_group": "Airports",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/airports/nearby",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "latitude",
                "value": "",
                "description": "The latitude of the point used to search for nearby airports",
                "req": false
            },
            {
                "key": "longitude",
                "value": "",
                "description": "The longitude of the point used to search for nearby airports",
                "req": false
            },
            {
                "key": "radius",
                "value": "",
                "description": "The search radius to use for finding nearby airports (statue miles)",
                "req": false
            },
            {
                "key": "only_iap",
                "value": "",
                "description": "Return only nearby airports with Instrument Approaches (also limits results to North American airports)",
                "req": false
            },
            {
                "key": "max_pages",
                "value": "",
                "description": "Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685342099417,
        "lastModifiedTime": 1685342099417,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "airports": [
                        {
                            "airport_code": "KHOU",
                            "code_icao": "KHOU",
                            "code_iata": "HOU",
                            "code_lid": "HOU",
                            "name": "London Heathrow",
                            "type": "Airport",
                            "elevation": 0,
                            "city": "string",
                            "state": "string",
                            "longitude": 0,
                            "latitude": 0,
                            "timezone": "America/Chicago",
                            "country_code": "string",
                            "wiki_url": "http://example.com",
                            "airport_flights_url": "",
                            "distance": 0,
                            "heading": 1,
                            "direction": "N"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter(s). Expected: numerical latitude and longitude, radius > 0.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95054,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAirportDelayInformation",
        "executor_version": "v4",
        "executor_display_name": "Get airport delay information",
        "executor_description": "Returns a list of reason codes for delays at a specific airport. There may be multiple reasons returned if there are multiple types of delays reported at an airport. Note that individual flights may be delayed without there being an airport delay returned by this endpoint.",
        "executor_category": "Airports",
        "executor_category_group": "Airports",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/airports/{id}/delays",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "ICAO, IATA or LID ID of destination airport to fetch. ICAO is highly preferred to prevent ambiguity.  Example: KIAH \u2503 IAH"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685334985092,
        "lastModifiedTime": 1685334985092,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "airport": "string",
                    "category": "string",
                    "color": "red",
                    "delay_secs": 0,
                    "reasons": [
                        {
                            "category": "string",
                            "color": "red",
                            "delay_secs": 0,
                            "reason": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter (id). Id must be a valid airport code and cannot be empty.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95062,
        "executor_type": "THIRDPARTY",
        "executor_name": "getFlightCountsForAnAirport",
        "executor_version": "v4",
        "executor_display_name": "Get flight counts for an airport",
        "executor_description": "Returns counts of flights for an airport broken down by flight status. The returned categories are subtly different from what is returned from the /airports/{id}/flights endpoints. Specifically, this operation does not include completed flights in its counts, and it does not count cancelled/diverted flights. It also does not strictly bound the time for which scheduled flights are counted, so all future flights that FlightAware knows about are included in the counts. See the response schema and documentation for the airport flights endpoints for more information.",
        "executor_category": "Airports",
        "executor_category_group": "Airports",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/airports/{id}/flights/counts",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "ICAO, IATA or LID ID of destination airport to fetch. ICAO is highly preferred to prevent ambiguity.  Example: KIAH \u2503 IAH"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685337423134,
        "lastModifiedTime": 1685337423134,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "departed": 0,
                    "enroute": 0,
                    "scheduled_arrivals": 0,
                    "scheduled_departures": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter (id). Id must be a valid airport code and cannot be empty.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95080,
        "executor_type": "THIRDPARTY",
        "executor_name": "getRoutesBetweenAirports",
        "executor_version": "v4",
        "executor_display_name": "Get routes between 2 airports",
        "executor_description": "Returns information about assigned IFR routings between two airports.",
        "executor_category": "Airports",
        "executor_category_group": "Airports",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/airports/{id}/routes/{dest_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "ICAO, IATA or LID ID of destination airport to fetch. ICAO is highly preferred to prevent ambiguity.  Example: KIAH \u2503 IAH"
            },
            {
                "key": "dest_id",
                "value": "",
                "description": "ICAO, IATA or LID ID of destination airport to fetch. ICAO is highly preferred to prevent ambiguity.  Example: KIAH \u2503 IAH"
            }
        ],
        "queryParams": [
            {
                "key": "sort_by",
                "value": "",
                "description": "Default: count Allowed: count \u2503 last_departure_time Field to sort results by. \"count\" will sort results by the route filing count (descending). \"last_departure_time\" will sort results by the latest scheduled departure time for that route (descending).",
                "req": false
            },
            {
                "key": "max_file_age",
                "value": "",
                "description": "Maximum filed plan age of flights to consider. Can be a value less than or equal to 14 days (2 weeks) OR 1 month OR 1 year.  Example: 6 days \u2503 1 month \u2503 1 year",
                "req": false
            },
            {
                "key": "max_pages",
                "value": "",
                "description": "Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685340947871,
        "lastModifiedTime": 1685340947871,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "routes": [
                        {
                            "aircraft_types": [
                                "string"
                            ],
                            "count": 0,
                            "filed_altitude_max": 0,
                            "filed_altitude_min": 0,
                            "last_departure_time": "2021-12-31T19:59:59Z",
                            "route": "string",
                            "route_distance": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter(s). Id and dest_id must be valid airport codes and cannot be empty. Max_file_age must be one of the specified values.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95063,
        "executor_type": "THIRDPARTY",
        "executor_name": "getFlightsThatHaveRecentlyDepartedFromAirport",
        "executor_version": "v4",
        "executor_display_name": "Get flights that have recently departed from an airport",
        "executor_description": "Returns flights that have departed from an airport and not been diverted, ordered by actual_off descending. The optional start and end parameters will be compared against actual_off to limit the flights returned. The start parameter's default value is 24 hours before the current time. The end parameter's default value is the current time.",
        "executor_category": "Airports",
        "executor_category_group": "Airports",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/airports/{id}/flights/departures",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "ICAO, IATA or LID ID of destination airport to fetch. ICAO is highly preferred to prevent ambiguity.  Example: KIAH \u2503 IAH"
            }
        ],
        "queryParams": [
            {
                "key": "airline",
                "value": "",
                "description": "Airline to filter flights by. Do not provide airline if type is provided.  Example: UAL",
                "req": false
            },
            {
                "key": "type",
                "value": "",
                "description": "Type of flights to return. Do not provide type if airline is provided.",
                "req": false
            },
            {
                "key": "start",
                "value": "",
                "description": "The starting date range for flight results. The format is ISO8601 date or datetime, and the bound is inclusive. Specified start date must be no further than 10 days in the past and 2 days in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The ending date range for flight results. The format is ISO8601 date or datetime, and the bound is exclusive. Specified end date must be no further than 10 days in the past and 2 days in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "max_pages",
                "value": "",
                "description": "Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Min 1 Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685337666409,
        "lastModifiedTime": 1685337666409,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "departures": [
                        {
                            "ident": "string",
                            "ident_icao": "string",
                            "ident_iata": "string",
                            "fa_flight_id": "string",
                            "operator": "string",
                            "operator_icao": "string",
                            "operator_iata": "string",
                            "flight_number": "string",
                            "registration": "string",
                            "atc_ident": "string",
                            "inbound_fa_flight_id": "string",
                            "codeshares": [
                                "string"
                            ],
                            "codeshares_iata": [
                                "string"
                            ],
                            "blocked": false,
                            "diverted": false,
                            "cancelled": false,
                            "position_only": false,
                            "origin": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "destination": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "departure_delay": 0,
                            "arrival_delay": 0,
                            "filed_ete": 0,
                            "progress_percent": 0,
                            "status": "string",
                            "aircraft_type": "string",
                            "route_distance": 0,
                            "filed_airspeed": 0,
                            "filed_altitude": 0,
                            "route": "string",
                            "baggage_claim": "string",
                            "seats_cabin_business": 0,
                            "seats_cabin_coach": 0,
                            "seats_cabin_first": 0,
                            "gate_origin": "string",
                            "gate_destination": "string",
                            "terminal_origin": "string",
                            "terminal_destination": "string",
                            "type": "General_Aviation",
                            "scheduled_out": "2021-12-31T19:59:59Z",
                            "estimated_out": "2021-12-31T19:59:59Z",
                            "actual_out": "2021-12-31T19:59:59Z",
                            "scheduled_off": "2021-12-31T19:59:59Z",
                            "estimated_off": "2021-12-31T19:59:59Z",
                            "actual_off": "2021-12-31T19:59:59Z",
                            "scheduled_on": "2021-12-31T19:59:59Z",
                            "estimated_on": "2021-12-31T19:59:59Z",
                            "actual_on": "2021-12-31T19:59:59Z",
                            "scheduled_in": "2021-12-31T19:59:59Z",
                            "estimated_in": "2021-12-31T19:59:59Z",
                            "actual_in": "2021-12-31T19:59:59Z"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter(s). Id must be a valid airport code and cannot be empty. Airline and type query params cannot both be set.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95081,
        "executor_type": "THIRDPARTY",
        "executor_name": "getWeatherForecastForGivenAirport",
        "executor_version": "v4",
        "executor_display_name": "Get weather forecast for given airport",
        "executor_description": "Returns the weather forecast for an airport in the form of a decoded TAF (Terminal Area Forecast). Only a single result is returned.",
        "executor_category": "Airports",
        "executor_category_group": "Airports",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/airports/{id}/weather/forecast",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "ICAO, IATA or LID ID of destination airport to fetch. ICAO is highly preferred to prevent ambiguity.  Example: KIAH \u2503 IAH"
            }
        ],
        "queryParams": [
            {
                "key": "timestamp",
                "value": "",
                "description": "Timestamp from which to begin returning weather data in a 1 day range. Because weather data is returned in reverse chronological order, all returned weather reports will be from before this timestamp. If unspecified, weather is returned starting from now up to or less than the user history limit, normally 14 days.  Example: 2021-12-31T19:59:59Z",
                "req": false
            },
            {
                "key": "return_nearby_weather",
                "value": "",
                "description": "If the requested airport does not have a weather conditions report then the weather for the nearest airport within 30 miles will be returned instead.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685341099340,
        "lastModifiedTime": 1685341099340,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "airport_code": "string",
                    "raw_forecast": [
                        "string"
                    ],
                    "time": "2021-12-31T19:59:59Z",
                    "decoded_forecast": {
                        "start": "2021-12-31T19:59:59Z",
                        "end": "2021-12-31T19:59:59Z",
                        "lines": [
                            {
                                "type": "string",
                                "start": "2021-12-31T19:59:59Z",
                                "end": "2021-12-31T19:59:59Z",
                                "turbulence_layers": "string",
                                "icing_layers": "string",
                                "barometric_pressure": 0,
                                "significant_weather": "string",
                                "winds": {
                                    "symbol": "string",
                                    "direction": "string",
                                    "speed": 0,
                                    "units": "string",
                                    "peak_gusts": 0
                                },
                                "windshear": {
                                    "symbol": "string",
                                    "height": "string",
                                    "direction": "string",
                                    "speed": "string",
                                    "units": "string"
                                },
                                "visibility": {
                                    "symbol": "string",
                                    "visibility": "string",
                                    "units": "string"
                                },
                                "clouds": [
                                    {
                                        "symbol": "string",
                                        "coverage": null,
                                        "altitude": "string",
                                        "special": "string"
                                    }
                                ]
                            }
                        ]
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter (id). Id must be a valid airport code and cannot be empty. Temperature_units may be invalid. Timestamp may be before user's history limit.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "No upcoming forecast currently available for this airport.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93804,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllAirports",
        "executor_version": "v4",
        "executor_display_name": "Get all airports",
        "executor_description": "Returns the ICAO identifiers of all known airports. For airports that do not have an ICAO identifier, the FAA LID identifier will be used. Links for further information about each airport are included.",
        "executor_category": "Airports",
        "executor_category_group": "Airports",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/airports",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "max_pages",
                "value": "",
                "description": "Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684498149540,
        "lastModifiedTime": 1684498149540,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Returns a list of airports",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "airports": [
                        {
                            "code": "string",
                            "airport_info_url": ""
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95056,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllFlightsForGivenAirport",
        "executor_version": "v4",
        "executor_display_name": "Get all flights for a given airport",
        "executor_description": "Returns all recent and upcoming flights departing from or arriving at the specified airport. Filtering/ordering behavior for the optional start and end parameters for each type (scheduled_departures, scheduled_arrivals, departures, arrivals) match the behavior in their corresponding endpoints.",
        "executor_category": "Airports",
        "executor_category_group": "Airports",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/airports/{id}/flights",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "ICAO, IATA or LID ID of destination airport to fetch. ICAO is highly preferred to prevent ambiguity.  Example: KIAH \u2503 IAH"
            }
        ],
        "queryParams": [
            {
                "key": "airline",
                "value": "",
                "description": "Airline to filter flights by. Do not provide airline if type is provided.  Example: UAL",
                "req": false
            },
            {
                "key": "type",
                "value": "",
                "description": "Type of flights to return. Do not provide type if airline is provided.",
                "req": false
            },
            {
                "key": "start",
                "value": "",
                "description": "The starting date range for flight results. The format is ISO8601 date or datetime, and the bound is inclusive. Specified start date must be no further than 10 days in the past and 2 days in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The ending date range for flight results. The format is ISO8601 date or datetime, and the bound is exclusive. Specified end date must be no further than 10 days in the past and 2 days in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "max_pages",
                "value": "",
                "description": "Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685335367254,
        "lastModifiedTime": 1685335367254,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "scheduled_arrivals": [
                        {
                            "ident": "string",
                            "ident_icao": "string",
                            "ident_iata": "string",
                            "fa_flight_id": "string",
                            "operator": "string",
                            "operator_icao": "string",
                            "operator_iata": "string",
                            "flight_number": "string",
                            "registration": "string",
                            "atc_ident": "string",
                            "inbound_fa_flight_id": "string",
                            "codeshares": [
                                "string"
                            ],
                            "codeshares_iata": [
                                "string"
                            ],
                            "blocked": false,
                            "diverted": false,
                            "cancelled": false,
                            "position_only": false,
                            "origin": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "destination": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "departure_delay": 0,
                            "arrival_delay": 0,
                            "filed_ete": 0,
                            "progress_percent": 0,
                            "status": "string",
                            "aircraft_type": "string",
                            "route_distance": 0,
                            "filed_airspeed": 0,
                            "filed_altitude": 0,
                            "route": "string",
                            "baggage_claim": "string",
                            "seats_cabin_business": 0,
                            "seats_cabin_coach": 0,
                            "seats_cabin_first": 0,
                            "gate_origin": "string",
                            "gate_destination": "string",
                            "terminal_origin": "string",
                            "terminal_destination": "string",
                            "type": "General_Aviation",
                            "scheduled_out": "2021-12-31T19:59:59Z",
                            "estimated_out": "2021-12-31T19:59:59Z",
                            "actual_out": "2021-12-31T19:59:59Z",
                            "scheduled_off": "2021-12-31T19:59:59Z",
                            "estimated_off": "2021-12-31T19:59:59Z",
                            "actual_off": "2021-12-31T19:59:59Z",
                            "scheduled_on": "2021-12-31T19:59:59Z",
                            "estimated_on": "2021-12-31T19:59:59Z",
                            "actual_on": "2021-12-31T19:59:59Z",
                            "scheduled_in": "2021-12-31T19:59:59Z",
                            "estimated_in": "2021-12-31T19:59:59Z",
                            "actual_in": "2021-12-31T19:59:59Z"
                        }
                    ],
                    "scheduled_departures": [
                        {
                            "ident": "string",
                            "ident_icao": "string",
                            "ident_iata": "string",
                            "fa_flight_id": "string",
                            "operator": "string",
                            "operator_icao": "string",
                            "operator_iata": "string",
                            "flight_number": "string",
                            "registration": "string",
                            "atc_ident": "string",
                            "inbound_fa_flight_id": "string",
                            "codeshares": [
                                "string"
                            ],
                            "codeshares_iata": [
                                "string"
                            ],
                            "blocked": false,
                            "diverted": false,
                            "cancelled": false,
                            "position_only": false,
                            "origin": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "destination": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "departure_delay": 0,
                            "arrival_delay": 0,
                            "filed_ete": 0,
                            "progress_percent": 0,
                            "status": "string",
                            "aircraft_type": "string",
                            "route_distance": 0,
                            "filed_airspeed": 0,
                            "filed_altitude": 0,
                            "route": "string",
                            "baggage_claim": "string",
                            "seats_cabin_business": 0,
                            "seats_cabin_coach": 0,
                            "seats_cabin_first": 0,
                            "gate_origin": "string",
                            "gate_destination": "string",
                            "terminal_origin": "string",
                            "terminal_destination": "string",
                            "type": "General_Aviation",
                            "scheduled_out": "2021-12-31T19:59:59Z",
                            "estimated_out": "2021-12-31T19:59:59Z",
                            "actual_out": "2021-12-31T19:59:59Z",
                            "scheduled_off": "2021-12-31T19:59:59Z",
                            "estimated_off": "2021-12-31T19:59:59Z",
                            "actual_off": "2021-12-31T19:59:59Z",
                            "scheduled_on": "2021-12-31T19:59:59Z",
                            "estimated_on": "2021-12-31T19:59:59Z",
                            "actual_on": "2021-12-31T19:59:59Z",
                            "scheduled_in": "2021-12-31T19:59:59Z",
                            "estimated_in": "2021-12-31T19:59:59Z",
                            "actual_in": "2021-12-31T19:59:59Z"
                        }
                    ],
                    "arrivals": [
                        {
                            "ident": "string",
                            "ident_icao": "string",
                            "ident_iata": "string",
                            "fa_flight_id": "string",
                            "operator": "string",
                            "operator_icao": "string",
                            "operator_iata": "string",
                            "flight_number": "string",
                            "registration": "string",
                            "atc_ident": "string",
                            "inbound_fa_flight_id": "string",
                            "codeshares": [
                                "string"
                            ],
                            "codeshares_iata": [
                                "string"
                            ],
                            "blocked": false,
                            "diverted": false,
                            "cancelled": false,
                            "position_only": false,
                            "origin": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "destination": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "departure_delay": 0,
                            "arrival_delay": 0,
                            "filed_ete": 0,
                            "progress_percent": 0,
                            "status": "string",
                            "aircraft_type": "string",
                            "route_distance": 0,
                            "filed_airspeed": 0,
                            "filed_altitude": 0,
                            "route": "string",
                            "baggage_claim": "string",
                            "seats_cabin_business": 0,
                            "seats_cabin_coach": 0,
                            "seats_cabin_first": 0,
                            "gate_origin": "string",
                            "gate_destination": "string",
                            "terminal_origin": "string",
                            "terminal_destination": "string",
                            "type": "General_Aviation",
                            "scheduled_out": "2021-12-31T19:59:59Z",
                            "estimated_out": "2021-12-31T19:59:59Z",
                            "actual_out": "2021-12-31T19:59:59Z",
                            "scheduled_off": "2021-12-31T19:59:59Z",
                            "estimated_off": "2021-12-31T19:59:59Z",
                            "actual_off": "2021-12-31T19:59:59Z",
                            "scheduled_on": "2021-12-31T19:59:59Z",
                            "estimated_on": "2021-12-31T19:59:59Z",
                            "actual_on": "2021-12-31T19:59:59Z",
                            "scheduled_in": "2021-12-31T19:59:59Z",
                            "estimated_in": "2021-12-31T19:59:59Z",
                            "actual_in": "2021-12-31T19:59:59Z"
                        }
                    ],
                    "departures": [
                        {
                            "ident": "string",
                            "ident_icao": "string",
                            "ident_iata": "string",
                            "fa_flight_id": "string",
                            "operator": "string",
                            "operator_icao": "string",
                            "operator_iata": "string",
                            "flight_number": "string",
                            "registration": "string",
                            "atc_ident": "string",
                            "inbound_fa_flight_id": "string",
                            "codeshares": [
                                "string"
                            ],
                            "codeshares_iata": [
                                "string"
                            ],
                            "blocked": false,
                            "diverted": false,
                            "cancelled": false,
                            "position_only": false,
                            "origin": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "destination": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "departure_delay": 0,
                            "arrival_delay": 0,
                            "filed_ete": 0,
                            "progress_percent": 0,
                            "status": "string",
                            "aircraft_type": "string",
                            "route_distance": 0,
                            "filed_airspeed": 0,
                            "filed_altitude": 0,
                            "route": "string",
                            "baggage_claim": "string",
                            "seats_cabin_business": 0,
                            "seats_cabin_coach": 0,
                            "seats_cabin_first": 0,
                            "gate_origin": "string",
                            "gate_destination": "string",
                            "terminal_origin": "string",
                            "terminal_destination": "string",
                            "type": "General_Aviation",
                            "scheduled_out": "2021-12-31T19:59:59Z",
                            "estimated_out": "2021-12-31T19:59:59Z",
                            "actual_out": "2021-12-31T19:59:59Z",
                            "scheduled_off": "2021-12-31T19:59:59Z",
                            "estimated_off": "2021-12-31T19:59:59Z",
                            "actual_off": "2021-12-31T19:59:59Z",
                            "scheduled_on": "2021-12-31T19:59:59Z",
                            "estimated_on": "2021-12-31T19:59:59Z",
                            "actual_on": "2021-12-31T19:59:59Z",
                            "scheduled_in": "2021-12-31T19:59:59Z",
                            "estimated_in": "2021-12-31T19:59:59Z",
                            "actual_in": "2021-12-31T19:59:59Z"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter (id). Id must be a valid airport code and cannot be empty. Airline and type query params cannot both be set.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95074,
        "executor_type": "THIRDPARTY",
        "executor_name": "getFutureFlightsArrivingAirport",
        "executor_version": "v4",
        "executor_display_name": "Get future flights arriving at an airport",
        "executor_description": "Returns flights that are expected to arrive at an airport. This can include both undeparted and en route flights. Flights are ordered by estimated_on ascending. The optional start and end parameters will be compared against estimated_on to limit the flights returned. The start parameter's default value is 48 hours before the current time (this accounts for delayed flights). The end parameter's default value is 24 hours after the current time.",
        "executor_category": "Airports",
        "executor_category_group": "Airports",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/airports/{id}/flights/scheduled_arrivals",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "ICAO, IATA or LID ID of destination airport to fetch. ICAO is highly preferred to prevent ambiguity.  Example: KIAH \u2503 IAH"
            }
        ],
        "queryParams": [
            {
                "key": "airline",
                "value": "",
                "description": "Airline to filter flights by. Do not provide airline if type is provided.  Example: UAL",
                "req": false
            },
            {
                "key": "type",
                "value": "",
                "description": "Type of flights to return. Do not provide type if airline is provided.",
                "req": false
            },
            {
                "key": "start",
                "value": "",
                "description": "The starting date range for flight results. The format is ISO8601 date or datetime, and the bound is inclusive. Specified start date must be no further than 10 days in the past and 2 days in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The ending date range for flight results. The format is ISO8601 date or datetime, and the bound is exclusive. Specified end date must be no further than 10 days in the past and 2 days in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "max_pages",
                "value": "",
                "description": "Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Min 1 Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685340121526,
        "lastModifiedTime": 1685340121526,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "scheduled_arrivals": [
                        {
                            "ident": "string",
                            "ident_icao": "string",
                            "ident_iata": "string",
                            "fa_flight_id": "string",
                            "operator": "string",
                            "operator_icao": "string",
                            "operator_iata": "string",
                            "flight_number": "string",
                            "registration": "string",
                            "atc_ident": "string",
                            "inbound_fa_flight_id": "string",
                            "codeshares": [
                                "string"
                            ],
                            "codeshares_iata": [
                                "string"
                            ],
                            "blocked": false,
                            "diverted": false,
                            "cancelled": false,
                            "position_only": false,
                            "origin": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "destination": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "departure_delay": 0,
                            "arrival_delay": 0,
                            "filed_ete": 0,
                            "progress_percent": 0,
                            "status": "string",
                            "aircraft_type": "string",
                            "route_distance": 0,
                            "filed_airspeed": 0,
                            "filed_altitude": 0,
                            "route": "string",
                            "baggage_claim": "string",
                            "seats_cabin_business": 0,
                            "seats_cabin_coach": 0,
                            "seats_cabin_first": 0,
                            "gate_origin": "string",
                            "gate_destination": "string",
                            "terminal_origin": "string",
                            "terminal_destination": "string",
                            "type": "General_Aviation",
                            "scheduled_out": "2021-12-31T19:59:59Z",
                            "estimated_out": "2021-12-31T19:59:59Z",
                            "actual_out": "2021-12-31T19:59:59Z",
                            "scheduled_off": "2021-12-31T19:59:59Z",
                            "estimated_off": "2021-12-31T19:59:59Z",
                            "actual_off": "2021-12-31T19:59:59Z",
                            "scheduled_on": "2021-12-31T19:59:59Z",
                            "estimated_on": "2021-12-31T19:59:59Z",
                            "actual_on": "2021-12-31T19:59:59Z",
                            "scheduled_in": "2021-12-31T19:59:59Z",
                            "estimated_in": "2021-12-31T19:59:59Z",
                            "actual_in": "2021-12-31T19:59:59Z"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter(s). Id must be a valid airport code and cannot be empty. Airline and type query params cannot both be set.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95083,
        "executor_type": "THIRDPARTY",
        "executor_name": "getDelayInformationForAllAirportsDelays",
        "executor_version": "v4",
        "executor_display_name": "Get delay information for all airports with delays",
        "executor_description": "Returns a list of airports with delays. There may be multiple reasons returned per airport if there are multiple types of delays reported at an airport. Note that individual flights can be delayed without there being an airport-wide delay returned by this endpoint.",
        "executor_category": "Airports",
        "executor_category_group": "Airports",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/airports/delays",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "max_pages",
                "value": "",
                "description": "Default: 1 Min 1 Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685341927285,
        "lastModifiedTime": 1685341927285,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "delays": [
                        {
                            "airport": "string",
                            "category": "string",
                            "color": "red",
                            "delay_secs": 0,
                            "reasons": [
                                {
                                    "category": "string",
                                    "color": "red",
                                    "delay_secs": 0,
                                    "reason": "string"
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95076,
        "executor_type": "THIRDPARTY",
        "executor_name": "getFutureFlightsDepartingFromAirport",
        "executor_version": "v4",
        "executor_display_name": "Get future flights departing from an airport",
        "executor_description": "Returns flights that are scheduled to depart from an airport or have recently been cancelled, ordered by estimated_off (or scheduled_off if estimated_off is missing) ascending. The optional start and end parameters will be compared against scheduled_off to limit the flights returned. The start parameter's default value is 2 hours before the current time. The end parameter's default value is 24 hours after the current time.",
        "executor_category": "Airports",
        "executor_category_group": "Airports",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/airports/{id}/flights/scheduled_departures",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "airline",
                "value": "",
                "description": "Airline to filter flights by. Do not provide airline if type is provided.  Example: UAL",
                "req": false
            },
            {
                "key": "type",
                "value": "",
                "description": "Type of flights to return. Do not provide type if airline is provided.",
                "req": false
            },
            {
                "key": "start",
                "value": "",
                "description": "The starting date range for flight results. The format is ISO8601 date or datetime, and the bound is inclusive. Specified start date must be no further than 10 days in the past and 2 days in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The ending date range for flight results. The format is ISO8601 date or datetime, and the bound is exclusive. Specified end date must be no further than 10 days in the past and 2 days in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "max_pages",
                "value": "",
                "description": "Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Min 1 Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685340230379,
        "lastModifiedTime": 1685340230379,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "scheduled_departures": [
                        {
                            "ident": "string",
                            "ident_icao": "string",
                            "ident_iata": "string",
                            "fa_flight_id": "string",
                            "operator": "string",
                            "operator_icao": "string",
                            "operator_iata": "string",
                            "flight_number": "string",
                            "registration": "string",
                            "atc_ident": "string",
                            "inbound_fa_flight_id": "string",
                            "codeshares": [
                                "string"
                            ],
                            "codeshares_iata": [
                                "string"
                            ],
                            "blocked": false,
                            "diverted": false,
                            "cancelled": false,
                            "position_only": false,
                            "origin": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "destination": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "departure_delay": 0,
                            "arrival_delay": 0,
                            "filed_ete": 0,
                            "progress_percent": 0,
                            "status": "string",
                            "aircraft_type": "string",
                            "route_distance": 0,
                            "filed_airspeed": 0,
                            "filed_altitude": 0,
                            "route": "string",
                            "baggage_claim": "string",
                            "seats_cabin_business": 0,
                            "seats_cabin_coach": 0,
                            "seats_cabin_first": 0,
                            "gate_origin": "string",
                            "gate_destination": "string",
                            "terminal_origin": "string",
                            "terminal_destination": "string",
                            "type": "General_Aviation",
                            "scheduled_out": "2021-12-31T19:59:59Z",
                            "estimated_out": "2021-12-31T19:59:59Z",
                            "actual_out": "2021-12-31T19:59:59Z",
                            "scheduled_off": "2021-12-31T19:59:59Z",
                            "estimated_off": "2021-12-31T19:59:59Z",
                            "actual_off": "2021-12-31T19:59:59Z",
                            "scheduled_on": "2021-12-31T19:59:59Z",
                            "estimated_on": "2021-12-31T19:59:59Z",
                            "actual_on": "2021-12-31T19:59:59Z",
                            "scheduled_in": "2021-12-31T19:59:59Z",
                            "estimated_in": "2021-12-31T19:59:59Z",
                            "actual_in": "2021-12-31T19:59:59Z"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter(s). Id must be a valid airport code and cannot be empty. Airline and type query params cannot both be set.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95105,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteSpecificAlert",
        "executor_version": "v4",
        "executor_display_name": "Delete specific alert",
        "executor_description": "Deletes specific alert with given ID",
        "executor_category": "Alerts",
        "executor_category_group": "Alerts",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/alerts/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "The ID of the alert to fetch or update"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685343767066,
        "lastModifiedTime": 1685343767066,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Alert deleted.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Invalid id.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95114,
        "executor_type": "THIRDPARTY",
        "executor_name": "removeAndDisableDefaultAccountwideAlertCallbackUrl",
        "executor_version": "v4",
        "executor_display_name": "Remove and disable default account-wide alert callback URL",
        "executor_description": "Remove the default account-wide URL that will be POSTed to for alerts that are not configured with a specific URL. This means that any alerts that are not configured with a specific URL will not be delivered.",
        "executor_category": "Alerts",
        "executor_category_group": "Alerts",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/alerts/endpoint",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1685344469735,
        "lastModifiedTime": 1685344642109,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Failed to delete endpoint.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Endpoint successfully removed.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95113,
        "executor_type": "THIRDPARTY",
        "executor_name": "setAlertCallbackUrl",
        "executor_version": "v4",
        "executor_display_name": "Set alert callback URL",
        "executor_description": "Updates the default URL that will be POSTed to for alerts that are delivered via AeroAPI. This sets the account-wide default URL that all alerts will be delivered to unless the specific alert has a different delivery address configured for it.",
        "executor_category": "Alerts",
        "executor_category_group": "Alerts",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/alerts/endpoint",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "url": "http://example.com"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685344363977,
        "lastModifiedTime": 1685344363977,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Failed to get endpoint or no endpoint set.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Endpoint updated successfully, empty response.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95103,
        "executor_type": "THIRDPARTY",
        "executor_name": "modifySpecificAlert",
        "executor_version": "v4",
        "executor_display_name": "Modify specific alert",
        "executor_description": "Modifies the configuration for an alert with the specified ID. If a target URL address is provided, then the alert will be delivered to that address even if it is different than the default account-wide address set through the alerts/endpoint endpoint. Updating an alert that was created with a different AeroAPI key is possible, but will not change the AeroAPI key that the alert is associated with for usage.",
        "executor_category": "Alerts",
        "executor_category_group": "Alerts",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/alerts/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "The ID of the alert to fetch or update"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "ident": "string",
                "origin": "string",
                "destination": "string",
                "aircraft_type": "string",
                "start": "1970-01-01",
                "end": "1970-01-01",
                "max_weekly": 0,
                "eta": 0,
                "events": {
                    "arrival": false,
                    "cancelled": false,
                    "departure": false,
                    "diverted": false,
                    "filed": false
                },
                "target_url": "string",
                "enabled": false
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685343653390,
        "lastModifiedTime": 1685343653390,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Alert modified",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Invalid parameters specified (invalid ident, origin, destination, aircraft_type, dates or missing events) or alert configured would trigger more than max_weekly delivered alerts per week.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "No such alert exists.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95096,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllConfiguredAlerts",
        "executor_version": "v4",
        "executor_display_name": "Get all configured alerts",
        "executor_description": "Returns all configured alerts for the FlightAware account (this includes alerts configured through other means by the FlightAware user owning the AeroAPI account like FlightAware's website or mobile apps).",
        "executor_category": "Alerts",
        "executor_category_group": "Alerts",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/alerts",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685343176781,
        "lastModifiedTime": 1685343176781,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "List of all alerts.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "alerts": [
                        {
                            "id": 0,
                            "description": "string",
                            "ident": "string",
                            "ident_icao": "string",
                            "ident_iata": "string",
                            "origin": "string",
                            "origin_icao": "string",
                            "origin_iata": "string",
                            "origin_lid": "string",
                            "destination": "string",
                            "destination_icao": "string",
                            "destination_iata": "string",
                            "destination_lid": "string",
                            "aircraft_type": "string",
                            "created": "2021-12-31T19:59:59Z",
                            "changed": "2021-12-31T19:59:59Z",
                            "start": "1970-01-01",
                            "end": "1970-01-01",
                            "user_ident": "string",
                            "eta": 0,
                            "events": {
                                "arrival": false,
                                "cancelled": false,
                                "departure": false,
                                "diverted": false,
                                "filed": false
                            },
                            "target_url": "string",
                            "enabled": false
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95100,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSpecificAlert",
        "executor_version": "v4",
        "executor_display_name": "Get specific alert",
        "executor_description": "Returns the configuration data for an alert with the specified ID.",
        "executor_category": "Alerts",
        "executor_category_group": "Alerts",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/alerts/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "The ID of the alert to fetch or update"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685343474142,
        "lastModifiedTime": 1685343474142,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Returns alert configuration structure.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": 0,
                    "description": "string",
                    "ident": "string",
                    "ident_icao": "string",
                    "ident_iata": "string",
                    "origin": "string",
                    "origin_icao": "string",
                    "origin_iata": "string",
                    "origin_lid": "string",
                    "destination": "string",
                    "destination_icao": "string",
                    "destination_iata": "string",
                    "destination_lid": "string",
                    "aircraft_type": "string",
                    "created": "2021-12-31T19:59:59Z",
                    "changed": "2021-12-31T19:59:59Z",
                    "start": "1970-01-01",
                    "end": "1970-01-01",
                    "user_ident": "string",
                    "eta": 0,
                    "events": {
                        "arrival": false,
                        "cancelled": false,
                        "departure": false,
                        "diverted": false,
                        "filed": false
                    },
                    "target_url": "string",
                    "enabled": false
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "No such alert exists.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95098,
        "executor_type": "THIRDPARTY",
        "executor_name": "createNewAlert",
        "executor_version": "v4",
        "executor_display_name": "Create new alert",
        "executor_description": "Create a new AeroAPI flight alert. When the alert is triggered, a callback mechanism will be used to notify the address set via the /alerts/endpoint endpoint. Each callback will be charged as a query and count towards usage for the AeroAPI key that created the alert. If this key is disabled or removed, the alert will no longer be available. If a target_url is provided, then this specific alert will be delivered to that address regardless of the adress set via the /alerts/endpoint endpoint.",
        "executor_category": "Alerts",
        "executor_category_group": "Alerts",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/alerts",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "ident": "string",
                "origin": "string",
                "destination": "string",
                "aircraft_type": "string",
                "start": "1970-01-01",
                "end": "1970-01-01",
                "max_weekly": 0,
                "eta": 0,
                "events": {
                    "arrival": false,
                    "cancelled": false,
                    "departure": false,
                    "diverted": false,
                    "filed": false
                },
                "target_url": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685343332404,
        "lastModifiedTime": 1685343332404,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Invalid parameters specified (invalid ident, origin, destination, aircraft_type, dates or missing events) or alert configured would trigger more than max_weekly delivered alerts per week.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Alert created successfully",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95111,
        "executor_type": "THIRDPARTY",
        "executor_name": "getConfiguredAlertCallbackUrl",
        "executor_version": "v4",
        "executor_display_name": "Get configured alert callback URL",
        "executor_description": "Returns URL that will be POSTed to for alerts that are delivered via AeroAPI.",
        "executor_category": "Alerts",
        "executor_category_group": "Alerts",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/alerts/endpoint",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685344238377,
        "lastModifiedTime": 1685344238377,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Failed to get endpoint or no endpoint set.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Returns endpoint URL.",
                "description": "Configuration for a URL to which AeroAPI alerts should be delivered via HTTP POST. This is the default account-wide URL that all AeroAPI alerts will be delivered to if the alert does not have a specific alert URL configured for it.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "url": "http://example.com"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95119,
        "executor_type": "THIRDPARTY",
        "executor_name": "getInformationForHistoricalFlight",
        "executor_version": "v4",
        "executor_display_name": "Get information for a historical flight",
        "executor_description": "Returns historical flight info status summary for a registration, ident, or fa_flight_id. If a fa_flight_id is specified then a maximum of 1 flight is returned, unless the flight has been diverted in which case both the original flight and any diversions will be returned with a duplicate fa_flight_id. If a registraion or ident is specified then a start_date and end_date must be specified. The span between start_date and end_date can be up to 7 days. No more than 40 pages may be requested at once. Data is available from now back to 2011-01-01 00:00:00 UTC.",
        "executor_category": "History",
        "executor_category_group": "History",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/history/flights/{ident}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "ident",
                "value": "",
                "description": "The ident, registration, or fa_flight_id to fetch  Example: UAL4 \u2503 N123HQ \u2503 UAL1234-1234567890-airline-0123"
            }
        ],
        "queryParams": [
            {
                "key": "ident_type",
                "value": "",
                "description": "Allowed: designator \u2503 registration \u2503 fa_flight_id Type of ident provided in the ident parameter. By default, the passed ident is interpreted as a registration if possible. This parameter can force the ident to be interpreted as a designator instead.",
                "req": false
            },
            {
                "key": "start",
                "value": "",
                "description": "The starting date range for flight results, comparing against flights' scheduled_out field (or scheduled_off if scheduled_out is missing). The format is ISO8601 date or datetime, and the bound is inclusive. Specified start date must occur on or after 2011-01-01 00:00:00 UTC and cannot be in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The ending date range for flight results, comparing against flights' scheduled_out field (or scheduled_off if scheduled_out is missing). The format is ISO8601 date or datetime, and the bound is exclusive. Specified end date must occur after 2011-01-01 00:00:00 UTC and cannot be in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "max_pages",
                "value": "",
                "description": "Default: 1 Min 1 Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685345438318,
        "lastModifiedTime": 1685345438318,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Incorrect parameter(s). Ident may be missing or not in fa_flight_id format or max_pages may be < 1. Request may be for data before earliest date or more than a 7 day span of results was requested.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "flights": [
                        {
                            "ident": "string",
                            "ident_icao": "string",
                            "ident_iata": "string",
                            "fa_flight_id": "string",
                            "operator": "string",
                            "operator_icao": "string",
                            "operator_iata": "string",
                            "flight_number": "string",
                            "registration": "string",
                            "atc_ident": "string",
                            "inbound_fa_flight_id": "string",
                            "codeshares": [
                                "string"
                            ],
                            "codeshares_iata": [
                                "string"
                            ],
                            "blocked": false,
                            "diverted": false,
                            "cancelled": false,
                            "position_only": false,
                            "origin": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "destination": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "departure_delay": 0,
                            "arrival_delay": 0,
                            "filed_ete": 0,
                            "progress_percent": 0,
                            "status": "string",
                            "aircraft_type": "string",
                            "route_distance": 0,
                            "filed_airspeed": 0,
                            "filed_altitude": 0,
                            "route": "string",
                            "baggage_claim": "string",
                            "seats_cabin_business": 0,
                            "seats_cabin_coach": 0,
                            "seats_cabin_first": 0,
                            "gate_origin": "string",
                            "gate_destination": "string",
                            "terminal_origin": "string",
                            "terminal_destination": "string",
                            "type": "General_Aviation",
                            "scheduled_out": "2021-12-31T19:59:59Z",
                            "estimated_out": "2021-12-31T19:59:59Z",
                            "actual_out": "2021-12-31T19:59:59Z",
                            "scheduled_off": "2021-12-31T19:59:59Z",
                            "estimated_off": "2021-12-31T19:59:59Z",
                            "actual_off": "2021-12-31T19:59:59Z",
                            "scheduled_on": "2021-12-31T19:59:59Z",
                            "estimated_on": "2021-12-31T19:59:59Z",
                            "actual_on": "2021-12-31T19:59:59Z",
                            "scheduled_in": "2021-12-31T19:59:59Z",
                            "estimated_in": "2021-12-31T19:59:59Z",
                            "actual_in": "2021-12-31T19:59:59Z",
                            "foresight_predictions_available": true
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95118,
        "executor_type": "THIRDPARTY",
        "executor_name": "getHistoricalInformationForFlightsTrack",
        "executor_version": "v4",
        "executor_display_name": "Get historical information for a flight's track",
        "executor_description": "Returns the track for a historical flight as an array of positions. Data is available from now back to 2011-01-01T00:00:00Z.",
        "executor_category": "History",
        "executor_category_group": "History",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/history/flights/{id}/track",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "The fa_flight_id to fetch  Example: UAL1234-1234567890-airline-0123"
            }
        ],
        "queryParams": [
            {
                "key": "include_estimated_positions",
                "value": "",
                "description": "Whether to include estimated positions in the flight track",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685345231740,
        "lastModifiedTime": 1685345231740,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Incorrect parameter(s). Id parameter may not be fa_flight_id format.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "positions": [
                        {
                            "fa_flight_id": "string",
                            "altitude": 0,
                            "altitude_change": "C",
                            "groundspeed": 0,
                            "heading": 0,
                            "latitude": 0,
                            "longitude": 0,
                            "timestamp": "2021-12-31T19:59:59Z",
                            "update_type": "P"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95115,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAircraftsLastKnownFlight",
        "executor_version": "v4",
        "executor_display_name": "Get aircraft's last known flight",
        "executor_description": "Returns flight info status summary for an aircraft's last known flight given its registration. The search is limited to flights flown since January 1, 2011. On a successful response, the body will contain a flights array with only 1 element. If a user queries a registration with it's last known flight before January 1, 2011, an empty flights array will be returned.",
        "executor_category": "History",
        "executor_category_group": "History",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/history/aircraft/{registration}/last_flight",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "registration",
                "value": "",
                "description": "The registration number of the aircraft to fetch  Example: N199UA"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685344677025,
        "lastModifiedTime": 1685344677025,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Incorrect parameter. Registration parameter may be missing or not the correct format.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "flights": [
                        {
                            "ident": "string",
                            "ident_icao": "string",
                            "ident_iata": "string",
                            "fa_flight_id": "string",
                            "operator": "string",
                            "operator_icao": "string",
                            "operator_iata": "string",
                            "flight_number": "string",
                            "registration": "string",
                            "atc_ident": "string",
                            "inbound_fa_flight_id": "string",
                            "codeshares": [
                                "string"
                            ],
                            "codeshares_iata": [
                                "string"
                            ],
                            "blocked": false,
                            "diverted": false,
                            "cancelled": false,
                            "position_only": false,
                            "origin": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "destination": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "departure_delay": 0,
                            "arrival_delay": 0,
                            "filed_ete": 0,
                            "progress_percent": 0,
                            "status": "string",
                            "aircraft_type": "string",
                            "route_distance": 0,
                            "filed_airspeed": 0,
                            "filed_altitude": 0,
                            "route": "string",
                            "baggage_claim": "string",
                            "seats_cabin_business": 0,
                            "seats_cabin_coach": 0,
                            "seats_cabin_first": 0,
                            "gate_origin": "string",
                            "gate_destination": "string",
                            "terminal_origin": "string",
                            "terminal_destination": "string",
                            "type": "General_Aviation",
                            "scheduled_out": "2021-12-31T19:59:59Z",
                            "estimated_out": "2021-12-31T19:59:59Z",
                            "actual_out": "2021-12-31T19:59:59Z",
                            "scheduled_off": "2021-12-31T19:59:59Z",
                            "estimated_off": "2021-12-31T19:59:59Z",
                            "actual_off": "2021-12-31T19:59:59Z",
                            "scheduled_on": "2021-12-31T19:59:59Z",
                            "estimated_on": "2021-12-31T19:59:59Z",
                            "actual_on": "2021-12-31T19:59:59Z",
                            "scheduled_in": "2021-12-31T19:59:59Z",
                            "estimated_in": "2021-12-31T19:59:59Z",
                            "actual_in": "2021-12-31T19:59:59Z"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95116,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAnImageHistoricalFlightsTrackMap",
        "executor_version": "v4",
        "executor_display_name": "Get an image of a historical flight's track on a map",
        "executor_description": "Returns a historical flight's track as a base64-encoded image. Image can contain a variety of additional data layers beyond just the track. Data is available from now back to 2011-01-01T00:00:00Z.",
        "executor_category": "History",
        "executor_category_group": "History",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/history/flights/{id}/map",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "The fa_flight_id to fetch  Example: UAL1234-1234567890-airline-0123"
            }
        ],
        "queryParams": [
            {
                "key": "height",
                "value": "",
                "description": "Default: 480 Min 1\u2503Max 1500 Height of requested image (pixels)",
                "req": false
            },
            {
                "key": "width",
                "value": "",
                "description": "Default: 640 Min 1\u2503Max 1500 Width of requested image (pixels)",
                "req": false
            },
            {
                "key": "layer_on",
                "value": "",
                "description": "Allowed: US Cities \u2503 european country boundaries \u2503 asia country boundaries \u2503 major airports \u2503 country boundaries \u2503 US state boundaries \u2503 water \u2503 US major roads \u2503 radar \u2503 track \u2503 flights \u2503 airports List of map layers to enable",
                "req": false
            },
            {
                "key": "layer_off",
                "value": "",
                "description": "Allowed: US Cities \u2503 european country boundaries \u2503 asia country boundaries \u2503 major airports \u2503 country boundaries \u2503 US state boundaries \u2503 water \u2503 US major roads \u2503 radar \u2503 track \u2503 flights \u2503 airports List of map layers to disable",
                "req": false
            },
            {
                "key": "show_data_block",
                "value": "",
                "description": "Whether a textual caption containing the ident, type, heading, altitude, origin, and destination should be displayed by the flight's position.",
                "req": false
            },
            {
                "key": "airports_expand_view",
                "value": "",
                "description": "Whether to force zoom area to ensure origin/destination airports are visible. Enabling this flag forcefully enables the show_airports flag as well.",
                "req": false
            },
            {
                "key": "show_airports",
                "value": "",
                "description": "Whether to show the origin/destination airports for the flight as labeled points on the map.",
                "req": false
            },
            {
                "key": "bounding_box",
                "value": "",
                "description": "Manually specify the zoom area of the map using custom bounds. Should be a list of 4 coordinates representing the top, right, bottom, and left sides of the area (in that order).",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685344942806,
        "lastModifiedTime": 1685344942806,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Incorrect parameter (id). Id may be missing or may not be fa_flight_id format. Bounding box corners may be incorrectly defined.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "map": ""
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95117,
        "executor_type": "THIRDPARTY",
        "executor_name": "getHistoricalFlightsFiledRoute",
        "executor_version": "v4",
        "executor_display_name": "Get historical flight's filed route",
        "executor_description": "Returns information about a historical flight's filed route including coordinates, names, and types of fixes along the route. Not all flight routes can be successfully decoded by this endpoint, particularly if the flight is not entirely within the continental U.S. airspace, since this function only has access to navaids within that area. If data on a waypoint is missing then the type will be listed as \"UNKNOWN\". Data is available from now back to 2011-01-01T00:00:00Z.",
        "executor_category": "History",
        "executor_category_group": "History",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/history/flights/{id}/route",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "The fa_flight_id to fetch  Example: UAL1234-1234567890-airline-0123"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685345122466,
        "lastModifiedTime": 1685345122466,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Incorrect parameter(s). Id parameter may not be fa_flight_id format.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "route_distance": "string",
                    "fixes": [
                        {
                            "name": "string",
                            "latitude": 0,
                            "longitude": 0,
                            "distance_from_origin": 0,
                            "distance_this_leg": 0,
                            "distance_to_destination": 0,
                            "outbound_course": 0,
                            "type": "string"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95134,
        "executor_type": "THIRDPARTY",
        "executor_name": "getGlobalFlightDisruptionStatistics",
        "executor_version": "v4",
        "executor_display_name": "Get global flight disruption statistics",
        "executor_description": "Returns overall flight cancellation/delay counts in the specified time period for either all airlines or all airports.",
        "executor_category": "Miscellaneous",
        "executor_category_group": "Miscellaneous",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/disruption_counts/{entity_type}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "entity_type",
                "value": "",
                "description": "The type of entity to get disruption statistics for.  Example: origin"
            }
        ],
        "queryParams": [
            {
                "key": "time_period",
                "value": "",
                "description": "Default: today Allowed: yesterday \u2503 today \u2503 tomorrow \u2503 plus2days \u2503 twoDaysAgo \u2503 minus2plus12hrs \u2503 next36hrs \u2503 week",
                "req": false
            },
            {
                "key": "max_pages",
                "value": "",
                "description": "Default: 1 Min 1 Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685352656218,
        "lastModifiedTime": 1685352656218,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Incorrect parameters. Entity_type and time_period must be one of the specified values. Entity_type cannot be empty.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "entities": [
                        {
                            "cancellations": 0,
                            "delays": 0,
                            "total": 0,
                            "entity_name": "string",
                            "entity_id": "string"
                        }
                    ],
                    "total_cancellations_national": 0,
                    "total_cancellations_worldwide": 0,
                    "total_delays_worldwide": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95133,
        "executor_type": "THIRDPARTY",
        "executor_name": "getInformationAboutAircraftType",
        "executor_version": "v4",
        "executor_display_name": "Get information about an aircraft type",
        "executor_description": "Returns information about an aircraft type, given an ICAO aircraft type designator string. Data returned includes the description, type, manufacturer, engine type, and engine count.",
        "executor_category": "Miscellaneous",
        "executor_category_group": "Miscellaneous",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/aircraft/types/{type}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "type",
                "value": "",
                "description": "The ICAO aircraft type designator for the aircraft to fetch information for  Example: GALX"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685352519841,
        "lastModifiedTime": 1685352519841,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Incorrect parameters. Type must be an ICAO aircraft type designator string.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "manufacturer": "string",
                    "type": "string",
                    "description": "string",
                    "engine_count": 0,
                    "engine_type": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95135,
        "executor_type": "THIRDPARTY",
        "executor_name": "getFlightDisruptionStatisticsForParticularEntity",
        "executor_version": "v4",
        "executor_display_name": "Get flight disruption statistics for a particular entity",
        "executor_description": "Returns flight cancellation/delay counts in the specified time period for a particular airline or airport.",
        "executor_category": "Miscellaneous",
        "executor_category_group": "Miscellaneous",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/disruption_counts/{entity_type}/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "entity_type",
                "value": "",
                "description": "The ICAO code for the airline or ID for the airport (ICAO, IATA, or LID) for which you are fetching disruption statistics. For airport ID, ICAO is highly preferred to prevent ambiguity.  Example: KHOU \u2503 HOU"
            },
            {
                "key": "id",
                "value": "",
                "description": "The type of entity to get disruption statistics for.  Example: origin"
            }
        ],
        "queryParams": [
            {
                "key": "time_period",
                "value": "",
                "description": "Default: today Allowed: yesterday \u2503 today \u2503 tomorrow \u2503 plus2days \u2503 twoDaysAgo \u2503 minus2plus12hrs \u2503 next36hrs \u2503 week",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685352789199,
        "lastModifiedTime": 1685352789199,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Incorrect parameters. Entity_type and time_period must be one of the specified values. Entity_type cannot be empty. id must be a valid operator or airport code.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "cancellations": 0,
                    "delays": 0,
                    "total": 0,
                    "entity_name": "string",
                    "entity_id": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95137,
        "executor_type": "THIRDPARTY",
        "executor_name": "getScheduledFlight",
        "executor_version": "v4",
        "executor_display_name": "Get scheduled flights",
        "executor_description": "Returns scheduled flights that have been published by airlines. These schedules are available for up to three months in the past as well as one year into the future.",
        "executor_category": "Miscellaneous",
        "executor_category_group": "Miscellaneous",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/schedules/{date_start}/{date_end}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "date_start",
                "value": "",
                "description": "Datetime or date of earliest scheduled flight departure to return. This must be no earlier than 3 months in the past and cannot be more than 3 weeks before date_end. Violating either constraint will result in an error. If using date instead of datetime, then the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31"
            },
            {
                "key": "date_end",
                "value": "",
                "description": "Datetime or date of latest scheduled flight departure to return. This must be no later than 1 year in the future and cannot be more than 3 weeks after date_start. Violating either constraint will result in an error. If using date instead of datetime, then the time will default to 00:00:00Z. Thus, the next day's date should be specified if one day of data is desired when using date instead of datetime.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31"
            }
        ],
        "queryParams": [
            {
                "key": "origin",
                "value": "",
                "description": "Only return flights with this origin airport. ICAO or IATA airport codes can be provided.  Example: KIAH \u2503 IAH",
                "req": false
            },
            {
                "key": "destination",
                "value": "",
                "description": "Only return flights with this destination airport. ICAO or IATA airport codes can be provided.  Example: KIAH \u2503 IAH",
                "req": false
            },
            {
                "key": "airline",
                "value": "",
                "description": "Only return flights flown by this carrier. ICAO or IATA carrier codes can be provided.  Example: UAL \u2503 UA",
                "req": false
            },
            {
                "key": "flight_number",
                "value": "",
                "description": "Only return flights with this flight number.",
                "req": false
            },
            {
                "key": "include_codeshares",
                "value": "",
                "description": "Flag indicating whether ticketing codeshares should be returned as well.",
                "req": false
            },
            {
                "key": "include_regional",
                "value": "",
                "description": "Flag indicating whether regional codeshares should be returned as well.",
                "req": false
            },
            {
                "key": "max_pages",
                "value": "",
                "description": "Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685353012585,
        "lastModifiedTime": 1685353012585,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Incorrect parameter(s). Date_start and date_end must be within time constraints and ISO 8601 format (ex. 1970-01-01T00:00:00Z). Airline and flight_number, if present, must be valid.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "scheduled": [
                        {
                            "ident": "string",
                            "ident_icao": "string",
                            "ident_iata": "string",
                            "actual_ident": "string",
                            "actual_ident_icao": "string",
                            "actual_ident_iata": "string",
                            "aircraft_type": "string",
                            "scheduled_in": "2021-12-31T19:59:59Z",
                            "scheduled_out": "2021-12-31T19:59:59Z",
                            "origin": "string",
                            "origin_icao": "string",
                            "origin_iata": "string",
                            "origin_lid": "string",
                            "destination": "string",
                            "destination_icao": "string",
                            "destination_iata": "string",
                            "destination_lid": "string",
                            "fa_flight_id": "string",
                            "meal_service": "string",
                            "seats_cabin_business": 0,
                            "seats_cabin_coach": 0,
                            "seats_cabin_first": 0
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95120,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTheOwnerOfAnAircraft",
        "executor_version": "v4",
        "executor_display_name": "Get the owner of an aircraft",
        "executor_description": "Returns information about the owner of an aircraft, given a flight number or aircraft registration. Data returned includes owner's name, location (typically city and state), and website, if any. Codeshares and alternate idents are automatically searched.",
        "executor_category": "Miscellaneous",
        "executor_category_group": "Miscellaneous",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/aircraft/{ident}/owner",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "ident",
                "value": "",
                "description": "The ident or registration of the aircraft  Example: RPA4854 \u2503 N123HQ"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685345597693,
        "lastModifiedTime": 1685345597693,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Incorrect or missing ident. It should be a flight number or a tail number.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "owner": {
                        "name": "string",
                        "location": "string",
                        "location2": "string",
                        "website": "string"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95087,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllOperators",
        "executor_version": "v4",
        "executor_display_name": "Get all operators",
        "executor_description": "Returns list of operator references (ICAO/IATA codes and URLs to access more information).",
        "executor_category": "Operators",
        "executor_category_group": "Operators",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/operators",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "max_pages",
                "value": "",
                "description": "Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685342238683,
        "lastModifiedTime": 1685342238683,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "List of operators.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "operators": [
                        {
                            "code": "string",
                            "operator_info_url": ""
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95086,
        "executor_type": "THIRDPARTY",
        "executor_name": "Get all operators",
        "executor_version": "v4",
        "executor_display_name": "Get all operators",
        "executor_description": "Returns list of operator references (ICAO/IATA codes and URLs to access more information).",
        "executor_category": "Operators",
        "executor_category_group": "Operators",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/operators",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "max_pages",
                "value": "",
                "description": "Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685342212711,
        "lastModifiedTime": 1685342212711,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "List of operators.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "operators": [
                        {
                            "code": "string",
                            "operator_info_url": ""
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95089,
        "executor_type": "THIRDPARTY",
        "executor_name": "getCanonicalCodeOperatorForAPIUsage",
        "executor_version": "v4",
        "executor_display_name": "Get the canonical code of an operator for API usage",
        "executor_description": "Returns all possible matches for a given operator code (ICAO or IATA). An optional country code can be provided to refine ambiguous IATA codes to a single result. The country code should represent a country the operator operates within.",
        "executor_category": "Operators",
        "executor_category_group": "Operators",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/operators/{id}/canonical",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "The ICAO or IATA identifier for an operator. The use of ICAO code is strongly preferred. In the case of non-unique IATA codes the operator with the lexicographically first ICAO code will be returned.  Example: UAL"
            }
        ],
        "queryParams": [
            {
                "key": "country_code",
                "value": "",
                "description": "An ISO 3166-1 alpha-2 country code.  Example: US",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685342510381,
        "lastModifiedTime": 1685342510381,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "operators": [
                        {
                            "id": "string",
                            "id_type": "icao"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter (id or country_code). Id must be a valid operator code and cannot be empty. Country code must represent a country the operator operates within.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "No such operator exists.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95091,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllOperatorsFlights",
        "executor_version": "v4",
        "executor_display_name": "Get all of an operator's flights",
        "executor_description": "Returns all recent and upcoming flights for this operator. Behaviour for optional start and end dates for each type returned (scheduled, arrivals, enroute) match the behaviour in their corresponding endpoints.",
        "executor_category": "Operators",
        "executor_category_group": "Operators",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/operators/{id}/flights",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "The ICAO or IATA identifier for an operator. The use of ICAO code is strongly preferred. In the case of non-unique IATA codes the operator with the lexicographically first ICAO code will be returned.  Example: UAL"
            }
        ],
        "queryParams": [
            {
                "key": "start",
                "value": "",
                "description": "The starting date range for flight results. The format is ISO8601 date or datetime, and the bound is inclusive. Specified start date must be no further than 10 days in the past and 2 days in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The ending date range for flight results. The format is ISO8601 date or datetime, and the bound is exclusive. Specified end date must be no further than 10 days in the past and 2 days in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "max_pages",
                "value": "",
                "description": "Default: 1 Min 1 Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685342742367,
        "lastModifiedTime": 1685342742367,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Operator's flights.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "scheduled": [
                        {
                            "ident": "string",
                            "ident_icao": "string",
                            "ident_iata": "string",
                            "fa_flight_id": "string",
                            "operator": "string",
                            "operator_icao": "string",
                            "operator_iata": "string",
                            "flight_number": "string",
                            "registration": "string",
                            "atc_ident": "string",
                            "inbound_fa_flight_id": "string",
                            "codeshares": [
                                "string"
                            ],
                            "codeshares_iata": [
                                "string"
                            ],
                            "blocked": false,
                            "diverted": false,
                            "cancelled": false,
                            "position_only": false,
                            "origin": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "destination": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "departure_delay": 0,
                            "arrival_delay": 0,
                            "filed_ete": 0,
                            "progress_percent": 0,
                            "status": "string",
                            "aircraft_type": "string",
                            "route_distance": 0,
                            "filed_airspeed": 0,
                            "filed_altitude": 0,
                            "route": "string",
                            "baggage_claim": "string",
                            "seats_cabin_business": 0,
                            "seats_cabin_coach": 0,
                            "seats_cabin_first": 0,
                            "gate_origin": "string",
                            "gate_destination": "string",
                            "terminal_origin": "string",
                            "terminal_destination": "string",
                            "type": "General_Aviation",
                            "scheduled_out": "2021-12-31T19:59:59Z",
                            "estimated_out": "2021-12-31T19:59:59Z",
                            "actual_out": "2021-12-31T19:59:59Z",
                            "scheduled_off": "2021-12-31T19:59:59Z",
                            "estimated_off": "2021-12-31T19:59:59Z",
                            "actual_off": "2021-12-31T19:59:59Z",
                            "scheduled_on": "2021-12-31T19:59:59Z",
                            "estimated_on": "2021-12-31T19:59:59Z",
                            "actual_on": "2021-12-31T19:59:59Z",
                            "scheduled_in": "2021-12-31T19:59:59Z",
                            "estimated_in": "2021-12-31T19:59:59Z",
                            "actual_in": "2021-12-31T19:59:59Z"
                        }
                    ],
                    "arrivals": [
                        {
                            "ident": "string",
                            "ident_icao": "string",
                            "ident_iata": "string",
                            "fa_flight_id": "string",
                            "operator": "string",
                            "operator_icao": "string",
                            "operator_iata": "string",
                            "flight_number": "string",
                            "registration": "string",
                            "atc_ident": "string",
                            "inbound_fa_flight_id": "string",
                            "codeshares": [
                                "string"
                            ],
                            "codeshares_iata": [
                                "string"
                            ],
                            "blocked": false,
                            "diverted": false,
                            "cancelled": false,
                            "position_only": false,
                            "origin": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "destination": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "departure_delay": 0,
                            "arrival_delay": 0,
                            "filed_ete": 0,
                            "progress_percent": 0,
                            "status": "string",
                            "aircraft_type": "string",
                            "route_distance": 0,
                            "filed_airspeed": 0,
                            "filed_altitude": 0,
                            "route": "string",
                            "baggage_claim": "string",
                            "seats_cabin_business": 0,
                            "seats_cabin_coach": 0,
                            "seats_cabin_first": 0,
                            "gate_origin": "string",
                            "gate_destination": "string",
                            "terminal_origin": "string",
                            "terminal_destination": "string",
                            "type": "General_Aviation",
                            "scheduled_out": "2021-12-31T19:59:59Z",
                            "estimated_out": "2021-12-31T19:59:59Z",
                            "actual_out": "2021-12-31T19:59:59Z",
                            "scheduled_off": "2021-12-31T19:59:59Z",
                            "estimated_off": "2021-12-31T19:59:59Z",
                            "actual_off": "2021-12-31T19:59:59Z",
                            "scheduled_on": "2021-12-31T19:59:59Z",
                            "estimated_on": "2021-12-31T19:59:59Z",
                            "actual_on": "2021-12-31T19:59:59Z",
                            "scheduled_in": "2021-12-31T19:59:59Z",
                            "estimated_in": "2021-12-31T19:59:59Z",
                            "actual_in": "2021-12-31T19:59:59Z"
                        }
                    ],
                    "enroute": [
                        {
                            "ident": "string",
                            "ident_icao": "string",
                            "ident_iata": "string",
                            "fa_flight_id": "string",
                            "operator": "string",
                            "operator_icao": "string",
                            "operator_iata": "string",
                            "flight_number": "string",
                            "registration": "string",
                            "atc_ident": "string",
                            "inbound_fa_flight_id": "string",
                            "codeshares": [
                                "string"
                            ],
                            "codeshares_iata": [
                                "string"
                            ],
                            "blocked": false,
                            "diverted": false,
                            "cancelled": false,
                            "position_only": false,
                            "origin": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "destination": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "departure_delay": 0,
                            "arrival_delay": 0,
                            "filed_ete": 0,
                            "progress_percent": 0,
                            "status": "string",
                            "aircraft_type": "string",
                            "route_distance": 0,
                            "filed_airspeed": 0,
                            "filed_altitude": 0,
                            "route": "string",
                            "baggage_claim": "string",
                            "seats_cabin_business": 0,
                            "seats_cabin_coach": 0,
                            "seats_cabin_first": 0,
                            "gate_origin": "string",
                            "gate_destination": "string",
                            "terminal_origin": "string",
                            "terminal_destination": "string",
                            "type": "General_Aviation",
                            "scheduled_out": "2021-12-31T19:59:59Z",
                            "estimated_out": "2021-12-31T19:59:59Z",
                            "actual_out": "2021-12-31T19:59:59Z",
                            "scheduled_off": "2021-12-31T19:59:59Z",
                            "estimated_off": "2021-12-31T19:59:59Z",
                            "actual_off": "2021-12-31T19:59:59Z",
                            "scheduled_on": "2021-12-31T19:59:59Z",
                            "estimated_on": "2021-12-31T19:59:59Z",
                            "actual_on": "2021-12-31T19:59:59Z",
                            "scheduled_in": "2021-12-31T19:59:59Z",
                            "estimated_in": "2021-12-31T19:59:59Z",
                            "actual_in": "2021-12-31T19:59:59Z"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter (id). Id must be a valid operator code and cannot be empty.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "No such operator exists.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95094,
        "executor_type": "THIRDPARTY",
        "executor_name": "getScheduledFlights",
        "executor_version": "v4",
        "executor_display_name": "Get scheduled flights",
        "executor_description": "Returns flights for this operator that are scheduled to depart or have recently been cancelled, ordered by estimated_off (or scheduled_off if estimated_off is missing) ascending. The optional start and end parameters will be compared against scheduled_off to limit the flights returned. If start is not specified, flights with a scheduled_off or cancellation time no further than two hours into the past will be returned. If end is not specified, there is no guaranteed bound for how far in the future scheduled flights will be returned (it will typically be around 48 hours in the future for commercial flights, though).",
        "executor_category": "Operators",
        "executor_category_group": "Operators",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/operators/{id}/flights/scheduled",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "The ICAO or IATA identifier for an operator. The use of ICAO code is strongly preferred. In the case of non-unique IATA codes the operator with the lexicographically first ICAO code will be returned.  Example: UAL"
            }
        ],
        "queryParams": [
            {
                "key": "start",
                "value": "",
                "description": "The starting date range for flight results. The format is ISO8601 date or datetime, and the bound is inclusive. Specified start date must be no further than 10 days in the past and 2 days in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The ending date range for flight results. The format is ISO8601 date or datetime, and the bound is exclusive. Specified end date must be no further than 10 days in the past and 2 days in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "max_pages",
                "value": "",
                "description": "Default: 1 Min 1 Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685343068072,
        "lastModifiedTime": 1685343068072,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "scheduled": [
                        {
                            "ident": "string",
                            "ident_icao": "string",
                            "ident_iata": "string",
                            "fa_flight_id": "string",
                            "operator": "string",
                            "operator_icao": "string",
                            "operator_iata": "string",
                            "flight_number": "string",
                            "registration": "string",
                            "atc_ident": "string",
                            "inbound_fa_flight_id": "string",
                            "codeshares": [
                                "string"
                            ],
                            "codeshares_iata": [
                                "string"
                            ],
                            "blocked": false,
                            "diverted": false,
                            "cancelled": false,
                            "position_only": false,
                            "origin": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "destination": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "departure_delay": 0,
                            "arrival_delay": 0,
                            "filed_ete": 0,
                            "progress_percent": 0,
                            "status": "string",
                            "aircraft_type": "string",
                            "route_distance": 0,
                            "filed_airspeed": 0,
                            "filed_altitude": 0,
                            "route": "string",
                            "baggage_claim": "string",
                            "seats_cabin_business": 0,
                            "seats_cabin_coach": 0,
                            "seats_cabin_first": 0,
                            "gate_origin": "string",
                            "gate_destination": "string",
                            "terminal_origin": "string",
                            "terminal_destination": "string",
                            "type": "General_Aviation",
                            "scheduled_out": "2021-12-31T19:59:59Z",
                            "estimated_out": "2021-12-31T19:59:59Z",
                            "actual_out": "2021-12-31T19:59:59Z",
                            "scheduled_off": "2021-12-31T19:59:59Z",
                            "estimated_off": "2021-12-31T19:59:59Z",
                            "actual_off": "2021-12-31T19:59:59Z",
                            "scheduled_on": "2021-12-31T19:59:59Z",
                            "estimated_on": "2021-12-31T19:59:59Z",
                            "actual_on": "2021-12-31T19:59:59Z",
                            "scheduled_in": "2021-12-31T19:59:59Z",
                            "estimated_in": "2021-12-31T19:59:59Z",
                            "actual_in": "2021-12-31T19:59:59Z"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter (id). Id must be a valid operator code and cannot be empty.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "No such operator exists.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95093,
        "executor_type": "THIRDPARTY",
        "executor_name": "getEnRouteFlights",
        "executor_version": "v4",
        "executor_display_name": "Get en route flights",
        "executor_description": "Returns flights for this operator that have departed and are currently en route, ordered by estimated_on ascending. The optional start and end parameters will be compared against estimated_on to limit the flights returned. The start parameter's default value is 48 hours before the current time (this accounts for delayed flights). There is no default end bound.",
        "executor_category": "Operators",
        "executor_category_group": "Operators",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/operators/{id}/flights/enroute",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "The ICAO or IATA identifier for an operator. The use of ICAO code is strongly preferred. In the case of non-unique IATA codes the operator with the lexicographically first ICAO code will be returned.  Example: UAL"
            }
        ],
        "queryParams": [
            {
                "key": "start",
                "value": "",
                "description": "The starting date range for flight results. The format is ISO8601 date or datetime, and the bound is inclusive. Specified start date must be no further than 10 days in the past and 2 days in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The ending date range for flight results. The format is ISO8601 date or datetime, and the bound is exclusive. Specified end date must be no further than 10 days in the past and 2 days in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "max_pages",
                "value": "",
                "description": "Default: 1 Min 1 Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685342980058,
        "lastModifiedTime": 1685342980058,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "En route flights.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "enroute": [
                        {
                            "ident": "string",
                            "ident_icao": "string",
                            "ident_iata": "string",
                            "fa_flight_id": "string",
                            "operator": "string",
                            "operator_icao": "string",
                            "operator_iata": "string",
                            "flight_number": "string",
                            "registration": "string",
                            "atc_ident": "string",
                            "inbound_fa_flight_id": "string",
                            "codeshares": [
                                "string"
                            ],
                            "codeshares_iata": [
                                "string"
                            ],
                            "blocked": false,
                            "diverted": false,
                            "cancelled": false,
                            "position_only": false,
                            "origin": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "destination": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "departure_delay": 0,
                            "arrival_delay": 0,
                            "filed_ete": 0,
                            "progress_percent": 0,
                            "status": "string",
                            "aircraft_type": "string",
                            "route_distance": 0,
                            "filed_airspeed": 0,
                            "filed_altitude": 0,
                            "route": "string",
                            "baggage_claim": "string",
                            "seats_cabin_business": 0,
                            "seats_cabin_coach": 0,
                            "seats_cabin_first": 0,
                            "gate_origin": "string",
                            "gate_destination": "string",
                            "terminal_origin": "string",
                            "terminal_destination": "string",
                            "type": "General_Aviation",
                            "scheduled_out": "2021-12-31T19:59:59Z",
                            "estimated_out": "2021-12-31T19:59:59Z",
                            "actual_out": "2021-12-31T19:59:59Z",
                            "scheduled_off": "2021-12-31T19:59:59Z",
                            "estimated_off": "2021-12-31T19:59:59Z",
                            "actual_off": "2021-12-31T19:59:59Z",
                            "scheduled_on": "2021-12-31T19:59:59Z",
                            "estimated_on": "2021-12-31T19:59:59Z",
                            "actual_on": "2021-12-31T19:59:59Z",
                            "scheduled_in": "2021-12-31T19:59:59Z",
                            "estimated_in": "2021-12-31T19:59:59Z",
                            "actual_in": "2021-12-31T19:59:59Z"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter (id). Id must be a valid operator code and cannot be empty.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "No such operator exists.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95088,
        "executor_type": "THIRDPARTY",
        "executor_name": "getStaticInformationForAnOperator",
        "executor_version": "v4",
        "executor_display_name": "Get static information for an operator",
        "executor_description": "Returns information for an operator such as their name, ICAO/IATA codes, headquarter location, etc.",
        "executor_category": "Operators",
        "executor_category_group": "Operators",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/operators/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "The ICAO or IATA identifier for an operator. The use of ICAO code is strongly preferred. In the case of non-unique IATA codes the operator with the lexicographically first ICAO code will be returned.  Example: UAL"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685342379764,
        "lastModifiedTime": 1685342379764,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "icao": "string",
                    "iata": "string",
                    "callsign": "string",
                    "name": "string",
                    "country": "string",
                    "location": "string",
                    "phone": "string",
                    "shortname": "string",
                    "url": "string",
                    "wiki_url": "string",
                    "alternatives": [
                        {
                            "icao": "string",
                            "iata": "string",
                            "callsign": "string",
                            "name": "string",
                            "country": "string",
                            "location": "string",
                            "phone": "string",
                            "shortname": "string",
                            "url": "string",
                            "wiki_url": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter (id). Id must be a valid operator code and cannot be empty.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "No such operator exists.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 95092,
        "executor_type": "THIRDPARTY",
        "executor_name": "getArrivedFlights",
        "executor_version": "v4",
        "executor_display_name": "Get arrived flights",
        "executor_description": "Returns flights for this operator that have departed and subsequently arrived, ordered by actual_on descending. The optional start and end parameters will be compared against actual_on to limit the flights returned. The start parameter's default value is 24 hours before the current time. The end parameter's default value is the current time.",
        "executor_category": "Operators",
        "executor_category_group": "Operators",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/operators/{id}/flights/arrivals",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "The ICAO or IATA identifier for an operator. The use of ICAO code is strongly preferred. In the case of non-unique IATA codes the operator with the lexicographically first ICAO code will be returned.  Example: UAL"
            }
        ],
        "queryParams": [
            {
                "key": "start",
                "value": "",
                "description": "The starting date range for flight results. The format is ISO8601 date or datetime, and the bound is inclusive. Specified start date must be no further than 10 days in the past and 2 days in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The ending date range for flight results. The format is ISO8601 date or datetime, and the bound is exclusive. Specified end date must be no further than 10 days in the past and 2 days in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "max_pages",
                "value": "",
                "description": "Default: 1 Min 1 Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685342859027,
        "lastModifiedTime": 1685342859027,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Arrived flights.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "arrivals": [
                        {
                            "ident": "string",
                            "ident_icao": "string",
                            "ident_iata": "string",
                            "fa_flight_id": "string",
                            "operator": "string",
                            "operator_icao": "string",
                            "operator_iata": "string",
                            "flight_number": "string",
                            "registration": "string",
                            "atc_ident": "string",
                            "inbound_fa_flight_id": "string",
                            "codeshares": [
                                "string"
                            ],
                            "codeshares_iata": [
                                "string"
                            ],
                            "blocked": false,
                            "diverted": false,
                            "cancelled": false,
                            "position_only": false,
                            "origin": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "destination": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "departure_delay": 0,
                            "arrival_delay": 0,
                            "filed_ete": 0,
                            "progress_percent": 0,
                            "status": "string",
                            "aircraft_type": "string",
                            "route_distance": 0,
                            "filed_airspeed": 0,
                            "filed_altitude": 0,
                            "route": "string",
                            "baggage_claim": "string",
                            "seats_cabin_business": 0,
                            "seats_cabin_coach": 0,
                            "seats_cabin_first": 0,
                            "gate_origin": "string",
                            "gate_destination": "string",
                            "terminal_origin": "string",
                            "terminal_destination": "string",
                            "type": "General_Aviation",
                            "scheduled_out": "2021-12-31T19:59:59Z",
                            "estimated_out": "2021-12-31T19:59:59Z",
                            "actual_out": "2021-12-31T19:59:59Z",
                            "scheduled_off": "2021-12-31T19:59:59Z",
                            "estimated_off": "2021-12-31T19:59:59Z",
                            "actual_off": "2021-12-31T19:59:59Z",
                            "scheduled_on": "2021-12-31T19:59:59Z",
                            "estimated_on": "2021-12-31T19:59:59Z",
                            "actual_on": "2021-12-31T19:59:59Z",
                            "scheduled_in": "2021-12-31T19:59:59Z",
                            "estimated_in": "2021-12-31T19:59:59Z",
                            "actual_in": "2021-12-31T19:59:59Z"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter (id). Id must be a valid operator code and cannot be empty.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "No such operator exists.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93800,
        "executor_type": "THIRDPARTY",
        "executor_name": "getFlightsCurrentPositionIncludingForesightData",
        "executor_version": "v4",
        "executor_display_name": "Get flights current position including Foresight data",
        "executor_description": "Returns flight positions based on geospatial search parameters. This allows you to locate flights that have ever flown within a specific a latitude/longitude box, groundspeed, and altitude. It takes search terms in a single string comprising of {operator key value} elements and returns an array of flight structures. Each search term must be enclosed in curly braces. Multiple search terms can be combined in an implicit boolean \"and\" by separating the terms with at least one space. This function only searches flight data representing approximately the last 24 hours.<div class=\"m-markdown\">  <p>The supported operators include (note that operators take different numbers of arguments):</p> <ul> <li>false - results must have the specified boolean key set to a value of false. Example: {false preferred}</li> <li>true - results must have the specified boolean key set to a value of true. Example: {true preferred}</li> <li>null - results must have the specified key set to a null value. Example: {null waypoints}</li> <li>notnull - results must have the specified key not set to a null value. Example: {notnull aircraftType}</li> <li>= - results must have a key that exactly matches the specified value. Example: {= fp C172}</li> <li>!= - results must have a key that must not match the specified value. Example: {!= prefix H}</li> <li>&lt; - results must have a key that is lexicographically less-than a specified value. Example: {&lt; arrivalTime 1276811040}</li> <li>&gt; - results must have a key that is lexicographically greater-than a specified value. Example: {&gt; speed 500}</li> <li>&lt;= - results must have a key that is lexicographically less-than-or-equal-to a specified value. Example: {&lt;= alt 8000}</li> <li>&gt;= - results must have a key that is lexicographically greater-than-or-equal-to a specified value.</li> <li>match - results must have a key that matches against a case-insensitive wildcard pattern. Example: {match ident AAL*}</li> <li>notmatch - results must have a key that does not match against a case-insensitive wildcard pattern. Example: {notmatch aircraftType B76*}</li> <li>range - results must have a key that is numerically between the two specified values. Example: {range alt 8000 20000}</li> <li>in - results must have a key that exactly matches one of the specified values. Example: {in orig {KLAX KBUR KSNA KLGB}}</li> </ul> <p>The supported key names include (note that not all of these key names are returned in the result structure, and some have slightly different names):</p> <ul> <li>alt - Altitude, measured in hundreds of feet or Flight Level.</li> <li>altChange - a one-character code indicating the change in altitude.</li> <li>cid - a three-character cid code</li> <li>clock - UNIX epoch timestamp seconds since 1970</li> <li>fp - unique identifier assigned by FlightAware for this flight, aka fa_flight_id.</li> <li>gs - ground speed, measured in kts.</li> <li>lat - latitude of the reported position.</li> <li>lon - longitude of the reported position</li> <li>updateType - source of the last reported position (P=projected, O=oceanic, Z=radar, A=ADS-B, M=multilateration, D=datalink, X=surface and near surface (ADS-B and ASDE-X), S=space-based)</li> </ul> <!----></div>",
        "executor_category": "Foresight",
        "executor_category_group": "Foresight",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/foresight/flights/{id}/position",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "The fa_flight_id to fetch. If looking for data from more than 10 days ago, please use the corresponding historical endpoint.  Example: UAL1234-1234567890-airline-0123"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684497376653,
        "lastModifiedTime": 1684497376653,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "ident": "string",
                    "ident_icao": "string",
                    "ident_iata": "string",
                    "fa_flight_id": "string",
                    "origin": {
                        "code": "string",
                        "code_icao": "string",
                        "code_iata": "string",
                        "code_lid": "string",
                        "timezone": "America/New_York",
                        "name": "LaGuardia",
                        "city": "New York",
                        "airport_info_url": ""
                    },
                    "destination": {
                        "code": "string",
                        "code_icao": "string",
                        "code_iata": "string",
                        "code_lid": "string",
                        "timezone": "America/New_York",
                        "name": "LaGuardia",
                        "city": "New York",
                        "airport_info_url": ""
                    },
                    "waypoints": [
                        0
                    ],
                    "first_position_time": "2021-12-31T19:59:59Z",
                    "last_position": {
                        "fa_flight_id": "string",
                        "altitude": 0,
                        "altitude_change": "C",
                        "groundspeed": 0,
                        "heading": 0,
                        "latitude": 0,
                        "longitude": 0,
                        "timestamp": "2021-12-31T19:59:59Z",
                        "update_type": "P"
                    },
                    "bounding_box": [
                        0
                    ],
                    "ident_prefix": "string",
                    "aircraft_type": "string",
                    "actual_off": "2021-12-31T19:59:59Z",
                    "actual_on": "2021-12-31T19:59:59Z",
                    "foresight_predictions_available": true,
                    "predicted_out": "2021-12-31T19:59:59Z",
                    "predicted_off": "2021-12-31T19:59:59Z",
                    "predicted_on": "2021-12-31T19:59:59Z",
                    "predicted_in": "2021-12-31T19:59:59Z",
                    "predicted_out_source": "Foresight",
                    "predicted_off_source": "Historical Average",
                    "predicted_on_source": "Historical Average",
                    "predicted_in_source": "Foresight",
                    "predicted_taxi_out_duration": 1234,
                    "predicted_taxi_out_duration_source": "Foresight"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter (id). Id may be missing or may not be fa_flight_id format. Query may be incorrect.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93803,
        "executor_type": "THIRDPARTY",
        "executor_name": "searchForFlightsResponsesIncludeForesightData",
        "executor_version": "v4",
        "executor_display_name": "Search for flights, responses include Foresight data",
        "executor_description": "Returns currently or recently airborne flights based on geospatial search parameters. If available, flights' predicted OOOI fields will be set.",
        "executor_category": "Foresight",
        "executor_category_group": "Foresight",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/foresight/flights/search/advanced",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "query",
                "value": "",
                "description": "Query to search for airborne or recently arrived flights. It should not exceed 1000 bytes in length. Search criteria is only applied to the most recent position for a flight. This function only searches flights within approximately the last 24 hours. The supported operators include (note that operators take different numbers of arguments):  false - results must have the specified boolean key set to a value of false. Example: {false arrived} true - results must have the specified boolean key set to a value of true. Example: {true lifeguard} null - results must have the specified key set to a null value. Example: {null waypoints} notnull - results must have the specified key not set to a null value. Example: {notnull aircraftType} = - results must have a key that exactly matches the specified value. Example: {= aircraftType C172} != - results must have a key that must not match the specified value. Example: {!= prefix H} < - results must have a key that is lexicographically less-than a specified value. Example: {< arrivalTime 1276811040} > - results must have a key that is lexicographically greater-than a specified value. Example: {> speed 500} <= - results must have a key that is lexicographically less-than-or-equal-to a specified value. Example: {<= alt 8000} >= - results must have a key that is lexicographically greater-than-or-equal-to a specified value. match - results must have a key that matches against a case-insensitive wildcard pattern. Example: {match ident AAL*} notmatch - results must have a key that does not match against a case-insensitive wildcard pattern. Example: {notmatch aircraftType B76*} range - results must have a key that is numerically between the two specified values. Example: {range alt 8000 20000} in - results must have a key that exactly matches one of the specified values. Example: {in orig {KLAX KBUR KSNA KLGB}} orig_or_dest - results must have either the origin or destination key exactly match one of the specified values. Example: {orig_or_dest {KLAX KBUR KSNA KLGB}} airline - results will only include airline flight if the argument is 1, or will only include GA flights if the argument is 0. Example: {airline 1} aircraftType - results must have an aircraftType key that matches one of the specified case-insensitive wildcard patterns. Example: {aircraftType {B76* B77*}} ident - results must have an ident key that matches one of the specified case-insensitive wildcard patterns. Example: {ident {N123* N456* AAL* UAL*}} ident_or_reg - results must have an ident key or was known to be operated by an aircraft registration that matches one of the specified case-insensitive wildcard patterns. Example: {ident_or_reg {N123* N456* AAL* UAL*}} The supported key names include (note that not all of these key names are returned in the result structure, and some have slightly different names):  actualDepartureTime - Actual time of departure, or null if not departed yet. UNIX epoch timestamp seconds since 1970 aircraftType - aircraft type ID (for example: B763) alt - altitude at last reported position (hundreds of feet or Flight Level) altChange - altitude change indication (for example: \"C\" if climbing, \"D\" if descending, and empty if it is level) arrivalTime - Actual time of arrival, or null if not arrived yet. UNIX epoch timestamp seconds since 1970 arrived - true if the flight has arrived at its destination. cancelled - true if the flight has been cancelled. The meaning of cancellation is that the flight is no longer being tracked by FlightAware. There are a number of reasons a flight may be cancelled including cancellation by the airline, but that will not always be the case. cdt - Controlled Departure Time, set if there is a ground hold on the flight. UNIX epoch timestamp seconds since 1970 clock - Time of last received position. UNIX epoch timestamp seconds since 1970 cta - Controlled Time of Arrival, set if there is a ground hold on the flight. UNIX epoch timestamp seconds since 1970 dest - ICAO airport code of destination (for example: KLAX) edt - Estimated Departure Time. Epoch timestamp seconds since 1970 eta - Estimated Time of Arrival. Epoch timestamp seconds since 1970 fdt - Field Departure Time. UNIX epoch timestamp seconds since 1970 firstPositionTime - Time when first reported position was received, or 0 if no position has been received yet. Epoch timestamp seconds since 1970 fixes - intersections and/or VORs along the route (for example: SLS AMERO ARTOM VODIR NOTOS ULAPA ACA NUXCO OLULA PERAS ALIPO UPN GDL KEDMA BRISA CUL PERTI CEN PPE ALTAR ASUTA JLI RONLD LAADY WYVIL OLDEE RAL PDZ ARNES BASET WELLZ CIVET) fp - unique identifier assigned by FlightAware for this flight, aka fa_flight_id. gs - ground speed at last reported position, in kts. heading - direction of travel at last reported position. hiLat - highest latitude travelled by flight. hiLon - highest longitude travelled by flight. ident - flight identifier or registration of aircraft. lastPositionTime - Time when last reported position was received, or 0 if no position has been received yet. Epoch timestamp seconds since 1970. lat - latitude of last reported position. lifeguard - true if a \"lifeguard\" rescue flight. lon - longitude of last reported position. lowLat - lowest latitude travelled by flight. lowLon - lowest longitude travelled by flight. ogta - Original Time of Arrival. UNIX epoch timestamp seconds since 1970 ogtd - Original Time of Departure. UNIX epoch timestamp seconds since 1970 orig - ICAO airport code of origin (for example: KIAH) physClass - physical class (for example: J is jet) prefix - A one or two character identifier prefix code (common values: G or GG Medevac, L Lifeguard, A Air Taxi, H Heavy, M Medium). speed - ground speed, in kts. status - Single letter code for current flight status, can be S Scheduled, F Filed, A Active, Z Completed, or X Cancelled. updateType - data source of last position (P=projected, O=oceanic, Z=radar, A=ADS-B, M=multilateration, D=datalink, X=surface and near surface (ADS-B and ASDE-X), S=space-based). waypoints - all of the intersections and VORs comprising the route Example: {orig_or_dest {KLAX KBUR KSNA KLGB}} {<= alt 8000} {match ident AAL*}",
                "req": false
            },
            {
                "key": "max_pages",
                "value": "",
                "description": "Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684498028231,
        "lastModifiedTime": 1684498028231,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "flights": [
                        {
                            "ident": "string",
                            "ident_icao": "string",
                            "ident_iata": "string",
                            "fa_flight_id": "string",
                            "origin": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "destination": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "waypoints": [
                                0
                            ],
                            "first_position_time": "2021-12-31T19:59:59Z",
                            "last_position": {
                                "fa_flight_id": "string",
                                "altitude": 0,
                                "altitude_change": "C",
                                "groundspeed": 0,
                                "heading": 0,
                                "latitude": 0,
                                "longitude": 0,
                                "timestamp": "2021-12-31T19:59:59Z",
                                "update_type": "P"
                            },
                            "bounding_box": [
                                0
                            ],
                            "ident_prefix": "string",
                            "aircraft_type": "string",
                            "actual_off": "2021-12-31T19:59:59Z",
                            "actual_on": "2021-12-31T19:59:59Z",
                            "foresight_predictions_available": true,
                            "predicted_out": "2021-12-31T19:59:59Z",
                            "predicted_off": "2021-12-31T19:59:59Z",
                            "predicted_on": "2021-12-31T19:59:59Z",
                            "predicted_in": "2021-12-31T19:59:59Z",
                            "predicted_out_source": "Foresight",
                            "predicted_off_source": "Historical Average",
                            "predicted_on_source": "Historical Average",
                            "predicted_in_source": "Foresight",
                            "predicted_taxi_out_duration": 1234,
                            "predicted_taxi_out_duration_source": "Foresight"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter(s). Query may be incorrect.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 93801,
        "executor_type": "THIRDPARTY",
        "executor_name": "getInformationForFlightIncludingForesightData",
        "executor_version": "v4",
        "executor_display_name": "Get information for a flight, including Foresight data",
        "executor_description": "Returns the flight info status summary for a registration, ident, or fa_flight_id, including all available predicted fields. If a fa_flight_id is specified then a maximum of 1 flight is returned, unless the flight has been diverted in which case both the original flight and any diversions will be returned with a duplicate fa_flight_id.",
        "executor_category": "Foresight",
        "executor_category_group": "Foresight",
        "service_provider": "flightaware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{env}.flightaware.com/aeroapi/foresight/flights/{ident}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "env",
                "value": "",
                "description": ""
            },
            {
                "key": "ident",
                "value": "",
                "description": "The ident, registration, or fa_flight_id to fetch  Example: UAL4 \u2503 N123HQ \u2503 UAL1234-1234567890-airline-0123"
            }
        ],
        "queryParams": [
            {
                "key": "ident_type",
                "value": "",
                "description": "\t Type of ident provided in the ident parameter. By default, the passed ident is interpreted as a registration if possible. This parameter can force the ident to be interpreted as a designator instead.",
                "req": false
            },
            {
                "key": "start",
                "value": "",
                "description": "The starting date range for flight results, comparing against flights' scheduled_out field (or scheduled_off if scheduled_out is missing). The format is ISO8601 date or datetime, and the bound is inclusive. Specified start date must be no further than 10 days in the past and 2 days in the future. If not specified, will default to departures starting approximately 11 days in the past. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The ending date range for flight results, comparing against flights' scheduled_out field (or scheduled_off if scheduled_out is missing). The format is ISO8601 date or datetime, and the bound is exclusive. Specified end date must be no further than 10 days in the past and 2 days in the future. If not specified, will default to departures starting approximately 2 days in the future. If using date instead of datetime, the time will default to 00:00:00Z.  Example: 2021-12-31T19:59:59Z \u2503 2021-12-31",
                "req": false
            },
            {
                "key": "max_pages",
                "value": "",
                "description": "Maximum number of pages to fetch. This is an upper limit and not a guarantee of how many pages will be returned.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "Opaque value used to get the next batch of data from a paged collection.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1684497579844,
        "lastModifiedTime": 1684497579844,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "links": {
                        "next": ""
                    },
                    "num_pages": 1,
                    "flights": [
                        {
                            "ident": "string",
                            "ident_icao": "string",
                            "ident_iata": "string",
                            "fa_flight_id": "string",
                            "operator": "string",
                            "operator_icao": "string",
                            "operator_iata": "string",
                            "flight_number": "string",
                            "registration": "string",
                            "atc_ident": "string",
                            "inbound_fa_flight_id": "string",
                            "codeshares": [
                                "string"
                            ],
                            "codeshares_iata": [
                                "string"
                            ],
                            "blocked": false,
                            "diverted": false,
                            "cancelled": false,
                            "position_only": false,
                            "origin": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "destination": {
                                "code": "string",
                                "code_icao": "string",
                                "code_iata": "string",
                                "code_lid": "string",
                                "timezone": "America/New_York",
                                "name": "LaGuardia",
                                "city": "New York",
                                "airport_info_url": ""
                            },
                            "departure_delay": 0,
                            "arrival_delay": 0,
                            "filed_ete": 0,
                            "progress_percent": 0,
                            "status": "string",
                            "aircraft_type": "string",
                            "route_distance": 0,
                            "filed_airspeed": 0,
                            "filed_altitude": 0,
                            "route": "string",
                            "baggage_claim": "string",
                            "seats_cabin_business": 0,
                            "seats_cabin_coach": 0,
                            "seats_cabin_first": 0,
                            "gate_origin": "string",
                            "gate_destination": "string",
                            "terminal_origin": "string",
                            "terminal_destination": "string",
                            "type": "General_Aviation",
                            "scheduled_out": "2021-12-31T19:59:59Z",
                            "estimated_out": "2021-12-31T19:59:59Z",
                            "actual_out": "2021-12-31T19:59:59Z",
                            "scheduled_off": "2021-12-31T19:59:59Z",
                            "estimated_off": "2021-12-31T19:59:59Z",
                            "actual_off": "2021-12-31T19:59:59Z",
                            "scheduled_on": "2021-12-31T19:59:59Z",
                            "estimated_on": "2021-12-31T19:59:59Z",
                            "actual_on": "2021-12-31T19:59:59Z",
                            "scheduled_in": "2021-12-31T19:59:59Z",
                            "estimated_in": "2021-12-31T19:59:59Z",
                            "actual_in": "2021-12-31T19:59:59Z",
                            "foresight_predictions_available": true,
                            "predicted_out": "2021-12-31T19:59:59Z",
                            "predicted_off": "2021-12-31T19:59:59Z",
                            "predicted_on": "2021-12-31T19:59:59Z",
                            "predicted_in": "2021-12-31T19:59:59Z",
                            "predicted_out_source": "Foresight",
                            "predicted_off_source": "Historical Average",
                            "predicted_on_source": "Historical Average",
                            "predicted_in_source": "Foresight",
                            "predicted_taxi_out_duration": 1234,
                            "predicted_taxi_out_duration_source": "Foresight"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Incorrect parameter(s). Ident may be missing or not in fa_flight_id format or pages may be < 1.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "title": "string",
                    "reason": "string",
                    "detail": "string",
                    "status": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    }
]