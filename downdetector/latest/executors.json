[
    {
        "id": 103443,
        "executor_type": "THIRDPARTY",
        "executor_name": "searchcompanies",
        "executor_version": "v2",
        "executor_display_name": "Search companies",
        "executor_description": "Returns a list of companies which match the given parameters. This will be an AND operation, so any given query parameters will be matched accordingly.",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/companies/search",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "fields",
                "value": "",
                "description": "Array of strings Default: [\"id\",\"name\",\"slug\",\"stats_24\"] Items Enum: \"id\" \"name\" \"slug\" \"url\" \"stats_24\" \"stats_60\" \"baseline\" \"baseline_current\" \"category_id\" \"logo\" \"logos\" \"logo_xsmall\" \"logo_small\" \"logo_medium\" \"logo_large\" \"logo_original\" \"description\" \"lang\" \"locale\" \"site_id\" \"indicators\" \"status\" \"contact\" \"country_iso\" \"country_id\" \"tz\" \"tz_offset\" \"asns\" Example: fields=id,name,slug,stats_24,baseline Which fields to return in the output. The lesser you return, the faster the output can be. Only request the fields that you actually need in your views.",
                "req": false
            },
            {
                "key": "name",
                "value": "",
                "description": "string >= 2 characters Example: name=snapchat Company name to filter for, this will be a partial match, case insensitive.",
                "req": false
            },
            {
                "key": "country",
                "value": "",
                "description": "string 2 characters Example: country=US Country to filter on, iso 2",
                "req": false
            },
            {
                "key": "category_id",
                "value": "",
                "description": "string 2 characters Example: country=US Country to filter on, iso 2",
                "req": false
            },
            {
                "key": "slug",
                "value": "",
                "description": "string >= 3 characters Example: slug=optimum-cablevision Slug to filter on, full match",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688459180755,
        "lastModifiedTime": 1688459180755,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "name": "Comcast",
                        "id": 0,
                        "slug": "call-of-duty",
                        "url": "string",
                        "stats_24": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13,
                            14,
                            15,
                            16,
                            17,
                            18,
                            19,
                            20,
                            21,
                            22,
                            23,
                            24,
                            25,
                            26,
                            27,
                            28
                        ],
                        "stats_60": 0,
                        "baseline": [
                            0
                        ],
                        "baseline_current": 231,
                        "category_id": 0,
                        "logo": "string",
                        "logos": {},
                        "logo_xsmall": "string",
                        "logo_small": "string",
                        "logo_medium": "string",
                        "logo_large": "string",
                        "logo_original": "string",
                        "description": "string",
                        "lang": "en",
                        "site_id": 12,
                        "indicators": [
                            "string"
                        ],
                        "status": "danger",
                        "contact": {},
                        "country_iso": "US",
                        "tz": "Europe/Dublin",
                        "tz_offset": -3600
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "name": "Comcast",
                        "id": 0,
                        "slug": "call-of-duty",
                        "url": "string",
                        "stats_24": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13,
                            14,
                            15,
                            16,
                            17,
                            18,
                            19,
                            20,
                            21,
                            22,
                            23,
                            24,
                            25,
                            26,
                            27,
                            28
                        ],
                        "stats_60": 0,
                        "baseline": [
                            0
                        ],
                        "baseline_current": 231,
                        "category_id": 0,
                        "logo": "string",
                        "logos": {},
                        "logo_xsmall": "string",
                        "logo_small": "string",
                        "logo_medium": "string",
                        "logo_large": "string",
                        "logo_original": "string",
                        "description": "string",
                        "lang": "en",
                        "site_id": 12,
                        "indicators": [
                            "string"
                        ],
                        "status": "danger",
                        "contact": {},
                        "country_iso": "US",
                        "tz": "Europe/Dublin",
                        "tz_offset": -3600
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103399,
        "executor_type": "THIRDPARTY",
        "executor_name": "comments",
        "executor_version": "v2",
        "executor_display_name": "Comments",
        "executor_description": "Returns a list of comments for this company, sorted by date descending.",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/companies/{company_id}/comments",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "sw",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: sw=50.803721015,3.31497114423 - The Netherlands bottom left corner sw=18.91619,-171.791110603 - USA bottom left corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "ne",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: ne=53.5104033474,7.09205325687 - The Netherlands top right corner ne=71.3577635769,-66.96466 - USA top right corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "page_size",
                "value": "",
                "description": "integer [ 10 .. 100 ] Example: page_size=25 Amount of results per page, between 10 and 100, defaults to 10",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "string Example: page=cXVlcnEY2dIQTswOw== On each query, a X-Page-Next header will be returned with a token as value. If the header has an empty value or is not present in the response headers, no other pages are available.  For paging, provide this token for following pages. When calling the next pages, be sure to also include any initial parameters. Don't change those parameters while you are paging a resultset (they are part of the way the pageset is calculated).",
                "req": false
            },
            {
                "key": "term",
                "value": "",
                "description": "string Example: term=website Return only the tweets/comments that contain this term",
                "req": false
            },
            {
                "key": "cities",
                "value": "",
                "description": "Array of integers Default: [] Example: cities=96,98 [BETA] City ids to filter on",
                "req": false
            },
            {
                "key": "providers",
                "value": "",
                "description": "Array of integers Default: [] Example: providers=96,98 [BETA] Provider ids to filter on",
                "req": false
            },
            {
                "key": "moderated",
                "value": "",
                "description": "boolean Default: true Example: moderated=true If set to 1 (true, default), the call will only return moderated comments. If set to 0 (false), will also include comments which have not been moderated.  Beware that this can result in including comments deleted by the poster and that comments may contain NSFW language such as swearwords, hate speech and personal attacks.  Moderated comments may appear with a delay due to the moderation process.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688455724072,
        "lastModifiedTime": 1688455724072,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "comment_id": 0,
                        "comment_parent": 0,
                        "comment": "string",
                        "comment_raw": "string",
                        "posted_at": "2019-08-24T14:15:22Z",
                        "username": "foobar",
                        "country_id": 96,
                        "slug": "unity-media",
                        "location": "51.0,9.0",
                        "user_avatar_small": "https://disqus.com/api/users/avatars/foobar.jpg",
                        "user_avatar_large": "https://disqus.com/api/users/avatars/foobar.jpg",
                        "user_public_profile": "https://disqus.com/by/foobar/",
                        "posted_location": "https://xn--allestrungen-9ib.de/stoerung/unity-media",
                        "company_id": 42,
                        "provider_id": 42,
                        "public": true
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103448,
        "executor_type": "THIRDPARTY",
        "executor_name": "tweetTopTerms",
        "executor_version": "v2",
        "executor_display_name": "Tweet Top Terms",
        "executor_description": "Returns the most used terms in tweets in the given timeframe",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/companies/{company_id}/tweets/terms",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "filter",
                "value": "",
                "description": "Array of strings [ 0 .. 100 ] items Default: [] Example: filter=internet,connection You can use this to filter all results with these terms (to \"dig deeper\")",
                "req": false
            },
            {
                "key": "exclude",
                "value": "",
                "description": "Array of strings [ 0 .. 100 ] items Default: [] Example: exclude=comcast,my-term,.*my.regexp.* Remove any terms that match. Regexp is allowed, will remove any term that matches. We will always filter the company slug, company name and any filtered terms out of the results.",
                "req": false
            },
            {
                "key": "amount",
                "value": "",
                "description": "integer [ 10 .. 255 ] Default: 25 Example: amount=25 Number of terms to return",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688460528950,
        "lastModifiedTime": 1688460528950,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "term": "string",
                        "frequency": 12,
                        "amount": 12
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "name": "Comcast",
                        "id": 0,
                        "slug": "call-of-duty",
                        "url": "string",
                        "stats_24": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13,
                            14,
                            15,
                            16,
                            17,
                            18,
                            19,
                            20,
                            21,
                            22,
                            23,
                            24,
                            25,
                            26,
                            27,
                            28
                        ],
                        "stats_60": 0,
                        "baseline": [
                            0
                        ],
                        "baseline_current": 231,
                        "category_id": 0,
                        "logo": "string",
                        "logos": {},
                        "logo_xsmall": "string",
                        "logo_small": "string",
                        "logo_medium": "string",
                        "logo_large": "string",
                        "logo_original": "string",
                        "description": "string",
                        "lang": "en",
                        "site_id": 12,
                        "indicators": [
                            "string"
                        ],
                        "status": "danger",
                        "contact": {},
                        "country_iso": "US",
                        "tz": "Europe/Dublin",
                        "tz_offset": -3600
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103409,
        "executor_type": "THIRDPARTY",
        "executor_name": "tweets",
        "executor_version": "v2",
        "executor_display_name": "Tweets",
        "executor_description": "Returns the tweets for this company in the given time period",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/companies/{company_id}/tweets",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "Id for a company"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "page_size",
                "value": "",
                "description": "integer [ 10 .. 100 ] Example: page_size=25 Amount of results per page, between 10 and 100, defaults to 10",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "string Example: page=cXVlcnEY2dIQTswOw== On each query, a X-Page-Next header will be returned with a token as value. If the header has an empty value or is not present in the response headers, no other pages are available.  For paging, provide this token for following pages. When calling the next pages, be sure to also include any initial parameters. Don't change those parameters while you are paging a resultset (they are part of the way the pageset is calculated).",
                "req": false
            },
            {
                "key": "term",
                "value": "",
                "description": "string Example: term=website Return only the tweets/comments that contain this term",
                "req": false
            },
            {
                "key": "retweets",
                "value": "",
                "description": "boolean Default: false Example: retweets=true If set to true, returns all tweets If set to false (default), returns only non-retweeted tweets",
                "req": false
            },
            {
                "key": "since",
                "value": "",
                "description": "string Default: \"0\" Tweet id, if provided, will only return tweets with a higher tweet id",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688456214801,
        "lastModifiedTime": 1688456214801,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "avatar": "string",
                        "certainty": 67.73612506035434,
                        "created_at": "2019-08-24T14:15:22Z",
                        "language": "nl",
                        "tweet": "This is a tweet text",
                        "tweet_id": "1186554387386245122",
                        "username": "980409a61632a91771d92d42289c0dba"
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103366,
        "executor_type": "THIRDPARTY",
        "executor_name": "pluraldetails",
        "executor_version": "v2",
        "executor_display_name": "Plural details",
        "executor_description": "Returns details for the list of requested companies.",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/companies",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "fields",
                "value": "",
                "description": "Array of strings Default: [\"id\",\"name\",\"slug\",\"stats_24\"] Items Enum: \"id\" \"name\" \"slug\" \"url\" \"stats_24\" \"stats_60\" \"baseline\" \"baseline_current\" \"category_id\" \"logo\" \"logos\" \"logo_xsmall\" \"logo_small\" \"logo_medium\" \"logo_large\" \"logo_original\" \"description\" \"lang\" \"locale\" \"site_id\" \"indicators\" \"status\" \"contact\" \"country_iso\" \"country_id\" \"tz\" \"tz_offset\" \"asns\" Example: fields=id,name,slug,stats_24,baseline Which fields to return in the output. The lesser you return, the faster the output can be. Only request the fields that you actually need in your views.",
                "req": false
            },
            {
                "key": "order_by",
                "value": "",
                "description": "string Default: \"name\" Enum: \"name\" \"status\" Example: order_by=name Orders the results.  name will order by company name status will order by company status.",
                "req": false
            },
            {
                "key": "order_direction",
                "value": "",
                "description": "string Default: \"asc\" Enum: \"asc\" \"desc\" Example: order_direction=asc Can be used to reverse the order direction",
                "req": false
            },
            {
                "key": "ids",
                "value": "",
                "description": "Array of numbers [ 1 .. 100 ] items Example: ids=1,2,3,4 Company ids to be fetched. Maximum of 100 ids. The list of id's should be unique. If any of the id's cannot be found, it will silently be ignored.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688453087369,
        "lastModifiedTime": 1688453087369,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "name": "Comcast",
                        "id": 0,
                        "slug": "call-of-duty",
                        "url": "string",
                        "stats_24": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13,
                            14,
                            15,
                            16,
                            17,
                            18,
                            19,
                            20,
                            21,
                            22,
                            23,
                            24,
                            25,
                            26,
                            27,
                            28
                        ],
                        "stats_60": 0,
                        "baseline": [
                            0
                        ],
                        "baseline_current": 231,
                        "category_id": 0,
                        "logo": "string",
                        "logos": {},
                        "logo_xsmall": "string",
                        "logo_small": "string",
                        "logo_medium": "string",
                        "logo_large": "string",
                        "logo_original": "string",
                        "description": "string",
                        "lang": "en",
                        "site_id": 12,
                        "indicators": [
                            "string"
                        ],
                        "status": "danger",
                        "contact": {},
                        "country_iso": "US",
                        "tz": "Europe/Dublin",
                        "tz_offset": -3600
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103380,
        "executor_type": "THIRDPARTY",
        "executor_name": "numberofreports",
        "executor_version": "v2",
        "executor_display_name": "Number of reports in last 15 minutes",
        "executor_description": "Returns the amount of reports over the last 15 minutes. This is implemented as a convenience function for GET /companies/[id]/reports.",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/companies/{company_id}/last_15",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "Id for a company"
            }
        ],
        "queryParams": [
            {
                "key": "ne",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: sw=50.803721015,3.31497114423 - The Netherlands bottom left corner sw=18.91619,-171.791110603 - USA bottom left corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "sw",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: ne=53.5104033474,7.09205325687 - The Netherlands top right corner ne=71.3577635769,-66.96466 - USA top right corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688454249286,
        "lastModifiedTime": 1688454249286,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "datetime": "2019-08-24T14:15:22Z",
                        "total": 0
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103370,
        "executor_type": "THIRDPARTY",
        "executor_name": "baseline",
        "executor_version": "v2",
        "executor_display_name": "24h Baseline",
        "executor_description": "Gets the baseline for a company to which we compare any current reports.  List of averaged values per 15m over 24h time. The first entry being 00:00 - 00:15 and the last being 23:45 - 00:00. This data is precomputed and cached. The data is updated at different points in time, but is safe to cache for multiple days.  This is a cached value and is recalculated reguraly.",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/companies/{company_id}/baseline",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "Id for a company"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688453505560,
        "lastModifiedTime": 1688453505560,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    2,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    3,
                    4,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    16,
                    16,
                    17,
                    17,
                    17,
                    18,
                    18,
                    19,
                    19,
                    18,
                    18,
                    18,
                    18,
                    18,
                    17,
                    18,
                    17,
                    18,
                    18,
                    17,
                    18,
                    18,
                    17,
                    17,
                    17,
                    17,
                    16,
                    17,
                    15,
                    15,
                    14,
                    13,
                    13,
                    13,
                    12,
                    12,
                    11,
                    11,
                    11,
                    11,
                    11,
                    10,
                    10,
                    9,
                    10,
                    9,
                    9,
                    8,
                    8,
                    8,
                    7,
                    6,
                    6,
                    5,
                    5,
                    4,
                    4,
                    4,
                    3,
                    4,
                    3,
                    2,
                    2
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103418,
        "executor_type": "THIRDPARTY",
        "executor_name": "getEvents",
        "executor_version": "v2",
        "executor_display_name": "Events",
        "executor_description": "Get all events for a company",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/companies/{company_id}/events",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "Id for a company"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "page_size",
                "value": "",
                "description": "integer [ 10 .. 100 ] Example: page_size=25 Amount of results per page, between 10 and 100, defaults to 10",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "string Example: page=cXVlcnEY2dIQTswOw== On each query, a X-Page-Next header will be returned with a token as value. If the header has an empty value or is not present in the response headers, no other pages are available.  For paging, provide this token for following pages. When calling the next pages, be sure to also include any initial parameters. Don't change those parameters while you are paging a resultset (they are part of the way the pageset is calculated).",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688456922733,
        "lastModifiedTime": 1688456922733,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": 0,
                        "title": "string",
                        "body": "string",
                        "company_id": 0,
                        "created_at": "2019-08-24T14:15:22Z",
                        "publish_at": "2019-08-24T14:15:22Z",
                        "is_active": true,
                        "measurement": {
                            "started_on": "2019-08-24T14:15:22Z",
                            "ended_on": "2019-08-24T14:15:22Z",
                            "expected": 0,
                            "actual": 0
                        }
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103384,
        "executor_type": "THIRDPARTY",
        "executor_name": "indicatoroptions",
        "executor_version": "v2",
        "executor_display_name": "Indicator options",
        "executor_description": "Returns a list of indicators that is available for this particular company",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "OPTIONS",
        "apiUrl": "https://downdetectorapi.com/v2/companies/{company_id}/indicators",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "ne",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: sw=50.803721015,3.31497114423 - The Netherlands bottom left corner sw=18.91619,-171.791110603 - USA bottom left corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "sw",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: ne=53.5104033474,7.09205325687 - The Netherlands top right corner ne=71.3577635769,-66.96466 - USA top right corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688454530659,
        "lastModifiedTime": 1688454530659,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "indicator": {
                            "children": [],
                            "slug": "string",
                            "lang_XY": "string",
                            "id": 0
                        }
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103444,
        "executor_type": "THIRDPARTY",
        "executor_name": "listofcompanypages",
        "executor_version": "v2",
        "executor_display_name": "List of company pages",
        "executor_description": "Returns a list of page ids to be used as inputs for the page parameter in the GET requests. This will return all page ids for consequent pages.",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "OPTIONS",
        "apiUrl": "https://downdetectorapi.com/v2/sites/{site_id}/companies",
        "dataroot": null,
        "pathParams": [
            {
                "key": "site_id",
                "value": "",
                "description": "Id for a site"
            }
        ],
        "queryParams": [
            {
                "key": "page_size",
                "value": "",
                "description": "integer [ 10 .. 100 ] Example: page_size=25 Amount of results per page, between 10 and 100, defaults to 10",
                "req": false
            },
            {
                "key": "order_by",
                "value": "",
                "description": "string Default: \"name\" Enum: \"name\" \"status\" Example: order_by=name Orders the results.  name will order by company name status will order by company status.",
                "req": false
            },
            {
                "key": "order_direction",
                "value": "",
                "description": "string Default: \"asc\" Enum: \"asc\" \"desc\" Example: order_direction=asc Can be used to reverse the order direction",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688459815768,
        "lastModifiedTime": 1688459815768,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    "string"
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "name": "Comcast",
                        "id": 0,
                        "slug": "call-of-duty",
                        "url": "string",
                        "stats_24": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13,
                            14,
                            15,
                            16,
                            17,
                            18,
                            19,
                            20,
                            21,
                            22,
                            23,
                            24,
                            25,
                            26,
                            27,
                            28
                        ],
                        "stats_60": 0,
                        "baseline": [
                            0
                        ],
                        "baseline_current": 231,
                        "category_id": 0,
                        "logo": "string",
                        "logos": {},
                        "logo_xsmall": "string",
                        "logo_small": "string",
                        "logo_medium": "string",
                        "logo_large": "string",
                        "logo_original": "string",
                        "description": "string",
                        "lang": "en",
                        "site_id": 12,
                        "indicators": [
                            "string"
                        ],
                        "status": "danger",
                        "contact": {},
                        "country_iso": "US",
                        "tz": "Europe/Dublin",
                        "tz_offset": -3600
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103372,
        "executor_type": "THIRDPARTY",
        "executor_name": "currentBaseline",
        "executor_version": "v2",
        "executor_display_name": "Current Baseline",
        "executor_description": "Returns the current (one) baseline value for this company",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/companies/{company_id}/baseline/current",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "Id for a company"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688453654059,
        "lastModifiedTime": 1688453654059,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    23
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103420,
        "executor_type": "THIRDPARTY",
        "executor_name": "listmessages",
        "executor_version": "v2",
        "executor_display_name": "List messages",
        "executor_description": "List of messages for the given company",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/companies/{company_id}/messages",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "number Example: 42"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688457323393,
        "lastModifiedTime": 1688457323394,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "List of messages",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": "6a362465-6ba2-4e73-9825-beaae5116955",
                        "message": "This is a status update: We're working on it. For sure!",
                        "expire_at": "2019-08-24T14:15:22Z",
                        "publish_at": "2019-08-24T14:15:22Z",
                        "created_at": "2019-08-24T14:15:22Z",
                        "company_id": 42
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103362,
        "executor_type": "THIRDPARTY",
        "executor_name": "getDetails",
        "executor_version": "v2",
        "executor_display_name": "Details",
        "executor_description": "Returns company specific details.",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/companies/{company_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "Id for a company"
            }
        ],
        "queryParams": [
            {
                "key": "fields",
                "value": "",
                "description": "Array of strings Default: [\"id\",\"name\",\"slug\",\"stats_24\"] Items Enum: \"id\" \"name\" \"slug\" \"url\" \"stats_24\" \"stats_60\" \"baseline\" \"baseline_current\" \"category_id\" \"logo\" \"logos\" \"logo_xsmall\" \"logo_small\" \"logo_medium\" \"logo_large\" \"logo_original\" \"description\" \"lang\" \"locale\" \"site_id\" \"indicators\" \"status\" \"contact\" \"country_iso\" \"country_id\" \"tz\" \"tz_offset\" \"asns\" Example: fields=id,name,slug,stats_24,baseline Which fields to return in the output. The lesser you return, the faster the output can be. Only request the fields that you actually need in your views.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688452813294,
        "lastModifiedTime": 1688452813294,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "Comcast",
                    "id": 0,
                    "slug": "call-of-duty",
                    "url": "string",
                    "stats_24": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28
                    ],
                    "stats_60": 0,
                    "baseline": [
                        0
                    ],
                    "baseline_current": 231,
                    "category_id": 0,
                    "logo": "string",
                    "logos": {},
                    "logo_xsmall": "string",
                    "logo_small": "string",
                    "logo_medium": "string",
                    "logo_large": "string",
                    "logo_original": "string",
                    "description": "string",
                    "lang": "en",
                    "site_id": 12,
                    "indicators": [
                        "string"
                    ],
                    "status": "danger",
                    "contact": {},
                    "country_iso": "US",
                    "tz": "Europe/Dublin",
                    "tz_offset": -3600
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103377,
        "executor_type": "THIRDPARTY",
        "executor_name": "currentstatus",
        "executor_version": "v2",
        "executor_display_name": "Current status",
        "executor_description": "Returns the current detected status for a company",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/companies/{company_id}/status",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "Id for a company"
            }
        ],
        "queryParams": [
            {
                "key": "ne",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: ne=53.5104033474,7.09205325687 - The Netherlands top right corner ne=71.3577635769,-66.96466 - USA top right corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "sw",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: sw=50.803721015,3.31497114423 - The Netherlands bottom left corner sw=18.91619,-171.791110603 - USA bottom left corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "threshold",
                "value": "",
                "description": "integer Checks if status is above this threshold. If so, returns 'danger', if not, returns 'success'",
                "req": false
            },
            {
                "key": "indicator",
                "value": "",
                "description": "string Checks what the current status is for this indicator, only works with indicator_pct",
                "req": false
            },
            {
                "key": "indicator_pct",
                "value": "",
                "description": "integer Checks if the given indicator is above this threshold. This is only true when the company breached the given threshold, or calculated baseline.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688454044044,
        "lastModifiedTime": 1688454044044,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "success"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103391,
        "executor_type": "THIRDPARTY",
        "executor_name": "indicators",
        "executor_version": "v2",
        "executor_display_name": "Indicators",
        "executor_description": "Returns the indicators which are reported in the given time period, you can get a list of available indicators from the indicators field with a GET /companies/[id]?fields=indicator",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/companies/{company_id}/indicators",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "Id for a company"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "sw",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: sw=50.803721015,3.31497114423 - The Netherlands bottom left corner sw=18.91619,-171.791110603 - USA bottom left corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "ne",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: ne=53.5104033474,7.09205325687 - The Netherlands top right corner ne=71.3577635769,-66.96466 - USA top right corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "asn",
                "value": "",
                "description": "Array of integers Example: asn=1234,5432 Filter reports on these network ids (ASN, RFC 1771)",
                "req": false
            },
            {
                "key": "unknowns",
                "value": "",
                "description": "boolean Example: unknowns=true Flag to indicate whether to include the Unknowns and other reports to the calculation (default: False)\"",
                "req": false
            },
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688454984521,
        "lastModifiedTime": 1688454984521,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "slug": "string",
                        "indicator": "string",
                        "key": "string",
                        "count": 0,
                        "amount": 0,
                        "percentage": 0
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103479,
        "executor_type": "THIRDPARTY",
        "executor_name": "commentTopTerms",
        "executor_version": "v2",
        "executor_display_name": "Comment Top Terms",
        "executor_description": "Returns the most used terms in comments in the given timeframe",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/companies/{company_id}/comments/terms",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "Id for a company"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "filter",
                "value": "",
                "description": "Array of strings [ 0 .. 100 ] items Default: [] Example: filter=internet,connection You can use this to filter all results with these terms (to \"dig deeper\")",
                "req": false
            },
            {
                "key": "exclude",
                "value": "",
                "description": "Array of strings [ 0 .. 100 ] items Default: [] Example: exclude=comcast,my-term,.*my.regexp.* Remove any terms that match. Regexp is allowed, will remove any term that matches. We will always filter the company slug, company name and any filtered terms out of the results.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688464965869,
        "lastModifiedTime": 1688464965869,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "term": "string",
                        "frequency": 12,
                        "amount": 12
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103445,
        "executor_type": "THIRDPARTY",
        "executor_name": "sitecompanies",
        "executor_version": "v2",
        "executor_display_name": "Site companies",
        "executor_description": "Returns a list of companies for the given site",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/sites/{site_id}/companies",
        "dataroot": null,
        "pathParams": [
            {
                "key": "site_id",
                "value": "",
                "description": "Id for a site"
            }
        ],
        "queryParams": [
            {
                "key": "page_size",
                "value": "",
                "description": "integer [ 10 .. 100 ] Example: page_size=25 Amount of results per page, between 10 and 100, defaults to 10",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "string Example: page=cXVlcnEY2dIQTswOw== On each query, a X-Page-Next header will be returned with a token as value. If the header has an empty value or is not present in the response headers, no other pages are available.  For paging, provide this token for following pages. When calling the next pages, be sure to also include any initial parameters. Don't change those parameters while you are paging a resultset (they are part of the way the pageset is calculated).",
                "req": false
            },
            {
                "key": "fields",
                "value": "",
                "description": "Array of strings Default: [\"id\",\"name\",\"slug\",\"stats_24\"] Items Enum: \"id\" \"name\" \"slug\" \"url\" \"stats_24\" \"stats_60\" \"baseline\" \"baseline_current\" \"category_id\" \"logo\" \"logos\" \"logo_xsmall\" \"logo_small\" \"logo_medium\" \"logo_large\" \"logo_original\" \"description\" \"lang\" \"locale\" \"site_id\" \"indicators\" \"status\" \"contact\" \"country_iso\" \"country_id\" \"tz\" \"tz_offset\" \"asns\" Example: fields=id,name,slug,stats_24,baseline Which fields to return in the output. The lesser you return, the faster the output can be. Only request the fields that you actually need in your views.",
                "req": false
            },
            {
                "key": "order_by",
                "value": "",
                "description": "string Default: \"name\" Enum: \"name\" \"status\" Example: order_by=name Orders the results.  name will order by company name status will order by company status.",
                "req": false
            },
            {
                "key": "order_direction",
                "value": "",
                "description": "string Default: \"asc\" Enum: \"asc\" \"desc\" Example: order_direction=asc Can be used to reverse the order direction",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688460258654,
        "lastModifiedTime": 1688460258655,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "name": "Comcast",
                        "id": 0,
                        "slug": "call-of-duty",
                        "url": "string",
                        "stats_24": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13,
                            14,
                            15,
                            16,
                            17,
                            18,
                            19,
                            20,
                            21,
                            22,
                            23,
                            24,
                            25,
                            26,
                            27,
                            28
                        ],
                        "stats_60": 0,
                        "baseline": [
                            0
                        ],
                        "baseline_current": 231,
                        "category_id": 0,
                        "logo": "string",
                        "logos": {},
                        "logo_xsmall": "string",
                        "logo_small": "string",
                        "logo_medium": "string",
                        "logo_large": "string",
                        "logo_original": "string",
                        "description": "string",
                        "lang": "en",
                        "site_id": 12,
                        "indicators": [
                            "string"
                        ],
                        "status": "danger",
                        "contact": {},
                        "country_iso": "US",
                        "tz": "Europe/Dublin",
                        "tz_offset": -3600
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "name": "Comcast",
                        "id": 0,
                        "slug": "call-of-duty",
                        "url": "string",
                        "stats_24": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13,
                            14,
                            15,
                            16,
                            17,
                            18,
                            19,
                            20,
                            21,
                            22,
                            23,
                            24,
                            25,
                            26,
                            27,
                            28
                        ],
                        "stats_60": 0,
                        "baseline": [
                            0
                        ],
                        "baseline_current": 231,
                        "category_id": 0,
                        "logo": "string",
                        "logos": {},
                        "logo_xsmall": "string",
                        "logo_small": "string",
                        "logo_medium": "string",
                        "logo_large": "string",
                        "logo_original": "string",
                        "description": "string",
                        "lang": "en",
                        "site_id": 12,
                        "indicators": [
                            "string"
                        ],
                        "status": "danger",
                        "contact": {},
                        "country_iso": "US",
                        "tz": "Europe/Dublin",
                        "tz_offset": -3600
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103421,
        "executor_type": "THIRDPARTY",
        "executor_name": "getlistmessages",
        "executor_version": "v2",
        "executor_display_name": "List messages",
        "executor_description": "List of messages for the given company",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/companies/{company_id}/messages",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "number Example: 42"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688457767868,
        "lastModifiedTime": 1688457767868,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "List of messages",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": "6a362465-6ba2-4e73-9825-beaae5116955",
                        "message": "This is a status update: We're working on it. For sure!",
                        "expire_at": "2019-08-24T14:15:22Z",
                        "publish_at": "2019-08-24T14:15:22Z",
                        "created_at": "2019-08-24T14:15:22Z",
                        "company_id": 42
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103357,
        "executor_type": "THIRDPARTY",
        "executor_name": "networksforslugs",
        "executor_version": "v2",
        "executor_display_name": "Networks for slugs",
        "executor_description": "Returns a top X list of networks where reports are coming from.",
        "executor_category": "Slugs",
        "executor_category_group": "Slugs",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/slugs/{slugs}/networks",
        "dataroot": null,
        "pathParams": [
            {
                "key": "slugs",
                "value": "",
                "description": "Slug to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "sw",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: sw=50.803721015,3.31497114423 - The Netherlands bottom left corner sw=18.91619,-171.791110603 - USA bottom left corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "ne",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: ne=53.5104033474,7.09205325687 - The Netherlands top right corner ne=71.3577635769,-66.96466 - USA top right corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "amount",
                "value": "",
                "description": "integer [ 10 .. 512 ] Default: 10 Example: amount=10 Top X of buckets to return",
                "req": false
            },
            {
                "key": "countries",
                "value": "",
                "description": "Array of integers Default: [] Example: countries=96,98 Country ids to filter on",
                "req": false
            },
            {
                "key": "companies",
                "value": "",
                "description": "Array of integers Default: [] Example: companies=9,11,20020 Company ids to filter on. You can get a list of relevant company ids from the /slugs/<slug>/companies endpoint.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688452522154,
        "lastModifiedTime": 1688452522154,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "amount": 0,
                        "network": {
                            "name": "Comcast",
                            "id": 42,
                            "downdetector_id": 42
                        }
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103302,
        "executor_type": "THIRDPARTY",
        "executor_name": "companiesforslugs",
        "executor_version": "v2",
        "executor_display_name": "Companies for slugs",
        "executor_description": "List of companies which match the given slug",
        "executor_category": "Slugs",
        "executor_category_group": "Slugs",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/slugs/{slugs}/companies",
        "dataroot": null,
        "pathParams": [
            {
                "key": "slugs",
                "value": "",
                "description": "Slug to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "fields",
                "value": "",
                "description": "Array of strings Default: [\"id\",\"name\",\"slug\",\"stats_24\"] Items Enum: \"id\" \"name\" \"slug\" \"url\" \"stats_24\" \"stats_60\" \"baseline\" \"baseline_current\" \"category_id\" \"logo\" \"logos\" \"logo_xsmall\" \"logo_small\" \"logo_medium\" \"logo_large\" \"logo_original\" \"description\" \"lang\" \"locale\" \"site_id\" \"indicators\" \"status\" \"contact\" \"country_iso\" \"country_id\" \"tz\" \"tz_offset\" \"asns\" Example: fields=id,name,slug,stats_24,baseline Which fields to return in the output. The lesser you return, the faster the output can be. Only request the fields that you actually need in your views.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688445935884,
        "lastModifiedTime": 1688445935884,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "name": "Comcast",
                        "id": 0,
                        "slug": "call-of-duty",
                        "url": "string",
                        "stats_24": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13,
                            14,
                            15,
                            16,
                            17,
                            18,
                            19,
                            20,
                            21,
                            22,
                            23,
                            24,
                            25,
                            26,
                            27,
                            28
                        ],
                        "stats_60": 0,
                        "baseline": [
                            0
                        ],
                        "baseline_current": 231,
                        "category_id": 0,
                        "logo": "string",
                        "logos": {},
                        "logo_xsmall": "string",
                        "logo_small": "string",
                        "logo_medium": "string",
                        "logo_large": "string",
                        "logo_original": "string",
                        "description": "string",
                        "lang": "en",
                        "site_id": 12,
                        "indicators": [
                            "string"
                        ],
                        "status": "danger",
                        "contact": {},
                        "country_iso": "US",
                        "tz": "Europe/Dublin",
                        "tz_offset": -3600
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103333,
        "executor_type": "THIRDPARTY",
        "executor_name": "locationsforreports",
        "executor_version": "v2",
        "executor_display_name": "Locations for reports",
        "executor_description": "Returns all locations where reports are coming from. The source of reports can be mixed. The output per location will differ based on the source of the reports.",
        "executor_category": "Slugs",
        "executor_category_group": "Slugs",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/slugs/{slugs}/locations",
        "dataroot": null,
        "pathParams": [
            {
                "key": "slugs",
                "value": "",
                "description": "Slug to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "string Example: page=cXVlcnEY2dIQTswOw== On each query, a X-Page-Next header will be returned with a token as value. If the header has an empty value or is not present in the response headers, no other pages are available.  For paging, provide this token for following pages. When calling the next pages, be sure to also include any initial parameters. Don't change those parameters while you are paging a resultset (they are part of the way the pageset is calculated).",
                "req": false
            },
            {
                "key": "page_size",
                "value": "",
                "description": "integer [ 10 .. 1000 ] Default: 10 Example: page_size=25 Amount of results per page",
                "req": false
            },
            {
                "key": "location_source",
                "value": "",
                "description": "string Enum: \"ip\" \"device\" Example: location_source=device Filter on specific location source types",
                "req": false
            },
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "sw",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: sw=50.803721015,3.31497114423 - The Netherlands bottom left corner sw=18.91619,-171.791110603 - USA bottom left corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "ne",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: ne=53.5104033474,7.09205325687 - The Netherlands top right corner ne=71.3577635769,-66.96466 - USA top right corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "asn",
                "value": "",
                "description": "Array of integers Example: asn=1234,5432 Filter reports on these network ids (ASN, RFC 1771)",
                "req": false
            },
            {
                "key": "companies",
                "value": "",
                "description": "Array of integers Default: [] Example: companies=9,11,20020 Company ids to filter on. You can get a list of relevant company ids from the /slugs/<slug>/companies endpoint.",
                "req": false
            },
            {
                "key": "countries",
                "value": "",
                "description": "Array of integers Default: [] Example: countries=96,98 Country ids to filter on",
                "req": false
            },
            {
                "key": "cities",
                "value": "",
                "description": "Array of integers Default: [] Example: cities=96,98 [BETA] City ids to filter on",
                "req": false
            },
            {
                "key": "providers",
                "value": "",
                "description": "Array of integers Default: [] Example: providers=96,98 [BETA] Provider ids to filter on",
                "req": false
            },
            {
                "key": "indicators",
                "value": "",
                "description": "Array of integers Default: [] Example: indicators=96,98 [BETA] Indicator ids to filter on",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688450157523,
        "lastModifiedTime": 1688450157523,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "created_at": "2019-08-24T14:15:22Z",
                    "device": "desktop",
                    "network": {
                        "asn": 0,
                        "provider_id": 0
                    },
                    "indicator_id": 0,
                    "company_id": 0,
                    "location": {
                        "latitude": 51.819,
                        "longitude": 4.642,
                        "source": "ip",
                        "city_id": 0,
                        "country_id": 0
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103316,
        "executor_type": "THIRDPARTY",
        "executor_name": "currentindicatorsforslugs",
        "executor_version": "v2",
        "executor_display_name": "Current indicators for slugs",
        "executor_description": "Returns the reported indicators over the last 24h",
        "executor_category": "Slugs",
        "executor_category_group": "Slugs",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/slugs/{slugs}/indicators/current",
        "dataroot": null,
        "pathParams": [
            {
                "key": "slugs",
                "value": "",
                "description": "Slug to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "countries",
                "value": "",
                "description": "Array of integers Default: [] Example: countries=96,98 Country ids to filter on",
                "req": false
            },
            {
                "key": "companies",
                "value": "",
                "description": "Array of integers Default: [] Example: companies=9,11,20020 Company ids to filter on. You can get a list of relevant company ids from the /slugs/<slug>/companies endpoint.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688449107875,
        "lastModifiedTime": 1688449107875,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "indicator": {
                            "slug": "string",
                            "lang_XY": "string",
                            "id": 0
                        },
                        "amount": 0,
                        "percentage": 0
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103325,
        "executor_type": "THIRDPARTY",
        "executor_name": "citiesforslugs",
        "executor_version": "v2",
        "executor_display_name": "Cities for slugs",
        "executor_description": "Returns a top X list of cities where reports are coming from.",
        "executor_category": "Slugs",
        "executor_category_group": "Slugs",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/slugs/{slugs}/cities",
        "dataroot": null,
        "pathParams": [
            {
                "key": "slugs",
                "value": "",
                "description": "Slug to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "sw",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: sw=50.803721015,3.31497114423 - The Netherlands bottom left corner sw=18.91619,-171.791110603 - USA bottom left corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "ne",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: ne=53.5104033474,7.09205325687 - The Netherlands top right corner ne=71.3577635769,-66.96466 - USA top right corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "asn",
                "value": "",
                "description": "Array of integers Example: asn=1234,5432 Filter reports on these network ids (ASN, RFC 1771)",
                "req": false
            },
            {
                "key": "amount",
                "value": "",
                "description": "integer [ 10 .. 512 ] Default: 10 Example: amount=10 Top X of buckets to return",
                "req": false
            },
            {
                "key": "companies",
                "value": "",
                "description": "Array of integers Default: [] Example: companies=9,11,20020 Company ids to filter on. You can get a list of relevant company ids from the /slugs/<slug>/companies endpoint.",
                "req": false
            },
            {
                "key": "cities",
                "value": "",
                "description": "Array of integers Default: [] Example: cities=96,98 [BETA] City ids to filter on",
                "req": false
            },
            {
                "key": "providers",
                "value": "",
                "description": "Array of integers Default: [] Example: providers=96,98 [BETA] Provider ids to filter on",
                "req": false
            },
            {
                "key": "indicators",
                "value": "",
                "description": "Array of integers Default: [] Example: indicators=96,98 [BETA] Indicator ids to filter on",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688449784193,
        "lastModifiedTime": 1688449784193,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": 0,
                        "iso": "string",
                        "iso_3": "string",
                        "name": "string"
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103349,
        "executor_type": "THIRDPARTY",
        "executor_name": "heatmapforreports",
        "executor_version": "v2",
        "executor_display_name": "Heatmap for reports",
        "executor_description": "Returns the clustered locations where most reports are origination from. Will return max 1024 groups.",
        "executor_category": "Slugs",
        "executor_category_group": "Slugs",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/slugs/{slugs}/heatmap/current",
        "dataroot": null,
        "pathParams": [
            {
                "key": "slugs",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "zoom",
                "value": "",
                "description": "integer [ 1 .. 6 ] Default: 1 Example: zoom=1 Zoom level for grouping",
                "req": false
            },
            {
                "key": "countries",
                "value": "",
                "description": "Array of integers Default: [] Example: countries=96,98 Country ids to filter on",
                "req": false
            },
            {
                "key": "companies",
                "value": "",
                "description": "Array of integers Default: [] Example: companies=9,11,20020 Company ids to filter on. You can get a list of relevant company ids from the /slugs/<slug>/companies endpoint.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688452017985,
        "lastModifiedTime": 1688452017985,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "count": 42,
                    "latitude": 51.49319996125996,
                    "longitude": 3.9138999301940203
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103310,
        "executor_type": "THIRDPARTY",
        "executor_name": "providersforSlugs",
        "executor_version": "v2",
        "executor_display_name": "Providers for slugs",
        "executor_description": "Returns a top X list of providers where reports are coming from.",
        "executor_category": "Slugs",
        "executor_category_group": "Slugs",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/slugs/{slugs}/providers",
        "dataroot": null,
        "pathParams": [
            {
                "key": "slugs",
                "value": "",
                "description": "Slug to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "sw",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: sw=50.803721015,3.31497114423 - The Netherlands bottom left corner sw=18.91619,-171.791110603 - USA bottom left corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "ne",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: ne=53.5104033474,7.09205325687 - The Netherlands top right corner ne=71.3577635769,-66.96466 - USA top right corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "asn",
                "value": "",
                "description": "Array of integers Example: asn=1234,5432 Filter reports on these network ids (ASN, RFC 1771)",
                "req": false
            },
            {
                "key": "amount",
                "value": "",
                "description": "integer [ 10 .. 512 ] Default: 10 Example: amount=10 Top X of buckets to return",
                "req": false
            },
            {
                "key": "countries",
                "value": "",
                "description": "Array of integers Default: [] Example: countries=96,98 Country ids to filter on",
                "req": false
            },
            {
                "key": "companies",
                "value": "",
                "description": "Array of integers Default: [] Example: companies=9,11,20020 Company ids to filter on. You can get a list of relevant company ids from the /slugs/<slug>/companies endpoint.",
                "req": false
            },
            {
                "key": "cities",
                "value": "",
                "description": "Array of integers Default: [] Example: cities=96,98 [BETA] City ids to filter on",
                "req": false
            },
            {
                "key": "providers",
                "value": "",
                "description": "Array of integers Default: [] Example: providers=96,98 [BETA] Provider ids to filter on",
                "req": false
            },
            {
                "key": "indicators",
                "value": "",
                "description": "Array of integers Default: [] Example: indicators=96,98 [BETA] Indicator ids to filter on",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688448557811,
        "lastModifiedTime": 1688448557811,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "amount": 0,
                        "provider": {
                            "name": "Comcast",
                            "id": 42,
                            "downdetector_id": 42
                        }
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103321,
        "executor_type": "THIRDPARTY",
        "executor_name": "countriesforslugs",
        "executor_version": "v2",
        "executor_display_name": "Countries for slugs",
        "executor_description": "Returns a top X list of countries where reports are coming from.",
        "executor_category": "Slugs",
        "executor_category_group": "Slugs",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/slugs/{slugs}/countries",
        "dataroot": null,
        "pathParams": [
            {
                "key": "slugs",
                "value": "",
                "description": "Slug to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "sw",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: sw=50.803721015,3.31497114423 - The Netherlands bottom left corner sw=18.91619,-171.791110603 - USA bottom left corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "ne",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: ne=53.5104033474,7.09205325687 - The Netherlands top right corner ne=71.3577635769,-66.96466 - USA top right corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "asn",
                "value": "",
                "description": "Array of integers Example: asn=1234,5432 Filter reports on these network ids (ASN, RFC 1771)",
                "req": false
            },
            {
                "key": "amount",
                "value": "",
                "description": "integer [ 10 .. 512 ] Default: 10 Example: amount=10 Top X of buckets to return",
                "req": false
            },
            {
                "key": "companies",
                "value": "",
                "description": "Array of integers Default: [] Example: companies=9,11,20020 Company ids to filter on. You can get a list of relevant company ids from the /slugs/<slug>/companies endpoint.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688449426578,
        "lastModifiedTime": 1688449426578,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": 0,
                        "iso": "string",
                        "iso_3": "string",
                        "name": "string"
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103314,
        "executor_type": "THIRDPARTY",
        "executor_name": "indicatorsforslugs",
        "executor_version": "v2",
        "executor_display_name": "Indicators for slugs",
        "executor_description": "Returns the reported indicators for the given filters",
        "executor_category": "Slugs",
        "executor_category_group": "Slugs",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/slugs/{slugs}/indicators",
        "dataroot": null,
        "pathParams": [
            {
                "key": "slugs",
                "value": "",
                "description": "Slug to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "sw",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: sw=50.803721015,3.31497114423 - The Netherlands bottom left corner sw=18.91619,-171.791110603 - USA bottom left corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "ne",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: ne=53.5104033474,7.09205325687 - The Netherlands top right corner ne=71.3577635769,-66.96466 - USA top right corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "asn",
                "value": "",
                "description": "Array of integers Example: asn=1234,5432 Filter reports on these network ids (ASN, RFC 1771)",
                "req": false
            },
            {
                "key": "amount",
                "value": "",
                "description": "integer [ 10 .. 512 ] Default: 10 Example: amount=10 Top X of buckets to return",
                "req": false
            },
            {
                "key": "countries",
                "value": "",
                "description": "Array of integers Default: [] Example: countries=96,98 Country ids to filter on",
                "req": false
            },
            {
                "key": "companies",
                "value": "",
                "description": "Array of integers Default: [] Example: companies=9,11,20020 Company ids to filter on. You can get a list of relevant company ids from the /slugs/<slug>/companies endpoint.",
                "req": false
            },
            {
                "key": "cities",
                "value": "",
                "description": "Array of integers Default: [] Example: cities=96,98 [BETA] City ids to filter on",
                "req": false
            },
            {
                "key": "providers",
                "value": "",
                "description": "Array of integers Default: [] Example: providers=96,98 [BETA] Provider ids to filter on",
                "req": false
            },
            {
                "key": "indicators",
                "value": "",
                "description": "Array of integers Default: [] Example: indicators=96,98 [BETA] Indicator ids to filter on",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688448910108,
        "lastModifiedTime": 1688448910108,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "indicator": {
                            "slug": "string",
                            "lang_XY": "string",
                            "id": 0
                        },
                        "amount": 0,
                        "percentage": 0
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103304,
        "executor_type": "THIRDPARTY",
        "executor_name": "reportsforslugs",
        "executor_version": "v2",
        "executor_display_name": "Reports for slugs",
        "executor_description": "Returns the sum'ed number of reports for the given slug.",
        "executor_category": "Slugs",
        "executor_category_group": "Slugs",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/slugs/{slugs}/reports",
        "dataroot": null,
        "pathParams": [
            {
                "key": "slugs",
                "value": "",
                "description": "Slug to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "sw",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: sw=50.803721015,3.31497114423 - The Netherlands bottom left corner sw=18.91619,-171.791110603 - USA bottom left corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "ne",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: ne=53.5104033474,7.09205325687 - The Netherlands top right corner ne=71.3577635769,-66.96466 - USA top right corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "asn",
                "value": "",
                "description": "Array of integers Example: asn=1234,5432 Filter reports on these network ids (ASN, RFC 1771)",
                "req": false
            },
            {
                "key": "providers",
                "value": "",
                "description": "Array of integers Default: [] Example: providers=96,98 [BETA] Provider ids to filter on",
                "req": false
            },
            {
                "key": "indicators",
                "value": "",
                "description": "Array of integers Default: [] Example: indicators=96,98 [BETA] Indicator ids to filter on",
                "req": false
            },
            {
                "key": "cities",
                "value": "",
                "description": "Array of integers Default: [] Example: cities=96,98 [BETA] City ids to filter on",
                "req": false
            },
            {
                "key": "interval",
                "value": "",
                "description": "string^[0-9]+[mhdwMqys]$ Default: \"15m\" Example: interval=15m Interval for the time based buckets, examples: 15m (15 minutes), 1m, 5m, 10m, 1h, 24h, 1d, 2d, etc.",
                "req": false
            },
            {
                "key": "countries",
                "value": "",
                "description": "Array of integers Default: [] Example: countries=96,98 Country ids to filter on",
                "req": false
            },
            {
                "key": "companies",
                "value": "",
                "description": "Array of integers Default: [] Example: companies=9,11,20020 Company ids to filter on. You can get a list of relevant company ids from the /slugs/<slug>/companies endpoint.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "string Default: \"0s\" Example: offset=7m Sets the offset for the bucket calculation. eg, if interval is set to 15 minutes, default buckets will be at :00, :15, :30, :45 marks. With this you can set the offset. For example given an interval of 15 minutes, and an offset of 7 minutes: :07, :22, :37, :52",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688446514796,
        "lastModifiedTime": 1688446514797,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "indicators": 3,
                        "other": 26,
                        "point_in_time": "2019-08-24T14:15:22Z",
                        "total": 29,
                        "tweets": 13
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103497,
        "executor_type": "THIRDPARTY",
        "executor_name": "citydetails",
        "executor_version": "v2",
        "executor_display_name": "City details",
        "executor_description": "For cities by Geo ID",
        "executor_category": "Geo",
        "executor_category_group": "Geo",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/cities/{geo_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "geo_id",
                "value": "",
                "description": "Geo ID for Cities"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688466193107,
        "lastModifiedTime": 1688466193107,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "city details",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "city_id": 0,
                    "country_id": 0,
                    "country_iso": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103523,
        "executor_type": "THIRDPARTY",
        "executor_name": "getcitiesforslugs",
        "executor_version": "v2",
        "executor_display_name": "Cities for slugs",
        "executor_description": "Returns a top X list of cities where reports are coming from.",
        "executor_category": "Geo",
        "executor_category_group": "Geo",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/slugs/{slugs}/cities",
        "dataroot": null,
        "pathParams": [
            {
                "key": "slugs",
                "value": "",
                "description": "Slug to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "sw",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: sw=50.803721015,3.31497114423 - The Netherlands bottom left corner sw=18.91619,-171.791110603 - USA bottom left corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "ne",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: ne=53.5104033474,7.09205325687 - The Netherlands top right corner ne=71.3577635769,-66.96466 - USA top right corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "asn",
                "value": "",
                "description": "Array of integers Example: asn=1234,5432 Filter reports on these network ids (ASN, RFC 1771)",
                "req": false
            },
            {
                "key": "amount",
                "value": "",
                "description": "integer [ 10 .. 512 ] Default: 10 Example: amount=10 Top X of buckets to return",
                "req": false
            },
            {
                "key": "companies",
                "value": "",
                "description": "Array of integers Default: [] Example: companies=9,11,20020 Company ids to filter on. You can get a list of relevant company ids from the /slugs/<slug>/companies endpoint.",
                "req": false
            },
            {
                "key": "countries",
                "value": "",
                "description": "Array of integers Default: [] Example: countries=96,98 Country ids to filter on",
                "req": false
            },
            {
                "key": "cities",
                "value": "",
                "description": "Array of integers Default: [] Example: cities=96,98 [BETA] City ids to filter on",
                "req": false
            },
            {
                "key": "providers",
                "value": "",
                "description": "Array of integers Default: [] Example: providers=96,98 [BETA] Provider ids to filter on",
                "req": false
            },
            {
                "key": "indicators",
                "value": "",
                "description": "Array of integers Default: [] Example: indicators=96,98 [BETA] Indicator ids to filter on  Responses",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688467887565,
        "lastModifiedTime": 1688467887565,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": 0,
                        "iso": "string",
                        "iso_3": "string",
                        "name": "string"
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103530,
        "executor_type": "THIRDPARTY",
        "executor_name": "getheatmapforreports",
        "executor_version": "v2",
        "executor_display_name": "Heatmap for reports",
        "executor_description": "Returns the clustered locations where most reports are origination from. Will return max 1024 groups.",
        "executor_category": "Geo",
        "executor_category_group": "Geo",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/slugs/{slugs}/heatmap/current",
        "dataroot": null,
        "pathParams": [
            {
                "key": "slugs",
                "value": "",
                "description": "Slug to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "zoom",
                "value": "",
                "description": "integer [ 1 .. 6 ] Default: 1 Example: zoom=1 Zoom level for grouping",
                "req": false
            },
            {
                "key": "countries",
                "value": "",
                "description": "Array of integers Default: [] Example: countries=96,98 Country ids to filter on",
                "req": false
            },
            {
                "key": "companies",
                "value": "",
                "description": "Array of integers Default: [] Example: companies=9,11,20020 Company ids to filter on. You can get a list of relevant company ids from the /slugs/<slug>/companies endpoint.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688468771030,
        "lastModifiedTime": 1688468771030,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "count": 42,
                    "latitude": 51.49319996125996,
                    "longitude": 3.9138999301940203
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103500,
        "executor_type": "THIRDPARTY",
        "executor_name": "countrydetails",
        "executor_version": "v2",
        "executor_display_name": "Country details",
        "executor_description": "Gets the details for a specific country by either ID or ISO.",
        "executor_category": "Geo",
        "executor_category_group": "Geo",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/countries/{country_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "country_id",
                "value": "",
                "description": "Country id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688466389849,
        "lastModifiedTime": 1688466389849,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Country details",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": 0,
                    "iso": "string",
                    "iso_3": "string",
                    "name": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103528,
        "executor_type": "THIRDPARTY",
        "executor_name": "getlocationsforreports",
        "executor_version": "v2",
        "executor_display_name": "Locations for reports",
        "executor_description": "Returns all locations where reports are coming from. The source of reports can be mixed. The output per location will differ based on the source of the reports.",
        "executor_category": "Geo",
        "executor_category_group": "Geo",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/slugs/{slugs}/locations",
        "dataroot": null,
        "pathParams": [
            {
                "key": "slugs",
                "value": "",
                "description": "Slug to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "string Example: page=cXVlcnEY2dIQTswOw== On each query, a X-Page-Next header will be returned with a token as value. If the header has an empty value or is not present in the response headers, no other pages are available.  For paging, provide this token for following pages. When calling the next pages, be sure to also include any initial parameters. Don't change those parameters while you are paging a resultset (they are part of the way the pageset is calculated).",
                "req": false
            },
            {
                "key": "page_size",
                "value": "",
                "description": "integer [ 10 .. 1000 ] Default: 10 Example: page_size=25 Amount of results per page",
                "req": false
            },
            {
                "key": "location_source",
                "value": "",
                "description": "string Enum: \"ip\" \"device\" Example: location_source=device Filter on specific location source types",
                "req": false
            },
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "sw",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: sw=50.803721015,3.31497114423 - The Netherlands bottom left corner sw=18.91619,-171.791110603 - USA bottom left corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "ne",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: ne=53.5104033474,7.09205325687 - The Netherlands top right corner ne=71.3577635769,-66.96466 - USA top right corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "asn",
                "value": "",
                "description": "Array of integers Example: asn=1234,5432 Filter reports on these network ids (ASN, RFC 1771)",
                "req": false
            },
            {
                "key": "companies",
                "value": "",
                "description": "Array of integers Default: [] Example: companies=9,11,20020 Company ids to filter on. You can get a list of relevant company ids from the /slugs/<slug>/companies endpoint.",
                "req": false
            },
            {
                "key": "countries",
                "value": "",
                "description": "Array of integers Default: [] Example: countries=96,98 Country ids to filter on",
                "req": false
            },
            {
                "key": "cities",
                "value": "",
                "description": "Array of integers Default: [] Example: cities=96,98 [BETA] City ids to filter on",
                "req": false
            },
            {
                "key": "providers",
                "value": "",
                "description": "Array of integers Default: [] Example: providers=96,98 [BETA] Provider ids to filter on",
                "req": false
            },
            {
                "key": "indicators",
                "value": "",
                "description": "Array of integers Default: [] Example: indicators=96,98 [BETA] Indicator ids to filter on",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688468432344,
        "lastModifiedTime": 1688468432344,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "created_at": "2019-08-24T14:15:22Z",
                    "device": "desktop",
                    "network": {
                        "asn": 0,
                        "provider_id": 0
                    },
                    "indicator_id": 0,
                    "company_id": 0,
                    "location": {
                        "latitude": 51.819,
                        "longitude": 4.642,
                        "source": "ip",
                        "city_id": 0,
                        "country_id": 0
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103515,
        "executor_type": "THIRDPARTY",
        "executor_name": "getcountriesforslugs",
        "executor_version": "v2",
        "executor_display_name": "Countries for slugs",
        "executor_description": "Returns a top X list of countries where reports are coming from.",
        "executor_category": "Geo",
        "executor_category_group": "Geo",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/slugs/{slugs}/countries",
        "dataroot": null,
        "pathParams": [
            {
                "key": "slugs",
                "value": "",
                "description": "Slug to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "sw",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: sw=50.803721015,3.31497114423 - The Netherlands bottom left corner sw=18.91619,-171.791110603 - USA bottom left corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "ne",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: ne=53.5104033474,7.09205325687 - The Netherlands top right corner ne=71.3577635769,-66.96466 - USA top right corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "asn",
                "value": "",
                "description": "Array of integers Example: asn=1234,5432 Filter reports on these network ids (ASN, RFC 1771)",
                "req": false
            },
            {
                "key": "amount",
                "value": "",
                "description": "integer [ 10 .. 512 ] Default: 10 Example: amount=10 Top X of buckets to return",
                "req": false
            },
            {
                "key": "companies",
                "value": "",
                "description": "Array of integers Default: [] Example: companies=9,11,20020 Company ids to filter on. You can get a list of relevant company ids from the /slugs/<slug>/companies endpoint.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688467253997,
        "lastModifiedTime": 1688467253997,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": 0,
                        "iso": "string",
                        "iso_3": "string",
                        "name": "string"
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103505,
        "executor_type": "THIRDPARTY",
        "executor_name": "countryDetails",
        "executor_version": "v2",
        "executor_display_name": "Country details",
        "executor_description": "Gets the details for a specific country by either ID or ISO.",
        "executor_category": "Geo",
        "executor_category_group": "Geo",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/countries/{country_iso}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "country_iso",
                "value": "",
                "description": "ISO 2 string"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688466631783,
        "lastModifiedTime": 1688466631783,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Country details",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": 0,
                    "iso": "string",
                    "iso_3": "string",
                    "name": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103559,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatemessage",
        "executor_version": "v2",
        "executor_display_name": "Update message",
        "executor_description": "Update the date configuration for a previously created message. You can only update messages for companies that you have access to.  You can only update publication dates, not the content of a message. To show a new message, update the expiry date of the current message, and create a new message with the new copy.",
        "executor_category": "Communicate",
        "executor_category_group": "Communicate",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://downdetectorapi.com/v2/messages/{message_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "message_id",
                "value": "",
                "description": "string <uuid> Example: 12345678-9012-3456-7890-123456789012"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "expire_at": "2019-08-24T14:15:22Z",
                "publish_at": "2019-08-24T14:15:22Z"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1688471216684,
        "lastModifiedTime": 1688471755079,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 202,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Message details",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "6a362465-6ba2-4e73-9825-beaae5116955",
                    "message": "This is a status update: We're working on it. For sure!",
                    "expire_at": "2019-08-24T14:15:22Z",
                    "publish_at": "2019-08-24T14:15:22Z",
                    "created_at": "2019-08-24T14:15:22Z",
                    "company_id": 42
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103572,
        "executor_type": "THIRDPARTY",
        "executor_name": "searchmessages",
        "executor_version": "v2",
        "executor_display_name": "Search messages",
        "executor_description": "Find messages by parameters",
        "executor_category": "Communicate",
        "executor_category_group": "Communicate",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/messages",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "page_size",
                "value": "",
                "description": "integer [ 10 .. 100 ] Example: page_size=25 Amount of results per page, between 10 and 100, defaults to 10",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "string Example: page=cXVlcnEY2dIQTswOw== On each query, a X-Page-Next header will be returned with a token as value. If the header has an empty value or is not present in the response headers, no other pages are available.  For paging, provide this token for following pages. When calling the next pages, be sure to also include any initial parameters. Don't change those parameters while you are paging a resultset (they are part of the way the pageset is calculated).",
                "req": false
            },
            {
                "key": "publish_date",
                "value": "",
                "description": "string <date-time> Example: publish_date=2010-02-11T13:37:42+00:00 ISO8601, returns messages created on this date (day). This is timezone aware.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1688472248620,
        "lastModifiedTime": 1688472594940,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Search results",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": "6a362465-6ba2-4e73-9825-beaae5116955",
                        "message": "This is a status update: We're working on it. For sure!",
                        "expire_at": "2019-08-24T14:15:22Z",
                        "publish_at": "2019-08-24T14:15:22Z",
                        "created_at": "2019-08-24T14:15:22Z",
                        "company_id": 42
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103570,
        "executor_type": "THIRDPARTY",
        "executor_name": "getListmessages",
        "executor_version": "v2",
        "executor_display_name": "List messages",
        "executor_description": "List of messages for the given company",
        "executor_category": "Communicate",
        "executor_category_group": "Communicate",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/companies/{company_id}/messages",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "number Example: 42"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688471904544,
        "lastModifiedTime": 1688471904544,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "List of message",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": "6a362465-6ba2-4e73-9825-beaae5116955",
                        "message": "This is a status update: We're working on it. For sure!",
                        "expire_at": "2019-08-24T14:15:22Z",
                        "publish_at": "2019-08-24T14:15:22Z",
                        "created_at": "2019-08-24T14:15:22Z",
                        "company_id": 42
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103557,
        "executor_type": "THIRDPARTY",
        "executor_name": "messagedetails",
        "executor_version": "v2",
        "executor_display_name": "Message details",
        "executor_description": "Message details",
        "executor_category": "Communicate",
        "executor_category_group": "Communicate",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/messages/{message_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "message_id",
                "value": "",
                "description": "string <uuid> Example: 12345678-9012-3456-7890-123456789012"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688471055424,
        "lastModifiedTime": 1688471055424,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "List of events",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "6a362465-6ba2-4e73-9825-beaae5116955",
                    "message": "This is a status update: We're working on it. For sure!",
                    "expire_at": "2019-08-24T14:15:22Z",
                    "publish_at": "2019-08-24T14:15:22Z",
                    "created_at": "2019-08-24T14:15:22Z",
                    "company_id": 42
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103561,
        "executor_type": "THIRDPARTY",
        "executor_name": "getcurrentmessage",
        "executor_version": "v2",
        "executor_display_name": "Get current message",
        "executor_description": "If any message is currently available for this company, a list of Message objects will be returned. If no message is currently active, an empty list will be returned.",
        "executor_category": "Communicate",
        "executor_category_group": "Communicate",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/companies/{company_id}/messages/current",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "number Example: 42"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1688471384205,
        "lastModifiedTime": 1688471625297,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Message details",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "6a362465-6ba2-4e73-9825-beaae5116955",
                    "message": "This is a status update: We're working on it. For sure!",
                    "expire_at": "2019-08-24T14:15:22Z",
                    "publish_at": "2019-08-24T14:15:22Z",
                    "created_at": "2019-08-24T14:15:22Z",
                    "company_id": 42
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103571,
        "executor_type": "THIRDPARTY",
        "executor_name": "createmessage",
        "executor_version": "v2",
        "executor_display_name": "Create message",
        "executor_description": "Creates a new message for the given company. You can only post messages to companies to which your token has access. This is setup during the signup process. If you don't have the access you need, please consult with your Downdetector contact.",
        "executor_category": "Communicate",
        "executor_category_group": "Communicate",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://downdetectorapi.com/v2/companies/{company_id}/messages",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "number Example: 42"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "message": "string",
                "expire_at": "2019-08-24T14:15:22Z",
                "publish_at": "2019-08-24T14:15:22Z"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688472098625,
        "lastModifiedTime": 1688472098625,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Message created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "6a362465-6ba2-4e73-9825-beaae5116955",
                    "message": "This is a status update: We're working on it. For sure!",
                    "expire_at": "2019-08-24T14:15:22Z",
                    "publish_at": "2019-08-24T14:15:22Z",
                    "created_at": "2019-08-24T14:15:22Z",
                    "company_id": 42
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103580,
        "executor_type": "THIRDPARTY",
        "executor_name": "listofavailablesites",
        "executor_version": "v2",
        "executor_display_name": "List of available sites",
        "executor_description": "Get a list of all available domains",
        "executor_category": "Sites",
        "executor_category_group": "Sites",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/sites",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688473285369,
        "lastModifiedTime": 1688473285369,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "List of sites",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": 0,
                        "name": "string",
                        "domain": "string",
                        "country_id": 0,
                        "country": {
                            "id": 0,
                            "iso": "string",
                            "name": "string",
                            "localized_name": "string"
                        }
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103582,
        "executor_type": "THIRDPARTY",
        "executor_name": "listofCompanypages",
        "executor_version": "v2",
        "executor_display_name": "List of company pages",
        "executor_description": "Returns a list of page ids to be used as inputs for the page parameter in the GET requests. This will return all page ids for consequent pages.",
        "executor_category": "Sites",
        "executor_category_group": "Sites",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "OPTIONS",
        "apiUrl": "https://downdetectorapi.com/v2/sites/{site_id}/companies",
        "dataroot": null,
        "pathParams": [
            {
                "key": "site_id",
                "value": "",
                "description": "Id for a site"
            }
        ],
        "queryParams": [
            {
                "key": "page_size",
                "value": "",
                "description": "integer [ 10 .. 100 ] Example: page_size=25 Amount of results per page, between 10 and 100, defaults to 10",
                "req": false
            },
            {
                "key": "order_by",
                "value": "",
                "description": "string Default: \"name\" Enum: \"name\" \"status\" Example: order_by=name Orders the results.  name will order by company name status will order by company status.",
                "req": false
            },
            {
                "key": "order_direction",
                "value": "",
                "description": "string Default: \"asc\" Enum: \"asc\" \"desc\" Example: order_direction=asc Can be used to reverse the order direction",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688473458977,
        "lastModifiedTime": 1688473458977,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    "string"
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103588,
        "executor_type": "THIRDPARTY",
        "executor_name": "companyevents",
        "executor_version": "v2",
        "executor_display_name": "Company events",
        "executor_description": "Gets a list of companies which had an event occur in the specified time period",
        "executor_category": "Sites",
        "executor_category_group": "Sites",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/sites/{site_id}/companies/events",
        "dataroot": null,
        "pathParams": [
            {
                "key": "site_id",
                "value": "",
                "description": "Id for a site"
            }
        ],
        "queryParams": [
            {
                "key": "fields",
                "value": "",
                "description": "Array of strings Default: [\"id\",\"name\",\"slug\",\"stats_24\"] Items Enum: \"id\" \"name\" \"slug\" \"url\" \"stats_24\" \"stats_60\" \"baseline\" \"baseline_current\" \"category_id\" \"logo\" \"logos\" \"logo_xsmall\" \"logo_small\" \"logo_medium\" \"logo_large\" \"logo_original\" \"description\" \"lang\" \"locale\" \"site_id\" \"indicators\" \"status\" \"contact\" \"country_iso\" \"country_id\" \"tz\" \"tz_offset\" \"asns\" Example: fields=id,name,slug,stats_24,baseline Which fields to return in the output. The lesser you return, the faster the output can be. Only request the fields that you actually need in your views.",
                "req": false
            },
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "order_by",
                "value": "",
                "description": "string Default: \"name\" Enum: \"name\" \"status\" Example: order_by=name Orders the results.  name will order by company name status will order by company status.",
                "req": false
            },
            {
                "key": "order_direction",
                "value": "",
                "description": "string Default: \"asc\" Enum: \"asc\" \"desc\" Example: order_direction=asc Can be used to reverse the order direction",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688474153282,
        "lastModifiedTime": 1688474153282,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": 0,
                        "title": "string",
                        "body": "string",
                        "company_id": 0,
                        "created_at": "2019-08-24T14:15:22Z",
                        "publish_at": "2019-08-24T14:15:22Z",
                        "is_active": true,
                        "measurement": {
                            "started_on": "2019-08-24T14:15:22Z",
                            "ended_on": "2019-08-24T14:15:22Z",
                            "expected": 0,
                            "actual": 0
                        }
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103584,
        "executor_type": "THIRDPARTY",
        "executor_name": "getsitecompanies",
        "executor_version": "v2",
        "executor_display_name": "Site companies",
        "executor_description": "Returns a list of companies for the given site",
        "executor_category": "Sites",
        "executor_category_group": "Sites",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/sites/{site_id}/companies",
        "dataroot": null,
        "pathParams": [
            {
                "key": "site_id",
                "value": "",
                "description": "Id for a site"
            }
        ],
        "queryParams": [
            {
                "key": "page_size",
                "value": "",
                "description": "Amount of results per page, between 10 and 100, defaults to 10",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "string Example: page=cXVlcnEY2dIQTswOw== On each query, a X-Page-Next header will be returned with a token as value. If the header has an empty value or is not present in the response headers, no other pages are available.  For paging, provide this token for following pages. When calling the next pages, be sure to also include any initial parameters. Don't change those parameters while you are paging a resultset (they are part of the way the pageset is calculated).",
                "req": false
            },
            {
                "key": "fields",
                "value": "",
                "description": "Array of strings Default: [\"id\",\"name\",\"slug\",\"stats_24\"] Items Enum: \"id\" \"name\" \"slug\" \"url\" \"stats_24\" \"stats_60\" \"baseline\" \"baseline_current\" \"category_id\" \"logo\" \"logos\" \"logo_xsmall\" \"logo_small\" \"logo_medium\" \"logo_large\" \"logo_original\" \"description\" \"lang\" \"locale\" \"site_id\" \"indicators\" \"status\" \"contact\" \"country_iso\" \"country_id\" \"tz\" \"tz_offset\" \"asns\" Example: fields=id,name,slug,stats_24,baseline Which fields to return in the output. The lesser you return, the faster the output can be. Only request the fields that you actually need in your views.",
                "req": false
            },
            {
                "key": "order_by",
                "value": "",
                "description": "string Default: \"name\" Enum: \"name\" \"status\" Example: order_by=name Orders the results.  name will order by company name status will order by company status.",
                "req": false
            },
            {
                "key": "order_direction",
                "value": "",
                "description": "string Default: \"asc\" Enum: \"asc\" \"desc\" Example: order_direction=asc Can be used to reverse the order direction",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688473665789,
        "lastModifiedTime": 1688473665789,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "name": "Comcast",
                        "id": 0,
                        "slug": "call-of-duty",
                        "url": "string",
                        "stats_24": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13,
                            14,
                            15,
                            16,
                            17,
                            18,
                            19,
                            20,
                            21,
                            22,
                            23,
                            24,
                            25,
                            26,
                            27,
                            28
                        ],
                        "stats_60": 0,
                        "baseline": [
                            0
                        ],
                        "baseline_current": 231,
                        "category_id": 0,
                        "logo": "string",
                        "logos": {},
                        "logo_xsmall": "string",
                        "logo_small": "string",
                        "logo_medium": "string",
                        "logo_large": "string",
                        "logo_original": "string",
                        "description": "string",
                        "lang": "en",
                        "site_id": 12,
                        "indicators": [
                            "string"
                        ],
                        "status": "danger",
                        "contact": {},
                        "country_iso": "US",
                        "tz": "Europe/Dublin",
                        "tz_offset": -3600
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103578,
        "executor_type": "THIRDPARTY",
        "executor_name": "getdetails",
        "executor_version": "v2",
        "executor_display_name": "Details",
        "executor_description": "Get details for a specific domain.",
        "executor_category": "Sites",
        "executor_category_group": "Sites",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/sites/{site_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "site_id",
                "value": "",
                "description": "Id for a site"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688473141454,
        "lastModifiedTime": 1688473141454,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": 0,
                    "name": "string",
                    "domain": "string",
                    "country_id": 0,
                    "country": {
                        "id": 0,
                        "iso": "string",
                        "name": "string",
                        "localized_name": "string"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103602,
        "executor_type": "THIRDPARTY",
        "executor_name": "mostReportedservices",
        "executor_version": "v2",
        "executor_display_name": "Most reported services",
        "executor_description": "BETA This endpoint is marked as beta for testing purposes. The input and/or output can change without prior notice  Returns the top X reported services from the given networks",
        "executor_category": "Beta",
        "executor_category_group": "Beta",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/networks/{asn}/top",
        "dataroot": null,
        "pathParams": [
            {
                "key": "asn",
                "value": "",
                "description": "ASN to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "amount",
                "value": "",
                "description": "integer [ 10 .. 512 ] Default: 10 Example: amount=10 Top X of buckets to return",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688530656671,
        "lastModifiedTime": 1688530656671,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "amount": 0,
                        "slug": "facebook",
                        "companies": "9,11,20020"
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103605,
        "executor_type": "THIRDPARTY",
        "executor_name": "reportsbyNetwork",
        "executor_version": "v2",
        "executor_display_name": "Reports by network",
        "executor_description": "BETA This endpoint is marked as beta for testing purposes. The input and/or output can change without prior notice  Returns the sum'ed number of reports for the given network id(s).",
        "executor_category": "Beta",
        "executor_category_group": "Beta",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/networks/{asn}/reports",
        "dataroot": null,
        "pathParams": [
            {
                "key": "asn",
                "value": "",
                "description": "ASN to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "interval",
                "value": "",
                "description": "string^[0-9]+[mhdwMqys]$ Default: \"15m\" Example: interval=15m Interval for the time based buckets, examples: 15m (15 minutes), 1m, 5m, 10m, 1h, 24h, 1d, 2d, etc.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "string^[0-9]+[mhdwMqys]$ Default: \"0s\" Example: offset=7m Sets the offset for the bucket calculation. eg, if interval is set to 15 minutes, default buckets will be at :00, :15, :30, :45 marks. With this you can set the offset.  For example given an interval of 15 minutes, and an offset of 7 minutes: :07, :22, :37, :52",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688531106589,
        "lastModifiedTime": 1688531106589,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "indicators": 3,
                        "other": 26,
                        "point_in_time": "2019-08-24T14:15:22Z",
                        "total": 29,
                        "tweets": 13
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103601,
        "executor_type": "THIRDPARTY",
        "executor_name": "indicatorOptions",
        "executor_version": "v2",
        "executor_display_name": "Indicator options",
        "executor_description": "Returns a list of indicators that is available for this particular company",
        "executor_category": "Beta",
        "executor_category_group": "Beta",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "OPTIONS",
        "apiUrl": "https://downdetectorapi.com/v2/companies/{company_id}/indicators",
        "dataroot": null,
        "pathParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "Id for a company"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688530214933,
        "lastModifiedTime": 1688530214933,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Baseline",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "indicator": {
                            "children": [],
                            "slug": "string",
                            "lang_XY": "string",
                            "id": 0
                        }
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103608,
        "executor_type": "THIRDPARTY",
        "executor_name": "heatmapforReports",
        "executor_version": "v2",
        "executor_display_name": "Heatmap for reports",
        "executor_description": "Returns the clustered locations where most reports are origination from. Will return max 1024 groups.",
        "executor_category": "Beta",
        "executor_category_group": "Beta",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/slugs/{slugs}/heatmap/current",
        "dataroot": null,
        "pathParams": [
            {
                "key": "slugs",
                "value": "",
                "description": "Slug to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "zoom",
                "value": "",
                "description": "integer [ 1 .. 6 ] Default: 1 Example: zoom=1 Zoom level for grouping",
                "req": false
            },
            {
                "key": "countries",
                "value": "",
                "description": "Array of integers Default: [] Example: countries=96,98 Country ids to filter on",
                "req": false
            },
            {
                "key": "companies",
                "value": "",
                "description": "Array of integers Default: [] Example: companies=9,11,20020 Company ids to filter on. You can get a list of relevant company ids from the /slugs/<slug>/companies endpoint.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688531294863,
        "lastModifiedTime": 1688531294863,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "count": 42,
                    "latitude": 51.49319996125996,
                    "longitude": 3.9138999301940203
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103609,
        "executor_type": "THIRDPARTY",
        "executor_name": "indicatordetails",
        "executor_version": "v2",
        "executor_display_name": "Indicator details",
        "executor_description": "BETA This endpoint is marked as beta for testing purposes. Get Indicator details by indicator id",
        "executor_category": "Beta",
        "executor_category_group": "Beta",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/indicators/{indicator_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "indicator_id",
                "value": "",
                "description": "Indicator id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688531424492,
        "lastModifiedTime": 1688531424492,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": 1337,
                    "created_at": "2019-08-24T14:15:22Z",
                    "updated_at": "2019-08-24T14:15:22Z",
                    "is_active": true,
                    "parent_id": 1337,
                    "slug": "string",
                    "translations": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103531,
        "executor_type": "THIRDPARTY",
        "executor_name": "mostreportedservices",
        "executor_version": "v2",
        "executor_display_name": "Most reported services",
        "executor_description": "BETA This endpoint is marked as beta for testing purposes. The input and/or output can change without prior notice  Returns the top X reported services from the given networks",
        "executor_category": "Networks",
        "executor_category_group": "Networks",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/networks/{asn}/top",
        "dataroot": null,
        "pathParams": [
            {
                "key": "asn",
                "value": "",
                "description": "ASN to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "amount",
                "value": "",
                "description": "integer [ 10 .. 512 ] Default: 10 Example: amount=10 Top X of buckets to return",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688468957790,
        "lastModifiedTime": 1688468957790,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "amount": 0,
                        "slug": "facebook",
                        "companies": "9,11,20020"
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103534,
        "executor_type": "THIRDPARTY",
        "executor_name": "reportsbynetwork",
        "executor_version": "v2",
        "executor_display_name": "Reports by network",
        "executor_description": "BETA This endpoint is marked as beta for testing purposes. The input and/or output can change without prior notice  Returns the sum'ed number of reports for the given network id(s).",
        "executor_category": "Networks",
        "executor_category_group": "Networks",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/networks/{asn}/reports",
        "dataroot": null,
        "pathParams": [
            {
                "key": "asn",
                "value": "",
                "description": "ASN to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "amount",
                "value": "",
                "description": "integer [ 10 .. 512 ] Default: 10 Example: amount=10 Top X of buckets to return",
                "req": false
            },
            {
                "key": "interval",
                "value": "",
                "description": "string^[0-9]+[mhdwMqys]$ Default: \"15m\" Example: interval=15m Interval for the time based buckets, examples: 15m (15 minutes), 1m, 5m, 10m, 1h, 24h, 1d, 2d, etc.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "string^[0-9]+[mhdwMqys]$ Default: \"0s\" Example: offset=7m Sets the offset for the bucket calculation. eg, if interval is set to 15 minutes, default buckets will be at :00, :15, :30, :45 marks. With this you can set the offset.  For example given an interval of 15 minutes, and an offset of 7 minutes: :07, :22, :37, :52",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688469297895,
        "lastModifiedTime": 1688469297895,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "indicators": 3,
                        "other": 26,
                        "point_in_time": "2019-08-24T14:15:22Z",
                        "total": 29,
                        "tweets": 13
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103538,
        "executor_type": "THIRDPARTY",
        "executor_name": "getnetworksforslugs",
        "executor_version": "v2",
        "executor_display_name": "Networks for slugs",
        "executor_description": "Returns a top X list of networks where reports are coming from.",
        "executor_category": "Networks",
        "executor_category_group": "Networks",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/slugs/{slugs}/networks",
        "dataroot": null,
        "pathParams": [
            {
                "key": "slugs",
                "value": "",
                "description": "Slug to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "sw",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: sw=50.803721015,3.31497114423 - The Netherlands bottom left corner sw=18.91619,-171.791110603 - USA bottom left corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "ne",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: ne=53.5104033474,7.09205325687 - The Netherlands top right corner ne=71.3577635769,-66.96466 - USA top right corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "amount",
                "value": "",
                "description": "integer [ 10 .. 512 ] Default: 10 Example: amount=10 Top X of buckets to return",
                "req": false
            },
            {
                "key": "countries",
                "value": "",
                "description": "Array of integers Default: [] Example: countries=96,98 Country ids to filter on",
                "req": false
            },
            {
                "key": "companies",
                "value": "",
                "description": "Array of integers Default: [] Example: companies=9,11,20020 Company ids to filter on. You can get a list of relevant company ids from the /slugs/<slug>/companies endpoint.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688469620644,
        "lastModifiedTime": 1688469620644,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "amount": 0,
                        "network": {
                            "name": "Comcast",
                            "id": 42,
                            "downdetector_id": 42
                        }
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103616,
        "executor_type": "THIRDPARTY",
        "executor_name": "getReportsforslugs",
        "executor_version": "v2",
        "executor_display_name": "Reports for slugs",
        "executor_description": "Returns the sum'ed number of reports for the given slug.",
        "executor_category": "Reports",
        "executor_category_group": "Reports",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/slugs/{slugs}/reports",
        "dataroot": null,
        "pathParams": [
            {
                "key": "slugs",
                "value": "",
                "description": "Slug to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "sw",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: sw=50.803721015,3.31497114423 - The Netherlands bottom left corner sw=18.91619,-171.791110603 - USA bottom left corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "ne",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: ne=53.5104033474,7.09205325687 - The Netherlands top right corner ne=71.3577635769,-66.96466 - USA top right corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "asn",
                "value": "",
                "description": "Array of integers Example: asn=1234,5432 Filter reports on these network ids (ASN, RFC 1771)",
                "req": false
            },
            {
                "key": "providers",
                "value": "",
                "description": "Array of integers Default: [] Example: providers=96,98 [BETA] Provider ids to filter on",
                "req": false
            },
            {
                "key": "indicators",
                "value": "",
                "description": "Array of integers Default: [] Example: indicators=96,98 [BETA] Indicator ids to filter on",
                "req": false
            },
            {
                "key": "cities",
                "value": "",
                "description": "Array of integers Default: [] Example: cities=96,98 [BETA] City ids to filter on",
                "req": false
            },
            {
                "key": "interval",
                "value": "",
                "description": "string^[0-9]+[mhdwMqys]$ Default: \"15m\" Example: interval=15m Interval for the time based buckets, examples: 15m (15 minutes), 1m, 5m, 10m, 1h, 24h, 1d, 2d, etc.",
                "req": false
            },
            {
                "key": "countries",
                "value": "",
                "description": "Array of integers Default: [] Example: countries=96,98 Country ids to filter on",
                "req": false
            },
            {
                "key": "companies",
                "value": "",
                "description": "Array of integers Default: [] Example: companies=9,11,20020 Company ids to filter on. You can get a list of relevant company ids from the /slugs/<slug>/companies endpoint.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "string Default: \"0s\" Example: offset=7m Sets the offset for the bucket calculation. eg, if interval is set to 15 minutes, default buckets will be at :00, :15, :30, :45 marks. With this you can set the offset. For example given an interval of 15 minutes, and an offset of 7 minutes: :07, :22, :37, :52",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688532145360,
        "lastModifiedTime": 1688532145360,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "indicators": 3,
                        "other": 26,
                        "point_in_time": "2019-08-24T14:15:22Z",
                        "total": 29,
                        "tweets": 13
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103613,
        "executor_type": "THIRDPARTY",
        "executor_name": "getreportsbynetwork",
        "executor_version": "v2",
        "executor_display_name": "Reports by network",
        "executor_description": "BETA This endpoint is marked as beta for testing purposes. The input and/or output can change without prior notice  Returns the sum'ed number of reports for the given network id(s).",
        "executor_category": "Reports",
        "executor_category_group": "Reports",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/networks/{asn}/reports",
        "dataroot": null,
        "pathParams": [
            {
                "key": "asn",
                "value": "",
                "description": "ASN to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "interval",
                "value": "",
                "description": "string^[0-9]+[mhdwMqys]$ Default: \"15m\" Example: interval=15m Interval for the time based buckets, examples: 15m (15 minutes), 1m, 5m, 10m, 1h, 24h, 1d, 2d, etc.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "string^[0-9]+[mhdwMqys]$ Default: \"0s\" Example: offset=7m Sets the offset for the bucket calculation. eg, if interval is set to 15 minutes, default buckets will be at :00, :15, :30, :45 marks. With this you can set the offset.  For example given an interval of 15 minutes, and an offset of 7 minutes: :07, :22, :37, :52",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688531772815,
        "lastModifiedTime": 1688531772815,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "indicators": 3,
                        "other": 26,
                        "point_in_time": "2019-08-24T14:15:22Z",
                        "total": 29,
                        "tweets": 13
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103553,
        "executor_type": "THIRDPARTY",
        "executor_name": "gettoken",
        "executor_version": "v2",
        "executor_display_name": "Get token",
        "executor_description": "Generate a (temporary) token for usage. Using your client credentials.  In your http client, send your credentials as a Basic Authentication header: client_id as your username and client_secret as your password.  Returns an access_token that is valid for one hour.  This call is not counted towards your api usage. The call is rate limited.",
        "executor_category": "Authentication",
        "executor_category_group": "Authentication",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://downdetectorapi.com/v2/tokens",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "access_token",
                "value": "",
                "description": "string Access token which should be used as Bearer token for any request.  This is a JWT token, it has an expiry set, after which you should refresh the token. The standard expiry is 1 hour after generation. We suggest you start refreshing the token 5 minutes before the expire time.",
                "req": false
            },
            {
                "key": "token_type",
                "value": "",
                "description": "string What type of token this is, currently we only support Bearer",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1688470697239,
        "lastModifiedTime": 1688470850992,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "New Token",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "access_token": "eyJraWQiOiJ5emhEaEVmKzB5U...hecr0bmVxQciWcUYtHgDd-Sc5zUsSb",
                    "token_type": "Bearer"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103549,
        "executor_type": "THIRDPARTY",
        "executor_name": "verifytoken",
        "executor_version": "v2",
        "executor_display_name": "Verify token",
        "executor_description": "Verify if the token used in the request is valid.",
        "executor_category": "Authentication",
        "executor_category_group": "Authentication",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/tokens/verify",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1688470369292,
        "lastModifiedTime": 1688470752932,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Verified token",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "OK"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103574,
        "executor_type": "THIRDPARTY",
        "executor_name": "searchCompanies",
        "executor_version": "v2",
        "executor_display_name": "Search companies",
        "executor_description": "Returns a list of companies which match the given parameters. This will be an AND operation, so any given query parameters will be matched accordingly.",
        "executor_category": "Search",
        "executor_category_group": "Search",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/companies/search",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "fields",
                "value": "",
                "description": "Array of strings Default: [\"id\",\"name\",\"slug\",\"stats_24\"] Items Enum: \"id\" \"name\" \"slug\" \"url\" \"stats_24\" \"stats_60\" \"baseline\" \"baseline_current\" \"category_id\" \"logo\" \"logos\" \"logo_xsmall\" \"logo_small\" \"logo_medium\" \"logo_large\" \"logo_original\" \"description\" \"lang\" \"locale\" \"site_id\" \"indicators\" \"status\" \"contact\" \"country_iso\" \"country_id\" \"tz\" \"tz_offset\" \"asns\" Example: fields=id,name,slug,stats_24,baseline Which fields to return in the output. The lesser you return, the faster the output can be. Only request the fields that you actually need in your views.",
                "req": false
            },
            {
                "key": "name",
                "value": "",
                "description": "string >= 2 characters Example: name=snapchat Company name to filter for, this will be a partial match, case insensitive.",
                "req": false
            },
            {
                "key": "country",
                "value": "",
                "description": "string 2 characters Example: country=US Country to filter on, iso 2",
                "req": false
            },
            {
                "key": "category_id",
                "value": "",
                "description": "number Example: category_id=42 Category id to filter on",
                "req": false
            },
            {
                "key": "slug",
                "value": "",
                "description": "string >= 3 characters Example: slug=optimum-cablevision Slug to filter on, full match",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688472817287,
        "lastModifiedTime": 1688472817287,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "name": "Comcast",
                        "id": 0,
                        "slug": "call-of-duty",
                        "url": "string",
                        "stats_24": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13,
                            14,
                            15,
                            16,
                            17,
                            18,
                            19,
                            20,
                            21,
                            22,
                            23,
                            24,
                            25,
                            26,
                            27,
                            28
                        ],
                        "stats_60": 0,
                        "baseline": [
                            0
                        ],
                        "baseline_current": 231,
                        "category_id": 0,
                        "logo": "string",
                        "logos": {},
                        "logo_xsmall": "string",
                        "logo_small": "string",
                        "logo_medium": "string",
                        "logo_large": "string",
                        "logo_original": "string",
                        "description": "string",
                        "lang": "en",
                        "site_id": 12,
                        "indicators": [
                            "string"
                        ],
                        "status": "danger",
                        "contact": {},
                        "country_iso": "US",
                        "tz": "Europe/Dublin",
                        "tz_offset": -3600
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103573,
        "executor_type": "THIRDPARTY",
        "executor_name": "searchMessages",
        "executor_version": "v2",
        "executor_display_name": "Search messages",
        "executor_description": "Find messages by parameters",
        "executor_category": "Search",
        "executor_category_group": "Search",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/messages",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "page_size",
                "value": "",
                "description": "integer [ 10 .. 100 ] Example: page_size=25 Amount of results per page, between 10 and 100, defaults to 10",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "string Example: page=cXVlcnEY2dIQTswOw== On each query, a X-Page-Next header will be returned with a token as value. If the header has an empty value or is not present in the response headers, no other pages are available.  For paging, provide this token for following pages. When calling the next pages, be sure to also include any initial parameters. Don't change those parameters while you are paging a resultset (they are part of the way the pageset is calculated).",
                "req": false
            },
            {
                "key": "publish_date",
                "value": "",
                "description": "string <date-time> Example: publish_date=2010-02-11T13:37:42+00:00 ISO8601, returns messages created on this date (day). This is timezone aware.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688472550588,
        "lastModifiedTime": 1688472550588,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Search results",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": "6a362465-6ba2-4e73-9825-beaae5116955",
                        "message": "This is a status update: We're working on it. For sure!",
                        "expire_at": "2019-08-24T14:15:22Z",
                        "publish_at": "2019-08-24T14:15:22Z",
                        "created_at": "2019-08-24T14:15:22Z",
                        "company_id": 42
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103575,
        "executor_type": "THIRDPARTY",
        "executor_name": "getcompaniesforslugs",
        "executor_version": "v2",
        "executor_display_name": "Companies for slugs",
        "executor_description": "List of companies which match the given slug",
        "executor_category": "Search",
        "executor_category_group": "Search",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/slugs/{slugs}/companies",
        "dataroot": null,
        "pathParams": [
            {
                "key": "slugs",
                "value": "",
                "description": "Array of strings Example: facebook Slug to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "fields",
                "value": "",
                "description": "Array of strings Default: [\"id\",\"name\",\"slug\",\"stats_24\"] Items Enum: \"id\" \"name\" \"slug\" \"url\" \"stats_24\" \"stats_60\" \"baseline\" \"baseline_current\" \"category_id\" \"logo\" \"logos\" \"logo_xsmall\" \"logo_small\" \"logo_medium\" \"logo_large\" \"logo_original\" \"description\" \"lang\" \"locale\" \"site_id\" \"indicators\" \"status\" \"contact\" \"country_iso\" \"country_id\" \"tz\" \"tz_offset\" \"asns\" Example: fields=id,name,slug,stats_24,baseline Which fields to return in the output. The lesser you return, the faster the output can be. Only request the fields that you actually need in your views.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688473001013,
        "lastModifiedTime": 1688473001013,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "name": "Comcast",
                        "id": 0,
                        "slug": "call-of-duty",
                        "url": "string",
                        "stats_24": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12,
                            13,
                            14,
                            15,
                            16,
                            17,
                            18,
                            19,
                            20,
                            21,
                            22,
                            23,
                            24,
                            25,
                            26,
                            27,
                            28
                        ],
                        "stats_60": 0,
                        "baseline": [
                            0
                        ],
                        "baseline_current": 231,
                        "category_id": 0,
                        "logo": "string",
                        "logos": {},
                        "logo_xsmall": "string",
                        "logo_small": "string",
                        "logo_medium": "string",
                        "logo_large": "string",
                        "logo_original": "string",
                        "description": "string",
                        "lang": "en",
                        "site_id": 12,
                        "indicators": [
                            "string"
                        ],
                        "status": "danger",
                        "contact": {},
                        "country_iso": "US",
                        "tz": "Europe/Dublin",
                        "tz_offset": -3600
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103301,
        "executor_type": "THIRDPARTY",
        "executor_name": "providersforslugs",
        "executor_version": "v2",
        "executor_display_name": "Providers for slugs",
        "executor_description": "Returns a top X list of providers where reports are coming from.",
        "executor_category": "Providers",
        "executor_category_group": "Providers",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/slugs/{slugs}/providers",
        "dataroot": null,
        "pathParams": [
            {
                "key": "slugs",
                "value": "",
                "description": "Slug to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "sw",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: sw=50.803721015,3.31497114423 - The Netherlands bottom left corner sw=18.91619,-171.791110603 - USA bottom left corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "ne",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: ne=53.5104033474,7.09205325687 - The Netherlands top right corner ne=71.3577635769,-66.96466 - USA top right corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "asn",
                "value": "",
                "description": "Array of integers Example: asn=1234,5432 Filter reports on these network ids (ASN, RFC 1771)",
                "req": false
            },
            {
                "key": "amount",
                "value": "",
                "description": "integer [ 10 .. 512 ] Default: 10 Example: amount=10 Top X of buckets to return",
                "req": false
            },
            {
                "key": "countries",
                "value": "",
                "description": "Array of integers Default: [] Example: countries=96,98 Country ids to filter on",
                "req": false
            },
            {
                "key": "companies",
                "value": "",
                "description": "Array of integers Default: [] Example: companies=9,11,20020 Company ids to filter on. You can get a list of relevant company ids from the /slugs/<slug>/companies endpoint.",
                "req": false
            },
            {
                "key": "cities",
                "value": "",
                "description": "Array of integers Default: [] Example: cities=96,98 [BETA] City ids to filter on",
                "req": false
            },
            {
                "key": "providers",
                "value": "",
                "description": "Array of integers Default: [] Example: providers=96,98 [BETA] Provider ids to filter on",
                "req": false
            },
            {
                "key": "indicators",
                "value": "",
                "description": "Array of integers Default: [] Example: indicators=96,98 [BETA] Indicator ids to filter on",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688445588006,
        "lastModifiedTime": 1688445588006,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "amount": 0,
                        "provider": {
                            "name": "Comcast",
                            "id": 42,
                            "downdetector_id": 42
                        }
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103300,
        "executor_type": "THIRDPARTY",
        "executor_name": "details",
        "executor_version": "v2",
        "executor_display_name": "Details",
        "executor_description": "Get details for a specific provider.",
        "executor_category": "Providers",
        "executor_category_group": "Providers",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/providers/{provider_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "provider_id",
                "value": "",
                "description": "Id for a provider"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688445073360,
        "lastModifiedTime": 1688445073360,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Provider details",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "Comcast",
                    "id": 42,
                    "downdetector_id": 42
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103541,
        "executor_type": "THIRDPARTY",
        "executor_name": "apiStatus",
        "executor_version": "v2",
        "executor_display_name": "Api Status",
        "executor_description": "Check if api is still responding.",
        "executor_category": "Other",
        "executor_category_group": "Other",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/ping",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "sw",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: sw=50.803721015,3.31497114423 - The Netherlands bottom left corner sw=18.91619,-171.791110603 - USA bottom left corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "ne",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: ne=53.5104033474,7.09205325687 - The Netherlands top right corner ne=71.3577635769,-66.96466 - USA top right corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "amount",
                "value": "",
                "description": "integer [ 10 .. 512 ] Default: 10 Example: amount=10 Top X of buckets to return",
                "req": false
            },
            {
                "key": "countries",
                "value": "",
                "description": "Array of integers Default: [] Example: countries=96,98 Country ids to filter on",
                "req": false
            },
            {
                "key": "companies",
                "value": "",
                "description": "Array of integers Default: [] Example: companies=9,11,20020 Company ids to filter on. You can get a list of relevant company ids from the /slugs/<slug>/companies endpoint.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688469838429,
        "lastModifiedTime": 1688469838429,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Everything is A-OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "pong"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103591,
        "executor_type": "THIRDPARTY",
        "executor_name": "categories",
        "executor_version": "v2",
        "executor_display_name": "Categories",
        "executor_description": "Get all categories",
        "executor_category": "Categories",
        "executor_category_group": "Categories",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/categories",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688474582942,
        "lastModifiedTime": 1688474582942,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "list of Categories",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {}
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103590,
        "executor_type": "THIRDPARTY",
        "executor_name": "categorydetails",
        "executor_version": "v2",
        "executor_display_name": "Category details",
        "executor_description": "Category details",
        "executor_category": "Categories",
        "executor_category_group": "Categories",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/categories/{category_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "category_id",
                "value": "",
                "description": "Category id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688474459596,
        "lastModifiedTime": 1688474459597,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Category details",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": 42,
                    "name": "Providers",
                    "slug": "providers"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103592,
        "executor_type": "THIRDPARTY",
        "executor_name": "categorybaseline",
        "executor_version": "v2",
        "executor_display_name": "Category baseline",
        "executor_description": "Category baseline, calculated over all companies in this specific category",
        "executor_category": "Categories",
        "executor_category_group": "Categories",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/categories/{category_id}/baseline/countries/{country_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "category_id",
                "value": "",
                "description": "Category id"
            },
            {
                "key": "country_id",
                "value": "",
                "description": "Country id"
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688474704367,
        "lastModifiedTime": 1688474704367,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Baseline",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    2,
                    2,
                    2,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    3,
                    4,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    16,
                    16,
                    17,
                    17,
                    17,
                    18,
                    18,
                    19,
                    19,
                    18,
                    18,
                    18,
                    18,
                    18,
                    17,
                    18,
                    17,
                    18,
                    18,
                    17,
                    18,
                    18,
                    17,
                    17,
                    17,
                    17,
                    16,
                    17,
                    15,
                    15,
                    14,
                    13,
                    13,
                    13,
                    12,
                    12,
                    11,
                    11,
                    11,
                    11,
                    11,
                    10,
                    10,
                    9,
                    10,
                    9,
                    9,
                    8,
                    8,
                    8,
                    7,
                    6,
                    6,
                    5,
                    5,
                    4,
                    4,
                    4,
                    3,
                    4,
                    3,
                    2,
                    2
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103621,
        "executor_type": "THIRDPARTY",
        "executor_name": "indicatorsforSlugs",
        "executor_version": "v2",
        "executor_display_name": "Indicators for slugs",
        "executor_description": "Returns the reported indicators for the given filters",
        "executor_category": "Indicators",
        "executor_category_group": "Indicators",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/slugs/{slugs}/indicators",
        "dataroot": null,
        "pathParams": [
            {
                "key": "slugs",
                "value": "",
                "description": "Slug to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "startdate",
                "value": "",
                "description": "string <date-time> Example: startdate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with enddate.  Be aware that the + in RFC3339 format needs to be urlencoded. Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "enddate",
                "value": "",
                "description": "string <date-time> Example: enddate=2010-02-11T13:37:42+00:00 ISO8601, limits the results to start on this date, only works in conjunction with startdate.  Enddate is inclusive. So selecting 2020-04-01T13:37:00+00:00 as enddate, will include all reports for that specific second as well. This could mean that the last bucket of a timeselection is always empty when it collides with a time bucket, eg, every 15 minutes. For example, given this period: 12:00:00 - 12:15:00, will return 2 buckets:  12:00:00 - 12:14:59 12:15:00 - 12:29:59 The contents of the buckets will be filtered on the given period, so the last bucket will only have the reports for the one second of the given period, which could give unexpected results. Instead, when using: 12:00:00 - 12:14:59, only 1 bucket will be returned:  12:00:00 - 12:14:59  Be aware that the + in RFC3339 format needs to be urlencoded.  Be aware that the timezone is divided by a colon in ISO8601, eg: 2042-03-14T13:37:42+01:00",
                "req": false
            },
            {
                "key": "sw",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: sw=50.803721015,3.31497114423 - The Netherlands bottom left corner sw=18.91619,-171.791110603 - USA bottom left corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "ne",
                "value": "",
                "description": "Array of numbers <double> 2 items Examples: ne=53.5104033474,7.09205325687 - The Netherlands top right corner ne=71.3577635769,-66.96466 - USA top right corner Bounds for the query. Latitude,longitude pair, comma seperated, eg: 5.4123,21.0012",
                "req": false
            },
            {
                "key": "asn",
                "value": "",
                "description": "Array of integers Example: asn=1234,5432 Filter reports on these network ids (ASN, RFC 1771)",
                "req": false
            },
            {
                "key": "amount",
                "value": "",
                "description": "integer [ 10 .. 512 ] Default: 10 Example: amount=10 Top X of buckets to return",
                "req": false
            },
            {
                "key": "countries",
                "value": "",
                "description": "Array of integers Default: [] Example: countries=96,98 Country ids to filter on",
                "req": false
            },
            {
                "key": "companies",
                "value": "",
                "description": "Array of integers Default: [] Example: companies=9,11,20020 Company ids to filter on. You can get a list of relevant company ids from the /slugs/<slug>/companies endpoint.",
                "req": false
            },
            {
                "key": "cities",
                "value": "",
                "description": "Array of integers Default: [] Example: cities=96,98 [BETA] City ids to filter on",
                "req": false
            },
            {
                "key": "providers",
                "value": "",
                "description": "Array of integers Default: [] Example: providers=96,98 [BETA] Provider ids to filter on",
                "req": false
            },
            {
                "key": "indicators",
                "value": "",
                "description": "Array of integers Default: [] Example: indicators=96,98 [BETA] Indicator ids to filter on",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688532890642,
        "lastModifiedTime": 1688532890642,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "indicator": {
                            "slug": "string",
                            "lang_XY": "string",
                            "id": 0
                        },
                        "amount": 0,
                        "percentage": 0
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103623,
        "executor_type": "THIRDPARTY",
        "executor_name": "getIndicatordetails",
        "executor_version": "v2",
        "executor_display_name": "Indicator details",
        "executor_description": "BETA This endpoint is marked as beta for testing purposes. Get Indicator details by indicator id",
        "executor_category": "Indicators",
        "executor_category_group": "Indicators",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/indicators/{indicator_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "indicator_id",
                "value": "",
                "description": "Indicator id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688533316432,
        "lastModifiedTime": 1688533316432,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": 1337,
                    "created_at": "2019-08-24T14:15:22Z",
                    "updated_at": "2019-08-24T14:15:22Z",
                    "is_active": true,
                    "parent_id": 1337,
                    "slug": "string",
                    "translations": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103622,
        "executor_type": "THIRDPARTY",
        "executor_name": "getCurrentindicatorsforslugs",
        "executor_version": "v2",
        "executor_display_name": "Current indicators for slugs",
        "executor_description": "Returns the reported indicators over the last 24h",
        "executor_category": "Indicators",
        "executor_category_group": "Indicators",
        "service_provider": "downdetector",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://downdetectorapi.com/v2/slugs/{slugs}/indicators/current",
        "dataroot": null,
        "pathParams": [
            {
                "key": "slugs",
                "value": "",
                "description": "Slug to filter on"
            }
        ],
        "queryParams": [
            {
                "key": "countries",
                "value": "",
                "description": "Array of integers Default: [] Example: countries=96,98 Country ids to filter on",
                "req": false
            },
            {
                "key": "companies",
                "value": "",
                "description": "Array of integers Default: [] Example: companies=9,11,20020 Company ids to filter on. You can get a list of relevant company ids from the /slugs/<slug>/companies endpoint.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688533115044,
        "lastModifiedTime": 1688533115044,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": true,
                    "message": "string"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "indicator": {
                            "slug": "string",
                            "lang_XY": "string",
                            "id": 0
                        },
                        "amount": 0,
                        "percentage": 0
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    }
]