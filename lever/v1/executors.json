[
    {
        "id": 103620,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteFeedback",
        "executor_version": "v1",
        "executor_display_name": "Delete Feedback",
        "executor_description": "Delete Feedback",
        "executor_category": "Feedback",
        "executor_category_group": "Feedback",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "{baseurl}/opportunities/:opportunity/feedback/:feedback",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "feedback",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this update on behalf of a specified user.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688584857251,
        "lastModifiedTime": 1688584857251,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": "If data was requested, it will be available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103615,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveafeedbackform",
        "executor_version": "v1",
        "executor_display_name": "Retrieve a feedback form",
        "executor_description": "Retrieve a feedback form",
        "executor_category": "Feedback",
        "executor_category_group": "Feedback",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity/feedback/:feedback",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "feedback",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688584132297,
        "lastModifiedTime": 1688584132297,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": "If data was requested, it will be available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103619,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatefeedback",
        "executor_version": "v1",
        "executor_display_name": "Update feedback",
        "executor_description": "Create a feedback form",
        "executor_category": "Feedback",
        "executor_category_group": "Feedback",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "{baseurl}/opportunities/:opportunity/feedback/:feedback",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "feedback",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this update on behalf of a specified user.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688584522800,
        "lastModifiedTime": 1688584522800,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": "If data was requested, it will be available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103618,
        "executor_type": "THIRDPARTY",
        "executor_name": "createafeedbackform",
        "executor_version": "v1",
        "executor_display_name": "Create a feedback form",
        "executor_description": "Create a feedback form",
        "executor_category": "Feedback",
        "executor_category_group": "Feedback",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/opportunities/:opportunity/feedback",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this create on behalf of a specified user.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688584357320,
        "lastModifiedTime": 1688584357320,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": "If data was requested, it will be available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103617,
        "executor_type": "THIRDPARTY",
        "executor_name": "listallfeedback",
        "executor_version": "v1",
        "executor_display_name": "List all feedback",
        "executor_description": "List all feedback",
        "executor_category": "Feedback",
        "executor_category_group": "Feedback",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity/feedback",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688584243305,
        "lastModifiedTime": 1688584243305,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": "If data was requested, it will be available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103649,
        "executor_type": "THIRDPARTY",
        "executor_name": "createaninterview",
        "executor_version": "v1",
        "executor_display_name": "Create an interview",
        "executor_description": "Create an interview",
        "executor_category": "Files",
        "executor_category_group": "Files",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/opportunities/:opportunity/interviews",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this create on behalf of a specified user. The creator of this interview will default to the perform_as user.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688590342333,
        "lastModifiedTime": 1688590342333,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "data": [
                            {
                                "id": "6ff55c8e-fe04-4eb4-835a-630b1c0da421",
                                "panel": "fdb313e8-13c5-47de-9e51-6a21a4d76ff6",
                                "subject": "On-site interview - Kristoff Bjorgman - Office Manager",
                                "note": "SCHEDULE:\n6:00 - 6:30 pm - Rachel Green - Call - (123) 456-7891\n",
                                "interviewers": [
                                    {
                                        "email": "rachel@exampleq3.com",
                                        "id": "412f5bf5-1509-4916-ba5b-8b16a5c3ce6d",
                                        "name": "Rachel Green"
                                    }
                                ],
                                "timezone": "America/Los_Angeles",
                                "createdAt": 1423187000000,
                                "date": 1423188000000,
                                "duration": 30,
                                "location": "Call - (123) 456-7891",
                                "feedbackTemplate": "7fdd449e-0bb1-4ac8-9b96-9281c1dc2099",
                                "feedbackForms": [
                                    "0a96e6ca-2f17-4046-87b3-15d3b6a148db"
                                ],
                                "feedbackReminder": "once",
                                "user": "e434f554-659d-462d-abeb-943b9deaa370",
                                "stage": "f709f65a-481f-4067-9a0d-934a79da9f8e",
                                "canceledAt": null,
                                "postings": [
                                    "9026d1f1-a03b-49dc-8a17-5f448d1de52b"
                                ]
                            }
                        ],
                        "hasNext": false
                    }
                }
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103638,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveasinglefile",
        "executor_version": "v1",
        "executor_display_name": "Retrieve a single file",
        "executor_description": "Retrieve a single file",
        "executor_category": "Files",
        "executor_category_group": "Files",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity/files/:file",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "file",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this update on behalf of a specified user.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688589435051,
        "lastModifiedTime": 1688589435051,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": "If data was requested, it will be available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "b02a3b97-dc41-48e3-b003-44d211ed2a4c",
                        "downloadUrl": "https://hire.lever.co/candidates/5d14b167-04af-404f-bd35-b3028d3b3f67/files/b02a3b97-dc41-48e3-b003-44d211ed2a4c/download",
                        "ext": ".pdf",
                        "name": "JaneSmithArticle.pdf",
                        "uploadedAt": "1468953420000",
                        "status": "processed",
                        "size": "1000"
                    }
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103641,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadafile",
        "executor_version": "v1",
        "executor_display_name": "Download a file",
        "executor_description": "Download a file",
        "executor_category": "Files",
        "executor_category_group": "Files",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity/files/:file/download",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "file",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1688589828932,
        "lastModifiedTime": 1688590008599,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": "If data was requested, it will be available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103636,
        "executor_type": "THIRDPARTY",
        "executor_name": "uploadasinglefile",
        "executor_version": "v1",
        "executor_display_name": "Upload a single file",
        "executor_description": "Upload a single file",
        "executor_category": "Files",
        "executor_category_group": "Files",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/opportunities/:opportunity/files",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this update on behalf of a specified user.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data": {
                    "id": "b02a3b97-dc41-48e3-b003-44d211ed2a4c",
                    "downloadUrl": "https://hire.lever.co/candidates/5d14b167-04af-404f-bd35-b3028d3b3f67/files/b02a3b97-dc41-48e3-b003-44d211ed2a4c/download",
                    "ext": ".pdf",
                    "name": "JaneSmithArticle.pdf",
                    "uploadedAt": "1468953420000",
                    "status": "processed",
                    "size": "1000"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688589339261,
        "lastModifiedTime": 1688589339261,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": "If data was requested, it will be available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "code": "RequestTimeout",
                    "message": "File took too long to upload."
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103645,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveasingleinterview",
        "executor_version": "v1",
        "executor_display_name": "Retrieve a single interview",
        "executor_description": "Retrieve a single interview",
        "executor_category": "Files",
        "executor_category_group": "Files",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity/interviews/:interview",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "interview",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688590097154,
        "lastModifiedTime": 1688590097154,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "6ff55c8e-fe04-4eb4-835a-630b1c0da421",
                        "panel": "fdb313e8-13c5-47de-9e51-6a21a4d76ff6",
                        "subject": "On-site interview - Kristoff Bjorgman - Office Manager",
                        "note": "SCHEDULE:\n6:00 - 6:30 pm - Rachel Green - Call - (123) 456-7891\n",
                        "interviewers": [
                            {
                                "email": "rachel@exampleq3.com",
                                "id": "412f5bf5-1509-4916-ba5b-8b16a5c3ce6d",
                                "name": "Rachel Green"
                            }
                        ],
                        "timezone": "America/Los_Angeles",
                        "createdAt": 1423187000000,
                        "date": 1423188000000,
                        "duration": 30,
                        "location": "Call - (123) 456-7891",
                        "feedbackTemplate": "7fdd449e-0bb1-4ac8-9b96-9281c1dc2099",
                        "feedbackForms": [
                            "0a96e6ca-2f17-4046-87b3-15d3b6a148db"
                        ],
                        "feedbackReminder": "once",
                        "user": "e434f554-659d-462d-abeb-943b9deaa370",
                        "stage": "f709f65a-481f-4067-9a0d-934a79da9f8e",
                        "canceledAt": null,
                        "postings": [
                            "9026d1f1-a03b-49dc-8a17-5f448d1de52b"
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103640,
        "executor_type": "THIRDPARTY",
        "executor_name": "listallfiles",
        "executor_version": "v1",
        "executor_display_name": "List all files",
        "executor_description": "List all files",
        "executor_category": "Files",
        "executor_category_group": "Files",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity/files",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "uploaded_at_start",
                "value": "",
                "description": "Filter files by the timestamp they were uploaded at. If only uploaded_at_start is specified, all files uploaded from that timestamp (inclusive) to the present will be included. If only uploaded_at_end is specified, all files uploaded before that timestamp (inclusive) are included. If either value is not a proper timestamp a 400 error will be returned for a malformed request.",
                "req": false
            },
            {
                "key": "uploaded_at_end",
                "value": "",
                "description": "Filter files by the timestamp they were uploaded at. If only uploaded_at_start is specified, all files uploaded from that timestamp (inclusive) to the present will be included. If only uploaded_at_end is specified, all files uploaded before that timestamp (inclusive) are included. If either value is not a proper timestamp a 400 error will be returned for a malformed request.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688589767308,
        "lastModifiedTime": 1688589767308,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": "If data was requested, it will be available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": "b02a3b97-dc41-48e3-b003-44d211ed2a4c",
                        "downloadUrl": "https://hire.lever.co/candidates/5d14b167-04af-404f-bd35-b3028d3b3f67/files/b02a3b97-dc41-48e3-b003-44d211ed2a4c/download",
                        "ext": ".pdf",
                        "name": "JaneSmithArticle.pdf",
                        "uploadedAt": "1468953420000",
                        "status": "processed",
                        "size": "1000"
                    },
                    {
                        "id": "49c3d4d5-6370-4498-976a-637b4a0cff48",
                        "downloadUrl": "https://hire.lever.co/candidates/5d14b167-04af-404f-bd35-b3028d3b3f67/files/49c3d4d5-6370-4498-976a-637b4a0cff48/download",
                        "ext": ".png",
                        "name": "logo.png",
                        "uploadedAt": "1469353420000",
                        "status": "processed",
                        "size": "2000"
                    },
                    {
                        "id": "c405946c-c7fe-47cb-864c-b35777f2f45f",
                        "downloadUrl": "https://hire.lever.co/candidates/5d14b167-04af-404f-bd35-b3028d3b3f67/files/c405946c-c7fe-47cb-864c-b35777f2f45f/download",
                        "ext": ".pdf",
                        "name": "JaneSmithDesignPortfolio.pdf",
                        "uploadedAt": "1471253420000",
                        "status": "processed",
                        "size": "3000"
                    },
                    {
                        "id": "812e686c-1dc2-4b7c-9514-9060e91203a5",
                        "downloadUrl": "https://hire.lever.co/candidates/5d14b167-04af-404f-bd35-b3028d3b3f67/files/812e686c-1dc2-4b7c-9514-9060e91203a5/download",
                        "ext": ".pdf",
                        "name": "JaneSmithOnSite.pdf",
                        "uploadedAt": "147193420000",
                        "status": "processed",
                        "size": "4000"
                    },
                    {
                        "id": "14408ec1-1a41-48ba-ac76-cb3700c13d89",
                        "downloadUrl": "https://hire.lever.co/candidates/5d14b167-04af-404f-bd35-b3028d3b3f67/files/812e686c-1dc2-4b7c-9514-9060e91203a5/download",
                        "ext": ".pdf",
                        "name": "JaneSmithCorruptedFile.pdf",
                        "uploadedAt": "147193420000",
                        "status": "error",
                        "size": "5000"
                    }
                ]
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103652,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaninterview",
        "executor_version": "v1",
        "executor_display_name": "Delete an interview",
        "executor_description": "Delete an interview",
        "executor_category": "Files",
        "executor_category_group": "Files",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "{baseurl}/opportunities/:opportunity/interviews/:interview",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "interview",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this create on behalf of a specified user. The creator of this interview will default to the perform_as user.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688590541197,
        "lastModifiedTime": 1688590541197,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "no content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103647,
        "executor_type": "THIRDPARTY",
        "executor_name": "listallinterviews",
        "executor_version": "v1",
        "executor_display_name": "List all interviews",
        "executor_description": "List all interviews",
        "executor_category": "Files",
        "executor_category_group": "Files",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity/interviews",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688590186933,
        "lastModifiedTime": 1688590186933,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "id": "6ff55c8e-fe04-4eb4-835a-630b1c0da421",
                            "panel": "fdb313e8-13c5-47de-9e51-6a21a4d76ff6",
                            "subject": "On-site interview - Kristoff Bjorgman - Office Manager",
                            "note": "SCHEDULE:\n6:00 - 6:30 pm - Rachel Green - Call - (123) 456-7891\n",
                            "interviewers": [
                                {
                                    "email": "rachel@exampleq3.com",
                                    "id": "412f5bf5-1509-4916-ba5b-8b16a5c3ce6d",
                                    "name": "Rachel Green"
                                }
                            ],
                            "timezone": "America/Los_Angeles",
                            "createdAt": 1423187000000,
                            "date": 1423188000000,
                            "duration": 30,
                            "location": "Call - (123) 456-7891",
                            "feedbackTemplate": "7fdd449e-0bb1-4ac8-9b96-9281c1dc2099",
                            "feedbackForms": [
                                "0a96e6ca-2f17-4046-87b3-15d3b6a148db"
                            ],
                            "feedbackReminder": "once",
                            "user": "e434f554-659d-462d-abeb-943b9deaa370",
                            "stage": "f709f65a-481f-4067-9a0d-934a79da9f8e",
                            "canceledAt": null,
                            "postings": [
                                "9026d1f1-a03b-49dc-8a17-5f448d1de52b"
                            ]
                        }
                    ],
                    "hasNext": false
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103650,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateaninterview",
        "executor_version": "v1",
        "executor_display_name": "Update an interview",
        "executor_description": "Update an interview",
        "executor_category": "Files",
        "executor_category_group": "Files",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "{baseurl}/opportunities/:opportunity/interviews/:interview",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "interview",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this create on behalf of a specified user. The creator of this interview will default to the perform_as user.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688590458823,
        "lastModifiedTime": 1688590458823,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "data": [
                            {
                                "id": "6ff55c8e-fe04-4eb4-835a-630b1c0da421",
                                "panel": "fdb313e8-13c5-47de-9e51-6a21a4d76ff6",
                                "subject": "On-site interview - Kristoff Bjorgman - Office Manager",
                                "note": "SCHEDULE:\n6:00 - 6:30 pm - Rachel Green - Call - (123) 456-7891\n",
                                "interviewers": [
                                    {
                                        "email": "rachel@exampleq3.com",
                                        "id": "412f5bf5-1509-4916-ba5b-8b16a5c3ce6d",
                                        "name": "Rachel Green"
                                    }
                                ],
                                "timezone": "America/Los_Angeles",
                                "createdAt": 1423187000000,
                                "date": 1423188000000,
                                "duration": 30,
                                "location": "Call - (123) 456-7891",
                                "feedbackTemplate": "7fdd449e-0bb1-4ac8-9b96-9281c1dc2099",
                                "feedbackForms": [
                                    "0a96e6ca-2f17-4046-87b3-15d3b6a148db"
                                ],
                                "feedbackReminder": "once",
                                "user": "e434f554-659d-462d-abeb-943b9deaa370",
                                "stage": "f709f65a-481f-4067-9a0d-934a79da9f8e",
                                "canceledAt": null,
                                "postings": [
                                    "9026d1f1-a03b-49dc-8a17-5f448d1de52b"
                                ]
                            }
                        ],
                        "hasNext": false
                    }
                }
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103643,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteafilelever",
        "executor_version": "v1",
        "executor_display_name": "Delete a file",
        "executor_description": "Delete a file",
        "executor_category": "Files",
        "executor_category_group": "Files",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "{baseurl}/opportunities/:opportunity/files/:file",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "file",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this update on behalf of a specified user.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688589955275,
        "lastModifiedTime": 1688589955275,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "no content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103656,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveasinglenote",
        "executor_version": "v1",
        "executor_display_name": "Retrieve a single note",
        "executor_description": "Retrieve a single note",
        "executor_category": "Notes",
        "executor_category_group": "Notes",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity/notes/:note",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "note",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this create on behalf of a specified user. The creator of this interview will default to the perform_as user.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688590824234,
        "lastModifiedTime": 1688590824234,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "b1dbbcfe-281c-46a0-8f51-57049158d3f3",
                        "text": "Note",
                        "fields": [
                            {
                                "type": "note",
                                "text": "Comment",
                                "value": "@rachel We should move forward with Teresa. Can you reach out to her with an email?",
                                "createdAt": 1420312438110,
                                "user": "483ac544-921a-4033-94fa-e8bbc409b19e",
                                "score": 3,
                                "stage": "4779eaac-a817-48d5-a18f-20a43c00a38d"
                            },
                            {
                                "type": "note",
                                "text": "Comment",
                                "value": "Sounds great, @josh! I will send her an email this week.",
                                "createdAt": 1421715919765,
                                "user": "db87e5e8-07fb-4188-8fac-378ef74766e6",
                                "score": 3,
                                "stage": "2ed7557b-9c37-48e3-a2cb-7ecb2c805ade"
                            }
                        ],
                        "user": "c9a0ef49-bfec-496c-bcb9-174ce1984cd2",
                        "secret": false,
                        "completedAt": 1420312438111,
                        "createdAt": 1420312438111,
                        "deletedAt": 1526925087354
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103662,
        "executor_type": "THIRDPARTY",
        "executor_name": "postcreateanote",
        "executor_version": "v1",
        "executor_display_name": "Create a note",
        "executor_description": "Create a note",
        "executor_category": "Notes",
        "executor_category_group": "Notes",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/opportunities/:opportunity/notes",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this create on behalf of a specified user. If unspecified, defaults to null.",
                "req": false
            },
            {
                "key": "note_id",
                "value": "",
                "description": "Add a comment to an existing note of a specific opportunity. Comments must have a value, and can optionally take a createdAt timestamp",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688591105503,
        "lastModifiedTime": 1688591105503,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "id": "b1dbbcfe-281c-46a0-8f51-57049158d3f3",
                            "text": "Note",
                            "fields": [
                                {
                                    "type": "note",
                                    "text": "Comment",
                                    "value": "@rachel We should move forward with Teresa. Can you reach out to her with an email?",
                                    "createdAt": 1420312438110,
                                    "user": "483ac544-921a-4033-94fa-e8bbc409b19e",
                                    "score": 3,
                                    "stage": "4779eaac-a817-48d5-a18f-20a43c00a38d"
                                },
                                {
                                    "type": "note",
                                    "text": "Comment",
                                    "value": "Sounds great, @josh! I will send her an email this week.",
                                    "createdAt": 1421715919765,
                                    "user": "db87e5e8-07fb-4188-8fac-378ef74766e6",
                                    "score": 3,
                                    "stage": "2ed7557b-9c37-48e3-a2cb-7ecb2c805ade"
                                }
                            ],
                            "user": "c9a0ef49-bfec-496c-bcb9-174ce1984cd2",
                            "secret": false,
                            "completedAt": 1420312438111,
                            "createdAt": 1420312438111,
                            "deletedAt": 1526925087354
                        }
                    ],
                    "hasNext": false
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103663,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteanote",
        "executor_version": "v1",
        "executor_display_name": "Delete a note",
        "executor_description": "Delete a note",
        "executor_category": "Notes",
        "executor_category_group": "Notes",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "{baseurl}/opportunities/:opportunity/notes/:noteId",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "noteId",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688591197240,
        "lastModifiedTime": 1688591197240,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "no content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103658,
        "executor_type": "THIRDPARTY",
        "executor_name": "listallnoteslever",
        "executor_version": "v1",
        "executor_display_name": "List all notes",
        "executor_description": "List all notes",
        "executor_category": "Notes",
        "executor_category_group": "Notes",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity/notes",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688590955423,
        "lastModifiedTime": 1688590955423,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "id": "b1dbbcfe-281c-46a0-8f51-57049158d3f3",
                            "text": "Note",
                            "fields": [
                                {
                                    "type": "note",
                                    "text": "Comment",
                                    "value": "@rachel We should move forward with Teresa. Can you reach out to her with an email?",
                                    "createdAt": 1420312438110,
                                    "user": "483ac544-921a-4033-94fa-e8bbc409b19e",
                                    "score": 3,
                                    "stage": "4779eaac-a817-48d5-a18f-20a43c00a38d"
                                },
                                {
                                    "type": "note",
                                    "text": "Comment",
                                    "value": "Sounds great, @josh! I will send her an email this week.",
                                    "createdAt": 1421715919765,
                                    "user": "db87e5e8-07fb-4188-8fac-378ef74766e6",
                                    "score": 3,
                                    "stage": "2ed7557b-9c37-48e3-a2cb-7ecb2c805ade"
                                }
                            ],
                            "user": "c9a0ef49-bfec-496c-bcb9-174ce1984cd2",
                            "secret": false,
                            "completedAt": 1420312438111,
                            "createdAt": 1420312438111,
                            "deletedAt": 1526925087354
                        }
                    ],
                    "hasNext": false
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103680,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateopportunitystage",
        "executor_version": "v1",
        "executor_display_name": "Update opportunity stage",
        "executor_description": "Update opportunity stage",
        "executor_category": "Opportunities",
        "executor_category_group": "Opportunities",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "{baseurl}/opportunities/:opportunity/stage",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this create on behalf of a specified user. The creator and the owner of this Opportunity will default to the perform_as user. The owner can be explicitly specified in the request body if you want the owner to be a different person.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688592234512,
        "lastModifiedTime": 1688592234512,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103676,
        "executor_type": "THIRDPARTY",
        "executor_name": "listdeletedopportunities",
        "executor_version": "v1",
        "executor_display_name": "List deleted opportunities",
        "executor_description": "List deleted opportunities",
        "executor_category": "Opportunities",
        "executor_category_group": "Opportunities",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/deleted",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "deleted_at_start, deleted_at_end",
                "value": "",
                "description": "Filter deleted Opportunities by the timestamp they were deleted. If only deleted_at_start is specified, all Opportunities deleted from that timestamp (inclusive) to the present will be included. If only deleted_at_end is specified, all Opportunities deleted before that timestamp (inclusive) are included.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688592037796,
        "lastModifiedTime": 1688592037796,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103690,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateopportunitytags",
        "executor_version": "v1",
        "executor_display_name": "Update opportunity tags",
        "executor_description": "Update opportunity tags",
        "executor_category": "Opportunities",
        "executor_category_group": "Opportunities",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/opportunities/:opportunity/addTags",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this create on behalf of a specified user. The creator and the owner of this Opportunity will default to the perform_as user. The owner can be explicitly specified in the request body if you want the owner to be a different person.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688592719089,
        "lastModifiedTime": 1688592719089,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103687,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatecontactlinksbyopportunity",
        "executor_version": "v1",
        "executor_display_name": "Update contact links by opportunity",
        "executor_description": "Update contact links by opportunity",
        "executor_category": "Opportunities",
        "executor_category_group": "Opportunities",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/opportunities/:opportunity/addLinks",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this create on behalf of a specified user. The creator and the owner of this Opportunity will default to the perform_as user. The owner can be explicitly specified in the request body if you want the owner to be a different person.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688592562626,
        "lastModifiedTime": 1688592562626,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103674,
        "executor_type": "THIRDPARTY",
        "executor_name": "listallopportunities",
        "executor_version": "v1",
        "executor_display_name": "List all opportunities",
        "executor_description": "List all opportunities",
        "executor_category": "Opportunities",
        "executor_category_group": "Opportunities",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "include",
                "value": "",
                "description": "Include Opportunity followers in list results",
                "req": false
            },
            {
                "key": "expand",
                "value": "",
                "description": "Expand application, stage, contact, or user IDs into full objects in response",
                "req": false
            },
            {
                "key": "tag",
                "value": "",
                "description": "Filter Opportunities by tag (case sensitive). Results will include Opportunities that contain the specified tag. Multiple tags can be specified and results will include a union of result sets (i.e. Opportunities that have either tag).",
                "req": false
            },
            {
                "key": "email",
                "value": "",
                "description": "Filter Opportunities by an email address. Results will include Opportunities for Contacts that contain the canonicalized email address.",
                "req": false
            },
            {
                "key": "origin",
                "value": "",
                "description": "Filter Opportunities by origin. Results will include Opportunities that contain the specified origin. Multiple origins can be specified and results will include a union of result sets (i.e. Opportunities from either origin).",
                "req": false
            },
            {
                "key": "source",
                "value": "",
                "description": "Filter Opportunities by source. Results will include Opportunities that contain the specified source tag. Multiple sources can be specified and results will include a union of result sets (i.e. Opportunities from either source).",
                "req": false
            },
            {
                "key": "confidentiality",
                "value": "",
                "description": "Filter opportunities by confidentiality. If unspecified, defaults to non-confidential. To get both confidential and non-confidential opportunities you must specify all. Learn more about confidential data in the API.",
                "req": false
            },
            {
                "key": "stage_id",
                "value": "",
                "description": "Filter Opportunities by current stage. Results will include Opportunities that are currently in the specified stage. Multiple stages can be specified and results will include a union of result sets (i.e. Opportunities that are in either stage).",
                "req": false
            },
            {
                "key": "posting_id",
                "value": "",
                "description": "Filter Opportunities by posting. Results will include Opportunities that are applied to the specified posting. Multiple postings can be specified and results will include a union of result sets (i.e. Opportunities that are applied to either posting).",
                "req": false
            },
            {
                "key": "archived_posting_id",
                "value": "",
                "description": "Filter Opportunities by postings for which they have been archived. Results will include opportunities for candidates that applied to the specified posting and then the application was archived. Multiple postings can be specified and results will include a union of result sets (i.e. Opportunities that were applied to either posting).",
                "req": false
            },
            {
                "key": "created_at_start, created_at_end",
                "value": "",
                "description": "Filter Opportunities by the timestamp they were created. If only created_at_start is specified, all Opportunities created from that timestamp (inclusive) to the present will be included. If only created_at_end is specified, all Opportunities created before that timestamp (inclusive) are included.",
                "req": false
            },
            {
                "key": "updated_at_start, updated_at_end",
                "value": "",
                "description": "Filter Opportunities by the timestamp they were last updated. If only updated_at_start is specified, all Opportunities updated from that timestamp (inclusive) to the present will be included. If only updated_at_end is specified, all Opportunities updated before that timestamp (inclusive) are included.",
                "req": false
            },
            {
                "key": "advanced_at_start, advanced_at_end",
                "value": "",
                "description": "Filter Opportunities by the timestamp they were advanced to their current stage. If only advanced_at_start is specified, all Opportunities advanced from that timestamp (inclusive) to the present will be included. If only advanced_at_end is specified, all Opportunities advanced before that timestamp (inclusive) are included.",
                "req": false
            },
            {
                "key": "archived_at_start, archived_at_end",
                "value": "",
                "description": "Filter Opportunities by the timestamp they were archived. If only archived_at_start is specified, all Opportunities archived from that timestamp (inclusive) to the present will be included. If only archived_at_end is specified, all Opportunities archived before that timestamp (inclusive) are included.",
                "req": false
            },
            {
                "key": "archived",
                "value": "",
                "description": "Filter Opportunities by archive status. If unspecified, results include both archived and unarchived Opportunities. If true, results only include archived Opportunities. If false, results only include active Opportunities.",
                "req": false
            },
            {
                "key": "archive_reason_id",
                "value": "",
                "description": "Filter Opportunities by archive reason. Results will include Opportunities that have been archived with the specified reason. Multiple archive reasons can be specified and results will include a union of result sets (i.e. Opportunities that have been archived for either reason).",
                "req": false
            },
            {
                "key": "snoozed",
                "value": "",
                "description": "Filter Opportunities by snoozed status. If unspecified, results include both snoozed and unsnoozed Opportunities. If true, results only include snoozed Opportunities. If false, results only include unsnoozed Opportunities.",
                "req": false
            },
            {
                "key": "contact_id",
                "value": "",
                "description": "Filter Opportunities by contact. Results will include the Opportunities that match the specified contact. Multiple contacts can be specified and results will include a union of result sets (i.e. Opportunities that match each of the contacts).",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688591941868,
        "lastModifiedTime": 1688591941868,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "id": "250d8f03-738a-4bba-a671-8a3d73477145",
                            "name": "Shane Smith",
                            "headline": "Brickly LLC, Vandelay Industries, Inc, Central Perk",
                            "contact": "7f23e772-f2cb-4ebb-b33f-54b872999992",
                            "emails": [
                                "shane@exampleq3.com"
                            ],
                            "phones": [
                                {
                                    "value": "(123) 456-7891"
                                }
                            ],
                            "confidentiality": "non-confidential",
                            "location": "Oakland",
                            "links": [
                                "indeed.com/r/Shane-Smith/0b7c87f6b246d2bc"
                            ],
                            "createdAt": 1407460071043,
                            "updatedAt": 1407460080914,
                            "lastInteractionAt": 1417588008760,
                            "lastAdvancedAt": 1417587916150,
                            "snoozedUntil": 1505971500000,
                            "archivedAt": null,
                            "archiveReason": null,
                            "stage": "00922a60-7c15-422b-b086-f62000824fd7",
                            "stageChanges": [
                                {
                                    "toStageId": "00922a60-7c15-422b-b086-f62000824fd7",
                                    "toStageIndex": 1,
                                    "userId": "df0adaa6-172c-4cd6-8520-49b203660fe1",
                                    "updatedAt": 1407460071043
                                }
                            ],
                            "owner": "df0adaa6-172c-4cd6-8520-49b203660fe1",
                            "tags": [
                                "San Francisco",
                                "Full-time",
                                "Support",
                                "Customer Success",
                                "Customer Success Manager"
                            ],
                            "sources": [
                                "linkedin"
                            ],
                            "origin": "sourced",
                            "sourcedBy": "df0adaa6-172c-4cd6-8520-49b203660fe1",
                            "applications": [
                                "cdb4ff13-f7aa-49b0-b6ec-eb4617009cfa"
                            ],
                            "resume": null,
                            "followers": [
                                "df0adaa6-172c-4cd6-8520-49b203660fe1",
                                "ecdb6670-d9f3-4b87-8267-1cde26d1bc42",
                                "022d6639-1333-419b-9635-31f93015335f"
                            ],
                            "urls": {
                                "list": "https://hire.lever.co/candidates",
                                "show": "https://hire.lever.co/candidates/250d8f03-738a-4bba-a671-8a3d73477145"
                            },
                            "dataProtection": {
                                "store": {
                                    "allowed": true,
                                    "expiresAt": 1522540800000
                                },
                                "contact": {
                                    "allowed": false,
                                    "expiresAt": null
                                }
                            },
                            "isAnonymized": false
                        },
                        {
                            "id": "5c86dcd8-6cf1-40da-9ae3-5e7ea91079f5",
                            "name": "Chaofan West",
                            "headline": "Grunnings, Inc., Coffee Bean, Ltd, Betelgeuse Commercial Service Co., Ltd, Double C Private Co., Ltd",
                            "contact": "bd4d81c8-7858-4624-be98-552dfb9ca850",
                            "emails": [
                                "chaofan@example.com"
                            ],
                            "phones": [
                                {
                                    "value": "(123) 456-7891"
                                }
                            ],
                            "location": "San Francisco",
                            "links": [
                                "indeed.com/r/Chaofan-West/4f2c7523b0edefbb"
                            ],
                            "createdAt": 1407778275799,
                            "lastInteractionAt": 1417587990376,
                            "lastAdvancedAt": 1417587903121,
                            "snoozedUntil": 1499577840000,
                            "archivedAt": null,
                            "archiveReason": null,
                            "stage": "00922a60-7c15-422b-b086-f62000824fd7",
                            "owner": "ecdb6670-d9f3-4b87-8267-1cde26d1bc42",
                            "tags": [
                                "San Francisco",
                                "Marketing",
                                "Customer Success",
                                "Customer Success Manager",
                                "Full-time"
                            ],
                            "sources": [
                                "Job site"
                            ],
                            "origin": "applied",
                            "sourcedBy": null,
                            "applications": [
                                "e326d6e6-e3f6-46eb-9c14-6f90b88aacac"
                            ],
                            "resume": null,
                            "followers": [
                                "df0adaa6-172c-4cd6-8520-49b203660fe1",
                                "ecdb6670-d9f3-4b87-8267-1cde26d1bc42",
                                "022d6639-1333-419b-9635-31f93015335f"
                            ],
                            "dataProtection": null
                        },
                        {
                            "id": "37caee03-bd3f-487d-b32e-a296ce05aa6b",
                            "name": "Roberta Easton",
                            "headline": "Useful Information Access",
                            "contact": "853af6b1-71a2-46d7-a430-c067e28b08f9",
                            "emails": [
                                "roberta@exampleq3.com"
                            ],
                            "phones": [
                                {
                                    "value": "(123) 456-7891"
                                }
                            ],
                            "location": "San Jose",
                            "links": [
                                "https://linkedin.com/in/roberta-e"
                            ],
                            "createdAt": 1407778277088,
                            "lastInteractionAt": 1417587981210,
                            "lastAdvancedAt": 1417587891220,
                            "snoozedUntil": 1420266291216,
                            "archivedAt": null,
                            "archiveReason": null,
                            "stage": "00922a60-7c15-422b-b086-f62000824fd7",
                            "owner": "ecdb6670-d9f3-4b87-8267-1cde26d1bc42",
                            "tags": [
                                "San Francisco",
                                "Marketing",
                                "Customer Success",
                                "Customer Success Manager",
                                "Full-time"
                            ],
                            "sources": [
                                "Job site"
                            ],
                            "origin": "applied",
                            "sourcedBy": null,
                            "applications": [
                                "eb91c63f-3511-4e9d-a805-aaa92f0c80c9"
                            ],
                            "resume": null,
                            "followers": [
                                "df0adaa6-172c-4cd6-8520-49b203660fe1",
                                "ecdb6670-d9f3-4b87-8267-1cde26d1bc42",
                                "022d6639-1333-419b-9635-31f93015335f"
                            ],
                            "dataProtection": null
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103689,
        "executor_type": "THIRDPARTY",
        "executor_name": "removelinksfromaContactbyanOpportunity",
        "executor_version": "v1",
        "executor_display_name": "Remove links from a Contact by an Opportunity",
        "executor_description": "Remove links from a Contact by an Opportunity",
        "executor_category": "Opportunities",
        "executor_category_group": "Opportunities",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/opportunities/:opportunity/removeLinks",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this create on behalf of a specified user. The creator and the owner of this Opportunity will default to the perform_as user. The owner can be explicitly specified in the request body if you want the owner to be a different person.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688592665545,
        "lastModifiedTime": 1688592665545,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103679,
        "executor_type": "THIRDPARTY",
        "executor_name": "createanopportunity",
        "executor_version": "v1",
        "executor_display_name": "Create an opportunity",
        "executor_description": "Create an opportunity",
        "executor_category": "Opportunities",
        "executor_category_group": "Opportunities",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/opportunities",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this create on behalf of a specified user. The creator and the owner of this Opportunity will default to the perform_as user. The owner can be explicitly specified in the request body if you want the owner to be a different person.",
                "req": false
            },
            {
                "key": "parse",
                "value": "",
                "description": "If unspecified, assumed to be false. If set to true and a resume file is provided, the resume will be parsed and extracted data will be used to autofill information about the contact such as email and phone number. Any fields manually passed to the endpoint take precedence over any parsed data.",
                "req": false
            },
            {
                "key": "perform_as_posting_owner",
                "value": "",
                "description": "If unspecified, assumed to be false and the Opportunity owner will default to the perform_as user. If set to true, an array containing a single posting UID must be passed in via the postings field. The Opportunity owner will be set to that of the posting owner for the single posting. If the posting does not have an owner, the Opportunity owner will default to the perform_as user.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688592162423,
        "lastModifiedTime": 1688592162423,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103691,
        "executor_type": "THIRDPARTY",
        "executor_name": "removetagsfromanOpportunity",
        "executor_version": "v1",
        "executor_display_name": "Remove tags from an Opportunity",
        "executor_description": "Remove tags from an Opportunity",
        "executor_category": "Opportunities",
        "executor_category_group": "Opportunities",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/opportunities/:opportunity/removeTags",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this create on behalf of a specified user. The creator and the owner of this Opportunity will default to the perform_as user. The owner can be explicitly specified in the request body if you want the owner to be a different person.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688592770937,
        "lastModifiedTime": 1688592770937,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103672,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveasingleopportunity",
        "executor_version": "v1",
        "executor_display_name": "Retrieve a single opportunity",
        "executor_description": "Retrieve a single opportunity",
        "executor_category": "Opportunities",
        "executor_category_group": "Opportunities",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "status",
                "value": "",
                "description": "Specify which version of the offer file should be downloaded.If no status parameter is included, the most recent document will be returned. (i.e. The signed document will be returned if it exists, otherwise the sent document.)",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688591630967,
        "lastModifiedTime": 1688591630967,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "250d8f03-738a-4bba-a671-8a3d73477145",
                        "name": "Shane Smith",
                        "headline": "Brickly LLC, Vandelay Industries, Inc, Central Perk",
                        "contact": "7f23e772-f2cb-4ebb-b33f-54b872999992",
                        "emails": [
                            "shane@exampleq3.com"
                        ],
                        "phones": [
                            {
                                "value": "(123) 456-7891"
                            }
                        ],
                        "confidentiality": "non-confidential",
                        "location": "Oakland",
                        "links": [
                            "indeed.com/r/Shane-Smith/0b7c87f6b246d2bc"
                        ],
                        "createdAt": 1407460071043,
                        "updatedAt": 1407460080914,
                        "lastInteractionAt": 1417588008760,
                        "lastAdvancedAt": 1417587916150,
                        "snoozedUntil": 1505971500000,
                        "archivedAt": null,
                        "archiveReason": null,
                        "stage": "00922a60-7c15-422b-b086-f62000824fd7",
                        "stageChanges": [
                            {
                                "toStageId": "00922a60-7c15-422b-b086-f62000824fd7",
                                "toStageIndex": 1,
                                "userId": "df0adaa6-172c-4cd6-8520-49b203660fe1",
                                "updatedAt": 1407460071043
                            }
                        ],
                        "owner": "df0adaa6-172c-4cd6-8520-49b203660fe1",
                        "tags": [
                            "San Francisco",
                            "Full-time",
                            "Support",
                            "Customer Success",
                            "Customer Success Manager"
                        ],
                        "sources": [
                            "linkedin"
                        ],
                        "origin": "sourced",
                        "sourcedBy": "df0adaa6-172c-4cd6-8520-49b203660fe1",
                        "applications": [
                            "cdb4ff13-f7aa-49b0-b6ec-eb4617009cfa"
                        ],
                        "resume": null,
                        "followers": [
                            "df0adaa6-172c-4cd6-8520-49b203660fe1",
                            "ecdb6670-d9f3-4b87-8267-1cde26d1bc42",
                            "022d6639-1333-419b-9635-31f93015335f"
                        ],
                        "urls": {
                            "list": "https://hire.lever.co/candidates",
                            "show": "https://hire.lever.co/candidates/250d8f03-738a-4bba-a671-8a3d73477145"
                        },
                        "dataProtection": {
                            "store": {
                                "allowed": true,
                                "expiresAt": 1522540800000
                            },
                            "contact": {
                                "allowed": false,
                                "expiresAt": null
                            }
                        },
                        "isAnonymized": false
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103695,
        "executor_type": "THIRDPARTY",
        "executor_name": "removesourcesfromanOpportunity",
        "executor_version": "v1",
        "executor_display_name": "Remove sources from an Opportunity",
        "executor_description": "Remove sources from an Opportunity",
        "executor_category": "Opportunities",
        "executor_category_group": "Opportunities",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/opportunities/:opportunity/removeSources",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this create on behalf of a specified user. The creator and the owner of this Opportunity will default to the perform_as user. The owner can be explicitly specified in the request body if you want the owner to be a different person.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688592920708,
        "lastModifiedTime": 1688592920708,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103682,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateopportunityarchivedstate",
        "executor_version": "v1",
        "executor_display_name": "Update opportunity archived state",
        "executor_description": "Update opportunity archived state",
        "executor_category": "Opportunities",
        "executor_category_group": "Opportunities",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "{baseurl}/opportunities/:opportunity/archived",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this create on behalf of a specified user. The creator and the owner of this Opportunity will default to the perform_as user. The owner can be explicitly specified in the request body if you want the owner to be a different person.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688592327763,
        "lastModifiedTime": 1688592327763,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103692,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateopportunitysources",
        "executor_version": "v1",
        "executor_display_name": "Update opportunity sources",
        "executor_description": "Update opportunity sources",
        "executor_category": "Opportunities",
        "executor_category_group": "Opportunities",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/opportunities/:opportunity/addSources",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this create on behalf of a specified user. The creator and the owner of this Opportunity will default to the perform_as user. The owner can be explicitly specified in the request body if you want the owner to be a different person.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688592847663,
        "lastModifiedTime": 1688592847663,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103629,
        "executor_type": "THIRDPARTY",
        "executor_name": "createafeedbacktemplate",
        "executor_version": "v1",
        "executor_display_name": "Create a feedback template",
        "executor_description": "Create a feedback template",
        "executor_category": "FeedbackTemplates",
        "executor_category_group": "FeedbackTemplates",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/feedback_templates",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688588391161,
        "lastModifiedTime": 1688588391161,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": "If data was requested, it will be available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103631,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateafeedbacktemplate",
        "executor_version": "v1",
        "executor_display_name": "Update a feedback template",
        "executor_description": "Update a feedback template",
        "executor_category": "FeedbackTemplates",
        "executor_category_group": "FeedbackTemplates",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "{baseurl}/feedback_templates/:feedback_template",
        "dataroot": null,
        "pathParams": [
            {
                "key": "feedback_template",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688588940113,
        "lastModifiedTime": 1688588940113,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": "If data was requested, it will be available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103625,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveafeedbacktemplate",
        "executor_version": "v1",
        "executor_display_name": "Retrieve a feedback template",
        "executor_description": "Retrieve a feedback template",
        "executor_category": "FeedbackTemplates",
        "executor_category_group": "FeedbackTemplates",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/feedback_templates/:feedback_template",
        "dataroot": null,
        "pathParams": [
            {
                "key": "feedback_template",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this update on behalf of a specified user.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688588006378,
        "lastModifiedTime": 1688588006378,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": "If data was requested, it will be available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103627,
        "executor_type": "THIRDPARTY",
        "executor_name": "listallfeedbacktemplates",
        "executor_version": "v1",
        "executor_display_name": "List all feedback templates",
        "executor_description": "List all feedback templates",
        "executor_category": "FeedbackTemplates",
        "executor_category_group": "FeedbackTemplates",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/feedback_templates",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this update on behalf of a specified user.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688588138800,
        "lastModifiedTime": 1688588138800,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": "If data was requested, it will be available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103634,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteafeedbacktemplate",
        "executor_version": "v1",
        "executor_display_name": "Delete a feedback template",
        "executor_description": "Delete a feedback template",
        "executor_category": "FeedbackTemplates",
        "executor_category_group": "FeedbackTemplates",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "{baseurl}/feedback_templates/:feedback_template",
        "dataroot": null,
        "pathParams": [
            {
                "key": "feedback_template",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688589207461,
        "lastModifiedTime": 1688589207461,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": "If data was requested, it will be available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103735,
        "executor_type": "THIRDPARTY",
        "executor_name": "listallprofileforms",
        "executor_version": "v1",
        "executor_display_name": "List all profile forms",
        "executor_description": "List all profile forms",
        "executor_category": "ProfileForms",
        "executor_category_group": "ProfileForms",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity/forms",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1688595535578,
        "lastModifiedTime": 1688598803025,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "d0cc2b88-ccd4-4947-8f1b-97df6166904b",
                    "type": "form",
                    "text": "Offer information",
                    "instructions": "Please complete all required questions.",
                    "baseTemplateId": "806ad14a-2fe5-4b42-b2da-3f90dc0a16d9",
                    "fields": [
                        {
                            "type": "date",
                            "text": "Start date",
                            "description": "",
                            "required": false,
                            "id": "1ebc1934-469c-482b-9c84-031fa1e2d6d8",
                            "value": 1418716800000
                        },
                        {
                            "type": "currency",
                            "text": "Compensation",
                            "description": "Please enter only whole numbers, no commas or letters",
                            "required": false,
                            "id": "65bb5ce8-0478-4ed8-8aea-2d8b5f622c58",
                            "value": 50000,
                            "currency": "USD"
                        },
                        {
                            "type": "yes-no",
                            "text": "Eligible for benefits?",
                            "description": "",
                            "required": false,
                            "id": "b3d856fa-17f0-4205-a139-ba5cf41061d3",
                            "value": "yes"
                        },
                        {
                            "type": "text",
                            "text": "Manager",
                            "description": "",
                            "required": false,
                            "id": "ad58ff3d-af59-4a36-8560-c93060df14eb",
                            "value": "Jen"
                        },
                        {
                            "type": "textarea",
                            "text": "Notes",
                            "description": "",
                            "required": false,
                            "id": "6a9e2b13-26eb-4ff8-b1d5-61ffcc1de8e8",
                            "value": null
                        }
                    ],
                    "user": "dbcab91a-d705-47b1-90d5-a7893d1a0dd1",
                    "stage": "5969d96b-c757-4689-a4bd-2cbb5db4e545",
                    "completedAt": 1417587426973,
                    "createdAt": 1417587426973,
                    "deletedAt": 1526925087354
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103734,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveaprofileform",
        "executor_version": "v1",
        "executor_display_name": "Retrieve a profile form",
        "executor_description": "Retrieve a profile form",
        "executor_category": "ProfileForms",
        "executor_category_group": "ProfileForms",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity/forms/:form",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "form",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1688595454540,
        "lastModifiedTime": 1688598779052,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "d0cc2b88-ccd4-4947-8f1b-97df6166904b",
                        "type": "form",
                        "text": "Offer information",
                        "instructions": "Please complete all required questions.",
                        "baseTemplateId": "806ad14a-2fe5-4b42-b2da-3f90dc0a16d9",
                        "fields": [
                            {
                                "type": "date",
                                "text": "Start date",
                                "description": "",
                                "required": false,
                                "id": "1ebc1934-469c-482b-9c84-031fa1e2d6d8",
                                "value": 1418716800000
                            },
                            {
                                "type": "currency",
                                "text": "Compensation",
                                "description": "Please enter only whole numbers, no commas or letters",
                                "required": false,
                                "id": "65bb5ce8-0478-4ed8-8aea-2d8b5f622c58",
                                "value": 50000,
                                "currency": "USD"
                            },
                            {
                                "type": "yes-no",
                                "text": "Eligible for benefits?",
                                "description": "",
                                "required": false,
                                "id": "b3d856fa-17f0-4205-a139-ba5cf41061d3",
                                "value": "yes"
                            },
                            {
                                "type": "text",
                                "text": "Manager",
                                "description": "",
                                "required": false,
                                "id": "ad58ff3d-af59-4a36-8560-c93060df14eb",
                                "value": "Jen"
                            },
                            {
                                "type": "textarea",
                                "text": "Notes",
                                "description": "",
                                "required": false,
                                "id": "6a9e2b13-26eb-4ff8-b1d5-61ffcc1de8e8",
                                "value": null
                            }
                        ],
                        "user": "dbcab91a-d705-47b1-90d5-a7893d1a0dd1",
                        "stage": "5969d96b-c757-4689-a4bd-2cbb5db4e545",
                        "completedAt": 1417587426973,
                        "createdAt": 1417587426973,
                        "deletedAt": 1526925087354
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103738,
        "executor_type": "THIRDPARTY",
        "executor_name": "createaprofileform",
        "executor_version": "v1",
        "executor_display_name": "Create a profile form",
        "executor_description": "Create a profile form",
        "executor_category": "ProfileForms",
        "executor_category_group": "ProfileForms",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/opportunities/:opportunity/forms",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this create on behalf of a specified user. If unspecified, defaults to null.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688595688313,
        "lastModifiedTime": 1688595688313,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103702,
        "executor_type": "THIRDPARTY",
        "executor_name": "listallpanels",
        "executor_version": "v1",
        "executor_display_name": "List all panels",
        "executor_description": "List all panels",
        "executor_category": "Panels",
        "executor_category_group": "Panels",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity/panels",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this create on behalf of a specified user. The creator and the owner of this Opportunity will default to the perform_as user. The owner can be explicitly specified in the request body if you want the owner to be a different person.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688593316644,
        "lastModifiedTime": 1688593316644,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "id": "a402cff4-ecca-4e40-8a89-9f21d374aea3",
                            "applications": [
                                "7988b225-3cc1-44f3-8fcb-bae013cc490d"
                            ],
                            "canceledAt": null,
                            "createdAt": 1423187000000,
                            "end": 1423187003000,
                            "externallyManaged": true,
                            "externalUrl": "www.myinterviewpanel.com",
                            "interviews": [
                                {
                                    "id": "4f5beb46-1404-48f7-b841-2c100278d4de",
                                    "date": 1423188000000,
                                    "duration": 30,
                                    "feedbackReminder": "once",
                                    "feedbackTemplate": "d41032c2-4733-4379-b164-851fe408c36f",
                                    "interviewers": [
                                        {
                                            "email": "rachel@exampleq3.com",
                                            "id": "d912d26f-c340-4b6d-a927-38f00ff4e8b2",
                                            "name": "Rachel Green"
                                        }
                                    ],
                                    "location": "Call - (123) 456-7891",
                                    "note": "SCHEDULE:\n6:00 - 6:30 pm - Rachel Green - Call - (123) 456-7891",
                                    "subject": "On-site interview - Kristoff Bjorgman - Office Manager"
                                }
                            ],
                            "note": "Panel for Rachel",
                            "stage": "b4b338c9-727d-464f-9e84-457aedeb7710",
                            "start": 1423187000000,
                            "timezone": "America/Los_Angeles",
                            "user": "46946e09-0e82-425d-9041-3133f63fd394"
                        }
                    ],
                    "hasNext": false
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103706,
        "executor_type": "THIRDPARTY",
        "executor_name": "createapanel",
        "executor_version": "v1",
        "executor_display_name": "Create a panel",
        "executor_description": "Create a panel",
        "executor_category": "Panels",
        "executor_category_group": "Panels",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/opportunities/:opportunity/panels",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this create on behalf of a specified user. The creator and the owner of this Opportunity will default to the perform_as user. The owner can be explicitly specified in the request body if you want the owner to be a different person.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688593498546,
        "lastModifiedTime": 1688593498546,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "data": [
                            {
                                "id": "a402cff4-ecca-4e40-8a89-9f21d374aea3",
                                "applications": [
                                    "7988b225-3cc1-44f3-8fcb-bae013cc490d"
                                ],
                                "canceledAt": null,
                                "createdAt": 1423187000000,
                                "end": 1423187003000,
                                "externallyManaged": true,
                                "externalUrl": "www.myinterviewpanel.com",
                                "interviews": [
                                    {
                                        "id": "4f5beb46-1404-48f7-b841-2c100278d4de",
                                        "date": 1423188000000,
                                        "duration": 30,
                                        "feedbackReminder": "once",
                                        "feedbackTemplate": "d41032c2-4733-4379-b164-851fe408c36f",
                                        "interviewers": [
                                            {
                                                "email": "rachel@exampleq3.com",
                                                "id": "d912d26f-c340-4b6d-a927-38f00ff4e8b2",
                                                "name": "Rachel Green"
                                            }
                                        ],
                                        "location": "Call - (123) 456-7891",
                                        "note": "SCHEDULE:\n6:00 - 6:30 pm - Rachel Green - Call - (123) 456-7891",
                                        "subject": "On-site interview - Kristoff Bjorgman - Office Manager"
                                    }
                                ],
                                "note": "Panel for Rachel",
                                "stage": "b4b338c9-727d-464f-9e84-457aedeb7710",
                                "start": 1423187000000,
                                "timezone": "America/Los_Angeles",
                                "user": "46946e09-0e82-425d-9041-3133f63fd394"
                            }
                        ],
                        "hasNext": false
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103710,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateapanel",
        "executor_version": "v1",
        "executor_display_name": "Update a panel",
        "executor_description": "Update a panel",
        "executor_category": "Panels",
        "executor_category_group": "Panels",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "{baseurl}/opportunities/:opportunity/panels/:panel",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "panel",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this create on behalf of a specified user. The creator and the owner of this Opportunity will default to the perform_as user. The owner can be explicitly specified in the request body if you want the owner to be a different person.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688593888947,
        "lastModifiedTime": 1688593888947,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "data": [
                            {
                                "id": "a402cff4-ecca-4e40-8a89-9f21d374aea3",
                                "applications": [
                                    "7988b225-3cc1-44f3-8fcb-bae013cc490d"
                                ],
                                "canceledAt": null,
                                "createdAt": 1423187000000,
                                "end": 1423187003000,
                                "externallyManaged": true,
                                "externalUrl": "www.myinterviewpanel.com",
                                "interviews": [
                                    {
                                        "id": "4f5beb46-1404-48f7-b841-2c100278d4de",
                                        "date": 1423188000000,
                                        "duration": 30,
                                        "feedbackReminder": "once",
                                        "feedbackTemplate": "d41032c2-4733-4379-b164-851fe408c36f",
                                        "interviewers": [
                                            {
                                                "email": "rachel@exampleq3.com",
                                                "id": "d912d26f-c340-4b6d-a927-38f00ff4e8b2",
                                                "name": "Rachel Green"
                                            }
                                        ],
                                        "location": "Call - (123) 456-7891",
                                        "note": "SCHEDULE:\n6:00 - 6:30 pm - Rachel Green - Call - (123) 456-7891",
                                        "subject": "On-site interview - Kristoff Bjorgman - Office Manager"
                                    }
                                ],
                                "note": "Panel for Rachel",
                                "stage": "b4b338c9-727d-464f-9e84-457aedeb7710",
                                "start": 1423187000000,
                                "timezone": "America/Los_Angeles",
                                "user": "46946e09-0e82-425d-9041-3133f63fd394"
                            }
                        ],
                        "hasNext": false
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103712,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteapanel",
        "executor_version": "v1",
        "executor_display_name": "Delete a panel",
        "executor_description": "Update a panel",
        "executor_category": "Panels",
        "executor_category_group": "Panels",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "{baseurl}/opportunities/:opportunity/panels/:panel",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "panel",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this create on behalf of a specified user. The creator and the owner of this Opportunity will default to the perform_as user. The owner can be explicitly specified in the request body if you want the owner to be a different person.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688593989939,
        "lastModifiedTime": 1688593989939,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "no content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103698,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveasinglepanel",
        "executor_version": "v1",
        "executor_display_name": "Retrieve a single panel",
        "executor_description": "Retrieve a single panel",
        "executor_category": "Panels",
        "executor_category_group": "Panels",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity/panels/:panel",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "panel",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this create on behalf of a specified user. The creator and the owner of this Opportunity will default to the perform_as user. The owner can be explicitly specified in the request body if you want the owner to be a different person.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688593022221,
        "lastModifiedTime": 1688593022221,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "a402cff4-ecca-4e40-8a89-9f21d374aea3",
                        "applications": [
                            "7988b225-3cc1-44f3-8fcb-bae013cc490d"
                        ],
                        "canceledAt": null,
                        "createdAt": 1423187000000,
                        "end": 1423187003000,
                        "externallyManaged": true,
                        "externalUrl": "www.myinterviewpanel.com",
                        "interviews": [
                            {
                                "id": "4f5beb46-1404-48f7-b841-2c100278d4de",
                                "date": 1423188000000,
                                "duration": 30,
                                "feedbackReminder": "once",
                                "feedbackTemplate": "d41032c2-4733-4379-b164-851fe408c36f",
                                "interviewers": [
                                    {
                                        "email": "rachel@exampleq3.com",
                                        "id": "d912d26f-c340-4b6d-a927-38f00ff4e8b2",
                                        "name": "Rachel Green"
                                    }
                                ],
                                "location": "Call - (123) 456-7891",
                                "note": "SCHEDULE:\n6:00 - 6:30 pm - Rachel Green - Call - (123) 456-7891",
                                "subject": "On-site interview - Kristoff Bjorgman - Office Manager"
                            }
                        ],
                        "note": "Panel for Rachel",
                        "stage": "b4b338c9-727d-464f-9e84-457aedeb7710",
                        "start": 1423187000000,
                        "timezone": "America/Los_Angeles",
                        "user": "46946e09-0e82-425d-9041-3133f63fd394"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103784,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveaprofileformtemplate",
        "executor_version": "v1",
        "executor_display_name": "Retrieve a profile form template",
        "executor_description": "Retrieve a profile form template",
        "executor_category": "ProfileFormTemplates",
        "executor_category_group": "ProfileFormTemplates",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/form_templates/:form_template",
        "dataroot": null,
        "pathParams": [
            {
                "key": "form_template",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1688599006637,
        "lastModifiedTime": 1688599189660,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "5b0f589c-b0c2-4e84-bf83-0f2ca48fc48a",
                    "createdAt": "1552325829124",
                    "updatedAt": "1552329731232",
                    "text": "Offer information",
                    "instructions": "Please complete all fields",
                    "group": {
                        "id": "9c1a0b56-0d72-43dd-8cf2-2c483a43372c",
                        "name": "Product"
                    },
                    "secretByDefault": false,
                    "fields": [
                        {
                            "id": "1be1d34e-a017-4361-9da5-f46cc208035b",
                            "type": "date",
                            "text": "Start Date",
                            "description": "Please enter a desired start date.",
                            "required": true
                        },
                        {
                            "id": "c1858cce-2a35-416b-9347-8f3027c79f81",
                            "type": "currency",
                            "text": "Compensation",
                            "description": "Please enter only whole numbers, no commas or letters",
                            "required": true
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103788,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateaprofileformtemplate",
        "executor_version": "v1",
        "executor_display_name": "Update a profile form template",
        "executor_description": "Update a profile form template",
        "executor_category": "ProfileFormTemplates",
        "executor_category_group": "ProfileFormTemplates",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "{baseurl}/form_templates/:form_template",
        "dataroot": null,
        "pathParams": [
            {
                "key": "form_template",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "include",
                "value": "",
                "description": "Only return specific attributes. Can be chained together using the & symbol.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688599450532,
        "lastModifiedTime": 1688599450532,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "5b0f589c-b0c2-4e84-bf83-0f2ca48fc48a",
                    "createdAt": "1552327724284",
                    "updatedAt": "1552327985221",
                    "text": "Offer Information",
                    "instructions": "Please complete all required questions.",
                    "group": {
                        "id": "9c1a0b56-0d72-43dd-8cf2-2c483a43372c",
                        "name": "Offers"
                    },
                    "secretByDefault": true,
                    "fields": [
                        {
                            "id": "e29387bf-16fe-4326-a4af-be7235893290",
                            "type": "date",
                            "text": "Start Date",
                            "description": "Please enter a desired start date.",
                            "required": true
                        },
                        {
                            "id": "50c8ddf2-4f7e-4926-8945-fc2fa2d9817d",
                            "type": "currency",
                            "text": "Compensation",
                            "description": "Please enter only whole numbers, no commas or letters",
                            "required": true
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103789,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaprofileformtemplate",
        "executor_version": "v1",
        "executor_display_name": "Delete a profile form template",
        "executor_description": "Delete a profile form template",
        "executor_category": "ProfileFormTemplates",
        "executor_category_group": "ProfileFormTemplates",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "{baseurl}/form_templates/:form_template",
        "dataroot": null,
        "pathParams": [
            {
                "key": "form_template",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "include",
                "value": "",
                "description": "Only return specific attributes. Can be chained together using the & symbol.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688599537601,
        "lastModifiedTime": 1688599537601,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "no content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103787,
        "executor_type": "THIRDPARTY",
        "executor_name": "createaprofileformtemplate",
        "executor_version": "v1",
        "executor_display_name": "Create a profile form template",
        "executor_description": "Create a profile form template",
        "executor_category": "ProfileFormTemplates",
        "executor_category_group": "ProfileFormTemplates",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/form_templates",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "include",
                "value": "",
                "description": "Only return specific attributes. Can be chained together using the & symbol.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688599325607,
        "lastModifiedTime": 1688599325607,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "5b0f589c-b0c2-4e84-bf83-0f2ca48fc48a",
                    "createdAt": "1552327724284",
                    "text": "Offer Information",
                    "instructions": "Please complete all required questions.",
                    "group": {
                        "id": "9c1a0b56-0d72-43dd-8cf2-2c483a43372c",
                        "name": "Offers"
                    },
                    "secretByDefault": true,
                    "fields": [
                        {
                            "id": "e29387bf-16fe-4326-a4af-be7235893290",
                            "type": "date",
                            "text": "Start Date",
                            "description": "Please enter a desired start date.",
                            "required": true
                        },
                        {
                            "id": "50c8ddf2-4f7e-4926-8945-fc2fa2d9817d",
                            "type": "currency",
                            "text": "Compensation",
                            "description": "Please enter only whole numbers, no commas or letters",
                            "required": true
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103785,
        "executor_type": "THIRDPARTY",
        "executor_name": "listallprofileformtemplates",
        "executor_version": "v1",
        "executor_display_name": "List all profile form templates",
        "executor_description": "List all profile form templates",
        "executor_category": "ProfileFormTemplates",
        "executor_category_group": "ProfileFormTemplates",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/form_templates",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "include",
                "value": "",
                "description": "Only return specific attributes. Can be chained together using the & symbol.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688599122713,
        "lastModifiedTime": 1688599122713,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "id": "5b0f589c-b0c2-4e84-bf83-0f2ca48fc48a",
                            "createdAt": "1552325829124",
                            "updatedAt": "1552329731232",
                            "text": "Offer information",
                            "instructions": "Please complete all fields",
                            "group": {
                                "id": "9c1a0b56-0d72-43dd-8cf2-2c483a43372c",
                                "name": "Product"
                            },
                            "secretByDefault": false,
                            "fields": [
                                {
                                    "id": "1be1d34e-a017-4361-9da5-f46cc208035b",
                                    "type": "date",
                                    "text": "Start Date",
                                    "description": "Please enter a desired start date.",
                                    "required": true
                                },
                                {
                                    "id": "c1858cce-2a35-416b-9347-8f3027c79f81",
                                    "type": "currency",
                                    "text": "Compensation",
                                    "description": "Please enter only whole numbers, no commas or letters",
                                    "required": true
                                }
                            ]
                        },
                        {
                            "id": "4b2c519c-b0c2-4e84-bf83-0c2ca28dc18b",
                            "createdAt": "1552327724284",
                            "updatedAt": "1552329333421",
                            "text": "Status Report",
                            "instructions": "",
                            "group": {
                                "id": "9c1a0b56-0d72-43dd-8cf2-2c483a43372c",
                                "name": "Product"
                            },
                            "secretByDefault": true,
                            "fields": [
                                {
                                    "id": "e29387bf-16fe-4326-a4af-be7235893290",
                                    "type": "text",
                                    "text": "Industry",
                                    "description": "",
                                    "required": true
                                },
                                {
                                    "id": "142225b2-d8b7-4f70-b336-4ca38ba5837c",
                                    "type": "text",
                                    "text": "Current Position",
                                    "description": "Please enter candidate\u2019s current position",
                                    "required": false
                                }
                            ]
                        }
                    ],
                    "hasNext": false
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103795,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatearequisition",
        "executor_version": "v1",
        "executor_display_name": "Update a requisition",
        "executor_description": "Update a requisition",
        "executor_category": "Requisitions",
        "executor_category_group": "Requisitions",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "{baseurl}/requisitions/:requisition",
        "dataroot": null,
        "pathParams": [
            {
                "key": "requisition",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688600324069,
        "lastModifiedTime": 1688600324069,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "d918c5e6-54cf-4247-a054-8a02d575b993",
                        "requisitionCode": "ENG-19",
                        "name": "Junior Software Engineer, Platform",
                        "postingIds": [
                            "526a5997-2b48-45b2-ba5f-cff06fe3e10c"
                        ],
                        "backfill": true,
                        "createdAt": 1452306348935,
                        "creator": "45188127-d30c-4220-bd90-f6ac9671ae2a",
                        "headcountHired": 0,
                        "headcountTotal": 10,
                        "status": "closed",
                        "hiringManager": "0d9f8a67-5757-40f1-b549-d71bbb49d199",
                        "approval": {
                            "steps": []
                        },
                        "compensationBand": {
                            "currency": "USD",
                            "interval": "per-year-salary",
                            "min": 100000,
                            "max": 130000
                        },
                        "employmentStatus": "full-time",
                        "location": "New York",
                        "team": "Product Engineering",
                        "offerIds": [],
                        "customFields": {
                            "cost_center": {
                                "city": "New York",
                                "campus_code": "9"
                            },
                            "target_hire_date": 1452067200000
                        },
                        "closedAt": 1590866745521,
                        "timeToFillStartAt": 1452306348935,
                        "timeToFillEndAt": 1454306348935,
                        "updatedAt": 1590866770059
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103792,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveasinglerequisition",
        "executor_version": "v1",
        "executor_display_name": "Retrieve a single requisition",
        "executor_description": "Retrieve a single requisition",
        "executor_category": "Requisitions",
        "executor_category_group": "Requisitions",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity/referrals",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688599942596,
        "lastModifiedTime": 1688599942596,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "52881d44-4f95-4fcb-bf28-2b344ea58889",
                        "requisitionCode": "ENG-145",
                        "name": "Senior Software Engineer, Platform",
                        "backfill": false,
                        "confidentiality": "confidential",
                        "createdAt": 1450296000000,
                        "creator": "8276427b-2ab8-4df9-8794-59a208fc0915",
                        "headcountHired": 1,
                        "headcountTotal": 10,
                        "status": "open",
                        "hiringManager": "74297e17-dfef-4cd9-8545-f59a0672ac3a",
                        "owner": "8a792fa3-b31f-4587-bd7a-09e02b181c68",
                        "compensationBand": {
                            "currency": "USD",
                            "interval": "per-year-salary",
                            "min": 50000,
                            "max": 80000
                        },
                        "employmentStatus": "full-time",
                        "location": "San Francisco",
                        "internalNotes": "Key hires for platform -- budget for 10, prefer 8",
                        "postings": [
                            "210bfcfc-fe7c-4c7b-87a3-c8d594c0e6c7"
                        ],
                        "department": "Engineering",
                        "team": "Product Engineering",
                        "offerIds": [
                            "401cac37-a8a2-40b8-b175-b45fa0d69301"
                        ],
                        "approval": {
                            "id": "49a060ee-344b-4387-966a-68a1a133b88",
                            "status": "approved",
                            "startedAt": 1582828383610,
                            "approvedAt": 1582828396716,
                            "steps": [
                                {
                                    "completed": true,
                                    "status": "approved",
                                    "outOfBandOnly": false,
                                    "approvalsRequired": 1,
                                    "approvers": [
                                        {
                                            "id": "5dc3d8e7-db49-44e5-99e9-fec13a305533",
                                            "user": {
                                                "userId": "1ae06e06-3db3-4881-b3f8-27dafe946b2c",
                                                "email": "chandler.bing@lever.co"
                                            },
                                            "isDynamic": false,
                                            "approved": true,
                                            "approvedAt": 1582828396708,
                                            "type": "static",
                                            "overridingUserId": "fbccd5c7-0ea2-4e3e-8df0-ed6f226087ce"
                                        },
                                        {
                                            "id": "fbc1dcc2-61b5-4637-baf6-abf05e7f183f",
                                            "user": "Requisition hiring manager",
                                            "isDynamic": true,
                                            "approved": true,
                                            "approvedAt": 1582828396808,
                                            "type": "dynamic",
                                            "overridingUserId": "e879df1b-ff22-4b75-9ea2-62ae220e9504"
                                        }
                                    ]
                                }
                            ],
                            "accountId": "3aec1edf-b51d-4064-afbc-d84f6887397a",
                            "createdBy": "1ae06e06-3db3-4881-b3f8-27dafe946b2c"
                        },
                        "customFields": {
                            "cost_center": {
                                "city": "San Francisco",
                                "campus_code": "2"
                            },
                            "hiring_manager": {
                                "name": "Chandler Bing",
                                "HRIS_id": "ja00012",
                                "lever_id": "1ae06e06-3db3-4881-b3f8-27dafe946b2c",
                                "email": "chandler.bing@lever.co"
                            },
                            "target_hire_date": 1453320000000
                        },
                        "closedAt": 1590866770059,
                        "timeToFillStartAt": 1450296000000,
                        "timeToFillEndAt": 1451296000000,
                        "updatedAt": 1590866770059
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103794,
        "executor_type": "THIRDPARTY",
        "executor_name": "createarequisition",
        "executor_version": "v1",
        "executor_display_name": "Create a requisition",
        "executor_description": "Create a requisition",
        "executor_category": "Requisitions",
        "executor_category_group": "Requisitions",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/requisitions",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688600233206,
        "lastModifiedTime": 1688600233206,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "33b3cdf8-baef-4b17-b9d5-04c3b7e5eeb2",
                        "requisitionCode": "ENG-9",
                        "name": "Junior Software Engineer, Platform",
                        "backfill": false,
                        "createdAt": 1452306348935,
                        "creator": "d68cdaeb-fc0f-462a-b9a5-37bdbdeb0c68",
                        "headcountHired": 0,
                        "headcountTotal": 10,
                        "owner": "f1f9035d-38f4-4e18-82ae-f2eac3e2592a",
                        "status": "open",
                        "hiringManager": "d68cdaeb-fc0f-462a-b9a5-37bdbdeb0c68",
                        "approval": {
                            "steps": []
                        },
                        "compensationBand": {
                            "currency": "USD",
                            "interval": "per-year-salary",
                            "min": 100000,
                            "max": 130000
                        },
                        "employmentStatus": "full-time",
                        "location": "New York",
                        "internalNotes": "College grad hire -- very little flexibility on salary",
                        "postings": [],
                        "team": "Product Engineering",
                        "offerIds": [],
                        "customFields": {
                            "cost_center": {
                                "city": "New York",
                                "campus_code": "9"
                            },
                            "target_hire_date": 1452067200000
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103793,
        "executor_type": "THIRDPARTY",
        "executor_name": "listallrequisitions",
        "executor_version": "v1",
        "executor_display_name": "List all requisitions",
        "executor_description": "List all requisitions",
        "executor_category": "Requisitions",
        "executor_category_group": "Requisitions",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/requisitions",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "created_at_start, created_at_end",
                "value": "",
                "description": "Filter requisitions by the datetime they were created. If only created_at_start is specified, all requisitions created from that datetime to present will be included. If only created_at_end is specified, all requisitions created before that datetime will be included.",
                "req": false
            },
            {
                "key": "requisition_code",
                "value": "",
                "description": "Filter requisitions by non-Lever requisition code",
                "req": false
            },
            {
                "key": "status",
                "value": "",
                "description": "Filter requisitions by status",
                "req": false
            },
            {
                "key": "confidentiality",
                "value": "",
                "description": "Filter requisitions by confidentiality. If unspecified, defaults to non-confidential. To get both confidential and non-confidential postings you must specify all. Learn more about confidential data in the API.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688600124960,
        "lastModifiedTime": 1688600124960,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "id": "52881d44-4f95-4fcb-bf28-2b344ea58889",
                            "requisitionCode": "ENG-145",
                            "name": "Senior Software Engineer, Platform",
                            "backfill": false,
                            "confidentiality": "confidential",
                            "createdAt": 1450296000000,
                            "creator": "8276427b-2ab8-4df9-8794-59a208fc0915",
                            "headcountHired": 1,
                            "headcountTotal": 10,
                            "status": "open",
                            "hiringManager": "74297e17-dfef-4cd9-8545-f59a0672ac3a",
                            "owner": "8a792fa3-b31f-4587-bd7a-09e02b181c68",
                            "compensationBand": {
                                "currency": "USD",
                                "interval": "per-year-salary",
                                "min": 50000,
                                "max": 80000
                            },
                            "employmentStatus": "full-time",
                            "location": "San Francisco",
                            "internalNotes": "Key hires for platform -- budget for 10, prefer 8",
                            "postings": [
                                "210bfcfc-fe7c-4c7b-87a3-c8d594c0e6c7"
                            ],
                            "department": "Engineering",
                            "team": "Product Engineering",
                            "offerIds": [
                                "401cac37-a8a2-40b8-b175-b45fa0d69301"
                            ],
                            "approval": {
                                "id": "49a060ee-344b-4387-966a-68a1a133b88",
                                "status": "approved",
                                "startedAt": 1582828383610,
                                "approvedAt": 1582828396716,
                                "steps": [
                                    {
                                        "completed": true,
                                        "status": "approved",
                                        "outOfBandOnly": false,
                                        "approvalsRequired": 1,
                                        "approvers": [
                                            {
                                                "id": "5dc3d8e7-db49-44e5-99e9-fec13a305533",
                                                "user": {
                                                    "userId": "1ae06e06-3db3-4881-b3f8-27dafe946b2c",
                                                    "email": "chandler.bing@lever.co"
                                                },
                                                "isDynamic": false,
                                                "approved": true,
                                                "approvedAt": 1582828396708,
                                                "type": "static",
                                                "overridingUserId": "fbccd5c7-0ea2-4e3e-8df0-ed6f226087ce"
                                            },
                                            {
                                                "id": "fbc1dcc2-61b5-4637-baf6-abf05e7f183f",
                                                "user": "Requisition hiring manager",
                                                "isDynamic": true,
                                                "approved": true,
                                                "approvedAt": 1582828396808,
                                                "type": "dynamic",
                                                "overridingUserId": "e879df1b-ff22-4b75-9ea2-62ae220e9504"
                                            }
                                        ]
                                    }
                                ],
                                "accountId": "3aec1edf-b51d-4064-afbc-d84f6887397a",
                                "createdBy": "1ae06e06-3db3-4881-b3f8-27dafe946b2c"
                            },
                            "customFields": {
                                "cost_center": {
                                    "city": "San Francisco",
                                    "campus_code": "2"
                                },
                                "hiring_manager": {
                                    "name": "Chandler Bing",
                                    "HRIS_id": "ja00012",
                                    "lever_id": "1ae06e06-3db3-4881-b3f8-27dafe946b2c",
                                    "email": "chandler.bing@lever.co"
                                },
                                "target_hire_date": 1453320000000
                            },
                            "closedAt": 1590866770059,
                            "timeToFillStartAt": 1450296000000,
                            "timeToFillEndAt": 1451296000000,
                            "updatedAt": 1590866770059
                        },
                        {
                            "id": "33b3cdf8-baef-4b17-b9d5-04c3b7e5eeb2",
                            "requisitionCode": "ENG-9",
                            "name": "Junior Software Engineer, Platform",
                            "backfill": false,
                            "createdAt": 1452306348935,
                            "creator": "d68cdaeb-fc0f-462a-b9a5-37bdbdeb0c68",
                            "headcountHired": 0,
                            "headcountTotal": 10,
                            "owner": "f1f9035d-38f4-4e18-82ae-f2eac3e2592a",
                            "status": "open",
                            "hiringManager": "d68cdaeb-fc0f-462a-b9a5-37bdbdeb0c68",
                            "approval": {
                                "steps": []
                            },
                            "compensationBand": {
                                "currency": "USD",
                                "interval": "per-year-salary",
                                "min": 100000,
                                "max": 130000
                            },
                            "employmentStatus": "full-time",
                            "location": "New York",
                            "internalNotes": "College grad hire -- very little flexibility on salary",
                            "postings": [],
                            "team": "Product Engineering",
                            "offerIds": [],
                            "customFields": {
                                "cost_center": {
                                    "city": "New York",
                                    "campus_code": "9"
                                },
                                "target_hire_date": 1452067200000
                            }
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103797,
        "executor_type": "THIRDPARTY",
        "executor_name": "deletearequisition",
        "executor_version": "v1",
        "executor_display_name": "Delete a requisition",
        "executor_description": "Delete a requisition",
        "executor_category": "Requisitions",
        "executor_category_group": "Requisitions",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "{baseurl}/requisitions/:requisition",
        "dataroot": null,
        "pathParams": [
            {
                "key": "requisition",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688600430247,
        "lastModifiedTime": 1688600430247,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "no content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103804,
        "executor_type": "THIRDPARTY",
        "executor_name": "deletearequisitionfield",
        "executor_version": "v1",
        "executor_display_name": "Delete a requisition field",
        "executor_description": "Delete a requisition field",
        "executor_category": "Requisition fields",
        "executor_category_group": "Requisition fields",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "{baseurl}/requisition_fields/:requisition_field",
        "dataroot": null,
        "pathParams": [
            {
                "key": "requisition_field",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688601110486,
        "lastModifiedTime": 1688601110486,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "no content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103798,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveasinglerequisitionfield",
        "executor_version": "v1",
        "executor_display_name": "Retrieve a single requisition field",
        "executor_description": "Retrieve a single requisition field",
        "executor_category": "Requisition fields",
        "executor_category_group": "Requisition fields",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/requisition_fields/:requisition_field",
        "dataroot": null,
        "pathParams": [
            {
                "key": "requisition_field",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688600545275,
        "lastModifiedTime": 1688600545275,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "cost_center",
                        "text": "Cost center",
                        "type": "object",
                        "isRequired": true,
                        "subfields": [
                            {
                                "id": "city",
                                "text": "City",
                                "type": "text"
                            },
                            {
                                "id": "campus_code",
                                "text": "Campus code",
                                "type": "number"
                            },
                            {
                                "id": "department",
                                "text": "Department",
                                "type": "text"
                            }
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103800,
        "executor_type": "THIRDPARTY",
        "executor_name": "listallrequisitionfields",
        "executor_version": "v1",
        "executor_display_name": "List all requisition fields",
        "executor_description": "List all requisition fields",
        "executor_category": "Requisition fields",
        "executor_category_group": "Requisition fields",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/requisition_fields",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "isRequired",
                "value": "",
                "description": "Filter for requisition fields that are required or specifically not required",
                "req": false
            },
            {
                "key": "type",
                "value": "",
                "description": "Filter requisition_fields by top-level type",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688600666061,
        "lastModifiedTime": 1688600666061,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "id": "cost_center",
                            "text": "Cost center",
                            "type": "object",
                            "isRequired": true,
                            "subfields": [
                                {
                                    "id": "city",
                                    "text": "City",
                                    "type": "text"
                                },
                                {
                                    "id": "campus_code",
                                    "text": "Campus code",
                                    "type": "number"
                                },
                                {
                                    "id": "department",
                                    "text": "Department",
                                    "type": "text"
                                }
                            ]
                        },
                        {
                            "id": "hiring_manager",
                            "text": "Hiring Manager",
                            "type": "object",
                            "isRequired": false,
                            "subfields": [
                                {
                                    "id": "name",
                                    "text": "Name",
                                    "type": "text"
                                },
                                {
                                    "id": "HRIS_id",
                                    "text": "HRIS ID",
                                    "type": "text"
                                },
                                {
                                    "id": "email",
                                    "text": "Email",
                                    "type": "text"
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103801,
        "executor_type": "THIRDPARTY",
        "executor_name": "createarequisitionfield",
        "executor_version": "v1",
        "executor_display_name": "Create a requisition field",
        "executor_description": "Create a requisition field",
        "executor_category": "Requisition fields",
        "executor_category_group": "Requisition fields",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/requisition_fields",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688600754036,
        "lastModifiedTime": 1688600754036,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "cost_center",
                        "text": "Cost center",
                        "type": "object",
                        "isRequired": true,
                        "subfields": [
                            {
                                "id": "city",
                                "text": "City",
                                "type": "text"
                            },
                            {
                                "id": "campus_code",
                                "text": "Campus code",
                                "type": "number"
                            },
                            {
                                "id": "department",
                                "text": "Department",
                                "type": "text"
                            }
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103802,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatearequisitionfield",
        "executor_version": "v1",
        "executor_display_name": "Update a requisition field",
        "executor_description": "Update a requisition field",
        "executor_category": "Requisition fields",
        "executor_category_group": "Requisition fields",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "{baseurl}/requisition_fields/:requisition_field",
        "dataroot": null,
        "pathParams": [
            {
                "key": "requisition_field",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688600858225,
        "lastModifiedTime": 1688600858225,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "cost_center",
                        "text": "Cost center",
                        "type": "text",
                        "isRequired": true
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103667,
        "executor_type": "THIRDPARTY",
        "executor_name": "listalloffers",
        "executor_version": "v1",
        "executor_display_name": "List all offers",
        "executor_description": "List all offers",
        "executor_category": "Offers",
        "executor_category_group": "Offers",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity/offers",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "expand",
                "value": "",
                "description": "Expand creator ID into full object in response",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688591366302,
        "lastModifiedTime": 1688591366302,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "id": "a72d66c0-0fd7-4bf8-99ce-dc5979358862",
                            "createdAt": 1475540115263,
                            "status": "signed",
                            "creator": "315b702b-27ec-49ac-89f6-449148fe5764",
                            "fields": [
                                {
                                    "text": "Job posting",
                                    "identifier": "job_posting",
                                    "value": "80fd493b-3e01-4e05-82df-464d3ae2a7b8"
                                },
                                {
                                    "text": "Job title",
                                    "identifier": "job_title",
                                    "value": "Back End Software Engineer"
                                },
                                {
                                    "text": "Candidate name",
                                    "identifier": "candidate_name",
                                    "value": "Marvin Gaye"
                                },
                                {
                                    "text": "Offered compensation amount",
                                    "identifier": "salary_amount",
                                    "value": 1319000
                                },
                                {
                                    "text": "Compensation currency",
                                    "identifier": "compensation_currency",
                                    "value": "USD"
                                },
                                {
                                    "text": "Type of earnings",
                                    "identifier": "salary_interval",
                                    "value": "per-year-salary"
                                },
                                {
                                    "text": "Hiring manager",
                                    "identifier": "hiring_manager",
                                    "value": "aa290857-ef5a-4696-8b85-62e8d495dc4b"
                                },
                                {
                                    "text": "Today's date",
                                    "identifier": "today_date",
                                    "value": 1475540150185
                                },
                                {
                                    "text": "Direct manager",
                                    "identifier": "direct_manager",
                                    "value": "ac92b6db-6e40-4b08-ae7b-236ba24f0a82"
                                },
                                {
                                    "text": "Anticipated start date",
                                    "identifier": "anticipated_start_date",
                                    "value": 1475540150185
                                },
                                {
                                    "text": "equity",
                                    "identifier": "custom_equity",
                                    "value": 12345
                                }
                            ],
                            "sentDocument": {
                                "fileName": "employment-offer-letter.pdf",
                                "uploadedAt": 1582910091572,
                                "downloadUrl": "https://api.lever.co/v1/opportunities/250d8f03-738a-4bba-a671-8a3d73477145/offers/a72d66c0-0fd7-4bf8-99ce-dc5979358862/download?status=sent"
                            },
                            "signedDocument": {
                                "fileName": "employment-offer-letter_signed.pdf",
                                "uploadedAt": 1582910097572,
                                "downloadUrl": "https://api.lever.co/v1/opportunities/250d8f03-738a-4bba-a671-8a3d73477145/offers/a72d66c0-0fd7-4bf8-99ce-dc5979358862/download?status=signed"
                            }
                        },
                        {
                            "id": "63662f8b-4c61-4e7e-afaa-73132a795a68",
                            "createdAt": 1475819157595,
                            "status": "draft",
                            "creator": "dc15f004-e071-4d21-ba63-a842d4fa3c52",
                            "fields": [
                                {
                                    "text": "Job posting",
                                    "identifier": "job_posting",
                                    "value": "4517dd53-f3ed-460e-b1ca-1395b0a4743b"
                                },
                                {
                                    "text": "Job title",
                                    "identifier": "job_title",
                                    "value": "Front End Software Engineer"
                                },
                                {
                                    "text": "Requisition",
                                    "identifier": "requisition",
                                    "value": "3d06e628-747c-46a4-8529-c8b67a2875db"
                                },
                                {
                                    "text": "Candidate name",
                                    "identifier": "candidate_name",
                                    "value": "Marvin Gaye"
                                },
                                {
                                    "text": "Offered compensation amount",
                                    "identifier": "salary_amount",
                                    "value": 1319000
                                },
                                {
                                    "text": "Compensation currency",
                                    "identifier": "compensation_currency",
                                    "value": "USD"
                                },
                                {
                                    "text": "Type of earnings",
                                    "identifier": "salary_interval",
                                    "value": "per-year-salary"
                                },
                                {
                                    "text": "equity",
                                    "identifier": "custom_equity",
                                    "value": 12345
                                },
                                {
                                    "text": "Today's date",
                                    "identifier": "today_date",
                                    "value": 1475540150185
                                },
                                {
                                    "text": "Direct manager",
                                    "identifier": "direct_manager",
                                    "value": "f2fa7ddf-e816-4fe1-a973-e99aa90316dd"
                                },
                                {
                                    "text": "Anticipated start date",
                                    "identifier": "anticipated_start_date",
                                    "value": 1475540150185
                                }
                            ],
                            "sentDocument": {
                                "fileName": "employment-offer-letter.pdf",
                                "uploadedAt": 1475819157595,
                                "downloadUrl": "https://api.lever.co/v1/opportunities/250d8f03-738a-4bba-a671-8a3d73477145/offers/63662f8b-4c61-4e7e-afaa-73132a795a68/download?status=sent"
                            },
                            "signedDocument": null
                        }
                    ],
                    "hasNext": false
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103669,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadofferfile",
        "executor_version": "v1",
        "executor_display_name": "Download offer file",
        "executor_description": "Download offer file",
        "executor_category": "Offers",
        "executor_category_group": "Offers",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity/offers/:offer/download",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "offer",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "status",
                "value": "",
                "description": "Specify which version of the offer file should be downloaded.If no status parameter is included, the most recent document will be returned. (i.e. The signed document will be returned if it exists, otherwise the sent document.)",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688591505245,
        "lastModifiedTime": 1688591505245,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "id": "a72d66c0-0fd7-4bf8-99ce-dc5979358862",
                            "createdAt": 1475540115263,
                            "status": "signed",
                            "creator": "315b702b-27ec-49ac-89f6-449148fe5764",
                            "fields": [
                                {
                                    "text": "Job posting",
                                    "identifier": "job_posting",
                                    "value": "80fd493b-3e01-4e05-82df-464d3ae2a7b8"
                                },
                                {
                                    "text": "Job title",
                                    "identifier": "job_title",
                                    "value": "Back End Software Engineer"
                                },
                                {
                                    "text": "Candidate name",
                                    "identifier": "candidate_name",
                                    "value": "Marvin Gaye"
                                },
                                {
                                    "text": "Offered compensation amount",
                                    "identifier": "salary_amount",
                                    "value": 1319000
                                },
                                {
                                    "text": "Compensation currency",
                                    "identifier": "compensation_currency",
                                    "value": "USD"
                                },
                                {
                                    "text": "Type of earnings",
                                    "identifier": "salary_interval",
                                    "value": "per-year-salary"
                                },
                                {
                                    "text": "Hiring manager",
                                    "identifier": "hiring_manager",
                                    "value": "aa290857-ef5a-4696-8b85-62e8d495dc4b"
                                },
                                {
                                    "text": "Today's date",
                                    "identifier": "today_date",
                                    "value": 1475540150185
                                },
                                {
                                    "text": "Direct manager",
                                    "identifier": "direct_manager",
                                    "value": "ac92b6db-6e40-4b08-ae7b-236ba24f0a82"
                                },
                                {
                                    "text": "Anticipated start date",
                                    "identifier": "anticipated_start_date",
                                    "value": 1475540150185
                                },
                                {
                                    "text": "equity",
                                    "identifier": "custom_equity",
                                    "value": 12345
                                }
                            ],
                            "sentDocument": {
                                "fileName": "employment-offer-letter.pdf",
                                "uploadedAt": 1582910091572,
                                "downloadUrl": "https://api.lever.co/v1/opportunities/250d8f03-738a-4bba-a671-8a3d73477145/offers/a72d66c0-0fd7-4bf8-99ce-dc5979358862/download?status=sent"
                            },
                            "signedDocument": {
                                "fileName": "employment-offer-letter_signed.pdf",
                                "uploadedAt": 1582910097572,
                                "downloadUrl": "https://api.lever.co/v1/opportunities/250d8f03-738a-4bba-a671-8a3d73477145/offers/a72d66c0-0fd7-4bf8-99ce-dc5979358862/download?status=signed"
                            }
                        },
                        {
                            "id": "63662f8b-4c61-4e7e-afaa-73132a795a68",
                            "createdAt": 1475819157595,
                            "status": "draft",
                            "creator": "dc15f004-e071-4d21-ba63-a842d4fa3c52",
                            "fields": [
                                {
                                    "text": "Job posting",
                                    "identifier": "job_posting",
                                    "value": "4517dd53-f3ed-460e-b1ca-1395b0a4743b"
                                },
                                {
                                    "text": "Job title",
                                    "identifier": "job_title",
                                    "value": "Front End Software Engineer"
                                },
                                {
                                    "text": "Requisition",
                                    "identifier": "requisition",
                                    "value": "3d06e628-747c-46a4-8529-c8b67a2875db"
                                },
                                {
                                    "text": "Candidate name",
                                    "identifier": "candidate_name",
                                    "value": "Marvin Gaye"
                                },
                                {
                                    "text": "Offered compensation amount",
                                    "identifier": "salary_amount",
                                    "value": 1319000
                                },
                                {
                                    "text": "Compensation currency",
                                    "identifier": "compensation_currency",
                                    "value": "USD"
                                },
                                {
                                    "text": "Type of earnings",
                                    "identifier": "salary_interval",
                                    "value": "per-year-salary"
                                },
                                {
                                    "text": "equity",
                                    "identifier": "custom_equity",
                                    "value": 12345
                                },
                                {
                                    "text": "Today's date",
                                    "identifier": "today_date",
                                    "value": 1475540150185
                                },
                                {
                                    "text": "Direct manager",
                                    "identifier": "direct_manager",
                                    "value": "f2fa7ddf-e816-4fe1-a973-e99aa90316dd"
                                },
                                {
                                    "text": "Anticipated start date",
                                    "identifier": "anticipated_start_date",
                                    "value": 1475540150185
                                }
                            ],
                            "sentDocument": {
                                "fileName": "employment-offer-letter.pdf",
                                "uploadedAt": 1475819157595,
                                "downloadUrl": "https://api.lever.co/v1/opportunities/250d8f03-738a-4bba-a671-8a3d73477145/offers/63662f8b-4c61-4e7e-afaa-73132a795a68/download?status=sent"
                            },
                            "signedDocument": null
                        }
                    ],
                    "hasNext": false
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103723,
        "executor_type": "THIRDPARTY",
        "executor_name": "listallpostings",
        "executor_version": "v1",
        "executor_display_name": "List all postings",
        "executor_description": "List all postings",
        "executor_category": "Postings",
        "executor_category_group": "Postings",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/postings",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "include",
                "value": "",
                "description": "Include posting content or followers in list results",
                "req": false
            },
            {
                "key": "expand",
                "value": "",
                "description": "Expand user IDs into full objects in response",
                "req": false
            },
            {
                "key": "state",
                "value": "",
                "description": "Filter postings by state. Valid states are published, internal, closed, draft, pending and rejected.",
                "req": false
            },
            {
                "key": "distributionChannel",
                "value": "",
                "description": "Filter published postings by whether they appear on the public job site, internal job site, or both. To retrieve all published postings, you must specify both public and internal.",
                "req": false
            },
            {
                "key": "confidentiality",
                "value": "",
                "description": "Filter postings by confidentiality. If unspecified, defaults to non-confidential. To get both confidential and non-confidential postings you must specify all. Learn more about confidential data in the API.",
                "req": false
            },
            {
                "key": "group",
                "value": "",
                "description": "Posting results can be grouped by one of four categories: location, team, department, and commitment.",
                "req": false
            },
            {
                "key": "team",
                "value": "",
                "description": "Filter postings by team name (e.g. Engineering, Sales, Marketing). Since tags are case-sensitive, Sales will not match sales. Multiple teams can be specified and results will include a union of result sets (i.e. postings for either team). If your company uses departments, the same team name may occur across multiple departments.",
                "req": false
            },
            {
                "key": "department",
                "value": "",
                "description": "Filter postings by department name. Since tags are case-sensitive, Legal will not match legal. Multiple departments can be specified and results will include a union of result sets (i.e. postings for either department).",
                "req": false
            },
            {
                "key": "location",
                "value": "",
                "description": "Filter postings by location. Tags are case-sensitive, San Francisco will not match san francisco. Multiple locations can be specified and results will include a union of result sets (i.e. postings for either location).",
                "req": false
            },
            {
                "key": "commitment",
                "value": "",
                "description": "Filter postings by work type (e.g. full-time, internship). Since tags are case-sensitive, Full-time will not match full-time. Multiple work types can be specified and results will include a union of result sets (i.e. postings of either work type).",
                "req": false
            },
            {
                "key": "level",
                "value": "",
                "description": "Deprecated but currently maintained for backward compatibility. Filter postings by level (e.g. junior, senior, manager). Since tags are case-sensitive, Manager will not match manager. Multiple levels can be specified and results will include a union of result sets (i.e. postings of either level).",
                "req": false
            },
            {
                "key": "tag",
                "value": "",
                "description": "Filter postings by tag. Tags are case-sensitive, so Engineering will not match engineering. Multiple tags can be specified and results will include a union of result sets (i.e. postings that have either tag). To specify multiple tags, include the tag parameter multiple times (e.g ?tag=engineering&tag=product)",
                "req": false
            },
            {
                "key": "updated_at_start, updated_at_end",
                "value": "",
                "description": "Filter postings by the timestamp they were last updated. If only updated_at_start is specified, all postings updated from that timestamp (inclusive) to the present will be included. If only updated_at_end is specified, all postings updated before that timestamp (inclusive) are included. Both the updated_at_start and updated_at_end can be specified simultaneously, and results will be all postings updated within the provided timestamps (inclusive) will be returned.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688594490432,
        "lastModifiedTime": 1688594490432,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "id": "f2f01e16-27f8-4711-a728-7d49499795a0",
                            "text": "Infrastructure Engineer",
                            "createdAt": 1407779365624,
                            "updatedAt": 1407779365624,
                            "user": "ec1cb1bb-8b58-4834-bc6e-b2af06296e4a",
                            "owner": "ec1cb1bb-8b58-4834-bc6e-b2af06296e4a",
                            "hiringManager": "ec1cb1bb-8b58-4834-bc6e-b2af06296e4a",
                            "confidentiality": "non-confidential",
                            "categories": {
                                "team": "Platform",
                                "department": "Engineering",
                                "location": "San Francisco",
                                "allLocations": [
                                    "San Francisco",
                                    "New York City"
                                ],
                                "commitment": "Full-time",
                                "level": "Senior"
                            },
                            "content": {
                                "description": "The Infrastructure Engineer will act as...\\nSuperman.",
                                "descriptionHtml": "<div>The <u><b>Infrastructure Engineer</b></u> will act as...</div><div>Superman.</div>",
                                "lists": [
                                    {
                                        "text": "Job requirements",
                                        "content": "<li>Quick learner</li><li>Ambitious</li>"
                                    }
                                ],
                                "closing": "Our company is proud to be an equal opportunity workplace.",
                                "closingHtml": "<div>Our <a href=\"https://www.lever.co/\" class=\"postings-link\">company</a> is <span style=\"font-size: 18px;\">proud</span> to be an equal opportunity workplace.</div>"
                            },
                            "tags": [],
                            "state": "published",
                            "distributionChannels": [
                                "internal",
                                "public"
                            ],
                            "reqCode": "7381912",
                            "requisitionCodes": [
                                "7381912"
                            ],
                            "urls": {
                                "list": "https://jobs.lever.co/example",
                                "show": "https://jobs.lever.co/example/f2f01e16-27f8-4711-a728-7d49499795a0/",
                                "apply": "https://jobs.lever.co/example/f2f01e16-27f8-4711-a728-7d49499795a0/apply"
                            },
                            "workplaceType": "remote"
                        },
                        {
                            "id": "e540e665-06af-4888-a846-89eb36f2097d",
                            "text": "Customer Success Manager",
                            "createdAt": 1407778984761,
                            "updatedAt": 1407779122023,
                            "user": "ec1cb1bb-8b58-4834-bc6e-b2af06296e4a",
                            "owner": "ec1cb1bb-8b58-4834-bc6e-b2af06296e4a",
                            "hiringManager": "ec1cb1bb-8b58-4834-bc6e-b2af06296e4a",
                            "categories": {
                                "team": "Customer Success",
                                "location": "San Francisco",
                                "commitment": "Full-time",
                                "level": null
                            },
                            "content": {
                                "description": "",
                                "descriptionHtml": "",
                                "lists": [],
                                "closing": "",
                                "closingHtml": ""
                            },
                            "tags": [],
                            "state": "published",
                            "distributionChannels": [
                                "internal"
                            ],
                            "reqCode": null,
                            "requisitionCodes": [],
                            "urls": {
                                "list": "https://jobs.lever.co/example",
                                "show": "https://jobs.lever.co/example/e540e665-06af-4888-a846-89eb36f2097d",
                                "apply": "https://jobs.lever.co/example/e540e665-06af-4888-a846-89eb36f2097d/apply"
                            },
                            "workplaceType": "hybrid"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103725,
        "executor_type": "THIRDPARTY",
        "executor_name": "createaposting",
        "executor_version": "v1",
        "executor_display_name": "Create a posting",
        "executor_description": "Create a posting",
        "executor_category": "Postings",
        "executor_category_group": "Postings",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/postings",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this update on behalf of a specified user. The creator of this panel will default to the perform_as user.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688594867844,
        "lastModifiedTime": 1688594867844,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "730e37db-93d3-4acf-b9de-7cfc397cef1d",
                        "text": "Infrastructure Engineer",
                        "createdAt": 1407779365624,
                        "updatedAt": 1407779365624,
                        "user": "a2d4940d-9bf1-4316-881a-430d3822cded",
                        "owner": "a2d4940d-9bf1-4316-881a-430d3822cded",
                        "hiringManager": "a2d4940d-9bf1-4316-881a-430d3822cded",
                        "categories": {
                            "team": "Platform",
                            "department": "Engineering",
                            "location": "San Francisco",
                            "commitment": "Full-time"
                        },
                        "content": {
                            "description": "The Infrastructure Engineer will act as...\\nSuperman.",
                            "descriptionHtml": "<div>The <u><b>Infrastructure Engineer</b></u> will act as...</div><div>Superman.</div>",
                            "lists": [
                                {
                                    "text": "Job requirements",
                                    "content": "<li>Quick learner</li><li>Ambitious</li>"
                                }
                            ],
                            "closing": "Our company is proud to be an equal opportunity workplace.",
                            "closingHtml": "<div>Our <a href=\"https://www.lever.co/\">company</a> is <span>proud</span> to be an equal opportunity workplace.</div>"
                        },
                        "tags": [
                            "engineering",
                            "high-priority"
                        ],
                        "state": "published",
                        "distributionChannels": [
                            "internal",
                            "public"
                        ],
                        "urls": {
                            "list": "https://jobs.lever.co/example",
                            "show": "https://jobs.lever.co/example/730e37db-93d3-4acf-b9de-7cfc397cef1d/",
                            "apply": "https://jobs.lever.co/example/730e37db-93d3-4acf-b9de-7cfc397cef1d/apply"
                        },
                        "workplaceType": "onsite",
                        "requisitionCodes": [
                            "7381912"
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103727,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateaposting",
        "executor_version": "v1",
        "executor_display_name": "Update a posting",
        "executor_description": "Update a posting",
        "executor_category": "Postings",
        "executor_category_group": "Postings",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/postings/:posting",
        "dataroot": null,
        "pathParams": [
            {
                "key": "posting",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this update on behalf of a specified user. The creator of this panel will default to the perform_as user.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688595003273,
        "lastModifiedTime": 1688595003273,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "730e37db-93d3-4acf-b9de-7cfc397cef1d",
                        "text": "Infrastructure Engineer",
                        "createdAt": 1407779365624,
                        "updatedAt": 1407779365624,
                        "user": "a2d4940d-9bf1-4316-881a-430d3822cded",
                        "owner": "a2d4940d-9bf1-4316-881a-430d3822cded",
                        "hiringManager": "a2d4940d-9bf1-4316-881a-430d3822cded",
                        "categories": {
                            "team": "Platform",
                            "department": "Engineering",
                            "location": "San Francisco",
                            "commitment": "Full-time"
                        },
                        "content": {
                            "description": "The Infrastructure Engineer will act as...\\nSuperman.",
                            "descriptionHtml": "<div>The <u><b>Infrastructure Engineer</b></u> will act as...</div><div>Superman.</div>",
                            "lists": [
                                {
                                    "text": "Job requirements",
                                    "content": "<li>Quick learner</li><li>Ambitious</li>"
                                }
                            ],
                            "closing": "Our company is proud to be an equal opportunity workplace.",
                            "closingHtml": "<div>Our <a href=\"https://www.lever.co/\">company</a> is <span>proud</span> to be an equal opportunity workplace.</div>"
                        },
                        "tags": [
                            "engineering",
                            "high-priority"
                        ],
                        "state": "published",
                        "distributionChannels": [
                            "internal",
                            "public"
                        ],
                        "urls": {
                            "list": "https://jobs.lever.co/example",
                            "show": "https://jobs.lever.co/example/730e37db-93d3-4acf-b9de-7cfc397cef1d/",
                            "apply": "https://jobs.lever.co/example/730e37db-93d3-4acf-b9de-7cfc397cef1d/apply"
                        },
                        "workplaceType": "onsite",
                        "requisitionCodes": [
                            "7381912"
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103731,
        "executor_type": "THIRDPARTY",
        "executor_name": "applytoaposting",
        "executor_version": "v1",
        "executor_display_name": "Apply to a posting",
        "executor_description": "Apply to a posting",
        "executor_category": "Postings",
        "executor_category_group": "Postings",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/postings/:posting/apply",
        "dataroot": null,
        "pathParams": [
            {
                "key": "posting",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "send_confirmation_email",
                "value": "",
                "description": "After application is created, send a confirmation email to the applicant email provided in the payload. If unspecified, defaults to false.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688595206164,
        "lastModifiedTime": 1688595206164,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "applicationId": "915a6cef-4f91-4f3d-b8ff-a49e1eae2c30"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103714,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveasingleposting",
        "executor_version": "v1",
        "executor_display_name": "Retrieve a single posting",
        "executor_description": "Retrieve a single posting",
        "executor_category": "Postings",
        "executor_category_group": "Postings",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/postings/:posting",
        "dataroot": null,
        "pathParams": [
            {
                "key": "posting",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688594153701,
        "lastModifiedTime": 1688594153701,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "f2f01e16-27f8-4711-a728-7d49499795a0",
                        "text": "Infrastructure Engineer",
                        "createdAt": 1407779365624,
                        "updatedAt": 1407779365624,
                        "user": "ec1cb1bb-8b58-4834-bc6e-b2af06296e4a",
                        "owner": "ec1cb1bb-8b58-4834-bc6e-b2af06296e4a",
                        "hiringManager": "ec1cb1bb-8b58-4834-bc6e-b2af06296e4a",
                        "confidentiality": "non-confidential",
                        "categories": {
                            "team": "Platform",
                            "department": "Engineering",
                            "location": "San Francisco",
                            "allLocations": [
                                "San Francisco",
                                "New York City"
                            ],
                            "commitment": "Full-time",
                            "level": "Senior"
                        },
                        "content": {
                            "description": "The Infrastructure Engineer will act as...\\nSuperman.",
                            "descriptionHtml": "<div>The <u><b>Infrastructure Engineer</b></u> will act as...</div><div>Superman.</div>",
                            "lists": [
                                {
                                    "text": "Job requirements",
                                    "content": "<li>Quick learner</li><li>Ambitious</li>"
                                }
                            ],
                            "closing": "Our company is proud to be an equal opportunity workplace.",
                            "closingHtml": "<div>Our <a href=\"https://www.lever.co/\" class=\"postings-link\">company</a> is <span style=\"font-size: 18px;\">proud</span> to be an equal opportunity workplace.</div>"
                        },
                        "tags": [],
                        "state": "published",
                        "distributionChannels": [
                            "internal",
                            "public"
                        ],
                        "reqCode": "7381912",
                        "requisitionCodes": [
                            "7381912"
                        ],
                        "urls": {
                            "list": "https://jobs.lever.co/example",
                            "show": "https://jobs.lever.co/example/f2f01e16-27f8-4711-a728-7d49499795a0/",
                            "apply": "https://jobs.lever.co/example/f2f01e16-27f8-4711-a728-7d49499795a0/apply"
                        },
                        "workplaceType": "remote"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103729,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrievepostingapplicationquestions",
        "executor_version": "v1",
        "executor_display_name": "Retrieve posting application questions",
        "executor_description": "Retrieve posting application questions",
        "executor_category": "Postings",
        "executor_category_group": "Postings",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/postings/:posting/apply",
        "dataroot": null,
        "pathParams": [
            {
                "key": "posting",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "perform_as",
                "value": "",
                "description": "Perform this update on behalf of a specified user. The creator of this panel will default to the perform_as user.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688595082928,
        "lastModifiedTime": 1688595082928,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "e876b0aa-82e8-4cdb-92ad-bbfe00d10387",
                        "text": "Software Engineer",
                        "customQuestions": [
                            {
                                "id": "75f54523-ff77-4307-a868-08392ee02cab",
                                "text": "Previous work experience",
                                "fields": [
                                    {
                                        "description": "",
                                        "required": false,
                                        "text": "What experience do you have?",
                                        "type": "textarea",
                                        "id": "9653de8c-8a07-4cda-885b-317086fd6f9a",
                                        "value": null
                                    },
                                    {
                                        "description": "",
                                        "required": false,
                                        "text": "favorite language",
                                        "type": "multiple-select",
                                        "id": "1d2767ab-6453-4016-80a9-92daf046c25c",
                                        "options": [
                                            {
                                                "text": "JavaScript"
                                            },
                                            {
                                                "text": "Python"
                                            },
                                            {
                                                "text": "Ruby"
                                            }
                                        ],
                                        "value": []
                                    }
                                ]
                            }
                        ],
                        "personalInformation": [
                            {
                                "text": "Full name",
                                "name": "fullName",
                                "type": "text",
                                "required": true,
                                "value": null
                            },
                            {
                                "text": "Email",
                                "name": "email",
                                "type": "text",
                                "required": true,
                                "value": null
                            },
                            {
                                "text": "Current company",
                                "name": "currentCompany",
                                "type": "text",
                                "required": false,
                                "value": null
                            },
                            {
                                "text": "Phone",
                                "name": "phone",
                                "type": "text",
                                "required": false,
                                "value": null
                            },
                            {
                                "text": "Resume",
                                "name": "resume",
                                "type": "file-upload",
                                "required": false,
                                "value": null
                            },
                            {
                                "text": "Additional information",
                                "name": "additionalInformation",
                                "type": "textarea",
                                "required": false,
                                "value": null
                            }
                        ],
                        "urls": [
                            {
                                "text": "LinkedIn",
                                "name": "LinkedIn",
                                "type": "text",
                                "required": false,
                                "value": null
                            },
                            {
                                "text": "Other Website",
                                "name": "Other Website",
                                "type": "text",
                                "required": false,
                                "value": null
                            },
                            {
                                "text": "Github",
                                "name": "Github",
                                "type": "text",
                                "required": false,
                                "value": null
                            }
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103808,
        "executor_type": "THIRDPARTY",
        "executor_name": "listallsources",
        "executor_version": "v1",
        "executor_display_name": "List all sources",
        "executor_description": "List all sources",
        "executor_category": "Sources",
        "executor_category_group": "Sources",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/sources",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688601558097,
        "lastModifiedTime": 1688601558097,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "text": "Gild",
                            "count": 24
                        },
                        {
                            "text": "Posting",
                            "count": 51
                        },
                        {
                            "text": "Referral",
                            "count": 90
                        },
                        {
                            "text": "Email Applicant",
                            "count": 135
                        },
                        {
                            "text": "Email Lead",
                            "count": 83
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103813,
        "executor_type": "THIRDPARTY",
        "executor_name": "listallstages",
        "executor_version": "v1",
        "executor_display_name": "List all stages",
        "executor_description": "List all stages",
        "executor_category": "Stages",
        "executor_category_group": "Stages",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/stages",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688601738818,
        "lastModifiedTime": 1688601738818,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "id": "fff60592-31dd-4ebe-ba8e-e7a397c30f8e",
                            "text": "New applicant"
                        },
                        {
                            "id": "51adb2bb-1e24-4135-9950-cb96e3886226",
                            "text": "New lead"
                        },
                        {
                            "id": "a42482ff-00ac-4cb2-a698-4b4436885b0c",
                            "text": "Recruiter Screen"
                        },
                        {
                            "id": "fe763d80-e612-4787-98bc-686679c6ac9b",
                            "text": "Phone Interview"
                        },
                        {
                            "id": "fbfb4473-38d2-4acf-943b-28cc0ed7ba87",
                            "text": "On-Site Interview"
                        },
                        {
                            "id": "e7c6f8eb-9239-46b8-8777-ef4215cc8a7d",
                            "text": "Background Check"
                        },
                        {
                            "id": "f48aad6f-91f7-4e87-b3f3-5e7a9207e54b",
                            "text": "Offer"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103811,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveasinglestage",
        "executor_version": "v1",
        "executor_display_name": "Retrieve a single stage",
        "executor_description": "Retrieve a single stage",
        "executor_category": "Stages",
        "executor_category_group": "Stages",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/stages/:stage",
        "dataroot": null,
        "pathParams": [
            {
                "key": "stage",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688601659445,
        "lastModifiedTime": 1688601659445,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "fff60592-31dd-4ebe-ba8e-e7a397c30f8e",
                        "text": "New applicant"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103814,
        "executor_type": "THIRDPARTY",
        "executor_name": "listallstageslever",
        "executor_version": "v1",
        "executor_display_name": "List all tags",
        "executor_description": "List all stages",
        "executor_category": "Tags",
        "executor_category_group": "Tags",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/tags",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688601864720,
        "lastModifiedTime": 1688601864721,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "text": "Infrastructure Engineer",
                            "count": 23
                        },
                        {
                            "text": "Customer Success Manager",
                            "count": 15
                        },
                        {
                            "text": "Customer Success",
                            "count": 31
                        },
                        {
                            "text": "Full-time",
                            "count": 66
                        },
                        {
                            "text": "San Francisco",
                            "count": 70
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103840,
        "executor_type": "THIRDPARTY",
        "executor_name": "listWebhookslever",
        "executor_version": "v1",
        "executor_display_name": "List Webhooks",
        "executor_description": "List Webhooks",
        "executor_category": "Webhooks",
        "executor_category_group": "Webhooks",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/webhooks",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688605379810,
        "lastModifiedTime": 1688605379810,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "id": "e2befaae-b830-4c21-a002-2d5019486d1a",
                            "url": "https://lever.co/webhookHandler",
                            "event": "candidateStageChange",
                            "createdAt": 1407357447018,
                            "updatedAt": 1407357447200,
                            "configuration": {
                                "conditions": {
                                    "origins": [
                                        "applied",
                                        "sourced",
                                        "referred",
                                        "university",
                                        "agency",
                                        "internal"
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103842,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateaWebhooklever",
        "executor_version": "v1",
        "executor_display_name": "Update a Webhook",
        "executor_description": "Update a Webhook",
        "executor_category": "Webhooks",
        "executor_category_group": "Webhooks",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "{baseurl}/webhooks/",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688605905086,
        "lastModifiedTime": 1688605905086,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "id": "e2befaae-b830-4c21-a002-2d5019486d1a",
                            "url": "https://lever.co/webhookHandler",
                            "event": "candidateStageChange",
                            "createdAt": 1407357447018,
                            "updatedAt": 1407357447200,
                            "configuration": {
                                "conditions": {
                                    "origins": [
                                        "applied",
                                        "sourced",
                                        "referred",
                                        "university",
                                        "agency",
                                        "internal"
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103841,
        "executor_type": "THIRDPARTY",
        "executor_name": "createaWebhooklever",
        "executor_version": "v1",
        "executor_display_name": "Create a Webhook",
        "executor_description": "Create a Webhook",
        "executor_category": "Webhooks",
        "executor_category_group": "Webhooks",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/webhooks",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "url": "https://lever.co/webhookHandler",
                "event": "candidateStageChange",
                "configuration": {
                    "conditions": {
                        "origins": [
                            "applied",
                            "sourced",
                            "referred",
                            "university",
                            "agency",
                            "internal"
                        ]
                    }
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688605756402,
        "lastModifiedTime": 1688605756402,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "data": {
                            "id": "e2befaae-b830-4c21-a002-2d5019486d1a",
                            "event": "candidateStageChange",
                            "url": "https://lever.co/webhookHandler",
                            "configuration": {
                                "signatureToken": "73311ged32110cc40e00c672c2e03e1a42fa28a4fabde089"
                            },
                            "createdAt": 1407357447018,
                            "updatedAt": 1407357447200
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103843,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaWebhooklever",
        "executor_version": "v1",
        "executor_display_name": "Delete a Webhook",
        "executor_description": "Delete a Webhook",
        "executor_category": "Webhooks",
        "executor_category_group": "Webhooks",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "{baseurl}/webhooks/:webhookId",
        "dataroot": null,
        "pathParams": [
            {
                "key": "webhookId",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688605967657,
        "lastModifiedTime": 1688605967657,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "no content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103604,
        "executor_type": "THIRDPARTY",
        "executor_name": "listallapplications",
        "executor_version": "v1",
        "executor_display_name": "List all applications",
        "executor_description": "Lists all applications for a candidate.",
        "executor_category": "Applications",
        "executor_category_group": "Applications",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity/applications",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": "",
                "req": true
            },
            {
                "key": "baseurl",
                "value": "",
                "description": "",
                "req": true
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688583089210,
        "lastModifiedTime": 1688583089210,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": "If data was requested, it will be available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "intentPhrases": [],
            "requestBodyAttributes": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 103603,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveasingleapplication",
        "executor_version": "v1",
        "executor_display_name": "Retrieve a single application",
        "executor_description": "This method returns the full application record for a single application.",
        "executor_category": "Applications",
        "executor_category_group": "Applications",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity/applications/:application",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "application",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688582986212,
        "lastModifiedTime": 1688582986212,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": "If data was requested, it will be available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103610,
        "executor_type": "THIRDPARTY",
        "executor_name": "listallauditevents",
        "executor_version": "v1",
        "executor_display_name": "List all audit events",
        "executor_description": "Lists all audit events in your Lever account, sorted in descending chronological order (newest first).",
        "executor_category": "AuditEvents",
        "executor_category_group": "AuditEvents",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/audit_events",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "type",
                "value": "",
                "description": "Filter for specifying the type of archive reasons",
                "req": false
            },
            {
                "key": "user_id",
                "value": "",
                "description": "Filter returned events by the user who performed the action. To find events with no associated user (e.g. failed logins), set the value to \"null\".",
                "req": false
            },
            {
                "key": "target_type",
                "value": "",
                "description": "Filter returned events to actions on a particular kind of resource. This value should match the first part of a type.",
                "req": false
            },
            {
                "key": "target_id",
                "value": "",
                "description": "Filter returned events to actions to a particular resource. The request must also specify a target_type to use this parameter.",
                "req": false
            },
            {
                "key": "created_at_start",
                "value": "",
                "description": "Filter returned events to the ones which occurred at or after a particular time.",
                "req": false
            },
            {
                "key": "created_at_end",
                "value": "",
                "description": "Filter returned events to the ones which occurred at or before a particular time.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688583605203,
        "lastModifiedTime": 1688583605203,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": "If data was requested, it will be available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103614,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveEEOresponseswithPII",
        "executor_version": "v1",
        "executor_display_name": "Retrieve EEO responses with PII",
        "executor_description": "List EEO responses with PII.\u200b",
        "executor_category": "EEO",
        "executor_category_group": "EEO",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/v1/eeo/responses/pii",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688584033149,
        "lastModifiedTime": 1688584033149,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": "If data was requested, it will be available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103807,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadaresumefile",
        "executor_version": "v1",
        "executor_display_name": "Download a resume file",
        "executor_description": "Download a resume file",
        "executor_category": "Resumes",
        "executor_category_group": "Resumes",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity/resumes/:resume/download",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "resume",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688601476934,
        "lastModifiedTime": 1688601476934,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103805,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveasingleresume",
        "executor_version": "v1",
        "executor_display_name": "Retrieve a single resume",
        "executor_description": "Retrieve a single resume",
        "executor_category": "Resumes",
        "executor_category_group": "Resumes",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity/resumes/:resume",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "resume",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688601205629,
        "lastModifiedTime": 1688601205630,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "68b3e478-ff21-4529-bd29-23ed016042d7",
                        "createdAt": 1468953420000,
                        "file": {
                            "name": "JenniferOldeUpdated.pdf",
                            "ext": "pdf",
                            "downloadUrl": "https://hire.lever.co/candidates/63f6f017-d741-4117-9f63-57e3531a6a58/resumes/68b3e478-ff21-4529-bd29-23ed016042d7/download",
                            "uploadedAt": 1468953420004,
                            "status": "processed",
                            "size": 1000
                        },
                        "parsedData": {
                            "positions": [
                                {
                                    "org": "Tomato Emporium",
                                    "title": "VP Digital Media Productions",
                                    "summary": "\u25cf Started as executive assistant to the CEO before heading the digital media department\u25cf Supervised all online placement of materials including marketing, social media channels (YouTube, FB, IG) and production material\u25cf Worked closely with marketing & production in producing several annual competitions/shows\u25cf PM for website and coordinated with outsource programmers and in-house graphic designer\u25cf Worked with Google and Intel on partnerships",
                                    "location": "Los Angeles, CA",
                                    "start": {
                                        "year": 2012,
                                        "month": 7
                                    },
                                    "end": {
                                        "year": 2016,
                                        "month": 3
                                    }
                                },
                                {
                                    "org": "Counterintuitive Entertainment",
                                    "title": "Production Assistant, Production Coordinator",
                                    "summary": "\u25cf PA for several reality TV shows produced by Counterintuitive Entertainment\u25cf Facilitate communication between departments\u25cf Report directly to Assistant Director of shows\u25cf Manage shoots/call times/office work",
                                    "location": "Los Angeles, CA",
                                    "start": {
                                        "year": 2010,
                                        "month": 9
                                    },
                                    "end": {
                                        "year": 2012,
                                        "month": 3
                                    }
                                },
                                {
                                    "org": "Eggplant Publications",
                                    "title": "Editor in Chief, Layout, Photographer",
                                    "summary": "\u25cf Editor in chief of college yearbook\u25cf Grew yearbook staff from 2 to 15 and taught students how to use Adobe Suite for layouts\u25cf Developed a workflow for having copy/layout approved and shipped for production\u25cf Structured separate branches to break up responsibilities between different contributors to the yearbook\u25cf Managed budgeting and marketing as well as liaison with publishing company",
                                    "location": "New York, NY",
                                    "start": {
                                        "year": 2008,
                                        "month": 9
                                    },
                                    "end": {
                                        "year": 2010,
                                        "month": 5
                                    }
                                }
                            ],
                            "schools": [
                                {
                                    "org": "New York University Stern",
                                    "degree": "BS Marketing",
                                    "field": "Marketing, Studio Arts and Film",
                                    "summary": "Marketing degree with a focus on the film industry",
                                    "start": {
                                        "year": 2007,
                                        "month": 9
                                    },
                                    "end": {
                                        "year": 2010,
                                        "month": 5
                                    }
                                },
                                {
                                    "org": "Savannah College of Art and Design",
                                    "degree": "",
                                    "field": "Graphic Design, Studio Arts",
                                    "summary": null,
                                    "start": {
                                        "year": 2006,
                                        "month": 9
                                    },
                                    "end": {
                                        "year": 2007,
                                        "month": 6
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103806,
        "executor_type": "THIRDPARTY",
        "executor_name": "listallresumes",
        "executor_version": "v1",
        "executor_display_name": "List all resumes",
        "executor_description": "List all resumes",
        "executor_category": "Resumes",
        "executor_category_group": "Resumes",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity/resumes",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "uploaded_at_start, uploaded_at_end",
                "value": "",
                "description": "Filter resumes by the timestamp they were uploaded at. If only uploaded_at_start is specified, all resumes uploaded from that timestamp (inclusive) to the present will be included. If only uploaded_at_end is specified, all resumes uploaded before that timestamp (inclusive) are included. If either value is not a proper timestamp a 400 error will be returned for a malformed request. If there is no uploadedAt date on the resume (for example, resumes parsed from online sources such as LinkedIn or GitHub) the createdAt date will be used instead.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688601310083,
        "lastModifiedTime": 1688601310083,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "id": "68b3e478-ff21-4529-bd29-23ed016042d7",
                            "createdAt": 1468953420000,
                            "file": {
                                "name": "JenniferOldeUpdated.pdf",
                                "ext": "pdf",
                                "downloadUrl": "https://hire.lever.co/candidates/63f6f017-d741-4117-9f63-57e3531a6a58/resumes/68b3e478-ff21-4529-bd29-23ed016042d7/download",
                                "uploadedAt": 1468953420004,
                                "status": "processed",
                                "size": 1000
                            },
                            "parsedData": {
                                "positions": [
                                    {
                                        "org": "Tomato Emporium",
                                        "title": "VP Digital Media Productions",
                                        "summary": "\u25cf Started as executive assistant to the CEO before heading the digital media department\u25cf Supervised all online placement of materials including marketing, social media channels (YouTube, FB, IG) and production material\u25cf Worked closely with marketing & production in producing several annual competitions/shows\u25cf PM for website and coordinated with outsource programmers and in-house graphic designer\u25cf Worked with Google and Intel on partnerships",
                                        "location": "Los Angeles, CA",
                                        "start": {
                                            "year": 2012,
                                            "month": 7
                                        },
                                        "end": {
                                            "year": 2016,
                                            "month": 3
                                        }
                                    },
                                    {
                                        "org": "Counterintuitive Entertainment",
                                        "title": "Production Assistant, Production Coordinator",
                                        "summary": "\u25cf PA for several reality TV shows produced by Counterintuitive Entertainment\u25cf Facilitate communication between departments\u25cf Report directly to Assistant Director of shows\u25cf Manage shoots/call times/office work",
                                        "location": "Los Angeles, CA",
                                        "start": {
                                            "year": 2010,
                                            "month": 9
                                        },
                                        "end": {
                                            "year": 2012,
                                            "month": 3
                                        }
                                    },
                                    {
                                        "org": "Eggplant Publications",
                                        "title": "Editor in Chief, Layout, Photographer",
                                        "summary": "\u25cf Editor in chief of college yearbook\u25cf Grew yearbook staff from 2 to 15 and taught students how to use Adobe Suite for layouts\u25cf Developed a workflow for having copy/layout approved and shipped for production\u25cf Structured separate branches to break up responsibilities between different contributors to the yearbook\u25cf Managed budgeting and marketing as well as liaison with publishing company",
                                        "location": "New York, NY",
                                        "start": {
                                            "year": 2008,
                                            "month": 9
                                        },
                                        "end": {
                                            "year": 2010,
                                            "month": 5
                                        }
                                    }
                                ],
                                "schools": [
                                    {
                                        "org": "New York University Stern",
                                        "degree": "BS Marketing",
                                        "field": "Marketing, Studio Arts and Film",
                                        "summary": "Marketing degree with a focus on the film industry",
                                        "start": {
                                            "year": 2007,
                                            "month": 9
                                        },
                                        "end": {
                                            "year": 2010,
                                            "month": 5
                                        }
                                    },
                                    {
                                        "org": "Savannah College of Art and Design",
                                        "degree": "",
                                        "field": "Graphic Design, Studio Arts",
                                        "summary": null,
                                        "start": {
                                            "year": 2006,
                                            "month": 9
                                        },
                                        "end": {
                                            "year": 2007,
                                            "month": 6
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "id": "dbc687c8-ebd4-4333-ab6a-1297738ebd5a",
                            "createdAt": 1407460071043,
                            "file": {
                                "name": "Jennifer-Olde.pdf",
                                "ext": "pdf",
                                "downloadUrl": "https://hire.lever.co/candidates/63f6f017-d741-4117-9f63-57e3531a6a58/resumes/dbc687c8-ebd4-4333-ab6a-1297738ebd5a/download",
                                "uploadedAt": 1407460071048,
                                "status": "processed",
                                "size": 2000
                            },
                            "parsedData": {
                                "positions": [
                                    {
                                        "org": "Counterintuitive Entertainment",
                                        "title": "Production Assistant, Production Coordinator",
                                        "summary": "\u25cf PA for several reality TV shows produced by Counterintuitive Entertainment\u25cf Facilitate communication between departments\u25cf Report directly to Assistant Director of shows\u25cf Manage shoots/call times/office work",
                                        "location": "Los Angeles, CA",
                                        "start": {
                                            "year": 2010,
                                            "month": 9
                                        },
                                        "end": {
                                            "year": 2012,
                                            "month": 3
                                        }
                                    },
                                    {
                                        "org": "Eggplant Publications",
                                        "title": "Editor in Chief, Layout, Photographer",
                                        "summary": "\u25cf Editor in chief of college yearbook\u25cf Grew yearbook staff from 2 to 15 and taught students how to use Adobe Suite for layouts\u25cf Developed a workflow for having copy/layout approved and shipped for production\u25cf Structured separate branches to break up responsibilities between different contributors to the yearbook\u25cf Managed budgeting and marketing as well as liaison with publishing company",
                                        "location": "New York, NY",
                                        "start": {
                                            "year": 2008,
                                            "month": 9
                                        },
                                        "end": {
                                            "year": 2010,
                                            "month": 5
                                        }
                                    },
                                    {
                                        "org": "Hreff Jones Publications",
                                        "title": "Sales & Marketing Intern",
                                        "summary": "\u25cf Help a new school start planning their yearbook\u25cf Learned the sales side of publications and how to pitch different packages\u25cf Helped develop marketing materials and splash pages",
                                        "location": "New York, NY",
                                        "start": {
                                            "year": 2009,
                                            "month": 5
                                        },
                                        "end": {
                                            "year": 2009,
                                            "month": 8
                                        }
                                    },
                                    {
                                        "org": "Summer Arts Camp for High Achievers",
                                        "title": "Jr. Director, Summer Academy Instructor",
                                        "summary": "\u25cf Summer camp job working with children age 3 - 18\u25cf Created lesson plans for 2 week summer camps for 3 separate age groups\u25cf Taught the high school portfolio prep class helping students create portfolios for college applications",
                                        "location": "Boston, MA",
                                        "start": {
                                            "year": 2005,
                                            "month": 5
                                        },
                                        "end": {
                                            "year": 2008,
                                            "month": 8
                                        }
                                    }
                                ],
                                "schools": [
                                    {
                                        "org": "New York University Stern",
                                        "degree": "BS Marketing",
                                        "field": "Marketing, Studio Arts and Film",
                                        "summary": "Marketing degree with a focus on the film industry",
                                        "start": {
                                            "year": 2007,
                                            "month": 9
                                        },
                                        "end": {
                                            "year": 2010,
                                            "month": 5
                                        }
                                    },
                                    {
                                        "org": "Savannah College of Art and Design",
                                        "degree": "",
                                        "field": "Graphic Design, Studio Arts",
                                        "summary": null,
                                        "start": {
                                            "year": 2006,
                                            "month": 9
                                        },
                                        "end": {
                                            "year": 2007,
                                            "month": 6
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "id": "14408ec1-1a41-48ba-ac76-cb3700c13d89",
                            "createdAt": 1407460071043,
                            "file": {
                                "name": "Jennifer-Olde-Corrupted-File.pdf",
                                "ext": "pdf",
                                "downloadUrl": "https://hire.lever.co/candidates/63f6f017-d741-4117-9f63-57e3531a6a58/resumes/14408ec1-1a41-48ba-ac76-cb3700c13d89/download",
                                "uploadedAt": 1407460071048,
                                "status": "error",
                                "size": 3000
                            }
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103839,
        "executor_type": "THIRDPARTY",
        "executor_name": "reactivateauser",
        "executor_version": "v1",
        "executor_display_name": "Reactivate a user",
        "executor_description": "Reactivate a user",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/users/:user/reactivate",
        "dataroot": null,
        "pathParams": [
            {
                "key": "user",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688605261913,
        "lastModifiedTime": 1688605261913,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "e2befaae-b830-4c21-a002-2d5019486d1a",
                        "name": "Rachel Green",
                        "username": "rachel",
                        "email": "rachal@example.com",
                        "createdAt": 1478035107621,
                        "deactivatedAt": null,
                        "externalDirectoryId": "2277380",
                        "accessRole": "admin",
                        "photo": "https://gravatar.com/avatar/mb781413e3bb44143addf43589a03038?s=26&d=404",
                        "linkedContactIds": null
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103818,
        "executor_type": "THIRDPARTY",
        "executor_name": "listalluserslever",
        "executor_version": "v1",
        "executor_display_name": "List all users",
        "executor_description": "List all users",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/users",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "email",
                "value": "",
                "description": "Filter results to users that match an email address. Provided email must exactly match the canonicalized version of the user's email.",
                "req": false
            },
            {
                "key": "accessRole",
                "value": "",
                "description": "User's access role. One of: 'super admin', 'admin', 'team member', 'limited team member', 'interviewer', or the ID for a custom role listed on your Roles page. Custom role IDs can be found in the URL for the role. [?]",
                "req": false
            },
            {
                "key": "includeDeactivated",
                "value": "",
                "description": "Include deactivated users along with activated users.",
                "req": false
            },
            {
                "key": "external_directory_id",
                "value": "",
                "description": "Filter results that match a user's external directory ID.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688602254046,
        "lastModifiedTime": 1688602254046,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "id": "8d49b010-cc6a-4f40-ace5-e86061c677ed",
                            "name": "Chandler Bing",
                            "username": "chandler",
                            "email": "chandler@example.com",
                            "createdAt": 1407357447018,
                            "deactivatedAt": 1409556487918,
                            "externalDirectoryId": "2277399",
                            "accessRole": "super admin",
                            "photo": "https://gravatar.com/avatar/gp781413e3bb44143bddf43589b03038?s=26&d=404",
                            "linkedContactIds": [
                                "38f608d5-9a60-4960-83c1-99d18f40c428"
                            ]
                        },
                        {
                            "id": "e2befaae-b830-4c21-a002-2d5019486d1a",
                            "name": "Rachel Green",
                            "username": "rachel",
                            "email": "rachal@example.com",
                            "createdAt": 1478035107621,
                            "deactivatedAt": null,
                            "externalDirectoryId": "2277380",
                            "accessRole": "admin",
                            "photo": "https://gravatar.com/avatar/mb781413e3bb44143addf43589a03038?s=26&d=404",
                            "linkedContactIds": null
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103837,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateauserlever",
        "executor_version": "v1",
        "executor_display_name": "Update a user",
        "executor_description": "Update a user",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "{baseurl}/users/:user",
        "dataroot": null,
        "pathParams": [
            {
                "key": "user",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688605067119,
        "lastModifiedTime": 1688605067119,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "8d49b010-cc6a-4f40-ace5-e86061c677ed",
                        "name": "Chandler Bing",
                        "username": "chandler",
                        "email": "chandler@example.com",
                        "createdAt": 1407357447018,
                        "deactivatedAt": 1409556487918,
                        "externalDirectoryId": "2277399",
                        "accessRole": "super admin",
                        "photo": "https://gravatar.com/avatar/gp781413e3bb44143bddf43589b03038?s=26&d=404",
                        "linkedContactIds": [
                            "38f608d5-9a60-4960-83c1-99d18f40c428"
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103821,
        "executor_type": "THIRDPARTY",
        "executor_name": "createauserlever",
        "executor_version": "v1",
        "executor_display_name": "Create a user",
        "executor_description": "Create a user",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/users",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688602617067,
        "lastModifiedTime": 1688602617068,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "8d49b010-cc6a-4f40-ace5-e86061c677ed",
                        "name": "Chandler Bing",
                        "username": "chandler",
                        "email": "chandler@example.com",
                        "createdAt": 1407357447018,
                        "deactivatedAt": 1409556487918,
                        "externalDirectoryId": "2277399",
                        "accessRole": "super admin",
                        "photo": "https://gravatar.com/avatar/gp781413e3bb44143bddf43589b03038?s=26&d=404",
                        "linkedContactIds": [
                            "38f608d5-9a60-4960-83c1-99d18f40c428"
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103838,
        "executor_type": "THIRDPARTY",
        "executor_name": "deactivateauser",
        "executor_version": "v1",
        "executor_display_name": "Deactivate a user",
        "executor_description": "Deactivate a user",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/users/:user/deactivate",
        "dataroot": null,
        "pathParams": [
            {
                "key": "user",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688605144281,
        "lastModifiedTime": 1688605144281,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "8d49b010-cc6a-4f40-ace5-e86061c677ed",
                        "name": "Chandler Bing",
                        "username": "chandler",
                        "email": "chandler@example.com",
                        "createdAt": 1407357447018,
                        "deactivatedAt": 1409556487918,
                        "externalDirectoryId": "2277399",
                        "accessRole": "super admin",
                        "photo": "https://gravatar.com/avatar/gp781413e3bb44143bddf43589b03038?s=26&d=404",
                        "linkedContactIds": [
                            "38f608d5-9a60-4960-83c1-99d18f40c428"
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103817,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveasingleuser",
        "executor_version": "v1",
        "executor_display_name": "Retrieve a single user",
        "executor_description": "Retrieve a single user",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/users/:user",
        "dataroot": null,
        "pathParams": [
            {
                "key": "user",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688602113774,
        "lastModifiedTime": 1688602113774,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "8d49b010-cc6a-4f40-ace5-e86061c677ed",
                        "name": "Chandler Bing",
                        "username": "chandler",
                        "email": "chandler@example.com",
                        "createdAt": 1407357447018,
                        "deactivatedAt": 1409556487918,
                        "externalDirectoryId": "2277399",
                        "accessRole": "super admin",
                        "photo": "https://gravatar.com/avatar/gp781413e3bb44143bddf43589b03038?s=26&d=404",
                        "linkedContactIds": [
                            "38f608d5-9a60-4960-83c1-99d18f40c428"
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103611,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveasinglecontact",
        "executor_version": "v1",
        "executor_display_name": "Retrieve a single contact",
        "executor_description": "Retrieve a single contact",
        "executor_category": "Contacts",
        "executor_category_group": "Contacts",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/contacts/:contact",
        "dataroot": null,
        "pathParams": [
            {
                "key": "contact",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688583729126,
        "lastModifiedTime": 1688583729126,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": "If data was requested, it will be available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103612,
        "executor_type": "THIRDPARTY",
        "executor_name": "putupdateacontact",
        "executor_version": "v1",
        "executor_display_name": "Update a contact",
        "executor_description": "Update a contact",
        "executor_category": "Contacts",
        "executor_category_group": "Contacts",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "{baseurl}/contacts/:contact",
        "dataroot": null,
        "pathParams": [
            {
                "key": "contact",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688583839879,
        "lastModifiedTime": 1688583839879,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": "If data was requested, it will be available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103607,
        "executor_type": "THIRDPARTY",
        "executor_name": "listallarchivereasons",
        "executor_version": "v1",
        "executor_display_name": "List all archive reasons",
        "executor_description": "List all archive reasons",
        "executor_category": "ArchiveReasons",
        "executor_category_group": "ArchiveReasons",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/archive_reasons",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "type",
                "value": "",
                "description": "Filter for specifying the type of archive reasons",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688583324891,
        "lastModifiedTime": 1688583324891,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": "If data was requested, it will be available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103606,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveasinglearchivereason",
        "executor_version": "v1",
        "executor_display_name": "Retrieve a single archive reason",
        "executor_description": "Retrieve a single archive reason",
        "executor_category": "ArchiveReasons",
        "executor_category_group": "ArchiveReasons",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/archive_reasons/:archive_reason",
        "dataroot": null,
        "pathParams": [
            {
                "key": "archive_reason",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688583210869,
        "lastModifiedTime": 1688583210869,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": "If data was requested, it will be available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "created",
                "description": "Resource was successfully created and information is available in the data field at the top level of the response body.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103790,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveasinglereferral",
        "executor_version": "v1",
        "executor_display_name": "Retrieve a single referral",
        "executor_description": "Retrieve a single referral",
        "executor_category": "Referrals",
        "executor_category_group": "Referrals",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity/referrals/:referral",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "referral",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688599670307,
        "lastModifiedTime": 1688599670307,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "id": "093e77a4-7424-4420-962a-41b4936630b4",
                        "type": "referral",
                        "text": "Referral",
                        "instructions": "Ask about goals, fears and hopes. Remember to play smooth jazz in the background.",
                        "fields": [
                            {
                                "type": "text",
                                "text": "Name of referrer",
                                "description": "",
                                "required": true,
                                "value": "Rachel Green"
                            },
                            {
                                "type": "dropdown",
                                "text": "Relationship",
                                "description": "",
                                "required": true,
                                "prompt": "Select one",
                                "options": [
                                    {
                                        "text": "Former colleague"
                                    },
                                    {
                                        "text": "Friend"
                                    },
                                    {
                                        "text": "Reputation"
                                    },
                                    {
                                        "text": "Other"
                                    },
                                    {
                                        "text": "Don't know this person"
                                    }
                                ],
                                "value": "Reputation"
                            },
                            {
                                "type": "textarea",
                                "text": "Notes / Comments",
                                "description": "",
                                "required": true,
                                "value": "Teresa comes recommended by an old coworker of mine. Said she would be a great fit for a cross-functional role."
                            }
                        ],
                        "baseTemplateId": "e0257243-fad1-45da-90ef-34b7fc8c699c",
                        "user": "5fe7d969-1929-4314-950d-8ccaf384e6ab",
                        "referrer": "5fe7d969-1929-4314-950d-8ccaf384e6ab",
                        "stage": "6a592091-d3db-4ad0-8f16-a7b82fba2dea",
                        "createdAt": 1422503371727,
                        "completedAt": 1422503371727
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103791,
        "executor_type": "THIRDPARTY",
        "executor_name": "listallreferrals",
        "executor_version": "v1",
        "executor_display_name": "List all referrals",
        "executor_description": "List all referrals",
        "executor_category": "Referrals",
        "executor_category_group": "Referrals",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "{baseurl}/opportunities/:opportunity/referrals",
        "dataroot": null,
        "pathParams": [
            {
                "key": "opportunity",
                "value": "",
                "description": ""
            },
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688599774829,
        "lastModifiedTime": 1688599774829,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {
                            "id": "093e77a4-7424-4420-962a-41b4936630b4",
                            "type": "referral",
                            "text": "Referral",
                            "instructions": "Ask about goals, fears and hopes. Remember to play smooth jazz in the background.",
                            "fields": [
                                {
                                    "type": "text",
                                    "text": "Name of referrer",
                                    "description": "",
                                    "required": true,
                                    "value": "Rachel Green"
                                },
                                {
                                    "type": "dropdown",
                                    "text": "Relationship",
                                    "description": "",
                                    "required": true,
                                    "prompt": "Select one",
                                    "options": [
                                        {
                                            "text": "Former colleague"
                                        },
                                        {
                                            "text": "Friend"
                                        },
                                        {
                                            "text": "Reputation"
                                        },
                                        {
                                            "text": "Other"
                                        },
                                        {
                                            "text": "Don't know this person"
                                        }
                                    ],
                                    "value": "Reputation"
                                },
                                {
                                    "type": "textarea",
                                    "text": "Notes / Comments",
                                    "description": "",
                                    "required": true,
                                    "value": "Teresa comes recommended by an old coworker of mine. Said she would be a great fit for a cross-functional role."
                                }
                            ],
                            "baseTemplateId": "e0257243-fad1-45da-90ef-34b7fc8c699c",
                            "user": "5fe7d969-1929-4314-950d-8ccaf384e6ab",
                            "referrer": "5fe7d969-1929-4314-950d-8ccaf384e6ab",
                            "stage": "6a592091-d3db-4ad0-8f16-a7b82fba2dea",
                            "createdAt": 1422503371727,
                            "completedAt": 1422503371727
                        },
                        {
                            "id": "984be28d-0af8-495c-b39a-23eaefde72b1",
                            "type": "referral",
                            "text": "Referral",
                            "instructions": "Ask about goals, fears and hopes. Remember to play smooth jazz in the background.",
                            "fields": [
                                {
                                    "type": "text",
                                    "text": "Name of referrer",
                                    "description": "",
                                    "required": true,
                                    "value": "Chandler Bing"
                                },
                                {
                                    "type": "dropdown",
                                    "text": "Relationship",
                                    "description": "",
                                    "required": true,
                                    "prompt": "Select one",
                                    "options": [
                                        {
                                            "text": "Former colleague"
                                        },
                                        {
                                            "text": "Friend"
                                        },
                                        {
                                            "text": "Reputation"
                                        },
                                        {
                                            "text": "Other"
                                        },
                                        {
                                            "text": "Don't know this person"
                                        }
                                    ],
                                    "value": "Reputation"
                                },
                                {
                                    "type": "textarea",
                                    "text": "Notes / Comments",
                                    "description": "",
                                    "required": true,
                                    "value": "Heard about their work online."
                                }
                            ],
                            "baseTemplateId": "de34d0f1-19a0-4622-b356-fb67ca4ce014",
                            "user": "cb51cfa3-c8c2-4f4a-b84d-dbad33d53843",
                            "referrer": "cb51cfa3-c8c2-4f4a-b84d-dbad33d53843",
                            "stage": null,
                            "createdAt": 1418354168026,
                            "completedAt": 1418354168025
                        }
                    ],
                    "hasNext": false
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 103816,
        "executor_type": "THIRDPARTY",
        "executor_name": "uploadafile",
        "executor_version": "v1",
        "executor_display_name": "Upload a file",
        "executor_description": "Upload a file",
        "executor_category": "Uploads",
        "executor_category_group": "Uploads",
        "service_provider": "lever",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "{baseurl}/uploads",
        "dataroot": null,
        "pathParams": [
            {
                "key": "baseurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1688601994408,
        "lastModifiedTime": 1688601994408,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 301,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "moved permanently",
                "description": "The requested resource has been permanently moved to a new location, which is specified by the Location header in the response. Future references to this resource should use the URI returned in the Location header.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid Request",
                "description": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": "A valid API key was not provided with the request. You must authenticate for all requests. Learn more about how authentication works here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": "Your Lever account settings don't authorize you to perform the requested operation. Talk to a Super Admin on your Lever account to update your API settings.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": "Lever imposes a limit of the number of requests a client can make in a short time. Read more about our rate limiting here.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Server Error",
                "description": "Oops! There was an error on Lever's end.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": "Lever is temporarily down for maintenance. Please retry your requests with exponential backoff.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": {
                        "expiresAt": 1551225363057,
                        "filename": "resume.pdf",
                        "id": "083d56ef-40c6-483a-9551-20ece8c4e776-resume.pdf",
                        "uri": "https://api.lever.co/v1/uploads/083d56ef-40c6-483a-9551-20ece8c4e776-resume.pdf",
                        "size": 278575
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    }
]