[
    {
        "id": 118010,
        "executor_type": "THIRDPARTY",
        "executor_name": "createsHookForOneOfYourPredefinedSearches",
        "executor_version": "v3",
        "executor_display_name": "Creates a hook for one of your predefined searches",
        "executor_description": "Creates a hook for one of your predefined searches. Delivers search results for the query referenced by the search_id to the target_url via HTTP POST. Note that a hook_id will be returned on successful creation, this id is needed to delete the hook.  We are also returning the header: X-Hook-Secret, a shared secret used to sign the document body pushed to your target_url.  Specify company_id if your search_id is not in your default company.",
        "executor_category": "Hook",
        "executor_category_group": "Hook",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.meltwater.com\u200b\u200b\u200b/v3\u200b/hooks",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            },
            {
                "key": "X-Hook-Secret",
                "value": "",
                "description": "Shared secret for content signing/verification.  The shared secret header is optional and can be provided by the user or will be set by the API. Must be between 16 and 64 characters. Obtain the shared secret from the response header X-Hook-Secret.  Example: e2d264b524240b9572ebc2fc7eebd980 X-Hook-Secret",
                "req": false
            },
            {
                "key": "company_id",
                "value": "",
                "description": "Company that owns the specified search_id. If not specified your default company is used.",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "target_url": "string",
                "search_id": 0
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1697801434994,
        "lastModifiedTime": 1697801434994,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid or expired token.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not entitled to the service",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Something went wrong while trying to fetch your hooks.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "details": "string",
                            "title": "string",
                            "type": "string",
                            "meta": {}
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Successfully Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "search_id": 0,
                    "target_url": "string",
                    "updated": "string",
                    "search_type": "string",
                    "hook_id": "string",
                    "version": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Missing required parameters.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 409,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "The hook you are trying to create already exists for the specified search_id and target_url.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "details": "string",
                            "title": "string",
                            "type": "string",
                            "meta": {}
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "The search you are trying to create a REST hook for was not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "details": "string",
                            "title": "string",
                            "type": "string",
                            "meta": {}
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 118012,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteAnExistingHook",
        "executor_version": "v3",
        "executor_display_name": "Delete an existing hook",
        "executor_description": "Delete an existing hook. Removes the hook and stops sending any search results to the target_url.",
        "executor_category": "Hook",
        "executor_category_group": "Hook",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.meltwater.com\u200b\u200b\u200b/v3\u200b/hooks/{hook_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "hook_id",
                "value": "",
                "description": "Hook ID received from creating a hook"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1697801602868,
        "lastModifiedTime": 1697801858999,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Successfully Deleted",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Missing required parameters.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Invalid or expired token.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not entitled to the service",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "The REST hook you are trying to delete was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Something went wrong while trying to delete your hook(-s).",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 118009,
        "executor_type": "THIRDPARTY",
        "executor_name": "listAllHooks",
        "executor_version": "v3",
        "executor_display_name": "List all hooks",
        "executor_description": "Delivers all previously generated hooks.",
        "executor_category": "Hook",
        "executor_category_group": "Hook",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b\u200b\u200b/v3\u200b/hooks",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1697801105581,
        "lastModifiedTime": 1697801105581,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "List all hooks.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "hooks": [
                        {
                            "search_id": 0,
                            "target_url": "string",
                            "updated": "string",
                            "search_type": "string",
                            "hook_id": "string",
                            "version": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Invalid or expired token.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not entitled to the service",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Something went wrong while trying to fetch your hooks.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 118013,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAnIndividualHook",
        "executor_version": "v3",
        "executor_display_name": "Get an individual hook",
        "executor_description": "Retrieves an existing hook.",
        "executor_category": "Hook",
        "executor_category_group": "Hook",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b\u200b\u200b/v3\u200b/hooks/{hook_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "hook_id",
                "value": "",
                "description": "Hook ID"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1697801756118,
        "lastModifiedTime": 1697801756118,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Invalid or expired token.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Not entitled to the service",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "The hook you are trying to get was not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "details": "string",
                            "title": "string",
                            "type": "string",
                            "meta": {}
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "Something went wrong while trying to fetch your hooks.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Successfully Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "hook": {
                        "search_id": 0,
                        "target_url": "string",
                        "updated": "string",
                        "search_type": "string",
                        "hook_id": "string",
                        "version": "string"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 118016,
        "executor_type": "THIRDPARTY",
        "executor_name": "broadcastStreamingJsonSchema",
        "executor_version": "v3",
        "executor_display_name": "Broadcast Streaming JSON schema",
        "executor_description": "Get the JSON schema describing the layout of Broadcast Streaming documents.",
        "executor_category": "Schemas",
        "executor_category_group": "Schemas",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b\u200b\u200b/v3/schemas/broadcast_streaming.json",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1697802265436,
        "lastModifiedTime": 1697802265436,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "JSON schema for Broadcast Streaming documents",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "hook": {
                        "search_id": 0,
                        "target_url": "string",
                        "updated": "string",
                        "search_type": "string",
                        "hook_id": "string",
                        "version": "string"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 118015,
        "executor_type": "THIRDPARTY",
        "executor_name": "editorialStreamingJsonSchema",
        "executor_version": "v3",
        "executor_display_name": "Editorial Streaming JSON schema",
        "executor_description": "Get the JSON schema describing the layout of Editorial Streaming documents.",
        "executor_category": "Schemas",
        "executor_category_group": "Schemas",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b\u200b\u200b/v3/schemas/editorial_streaming.json",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1697802146010,
        "lastModifiedTime": 1697802146010,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "JSON schema for Editorial Streaming documents",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "hook": {
                        "search_id": 0,
                        "target_url": "string",
                        "updated": "string",
                        "search_type": "string",
                        "hook_id": "string",
                        "version": "string"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 118014,
        "executor_type": "THIRDPARTY",
        "executor_name": "socialStreamingJsonSchema",
        "executor_version": "v3",
        "executor_display_name": "Social Streaming JSON schema",
        "executor_description": "Get the JSON schema describing the layout of Social Streaming documents.",
        "executor_category": "Schemas",
        "executor_category_group": "Schemas",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b\u200b\u200b/v3/schemas/social_streaming.json",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1697802029271,
        "lastModifiedTime": 1697802029271,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "JSON schema for Social Streaming documents",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "hook": {
                        "search_id": 0,
                        "target_url": "string",
                        "updated": "string",
                        "search_type": "string",
                        "hook_id": "string",
                        "version": "string"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91950,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTopSources",
        "executor_version": "v3",
        "executor_display_name": "The top sources that occur in a Saved Search",
        "executor_description": "Produces a ranked list of \"sources\" that provided the documents matching the Saved Search.  For social sources, a \"source\" will be the author of that document.  The size parameter controls the maximum number of sources to produce, defaulting to the top 10 sources.  Any other parameters provided, such as language or country, will further restrict the documents whose sources will be produced.",
        "executor_category": "Analytics",
        "executor_category_group": "Analytics",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b\u200b\u200b/v3\u200b/analytics\u200b/{searchId}\u200b/top_sources",
        "dataroot": null,
        "pathParams": [
            {
                "key": "searchId",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "start ",
                "value": "",
                "description": "The timestamp of the start of the time-range to query.  An ISO8601 timestamp, excluding timezone/offset.  Includes both the date and time components of the ISO8601 timestamp, but excludes the timezone offset component. The timestamp represents the local time at the timezone given in the tz parameter.  Example : 2021-09-27T00:00:00",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The timestamp of the end of the time-range to query.  An ISO8601 timestamp, excluding timezone/offset.  Includes both the date and time components of the ISO8601 timestamp, but excludes the timezone offset component. The timestamp represents the local time at the timezone given in the tz parameter.  Example : 2021-09-28T00:00:00",
                "req": false
            },
            {
                "key": "tz",
                "value": "",
                "description": "The timezone ID for all timestamps in the request and response.  An identifier from the IANA TimeZone Database (tzdb), or a timezone offset, from UTC.  An offset, or UTC, will provide a stable timezone that remains the same, year-round.  A location ID, such as Europe/London, will automatically incorporate that location's local timezone rules, including daylight-savings (if applicable), and any other adjustments to local time. There is a full list available here: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones  As a consequence: when using a location ID, it is possible for time-ranges that cross a timezone adjustment in that locale to be longer or shorter than you might expect; e.g. a day with 23 or 25 hours when a daylight savings adjustment occurs.  The start and end parameters in your request will be interpreted to be local to this timezone.  All timestamps, dates and times in the response will be generated local to this timezone.",
                "req": false
            },
            {
                "key": "source",
                "value": "",
                "description": "The data source to query.  Available values : forums, tiktok, blogs, douyin, sina_weibo, twitch, facebook, reddit, wechat, news, pinterest, twitter, instagram, little_red_book, bilibili, youku",
                "req": false
            },
            {
                "key": "country",
                "value": "",
                "description": "The origin country of documents to include in the query.  The two-letter ISO 3166-1 Alpha-2 country code, or 'ZZ'.  Besides the two letter ISO 3166-1 Alpha-2 country code of a country, 'ZZ' may be used to indicate 'Unknown country of origin'.  This restricts the documents queried to include only those that originated from a particular country.  If multiple countries are specified, documents that originated from any of those countries will be included in results.  Documents that originated in some countries may be restricted from your queries automatically, based on your jurisdiction and entitlements.  Example : List [ \"US\" ]",
                "req": false
            },
            {
                "key": "language",
                "value": "",
                "description": "The language of documents to include in the query.  A primary language subtag from the IANA language tag registry, 'zh-Hant', 'zh-Hans' or 'zz'.  In addition to two and three letter primary subtags from the IANA language tag registry, the following special language codes are also supported:  zh-Hans- for Simplified Chinese zh-Hant- for Traditional Chinese zz- for unknown language This restricts the documents queried to include only those in a particular language.  If multiple languages are specified, documents in any of those languages will be included in the results.  Example : List [ \"en\" ]",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "The maximum number of results to produce.  From 1 to 1000 inclusive.  Only the top/first results will be produced.",
                "req": false
            },
            {
                "key": "min_authority",
                "value": "",
                "description": "The minimum authority score of sources to include.  When provided, sets a lower-bound on the authority score of sources produced in the results.  From 0 to 10 inclusive.",
                "req": false
            },
            {
                "key": "company_id",
                "value": "",
                "description": "Company which owns the given searchId. If not specified your default company is used.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1683540836279,
        "lastModifiedTime": 1683548808261,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "document_count": 0,
                    "sources": [
                        {
                            "author": {
                                "username": "string",
                                "display_name": "string",
                                "twitter": {
                                    "followers": 0,
                                    "following": 0,
                                    "external_id": "string"
                                },
                                "avatar_url": "string",
                                "authority": 0
                            },
                            "document_count": 0
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Validation Failed",
                    "errors": {
                        "start": [
                            "'foo' is not a valid ISO 8601 local timestamp"
                        ],
                        "end": [
                            "Missing required parameter"
                        ]
                    }
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Unauthorized",
                    "errors": {
                        "/v1/analytics/:searchId/top_shared": [
                            "You do not have permission to access this resource."
                        ]
                    }
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Not Found",
                    "errors": {
                        ":searchId": [
                            "A Saved Search with that ID could not be found"
                        ]
                    }
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Service Overloaded",
                    "errors": {}
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Service Unavailable",
                    "errors": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91948,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTopEntities",
        "executor_version": "v3",
        "executor_display_name": "The top named entities that occur in a Saved Search",
        "executor_description": "Produces a ranked list of entities that occur in documents matching the Saved Search, from the specified document sources, and within the specified time-range.  The size parameter controls the number of top keyphrases produced, defaulting to the top 100 keyphrases.  The sentiment parameter allows you to select the sentiment of the documents to analyze.  Any other parameters provided, such as language or country, will further restrict the documents that have their keyphrases included.",
        "executor_category": "Analytics",
        "executor_category_group": "Analytics",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b\u200b/v3\u200b/analytics\u200b/{searchId}\u200b/top_entities",
        "dataroot": null,
        "pathParams": [
            {
                "key": "searchId",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "start ",
                "value": "",
                "description": "The timestamp of the start of the time-range to query.  An ISO8601 timestamp, excluding timezone/offset.  Includes both the date and time components of the ISO8601 timestamp, but excludes the timezone offset component. The timestamp represents the local time at the timezone given in the tz parameter.  Example : 2021-09-27T00:00:00",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The timestamp of the end of the time-range to query.  An ISO8601 timestamp, excluding timezone/offset.  Includes both the date and time components of the ISO8601 timestamp, but excludes the timezone offset component. The timestamp represents the local time at the timezone given in the tz parameter.  Example : 2021-09-28T00:00:00",
                "req": false
            },
            {
                "key": "tz",
                "value": "",
                "description": "The timezone ID for all timestamps in the request and response.  An identifier from the IANA TimeZone Database (tzdb), or a timezone offset, from UTC.  An offset, or UTC, will provide a stable timezone that remains the same, year-round.  A location ID, such as Europe/London, will automatically incorporate that location's local timezone rules, including daylight-savings (if applicable), and any other adjustments to local time. There is a full list available here: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones  As a consequence: when using a location ID, it is possible for time-ranges that cross a timezone adjustment in that locale to be longer or shorter than you might expect; e.g. a day with 23 or 25 hours when a daylight savings adjustment occurs.  The start and end parameters in your request will be interpreted to be local to this timezone.  All timestamps, dates and times in the response will be generated local to this timezone.",
                "req": false
            },
            {
                "key": "source",
                "value": "",
                "description": "The data source to query.  Available values : forums, tiktok, blogs, douyin, sina_weibo, twitch, facebook, reddit, wechat, news, pinterest, twitter, instagram, little_red_book, bilibili, youku",
                "req": false
            },
            {
                "key": "country",
                "value": "",
                "description": "The origin country of documents to include in the query.  The two-letter ISO 3166-1 Alpha-2 country code, or 'ZZ'.  Besides the two letter ISO 3166-1 Alpha-2 country code of a country, 'ZZ' may be used to indicate 'Unknown country of origin'.  This restricts the documents queried to include only those that originated from a particular country.  If multiple countries are specified, documents that originated from any of those countries will be included in results.  Documents that originated in some countries may be restricted from your queries automatically, based on your jurisdiction and entitlements.  Example : List [ \"US\" ]",
                "req": false
            },
            {
                "key": "language",
                "value": "",
                "description": "The language of documents to include in the query.  A primary language subtag from the IANA language tag registry, 'zh-Hant', 'zh-Hans' or 'zz'.  In addition to two and three letter primary subtags from the IANA language tag registry, the following special language codes are also supported:  zh-Hans- for Simplified Chinese zh-Hant- for Traditional Chinese zz- for unknown language This restricts the documents queried to include only those in a particular language.  If multiple languages are specified, documents in any of those languages will be included in the results.  Example : List [ \"en\" ]",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "The maximum number of results to produce.  From 1 to 1000 inclusive.  Only the top/first results will be produced.",
                "req": false
            },
            {
                "key": "sentiment",
                "value": "",
                "description": "The overall sentiment of the document to filter on, positive, neutral or negative.  Available values : negative, neutral, positive  Example : List [ \"positive\" ]",
                "req": false
            },
            {
                "key": "company_id",
                "value": "",
                "description": "Company which owns the given searchId. If not specified your default company is used.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1683540704273,
        "lastModifiedTime": 1683548764197,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "document_count": 0,
                    "entities": [
                        {
                            "entity": "string",
                            "document_count": 0,
                            "percentage": 0
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Validation Failed",
                    "errors": {
                        "start": [
                            "'foo' is not a valid ISO 8601 local timestamp"
                        ],
                        "end": [
                            "Missing required parameter"
                        ]
                    }
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Unauthorized",
                    "errors": {
                        "/v1/analytics/:searchId/top_shared": [
                            "You do not have permission to access this resource."
                        ]
                    }
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Not Found",
                    "errors": {
                        ":searchId": [
                            "A Saved Search with that ID could not be found"
                        ]
                    }
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Service Overloaded",
                    "errors": {}
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Service Unavailable",
                    "errors": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91946,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTopShared",
        "executor_version": "v3",
        "executor_display_name": "The top shared documents that occur in a Saved Search",
        "executor_description": "Produces a ranked list of documents matching the Saved Search that were the most shared, from the specified document sources, and within the specified time-range.  The size parameter controls the number of top shared documents produced, defaulting to the top 10 top shared documents.  Any other parameters provided, such as language or country, will further restrict the documents that are included.  The sort_by parameter controls the ranking of the results. For example, if sort_by=retweets, the results will be the top N documents by retweet count. Retweet results are based on when the retweet occured, not the creation date of the original tweet",
        "executor_category": "Analytics",
        "executor_category_group": "Analytics",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b/v3\u200b/analytics\u200b/{searchId}\u200b/top_shared",
        "dataroot": null,
        "pathParams": [
            {
                "key": "searchId",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "start ",
                "value": "",
                "description": "The timestamp of the start of the time-range to query.  An ISO8601 timestamp, excluding timezone/offset.  Includes both the date and time components of the ISO8601 timestamp, but excludes the timezone offset component. The timestamp represents the local time at the timezone given in the tz parameter.  Example : 2021-09-27T00:00:00",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The timestamp of the end of the time-range to query.  An ISO8601 timestamp, excluding timezone/offset.  Includes both the date and time components of the ISO8601 timestamp, but excludes the timezone offset component. The timestamp represents the local time at the timezone given in the tz parameter.  Example : 2021-09-28T00:00:00",
                "req": false
            },
            {
                "key": "tz",
                "value": "",
                "description": "The timezone ID for all timestamps in the request and response.  An identifier from the IANA TimeZone Database (tzdb), or a timezone offset, from UTC.  An offset, or UTC, will provide a stable timezone that remains the same, year-round.  A location ID, such as Europe/London, will automatically incorporate that location's local timezone rules, including daylight-savings (if applicable), and any other adjustments to local time. There is a full list available here: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones  As a consequence: when using a location ID, it is possible for time-ranges that cross a timezone adjustment in that locale to be longer or shorter than you might expect; e.g. a day with 23 or 25 hours when a daylight savings adjustment occurs.  The start and end parameters in your request will be interpreted to be local to this timezone.  All timestamps, dates and times in the response will be generated local to this timezone.",
                "req": false
            },
            {
                "key": "source",
                "value": "",
                "description": "The data source to query.  Available values : forums, tiktok, blogs, douyin, sina_weibo, twitch, facebook, reddit, wechat, news, pinterest, twitter, instagram, little_red_book, bilibili, youku",
                "req": false
            },
            {
                "key": "country",
                "value": "",
                "description": "The origin country of documents to include in the query.  The two-letter ISO 3166-1 Alpha-2 country code, or 'ZZ'.  Besides the two letter ISO 3166-1 Alpha-2 country code of a country, 'ZZ' may be used to indicate 'Unknown country of origin'.  This restricts the documents queried to include only those that originated from a particular country.  If multiple countries are specified, documents that originated from any of those countries will be included in results.  Documents that originated in some countries may be restricted from your queries automatically, based on your jurisdiction and entitlements.  Example : List [ \"US\" ]",
                "req": false
            },
            {
                "key": "language",
                "value": "",
                "description": "The language of documents to include in the query.  A primary language subtag from the IANA language tag registry, 'zh-Hant', 'zh-Hans' or 'zz'.  In addition to two and three letter primary subtags from the IANA language tag registry, the following special language codes are also supported:  zh-Hans- for Simplified Chinese zh-Hant- for Traditional Chinese zz- for unknown language This restricts the documents queried to include only those in a particular language.  If multiple languages are specified, documents in any of those languages will be included in the results.  Example : List [ \"en\" ]",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "The maximum number of results to produce.  From 1 to 1000 inclusive.  Only the top/first results will be produced.",
                "req": false
            },
            {
                "key": "sort_by",
                "value": "",
                "description": "Field to rank results by.  Available values : retweets",
                "req": false
            },
            {
                "key": "company_id",
                "value": "",
                "description": "Company which owns the given searchId. If not specified your default company is used.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1683540543792,
        "lastModifiedTime": 1683548710643,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "document_count": 0,
                    "results": [
                        {
                            "author": {
                                "username": "string",
                                "display_name": "string",
                                "twitter": {
                                    "followers": 0,
                                    "following": 0,
                                    "external_id": "string"
                                },
                                "avatar_url": "string",
                                "authority": 0
                            },
                            "url": "string",
                            "country_code": "string",
                            "shares": {
                                "retweets": 0,
                                "likes": 0
                            },
                            "language_code": "string",
                            "external_id": "string",
                            "created_at": "2023-05-08T10:05:58.583Z"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Validation Failed",
                    "errors": {
                        "start": [
                            "'foo' is not a valid ISO 8601 local timestamp"
                        ],
                        "end": [
                            "Missing required parameter"
                        ]
                    }
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Unauthorized",
                    "errors": {
                        "/v1/analytics/:searchId/top_shared": [
                            "You do not have permission to access this resource."
                        ]
                    }
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Not Found",
                    "errors": {
                        ":searchId": [
                            "A Saved Search with that ID could not be found"
                        ]
                    }
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Service Overloaded",
                    "errors": {}
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Service Unavailable",
                    "errors": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91943,
        "executor_type": "THIRDPARTY",
        "executor_name": "getToplocationsSavedSearch",
        "executor_version": "v3",
        "executor_display_name": "The top locations that occur in a Saved Search",
        "executor_description": "Produces a ranked list of locations that occur in documents matching the Saved Search, from the specified document sources, and within the specified time-range.  The size parameter controls the number of top locations produced, defaulting to the top 100 locations.  The level parameter allows you to select the level of location you want from country, state or city.  Any other parameters provided, such as language or country, will further restrict the documents that have their keyphrases included.",
        "executor_category": "Analytics",
        "executor_category_group": "Analytics",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b/v3\u200b/analytics\u200b/{searchId}\u200b/top_locations",
        "dataroot": null,
        "pathParams": [
            {
                "key": "searchId",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "start ",
                "value": "",
                "description": "The timestamp of the start of the time-range to query.  An ISO8601 timestamp, excluding timezone/offset.  Includes both the date and time components of the ISO8601 timestamp, but excludes the timezone offset component. The timestamp represents the local time at the timezone given in the tz parameter.  Example : 2021-09-27T00:00:00",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The timestamp of the end of the time-range to query.  An ISO8601 timestamp, excluding timezone/offset.  Includes both the date and time components of the ISO8601 timestamp, but excludes the timezone offset component. The timestamp represents the local time at the timezone given in the tz parameter.  Example : 2021-09-28T00:00:00",
                "req": false
            },
            {
                "key": "tz",
                "value": "",
                "description": "The timezone ID for all timestamps in the request and response.  An identifier from the IANA TimeZone Database (tzdb), or a timezone offset, from UTC.  An offset, or UTC, will provide a stable timezone that remains the same, year-round.  A location ID, such as Europe/London, will automatically incorporate that location's local timezone rules, including daylight-savings (if applicable), and any other adjustments to local time. There is a full list available here: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones  As a consequence: when using a location ID, it is possible for time-ranges that cross a timezone adjustment in that locale to be longer or shorter than you might expect; e.g. a day with 23 or 25 hours when a daylight savings adjustment occurs.  The start and end parameters in your request will be interpreted to be local to this timezone.  All timestamps, dates and times in the response will be generated local to this timezone.",
                "req": false
            },
            {
                "key": "source",
                "value": "",
                "description": "The data source to query.  Available values : forums, tiktok, blogs, douyin, sina_weibo, twitch, facebook, reddit, wechat, news, pinterest, twitter, instagram, little_red_book, bilibili, youku",
                "req": false
            },
            {
                "key": "country",
                "value": "",
                "description": "The origin country of documents to include in the query.  The two-letter ISO 3166-1 Alpha-2 country code, or 'ZZ'.  Besides the two letter ISO 3166-1 Alpha-2 country code of a country, 'ZZ' may be used to indicate 'Unknown country of origin'.  This restricts the documents queried to include only those that originated from a particular country.  If multiple countries are specified, documents that originated from any of those countries will be included in results.  Documents that originated in some countries may be restricted from your queries automatically, based on your jurisdiction and entitlements.  Example : List [ \"US\" ]",
                "req": false
            },
            {
                "key": "language",
                "value": "",
                "description": "The language of documents to include in the query.  A primary language subtag from the IANA language tag registry, 'zh-Hant', 'zh-Hans' or 'zz'.  In addition to two and three letter primary subtags from the IANA language tag registry, the following special language codes are also supported:  zh-Hans- for Simplified Chinese zh-Hant- for Traditional Chinese zz- for unknown language This restricts the documents queried to include only those in a particular language.  If multiple languages are specified, documents in any of those languages will be included in the results.  Example : List [ \"en\" ]",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "The maximum number of results to produce.  From 1 to 1000 inclusive.  Only the top/first results will be produced.",
                "req": false
            },
            {
                "key": "level",
                "value": "",
                "description": "The level of location to be used, may be one of: country, state, city  Available values : city, country, state",
                "req": false
            },
            {
                "key": "company_id",
                "value": "",
                "description": "Company which owns the given searchId. If not specified your default company is used.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1683540352318,
        "lastModifiedTime": 1683548665552,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "document_count": 0,
                    "locations": [
                        {
                            "location_name": "string",
                            "location_id": "string",
                            "document_count": 0,
                            "percentage": 0
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Validation Failed",
                    "errors": {
                        "start": [
                            "'foo' is not a valid ISO 8601 local timestamp"
                        ],
                        "end": [
                            "Missing required parameter"
                        ]
                    }
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Unauthorized",
                    "errors": {
                        "/v1/analytics/:searchId/top_shared": [
                            "You do not have permission to access this resource."
                        ]
                    }
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Not Found",
                    "errors": {
                        ":searchId": [
                            "A Saved Search with that ID could not be found"
                        ]
                    }
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Service Overloaded",
                    "errors": {}
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Service Unavailable",
                    "errors": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91939,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSavedSearchId",
        "executor_version": "v3",
        "executor_display_name": "The top tags that occur in a Saved Search",
        "executor_description": "Produces a ranked list of tags that occur in documents matching the Saved Search, from the specified document sources, and within the specified time-range.",
        "executor_category": "Analytics",
        "executor_category_group": "Analytics",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b/v3\u200b/analytics\u200b/{searchId}\u200b/top_tags",
        "dataroot": null,
        "pathParams": [
            {
                "key": "searchId",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "start ",
                "value": "",
                "description": "The timestamp of the start of the time-range to query.  An ISO8601 timestamp, excluding timezone/offset.  Includes both the date and time components of the ISO8601 timestamp, but excludes the timezone offset component. The timestamp represents the local time at the timezone given in the tz parameter.  Example : 2021-09-27T00:00:00",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The timestamp of the end of the time-range to query.  An ISO8601 timestamp, excluding timezone/offset.  Includes both the date and time components of the ISO8601 timestamp, but excludes the timezone offset component. The timestamp represents the local time at the timezone given in the tz parameter.  Example : 2021-09-28T00:00:00",
                "req": false
            },
            {
                "key": "tz",
                "value": "",
                "description": "The timezone ID for all timestamps in the request and response.  An identifier from the IANA TimeZone Database (tzdb), or a timezone offset, from UTC.  An offset, or UTC, will provide a stable timezone that remains the same, year-round.  A location ID, such as Europe/London, will automatically incorporate that location's local timezone rules, including daylight-savings (if applicable), and any other adjustments to local time. There is a full list available here: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones  As a consequence: when using a location ID, it is possible for time-ranges that cross a timezone adjustment in that locale to be longer or shorter than you might expect; e.g. a day with 23 or 25 hours when a daylight savings adjustment occurs.  The start and end parameters in your request will be interpreted to be local to this timezone.  All timestamps, dates and times in the response will be generated local to this timezone.",
                "req": false
            },
            {
                "key": "source",
                "value": "",
                "description": "The data source to query.  Available values : forums, tiktok, blogs, douyin, sina_weibo, twitch, facebook, reddit, wechat, news, pinterest, twitter, instagram, little_red_book, bilibili, youku",
                "req": false
            },
            {
                "key": "country",
                "value": "",
                "description": "The origin country of documents to include in the query.  The two-letter ISO 3166-1 Alpha-2 country code, or 'ZZ'.  Besides the two letter ISO 3166-1 Alpha-2 country code of a country, 'ZZ' may be used to indicate 'Unknown country of origin'.  This restricts the documents queried to include only those that originated from a particular country.  If multiple countries are specified, documents that originated from any of those countries will be included in results.  Documents that originated in some countries may be restricted from your queries automatically, based on your jurisdiction and entitlements.  Example : List [ \"US\" ]",
                "req": false
            },
            {
                "key": "language",
                "value": "",
                "description": "The language of documents to include in the query.  A primary language subtag from the IANA language tag registry, 'zh-Hant', 'zh-Hans' or 'zz'.  In addition to two and three letter primary subtags from the IANA language tag registry, the following special language codes are also supported:  zh-Hans- for Simplified Chinese zh-Hant- for Traditional Chinese zz- for unknown language This restricts the documents queried to include only those in a particular language.  If multiple languages are specified, documents in any of those languages will be included in the results.  Example : List [ \"en\" ]",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "The maximum number of results to produce.  From 1 to 1000 inclusive.  Only the top/first results will be produced.",
                "req": false
            },
            {
                "key": "company_id",
                "value": "",
                "description": "Company which owns the given searchId. If not specified your default company is used.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1683539916124,
        "lastModifiedTime": 1683548576543,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "document_count": 0,
                    "tags": [
                        {
                            "tag": "string",
                            "document_count": 0,
                            "percentage": 0
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Validation Failed",
                    "errors": {
                        "start": [
                            "'foo' is not a valid ISO 8601 local timestamp"
                        ],
                        "end": [
                            "Missing required parameter"
                        ]
                    }
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Unauthorized",
                    "errors": {
                        "/v1/analytics/:searchId/top_shared": [
                            "You do not have permission to access this resource."
                        ]
                    }
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Not Found",
                    "errors": {
                        ":searchId": [
                            "A Saved Search with that ID could not be found"
                        ]
                    }
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Service Overloaded",
                    "errors": {}
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Service Unavailable",
                    "errors": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91935,
        "executor_type": "THIRDPARTY",
        "executor_name": "summaryAnalyticsForSavedSearch.",
        "executor_version": "v3",
        "executor_display_name": "A summary of analytics for a Saved Search",
        "executor_description": "The summary is produced only for documents matching the Saved Search, from the specified document sources, and within the specified time-range.  Any other parameters provided, such as language or country, will further restrict the documents that are included in the analysis.  The unique_authors value can only be calculated for sources other than news. When run against news it will return 0.",
        "executor_category": "Analytics",
        "executor_category_group": "Analytics",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com/\u200b/v3\u200b/analytics\u200b/{searchId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "searchId",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "start ",
                "value": "",
                "description": "The timestamp of the start of the time-range to query.  An ISO8601 timestamp, excluding timezone/offset.  Includes both the date and time components of the ISO8601 timestamp, but excludes the timezone offset component. The timestamp represents the local time at the timezone given in the tz parameter.  Example : 2021-09-27T00:00:00",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The timestamp of the end of the time-range to query.  An ISO8601 timestamp, excluding timezone/offset.  Includes both the date and time components of the ISO8601 timestamp, but excludes the timezone offset component. The timestamp represents the local time at the timezone given in the tz parameter.  Example : 2021-09-28T00:00:00",
                "req": false
            },
            {
                "key": "tz",
                "value": "",
                "description": "The timezone ID for all timestamps in the request and response.  An identifier from the IANA TimeZone Database (tzdb), or a timezone offset, from UTC.  An offset, or UTC, will provide a stable timezone that remains the same, year-round.  A location ID, such as Europe/London, will automatically incorporate that location's local timezone rules, including daylight-savings (if applicable), and any other adjustments to local time. There is a full list available here: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones  As a consequence: when using a location ID, it is possible for time-ranges that cross a timezone adjustment in that locale to be longer or shorter than you might expect; e.g. a day with 23 or 25 hours when a daylight savings adjustment occurs.  The start and end parameters in your request will be interpreted to be local to this timezone.  All timestamps, dates and times in the response will be generated local to this timezone.",
                "req": false
            },
            {
                "key": "source",
                "value": "",
                "description": "The data source to query.  Available values : forums, tiktok, blogs, douyin, sina_weibo, twitch, facebook, reddit, wechat, news, pinterest, twitter, instagram, little_red_book, bilibili, youku",
                "req": false
            },
            {
                "key": "country",
                "value": "",
                "description": "The origin country of documents to include in the query.  The two-letter ISO 3166-1 Alpha-2 country code, or 'ZZ'.  Besides the two letter ISO 3166-1 Alpha-2 country code of a country, 'ZZ' may be used to indicate 'Unknown country of origin'.  This restricts the documents queried to include only those that originated from a particular country.  If multiple countries are specified, documents that originated from any of those countries will be included in results.  Documents that originated in some countries may be restricted from your queries automatically, based on your jurisdiction and entitlements.  Example : List [ \"US\" ]",
                "req": false
            },
            {
                "key": "language",
                "value": "",
                "description": "The language of documents to include in the query.  A primary language subtag from the IANA language tag registry, 'zh-Hant', 'zh-Hans' or 'zz'.  In addition to two and three letter primary subtags from the IANA language tag registry, the following special language codes are also supported:  zh-Hans- for Simplified Chinese zh-Hant- for Traditional Chinese zz- for unknown language This restricts the documents queried to include only those in a particular language.  If multiple languages are specified, documents in any of those languages will be included in the results.  Example : List [ \"en\" ]",
                "req": false
            },
            {
                "key": "company_id",
                "value": "",
                "description": "Company which owns the given searchId. If not specified your default company is used.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1683538603714,
        "lastModifiedTime": 1683548527404,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "unique_authors": 0,
                    "top_countries": [
                        {
                            "country_code": "string",
                            "document_count": 0,
                            "percentage": 0
                        }
                    ],
                    "sentiment": {
                        "positive": {
                            "document_count": 0,
                            "percentage": 0
                        },
                        "negative": {
                            "document_count": 0,
                            "percentage": 0
                        },
                        "neutral": {
                            "document_count": 0,
                            "percentage": 0
                        },
                        "unknown": {
                            "document_count": 0,
                            "percentage": 0
                        }
                    },
                    "top_languages": [
                        {
                            "language_code": "string",
                            "document_count": 0,
                            "percentage": 0
                        }
                    ],
                    "time_series": [
                        {
                            "date": "2023-05-08",
                            "document_count": 0,
                            "hours": [
                                {
                                    "timestamp": "2023-05-08T09:28:51.763Z",
                                    "document_count": 0
                                }
                            ]
                        }
                    ],
                    "volume": {
                        "document_count": 0,
                        "per_day": 0,
                        "per_hour": 0
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Validation Failed",
                    "errors": {
                        "start": [
                            "'foo' is not a valid ISO 8601 local timestamp"
                        ],
                        "end": [
                            "Missing required parameter"
                        ]
                    }
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Unauthorized",
                    "errors": {
                        "/v1/analytics/:searchId/top_shared": [
                            "You do not have permission to access this resource."
                        ]
                    }
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Not Found",
                    "errors": {
                        ":searchId": [
                            "A Saved Search with that ID could not be found"
                        ]
                    }
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Service Overloaded",
                    "errors": {}
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Service Unavailable",
                    "errors": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91953,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTopKeyphrases",
        "executor_version": "v3",
        "executor_display_name": "The top keyphrases that occur in a Saved Search",
        "executor_description": "Produces a ranked list of keyphrases that occur in documents matching the Saved Search, from the specified document sources, and within the specified time-range.  The size parameter controls the number of top keyphrases produced, defaulting to the top 100 keyphrases.  The sentiment parameter allows you to select the sentiment of the documents to analyze.  Any other parameters provided, such as language or country, will further restrict the documents that have their keyphrases included.",
        "executor_category": "Analytics",
        "executor_category_group": "Analytics",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b\u200b\u200b\u200b/v3\u200b/analytics\u200b/{searchId}\u200b/top_keyphrases",
        "dataroot": null,
        "pathParams": [
            {
                "key": "searchId",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "start ",
                "value": "",
                "description": "The timestamp of the start of the time-range to query.  An ISO8601 timestamp, excluding timezone/offset.  Includes both the date and time components of the ISO8601 timestamp, but excludes the timezone offset component. The timestamp represents the local time at the timezone given in the tz parameter.  Example : 2021-09-27T00:00:00",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The timestamp of the end of the time-range to query.  An ISO8601 timestamp, excluding timezone/offset.  Includes both the date and time components of the ISO8601 timestamp, but excludes the timezone offset component. The timestamp represents the local time at the timezone given in the tz parameter.  Example : 2021-09-28T00:00:00",
                "req": false
            },
            {
                "key": "tz",
                "value": "",
                "description": "The timezone ID for all timestamps in the request and response.  An identifier from the IANA TimeZone Database (tzdb), or a timezone offset, from UTC.  An offset, or UTC, will provide a stable timezone that remains the same, year-round.  A location ID, such as Europe/London, will automatically incorporate that location's local timezone rules, including daylight-savings (if applicable), and any other adjustments to local time. There is a full list available here: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones  As a consequence: when using a location ID, it is possible for time-ranges that cross a timezone adjustment in that locale to be longer or shorter than you might expect; e.g. a day with 23 or 25 hours when a daylight savings adjustment occurs.  The start and end parameters in your request will be interpreted to be local to this timezone.  All timestamps, dates and times in the response will be generated local to this timezone.",
                "req": false
            },
            {
                "key": "source",
                "value": "",
                "description": "The data source to query.  Available values : forums, tiktok, blogs, douyin, sina_weibo, twitch, facebook, reddit, wechat, news, pinterest, twitter, instagram, little_red_book, bilibili, youku",
                "req": false
            },
            {
                "key": "country",
                "value": "",
                "description": "The origin country of documents to include in the query.  The two-letter ISO 3166-1 Alpha-2 country code, or 'ZZ'.  Besides the two letter ISO 3166-1 Alpha-2 country code of a country, 'ZZ' may be used to indicate 'Unknown country of origin'.  This restricts the documents queried to include only those that originated from a particular country.  If multiple countries are specified, documents that originated from any of those countries will be included in results.  Documents that originated in some countries may be restricted from your queries automatically, based on your jurisdiction and entitlements.  Example : List [ \"US\" ]",
                "req": false
            },
            {
                "key": "language",
                "value": "",
                "description": "The language of documents to include in the query.  A primary language subtag from the IANA language tag registry, 'zh-Hant', 'zh-Hans' or 'zz'.  In addition to two and three letter primary subtags from the IANA language tag registry, the following special language codes are also supported:  zh-Hans- for Simplified Chinese zh-Hant- for Traditional Chinese zz- for unknown language This restricts the documents queried to include only those in a particular language.  If multiple languages are specified, documents in any of those languages will be included in the results.  Example : List [ \"en\" ]",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "The maximum number of results to produce.  From 1 to 1000 inclusive.  Only the top/first results will be produced.",
                "req": false
            },
            {
                "key": "sentiment",
                "value": "",
                "description": "The overall sentiment of the document to filter on, positive, neutral or negative.  Available values : negative, neutral, positive  Example : List [ \"positive\" ]",
                "req": false
            },
            {
                "key": "company_id",
                "value": "",
                "description": "Company which owns the given searchId. If not specified your default company is used.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1683540942652,
        "lastModifiedTime": 1683548845591,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "document_count": 0,
                    "keyphrases": [
                        {
                            "keyphrase": "string",
                            "document_count": 0,
                            "percentage": 0
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Validation Failed",
                    "errors": {
                        "start": [
                            "'foo' is not a valid ISO 8601 local timestamp"
                        ],
                        "end": [
                            "Missing required parameter"
                        ]
                    }
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Unauthorized",
                    "errors": {
                        "/v1/analytics/:searchId/top_shared": [
                            "You do not have permission to access this resource."
                        ]
                    }
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Not Found",
                    "errors": {
                        ":searchId": [
                            "A Saved Search with that ID could not be found"
                        ]
                    }
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Too Many Requests",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Service Overloaded",
                    "errors": {}
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Service Unavailable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Service Unavailable",
                    "errors": {}
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92012,
        "executor_type": "THIRDPARTY",
        "executor_name": "getalistofallyourtags",
        "executor_version": "v3",
        "executor_display_name": "Get a list of all your tags",
        "executor_description": "Get a list of all your tags",
        "executor_category": "Tags",
        "executor_category_group": "Tags",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b\u200b\u200b\u200b\u200b/v3\u200b/tags",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "Company which owns the given tags. If not specified your default company is used.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683546302565,
        "lastModifiedTime": 1683546302565,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 409,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "List of Tags",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "tags": [
                        {
                            "name": "my tag"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91969,
        "executor_type": "THIRDPARTY",
        "executor_name": "removesanexistingonetimeexport",
        "executor_version": "v3",
        "executor_display_name": "Removes an existing one-time export",
        "executor_description": "Removes an existing one-time export",
        "executor_category": "OnetimeExports",
        "executor_category_group": "OnetimeExports",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.meltwater.com\u200b/v3\u200b/exports\u200b/one-time\u200b/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "One-time export id  Example : 123"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683541834188,
        "lastModifiedTime": 1683541834188,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "VALIDATION",
                            "title": "Invalid data",
                            "details": "Invalid JSON payload"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "AUTH",
                            "title": "Unauthorized",
                            "details": "Invalid or expired authorization header"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Permission Denied",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "ENTITLEMENT",
                            "title": "Entitlement missing",
                            "details": "You are missing required entitlements, in order to access given content: [\"news\", \"social\"]. Please contact your sales representative to add the necessary entitlement to your Meltwater account."
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "EXPORT",
                            "title": "Unknown resource",
                            "details": "The resource id you provided (1234) is unknown"
                        }
                    ]
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "VALIDATION",
                            "title": "Validation error for field: window_size",
                            "details": "is not a valid integer"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "INTERNAL",
                            "title": "Internal Server error",
                            "details": "Something went wrong behind the scenes..."
                        }
                    ]
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Service Unavailable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "SEARCH",
                            "title": "Service unavailable",
                            "details": "Temporarily unable to handle the request, try again later"
                        }
                    ]
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91963,
        "executor_type": "THIRDPARTY",
        "executor_name": "getalistofallyouronetimeexports",
        "executor_version": "v3",
        "executor_display_name": "Get a list of all your one-time exports",
        "executor_description": "Get a list of all your one-time exports",
        "executor_category": "OnetimeExports",
        "executor_category_group": "OnetimeExports",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b\u200b\u200b\u200b\u200b\u200b/v3\u200b/exports\u200b/one-time",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1683541544401,
        "lastModifiedTime": 1683548939721,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "VALIDATION",
                            "title": "Invalid data",
                            "details": "Invalid JSON payload"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "AUTH",
                            "title": "Unauthorized",
                            "details": "Invalid or expired authorization header"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Permission Denied",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "ENTITLEMENT",
                            "title": "Entitlement missing",
                            "details": "You are missing required entitlements, in order to access given content: [\"news\", \"social\"]. Please contact your sales representative to add the necessary entitlement to your Meltwater account."
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "EXPORT",
                            "title": "Unknown resource",
                            "details": "The resource id you provided (1234) is unknown"
                        }
                    ]
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "VALIDATION",
                            "title": "Validation error for field: window_size",
                            "details": "is not a valid integer"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "INTERNAL",
                            "title": "Internal Server error",
                            "details": "Something went wrong behind the scenes..."
                        }
                    ]
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Service Unavailable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "SEARCH",
                            "title": "Service unavailable",
                            "details": "Temporarily unable to handle the request, try again later"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "onetime_exports": [
                        {
                            "updated_at": "string",
                            "tags": [
                                {
                                    "name": "My Custom Tag"
                                }
                            ],
                            "status_reason": "string",
                            "status": "PENDING",
                            "start_date": "2020-03-25T00:00:00Z",
                            "searches": [
                                {
                                    "name": "Elections",
                                    "id": 123
                                }
                            ],
                            "inserted_at": "string",
                            "id": 0,
                            "end_date": "2020-03-29T23:59:59Z",
                            "data_url": "string",
                            "company_name": "string",
                            "format": "JSON"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91960,
        "executor_type": "THIRDPARTY",
        "executor_name": "createsanewonetimeexport",
        "executor_version": "v3",
        "executor_display_name": "Creates a new one-time export",
        "executor_description": "Creates a new one-time export",
        "executor_category": "OnetimeExports",
        "executor_category_group": "OnetimeExports",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.meltwater.com\u200b\u200b\u200b\u200b\u200b/v3\u200b/exports\u200b/one-time",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "Company which owns the given searchId. If not specified your default company is used.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "onetime_export": {
                    "tags": [
                        "tag"
                    ],
                    "start_date": "2020-03-25T00:00:00Z",
                    "search_ids": [
                        123
                    ],
                    "end_date": "2020-03-29T23:59:59Z",
                    "format": "CSV"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1683541359711,
        "lastModifiedTime": 1683548898628,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "onetime_export": {
                        "updated_at": "string",
                        "tags": [
                            {
                                "name": "My Custom Tag"
                            }
                        ],
                        "status_reason": "string",
                        "status": "PENDING",
                        "start_date": "2020-03-25T00:00:00Z",
                        "searches": [
                            {
                                "name": "Elections",
                                "id": 123
                            }
                        ],
                        "inserted_at": "string",
                        "id": 0,
                        "end_date": "2020-03-29T23:59:59Z",
                        "data_url": "string",
                        "company_name": "string",
                        "format": "JSON"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "VALIDATION",
                            "title": "Invalid data",
                            "details": "Invalid JSON payload"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "AUTH",
                            "title": "Unauthorized",
                            "details": "Invalid or expired authorization header"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Permission Denied",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "ENTITLEMENT",
                            "title": "Entitlement missing",
                            "details": "You are missing required entitlements, in order to access given content: [\"news\", \"social\"]. Please contact your sales representative to add the necessary entitlement to your Meltwater account."
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "EXPORT",
                            "title": "Unknown resource",
                            "details": "The resource id you provided (1234) is unknown"
                        }
                    ]
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "VALIDATION",
                            "title": "Validation error for field: window_size",
                            "details": "is not a valid integer"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "INTERNAL",
                            "title": "Internal Server error",
                            "details": "Something went wrong behind the scenes..."
                        }
                    ]
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Service Unavailable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "SEARCH",
                            "title": "Service unavailable",
                            "details": "Temporarily unable to handle the request, try again later"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91966,
        "executor_type": "THIRDPARTY",
        "executor_name": "getdetailsofaonetimeexport",
        "executor_version": "v3",
        "executor_display_name": "Get details of a one-time export",
        "executor_description": "Get details of a one-time export",
        "executor_category": "OnetimeExports",
        "executor_category_group": "OnetimeExports",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b\u200b\u200b\u200b\u200b\u200b/\u200bv3\u200b/exports\u200b/one-time\u200b/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "One-time export id. Example : 123"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1683541676216,
        "lastModifiedTime": 1683548973296,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "VALIDATION",
                            "title": "Invalid data",
                            "details": "Invalid JSON payload"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "AUTH",
                            "title": "Unauthorized",
                            "details": "Invalid or expired authorization header"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Permission Denied",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "ENTITLEMENT",
                            "title": "Entitlement missing",
                            "details": "You are missing required entitlements, in order to access given content: [\"news\", \"social\"]. Please contact your sales representative to add the necessary entitlement to your Meltwater account."
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "EXPORT",
                            "title": "Unknown resource",
                            "details": "The resource id you provided (1234) is unknown"
                        }
                    ]
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "VALIDATION",
                            "title": "Validation error for field: window_size",
                            "details": "is not a valid integer"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "INTERNAL",
                            "title": "Internal Server error",
                            "details": "Something went wrong behind the scenes..."
                        }
                    ]
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Service Unavailable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "SEARCH",
                            "title": "Service unavailable",
                            "details": "Temporarily unable to handle the request, try again later"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "onetime_export": {
                        "updated_at": "string",
                        "tags": [
                            {
                                "name": "My Custom Tag"
                            }
                        ],
                        "status_reason": "string",
                        "status": "PENDING",
                        "start_date": "2020-03-25T00:00:00Z",
                        "searches": [
                            {
                                "name": "Elections",
                                "id": 123
                            }
                        ],
                        "inserted_at": "string",
                        "id": 0,
                        "end_date": "2020-03-29T23:59:59Z",
                        "data_url": "string",
                        "company_name": "string",
                        "format": "JSON"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92029,
        "executor_type": "THIRDPARTY",
        "executor_name": "getnumeric",
        "executor_version": "v3",
        "executor_display_name": "Returns simple metrics for a social account",
        "executor_description": "A numeric metric is the most basic type of metrics you can get for your social media account, like the number of page fans. All timestamps in this endpoint work on PST timezone (Meta's preferred timezone).",
        "executor_category": "OwnedSocial",
        "executor_category_group": "OwnedSocial",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b\u200b\u200b/v3\u200b/owned\u200b/accounts\u200b/metrics\u200b/numeric",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "source",
                "value": "",
                "description": "The social media source name  Available values : facebook, instagram",
                "req": false
            },
            {
                "key": "account_ids",
                "value": "",
                "description": "Comma separated list of account ids",
                "req": false
            },
            {
                "key": "metrics",
                "value": "",
                "description": "Comma separated list of metric ids",
                "req": false
            },
            {
                "key": "start",
                "value": "",
                "description": "The timestamp of the start of the time-range to query. An ISO8601 timestamp, excluding time and timezone/offset component. Example: 2022-01-01",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The timestamp of the end of the time-range to query. An ISO8601 timestamp, excluding time and timezone/offset component. Example: 2021-01-28",
                "req": false
            },
            {
                "key": "company_id",
                "value": "",
                "description": "Meltwater company id if running query on behalf of another company",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683547793003,
        "lastModifiedTime": 1683547793003,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "List of Filter Sets",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "accounts": [
                        {
                            "daily_values": [
                                {
                                    "date": "string",
                                    "follower_count": 0,
                                    "impressions": 0,
                                    "page_fan_removes": 0,
                                    "page_fans": 0,
                                    "page_fans_ads": 0,
                                    "page_impressions": 0,
                                    "page_impressions_organic": 0,
                                    "page_impressions_paid": 0,
                                    "page_post_engagements": 0,
                                    "page_vide_views": 0,
                                    "profile_views": 0,
                                    "total_followers_counts": 0,
                                    "website_clicks": 0
                                }
                            ],
                            "id": "string",
                            "name": "string",
                            "source": "string",
                            "username": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": {
                        "additionalProp1": [
                            "string"
                        ],
                        "additionalProp2": [
                            "string"
                        ],
                        "additionalProp3": [
                            "string"
                        ]
                    },
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92028,
        "executor_type": "THIRDPARTY",
        "executor_name": "getnestedbreakdown",
        "executor_version": "v3",
        "executor_display_name": "Returns a double-level breakdown by two categories or concepts",
        "executor_description": "A 'nested-breakdown' metric is an analysis that provides a double-level breakdown by two categories or concepts. For example, the demographics_gender_age metric breaks down the audience for a Facebook page by firstly gender, then age group. All timestamps in this endpoint work on PST timezone (Meta's preferred timezone).",
        "executor_category": "OwnedSocial",
        "executor_category_group": "OwnedSocial",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b\u200b/v3\u200b/owned\u200b/accounts\u200b/metrics\u200b/nested_breakdown",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "source",
                "value": "",
                "description": "The social media source name  Available values : facebook, instagram",
                "req": false
            },
            {
                "key": "account_ids",
                "value": "",
                "description": "Comma separated list of account ids",
                "req": false
            },
            {
                "key": "metrics",
                "value": "",
                "description": "Comma separated list of metric ids",
                "req": false
            },
            {
                "key": "start",
                "value": "",
                "description": "The timestamp of the start of the time-range to query. An ISO8601 timestamp, excluding time and timezone/offset component. Example: 2022-01-01",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The timestamp of the end of the time-range to query. An ISO8601 timestamp, excluding time and timezone/offset component. Example: 2021-01-28",
                "req": false
            },
            {
                "key": "company_id",
                "value": "",
                "description": "Meltwater company id if running query on behalf of another company",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683547701712,
        "lastModifiedTime": 1683547701712,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "List of Filter Sets",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "accounts": [
                        {
                            "daily_values": [
                                {
                                    "date": "string",
                                    "demographics_gender_age": {
                                        "key": "string",
                                        "subkey": "string",
                                        "value": 0
                                    }
                                }
                            ],
                            "id": "string",
                            "name": "string",
                            "source": "string",
                            "username": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": {
                        "additionalProp1": [
                            "string"
                        ],
                        "additionalProp2": [
                            "string"
                        ],
                        "additionalProp3": [
                            "string"
                        ]
                    },
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92026,
        "executor_type": "THIRDPARTY",
        "executor_name": "getheatmap",
        "executor_version": "v3",
        "executor_display_name": "Returns a break-down over date and time",
        "executor_description": "A 'heatmap' metric is an analysis that provides a break-down over date and time. For example, the page_fans_heatmap metric breaks down the audience for a Facebook page by how active they are each day and hour. All timestamps in this endpoint work on PST timezone (Meta's preferred timezone).",
        "executor_category": "OwnedSocial",
        "executor_category_group": "OwnedSocial",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b/v3\u200b/owned\u200b/accounts\u200b/metrics\u200b/heatmap",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "source",
                "value": "",
                "description": "The social media source name  Available values : facebook, instagram",
                "req": false
            },
            {
                "key": "account_ids",
                "value": "",
                "description": "Comma separated list of account ids",
                "req": false
            },
            {
                "key": "metrics",
                "value": "",
                "description": "Comma separated list of metric ids",
                "req": false
            },
            {
                "key": "start",
                "value": "",
                "description": "The timestamp of the start of the time-range to query. An ISO8601 timestamp, excluding time and timezone/offset component. Example: 2022-01-01",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The timestamp of the end of the time-range to query. An ISO8601 timestamp, excluding time and timezone/offset component. Example: 2021-01-28",
                "req": false
            },
            {
                "key": "company_id",
                "value": "",
                "description": "Meltwater company id if running query on behalf of another company",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683547584803,
        "lastModifiedTime": 1683547584803,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "List of Filter Sets",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "accounts": [
                        {
                            "daily_values": [
                                {
                                    "date": "string",
                                    "page_fans_heatmap": {
                                        "hour": 0,
                                        "value": 0
                                    }
                                }
                            ],
                            "id": "string",
                            "name": "string",
                            "source": "string",
                            "username": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": {
                        "additionalProp1": [
                            "string"
                        ],
                        "additionalProp2": [
                            "string"
                        ],
                        "additionalProp3": [
                            "string"
                        ]
                    },
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92024,
        "executor_type": "THIRDPARTY",
        "executor_name": "getbreakdown",
        "executor_version": "v3",
        "executor_display_name": "Returns a single-level breakdown by a category or concept",
        "executor_description": "A 'breakdown' metric is an analysis that provides a single-level breakdown by a category or concept. For example, the demographics_audience_country metric breaks down the audience for a Facebook page by country. All timestamps in this endpoint work on PST timezone (Meta's preferred timezone).",
        "executor_category": "OwnedSocial",
        "executor_category_group": "OwnedSocial",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b\u200b\u200b\u200b/v3\u200b/owned\u200b/accounts\u200b/metrics\u200b/breakdown",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "source",
                "value": "",
                "description": "The social media source name  Available values : facebook, instagram",
                "req": false
            },
            {
                "key": "account_ids",
                "value": "",
                "description": "Comma separated list of account ids",
                "req": false
            },
            {
                "key": "metrics",
                "value": "",
                "description": "Comma separated list of metric ids",
                "req": false
            },
            {
                "key": "start",
                "value": "",
                "description": "The timestamp of the start of the time-range to query. An ISO8601 timestamp, excluding time and timezone/offset component. Example: 2022-01-01",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The timestamp of the end of the time-range to query. An ISO8601 timestamp, excluding time and timezone/offset component. Example: 2021-01-28",
                "req": false
            },
            {
                "key": "company_id",
                "value": "",
                "description": "Meltwater company id if running query on behalf of another company",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683547454301,
        "lastModifiedTime": 1683547454301,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "List of Filter Sets",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "accounts": [
                        {
                            "daily_values": [
                                {
                                    "date": "string",
                                    "demographics_audience_city": {
                                        "key": "string",
                                        "key_label": "string",
                                        "value": 0
                                    },
                                    "demographics_audience_country": {
                                        "key": "string",
                                        "key_label": "string",
                                        "value": 0
                                    }
                                }
                            ],
                            "id": "string",
                            "name": "string",
                            "source": "string",
                            "username": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": {
                        "additionalProp1": [
                            "string"
                        ],
                        "additionalProp2": [
                            "string"
                        ],
                        "additionalProp3": [
                            "string"
                        ]
                    },
                    "message": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92035,
        "executor_type": "THIRDPARTY",
        "executor_name": "getsupportedmetrics",
        "executor_version": "v3",
        "executor_display_name": "Returns a list of supported metrics",
        "executor_description": "Returns a list of supported metrics",
        "executor_category": "OwnedSocial",
        "executor_category_group": "OwnedSocial",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b\u200b/v3\u200b/owned\u200b/supported_metrics",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683548440149,
        "lastModifiedTime": 1683548440149,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "List of Filter Sets",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "sources": [
                        {
                            "account_metrics": [
                                {
                                    "description": "string",
                                    "metric": "string",
                                    "name": "string",
                                    "type": "string"
                                }
                            ],
                            "name": "string",
                            "post_metrics": [
                                {
                                    "description": "string",
                                    "metric": "string",
                                    "name": "string",
                                    "type": "string"
                                }
                            ],
                            "source": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": {
                        "additionalProp1": [
                            "string"
                        ],
                        "additionalProp2": [
                            "string"
                        ],
                        "additionalProp3": [
                            "string"
                        ]
                    },
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92023,
        "executor_type": "THIRDPARTY",
        "executor_name": "getuseraccount",
        "executor_version": "v3",
        "executor_display_name": "Returns a list of social account connections for a given company/user account",
        "executor_description": "Returns a list of social account connections for a given company/user account",
        "executor_category": "OwnedSocial",
        "executor_category_group": "OwnedSocial",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b\u200b\u200b/v3\u200b/owned\u200b/accounts",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "Meltwater company id if running query on behalf of another company",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683547189639,
        "lastModifiedTime": 1683547189639,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "List of Filter Sets",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "accounts": [
                        {
                            "id": "string",
                            "logo": "string",
                            "name": "string",
                            "source": "string",
                            "username": "string"
                        }
                    ],
                    "count": 0
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92032,
        "executor_type": "THIRDPARTY",
        "executor_name": "getposts",
        "executor_version": "v3",
        "executor_display_name": "Allows to fetch the top posts for owned social accounts",
        "executor_description": "Allows to fetch the top posts for owned social accounts. You might do this to report the most engaged with posts in a period of time for example. All timestamps in this endpoint work on PST timezone (Meta's preferred timezone).",
        "executor_category": "OwnedSocial",
        "executor_category_group": "OwnedSocial",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b/v3\u200b/owned\u200b/accounts\u200b/posts\u200b/top_posts",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "source",
                "value": "",
                "description": "The social media source name  Available values : facebook, instagram",
                "req": false
            },
            {
                "key": "account_ids",
                "value": "",
                "description": "Comma separated list of account ids",
                "req": false
            },
            {
                "key": "metrics",
                "value": "",
                "description": "Comma separated list of metric ids",
                "req": false
            },
            {
                "key": "start",
                "value": "",
                "description": "The timestamp of the start of the time-range to query. An ISO8601 timestamp, excluding time and timezone/offset component. Example: 2022-01-01",
                "req": false
            },
            {
                "key": "end",
                "value": "",
                "description": "The timestamp of the end of the time-range to query. An ISO8601 timestamp, excluding time and timezone/offset component. Example: 2021-01-28",
                "req": false
            },
            {
                "key": "company_id",
                "value": "",
                "description": "Meltwater company id if running query on behalf of another company",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "Used for paginating results  Default value : 1",
                "req": false
            },
            {
                "key": "page_size",
                "value": "",
                "description": "The number of results to return per request  Default value : 10",
                "req": false
            },
            {
                "key": "sort_by",
                "value": "",
                "description": "Field on which the response will be sorted  Available values : created_time, engagement_rate, comments_count, reactions_count, shares_count  Default value : created_time",
                "req": false
            },
            {
                "key": "sort_order",
                "value": "",
                "description": "The sort order  Available values : desc, asc  Default value : desc",
                "req": false
            },
            {
                "key": "post_types",
                "value": "",
                "description": "The type of posts to retrieve  Available values : link, status, photo, video, album, image, carrousel_album, story, igtv, reels",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683548306701,
        "lastModifiedTime": 1683548306701,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "List of Filter Sets",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "count": 0,
                    "page": 0,
                    "page_size": 0,
                    "posts": [
                        {
                            "account": {
                                "id": "string",
                                "name": "string",
                                "source": "string",
                                "username": "string"
                            },
                            "content": "string",
                            "created_at": "string",
                            "media_url": "string",
                            "metrics": {
                                "comments_count": 0,
                                "engagement": 0,
                                "engagement_rate": 0,
                                "followers_count_engagement_rate": 0,
                                "impressions": 0,
                                "like_count": 0,
                                "page_fans_engagement_rate": 0,
                                "post_clicks": 0,
                                "post_clicks_unique": 0,
                                "post_engaged_users": 0,
                                "post_impressions": 0,
                                "post_impressions_organic": 0,
                                "post_impressions_organic_unique": 0,
                                "post_impressions_paid": 0,
                                "post_impressions_paid_unique": 0,
                                "post_impressions_unique": 0,
                                "post_reactions_anger_total": 0,
                                "post_reactions_haha_total": 0,
                                "post_reactions_like_total": 0,
                                "post_reactions_love_total": 0,
                                "post_reactions_sorry_total": 0,
                                "post_reactions_wow_total": 0,
                                "post_video_avg_time_watched": 0,
                                "post_video_view_time": 0,
                                "post_video_views": 0,
                                "post_video_views_organic": 0,
                                "post_video_views_paid": 0,
                                "reach": 0,
                                "reactions_count": 0,
                                "saved": 0,
                                "shares_count": 0,
                                "video_views": 0
                            },
                            "post_id": "string",
                            "post_type": "string",
                            "url": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91977,
        "executor_type": "THIRDPARTY",
        "executor_name": "getlistofallyourrecurringexports",
        "executor_version": "v3",
        "executor_display_name": "Get a list of all your recurring exports",
        "executor_description": "Get a list of all your recurring exports",
        "executor_category": "RecurringExports",
        "executor_category_group": "RecurringExports",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b/v3\u200b/exports\u200b/recurring",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "Company which owns the given search_id. If not specified your default company is used.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683542699206,
        "lastModifiedTime": 1683542699206,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "VALIDATION",
                            "title": "Invalid data",
                            "details": "Invalid JSON payload"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "AUTH",
                            "title": "Unauthorized",
                            "details": "Invalid or expired authorization header"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Permission Denied",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "ENTITLEMENT",
                            "title": "Entitlement missing",
                            "details": "You are missing required entitlements, in order to access given content: [\"news\", \"social\"]. Please contact your sales representative to add the necessary entitlement to your Meltwater account."
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "EXPORT",
                            "title": "Unknown resource",
                            "details": "The resource id you provided (1234) is unknown"
                        }
                    ]
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "VALIDATION",
                            "title": "Validation error for field: window_size",
                            "details": "is not a valid integer"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "INTERNAL",
                            "title": "Internal Server error",
                            "details": "Something went wrong behind the scenes..."
                        }
                    ]
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Service Unavailable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "SEARCH",
                            "title": "Service unavailable",
                            "details": "Temporarily unable to handle the request, try again later"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recurring_exports": [
                        {
                            "window_weekday": 1,
                            "window_time_unit": "DAY",
                            "window_time": "00:00:00",
                            "window_size": 1,
                            "window_monthday": 1,
                            "updated_at": "string",
                            "timezone": "Etc/UTC",
                            "tags": [
                                {
                                    "name": "My Custom Tag"
                                }
                            ],
                            "status_reason": "string",
                            "status": "PENDING",
                            "searches": [
                                {
                                    "name": "Elections",
                                    "id": 123
                                }
                            ],
                            "next_run_date": "string",
                            "inserted_at": "string",
                            "id": 0,
                            "data_url": "string",
                            "company_name": "string",
                            "format": "JSON"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91992,
        "executor_type": "THIRDPARTY",
        "executor_name": "removesanexistingrecurringexport",
        "executor_version": "v3",
        "executor_display_name": "Removes an existing recurring export",
        "executor_description": "Removes an existing recurring export",
        "executor_category": "RecurringExports",
        "executor_category_group": "RecurringExports",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.meltwater.com\u200b/v3\u200b/exports\u200b/recurring\u200b/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "Export id  Example : 123"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683544872660,
        "lastModifiedTime": 1683544872660,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "VALIDATION",
                            "title": "Invalid data",
                            "details": "Invalid JSON payload"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "AUTH",
                            "title": "Unauthorized",
                            "details": "Invalid or expired authorization header"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Permission Denied",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "ENTITLEMENT",
                            "title": "Entitlement missing",
                            "details": "You are missing required entitlements, in order to access given content: [\"news\", \"social\"]. Please contact your sales representative to add the necessary entitlement to your Meltwater account."
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "EXPORT",
                            "title": "Unknown resource",
                            "details": "The resource id you provided (1234) is unknown"
                        }
                    ]
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "VALIDATION",
                            "title": "Validation error for field: window_size",
                            "details": "is not a valid integer"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "INTERNAL",
                            "title": "Internal Server error",
                            "details": "Something went wrong behind the scenes..."
                        }
                    ]
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Service Unavailable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "SEARCH",
                            "title": "Service unavailable",
                            "details": "Temporarily unable to handle the request, try again later"
                        }
                    ]
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91973,
        "executor_type": "THIRDPARTY",
        "executor_name": "createsanewrecurringexport",
        "executor_version": "v3",
        "executor_display_name": "Creates a new recurring export",
        "executor_description": "Creates a new recurring export",
        "executor_category": "RecurringExports",
        "executor_category_group": "RecurringExports",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.meltwater.com\u200b\u200b\u200b/v3\u200b/exports\u200b/recurring",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "Company which owns the given search_id. If not specified your default company is used.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "recurring_export": {
                    "window_time_unit": "DAY",
                    "window_time": "00:00:00",
                    "window_size": 1,
                    "timezone": "Etc/UTC",
                    "tags": [
                        "tag"
                    ],
                    "search_ids": [
                        123
                    ],
                    "format": "JSON"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683542138020,
        "lastModifiedTime": 1683542138020,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "VALIDATION",
                            "title": "Invalid data",
                            "details": "Invalid JSON payload"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "AUTH",
                            "title": "Unauthorized",
                            "details": "Invalid or expired authorization header"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Permission Denied",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "ENTITLEMENT",
                            "title": "Entitlement missing",
                            "details": "You are missing required entitlements, in order to access given content: [\"news\", \"social\"]. Please contact your sales representative to add the necessary entitlement to your Meltwater account."
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "EXPORT",
                            "title": "Unknown resource",
                            "details": "The resource id you provided (1234) is unknown"
                        }
                    ]
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "VALIDATION",
                            "title": "Validation error for field: window_size",
                            "details": "is not a valid integer"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "INTERNAL",
                            "title": "Internal Server error",
                            "details": "Something went wrong behind the scenes..."
                        }
                    ]
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Service Unavailable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "SEARCH",
                            "title": "Service unavailable",
                            "details": "Temporarily unable to handle the request, try again later"
                        }
                    ]
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recurring_export": {
                        "window_weekday": 1,
                        "window_time_unit": "DAY",
                        "window_time": "00:00:00",
                        "window_size": 1,
                        "window_monthday": 1,
                        "updated_at": "string",
                        "timezone": "Etc/UTC",
                        "tags": [
                            {
                                "name": "My Custom Tag"
                            }
                        ],
                        "status_reason": "string",
                        "status": "PENDING",
                        "searches": [
                            {
                                "name": "Elections",
                                "id": 123
                            }
                        ],
                        "next_run_date": "string",
                        "inserted_at": "string",
                        "id": 0,
                        "data_url": "string",
                        "company_name": "string",
                        "format": "JSON"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91979,
        "executor_type": "THIRDPARTY",
        "executor_name": "getdetailsofarecurringexport",
        "executor_version": "v3",
        "executor_display_name": "Get details of a recurring export",
        "executor_description": "Get details of a recurring export",
        "executor_category": "RecurringExports",
        "executor_category_group": "RecurringExports",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b/v3\u200b/exports\u200b/recurring\u200b/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "Export id  Example : 123"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683542922588,
        "lastModifiedTime": 1683542922588,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "VALIDATION",
                            "title": "Invalid data",
                            "details": "Invalid JSON payload"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "AUTH",
                            "title": "Unauthorized",
                            "details": "Invalid or expired authorization header"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Permission Denied",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "ENTITLEMENT",
                            "title": "Entitlement missing",
                            "details": "You are missing required entitlements, in order to access given content: [\"news\", \"social\"]. Please contact your sales representative to add the necessary entitlement to your Meltwater account."
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "EXPORT",
                            "title": "Unknown resource",
                            "details": "The resource id you provided (1234) is unknown"
                        }
                    ]
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unprocessable Entity",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "VALIDATION",
                            "title": "Validation error for field: window_size",
                            "details": "is not a valid integer"
                        }
                    ]
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "INTERNAL",
                            "title": "Internal Server error",
                            "details": "Something went wrong behind the scenes..."
                        }
                    ]
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Service Unavailable",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "SEARCH",
                            "title": "Service unavailable",
                            "details": "Temporarily unable to handle the request, try again later"
                        }
                    ]
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recurring_export": {
                        "window_weekday": 1,
                        "window_time_unit": "DAY",
                        "window_time": "00:00:00",
                        "window_size": 1,
                        "window_monthday": 1,
                        "updated_at": "string",
                        "timezone": "Etc/UTC",
                        "tags": [
                            {
                                "name": "My Custom Tag"
                            }
                        ],
                        "status_reason": "string",
                        "status": "PENDING",
                        "searches": [
                            {
                                "name": "Elections",
                                "id": 123
                            }
                        ],
                        "next_run_date": "string",
                        "inserted_at": "string",
                        "id": 0,
                        "data_url": "string",
                        "company_name": "string",
                        "format": "JSON"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92001,
        "executor_type": "THIRDPARTY",
        "executor_name": "getanindividualsearch",
        "executor_version": "v3",
        "executor_display_name": "Get an individual search",
        "executor_description": "Get an individual search",
        "executor_category": "Searches",
        "executor_category_group": "Searches",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b\u200b/v3\u200b/searches\u200b/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "Search id  Example : 1234"
            }
        ],
        "queryParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "Company which owns the given search. If not specified your default company is used.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683545656246,
        "lastModifiedTime": 1683545656246,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 409,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "A single Search",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "search": {
                        "updated": "2020-08-23T08:25:56Z",
                        "id": 1024,
                        "name": "Electric Cars",
                        "query": {
                            "filter_set": null,
                            "case_sensitivity": "no",
                            "boolean": "Tesla OR (Volvo NEAR electric)",
                            "type": "boolean"
                        }
                    }
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91994,
        "executor_type": "THIRDPARTY",
        "executor_name": "getalistofallyoursearches",
        "executor_version": "v3",
        "executor_display_name": "Get a list of all your searches",
        "executor_description": "Get a list of all your searches",
        "executor_category": "Searches",
        "executor_category_group": "Searches",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b/v3\u200b/searches",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "Company which owns the given search. If not specified your default company is used.",
                "req": false
            },
            {
                "key": "include_query",
                "value": "",
                "description": "Include query object in searches, default \"false\"",
                "req": false
            },
            {
                "key": "query_type",
                "value": "",
                "description": "Only return searches of the specified query type, if omitted searches of all query types will be returned  Available values : boolean, keyword, combined",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683545179738,
        "lastModifiedTime": 1683545179738,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "List of Searches",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "searches": [
                        {
                            "updated": "2020-08-23T08:25:56Z",
                            "id": 1025,
                            "name": "Electric Cars"
                        },
                        {
                            "updated": "2020-08-23T08:25:56Z",
                            "id": 1027,
                            "name": "Pokemon"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92004,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteanindividualsearch",
        "executor_version": "v3",
        "executor_display_name": "Delete an individual search",
        "executor_description": "Delete an individual search",
        "executor_category": "Searches",
        "executor_category_group": "Searches",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.meltwater.com\u200b\u200b/v3\u200b/searches\u200b/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "Search id  Example : 1234"
            }
        ],
        "queryParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "Company which owns the given search. If not specified your default company is used.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683545883741,
        "lastModifiedTime": 1683545883741,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 409,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92002,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateanindividualsearch",
        "executor_version": "v3",
        "executor_display_name": "Update an individual search",
        "executor_description": "Update an individual search",
        "executor_category": "Searches",
        "executor_category_group": "Searches",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.meltwater.com\u200b\u200b/v3\u200b/searches\u200b/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "Search id  Example : 1234"
            }
        ],
        "queryParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "Company which owns the given search. If not specified your default company is used.",
                "req": false
            },
            {
                "key": "dry_run",
                "value": "",
                "description": "If set to \"true\" only performs validation of the search, does not create the resource on success. Default \"false\".",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "search": {
                    "name": "Keyword Search",
                    "query": {
                        "filter_set": null,
                        "case_sensitivity": "no",
                        "not_keywords": [
                            "Tesla"
                        ],
                        "any_keywords": [
                            "Twitter"
                        ],
                        "all_keywords": [
                            "Musk"
                        ],
                        "type": "keyword"
                    }
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683545785601,
        "lastModifiedTime": 1683545785601,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 409,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "A single Search",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "search": {
                        "updated": "2020-08-23T08:25:56Z",
                        "id": 1025,
                        "name": "Electric Cars",
                        "query": {
                            "filter_set": null,
                            "case_sensitivity": "no",
                            "boolean": "cars AND electric"
                        }
                    }
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92007,
        "executor_type": "THIRDPARTY",
        "executor_name": "getsearchoveraparticularperiod",
        "executor_version": "v3",
        "executor_display_name": "Get an approximate count of results for the search over a particular period",
        "executor_description": "Get an approximate count of results for the search over a particular period",
        "executor_category": "Searches",
        "executor_category_group": "Searches",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b\u200b\u200b/v3\u200b/searches\u200b/{id}\u200b/count",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "Search id  Example : 1234"
            }
        ],
        "queryParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "Company which owns the given search. If not specified your default company is used.",
                "req": false
            },
            {
                "key": "start_date",
                "value": "",
                "description": "The start date of the search to count result for. Default: two weeks ago in ISO8601 format.",
                "req": false
            },
            {
                "key": "end_date",
                "value": "",
                "description": "The end date of the search to count result for. Default: now in ISO8601 format.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683546063595,
        "lastModifiedTime": 1683546063595,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 409,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "Search Count",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "count": {
                        "total": 901382
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91998,
        "executor_type": "THIRDPARTY",
        "executor_name": "createasearch",
        "executor_version": "v3",
        "executor_display_name": "Create a search",
        "executor_description": "Create a search",
        "executor_category": "Searches",
        "executor_category_group": "Searches",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.meltwater.com\u200b/v3\u200b/searches",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "Company which owns the given search. If not specified your default company is used.",
                "req": false
            },
            {
                "key": "dry_run",
                "value": "",
                "description": "If set to \"true\" only performs validation of the search name and filter sets, does not create the resource on success. Default \"false\".",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "search": {
                    "name": "Boolean Search",
                    "query": {
                        "filter_set": {
                            "id": 123,
                            "type": "saved"
                        },
                        "case_sensitivity": "yes",
                        "boolean": "Tesla OR (Volvo NEAR electric)",
                        "type": "boolean"
                    }
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683545420830,
        "lastModifiedTime": 1683545420830,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 409,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "A single Search",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "search": {
                        "updated": "2020-08-23T08:25:56Z",
                        "id": 1025,
                        "name": "Electric Cars",
                        "query": {
                            "filter_set": null,
                            "case_sensitivity": "no",
                            "boolean": "cars AND electric"
                        }
                    }
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92009,
        "executor_type": "THIRDPARTY",
        "executor_name": "getalistofallyourcompanies",
        "executor_version": "v3",
        "executor_display_name": "Get a list of all your companies",
        "executor_description": "Get a list of all your companies",
        "executor_category": "Companies",
        "executor_category_group": "Companies",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b\u200b\u200b\u200b/v3\u200b/accounts\u200b/me\u200b/companies",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683546185648,
        "lastModifiedTime": 1683546185648,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 409,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 422,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "List of Companies",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "companies": [
                        {
                            "name": "Meltwater",
                            "id": "61d07a1eb6b501051b5af3d7"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92022,
        "executor_type": "THIRDPARTY",
        "executor_name": "getalistofallsearchfiltersets",
        "executor_version": "v3",
        "executor_display_name": "Get a list of all search filter sets",
        "executor_description": "Get a list of all search filter sets",
        "executor_category": "FilterSets",
        "executor_category_group": "FilterSets",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b\u200b/v3\u200b/filter_sets",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "company_id",
                "value": "",
                "description": "Company which owns the given filter sets. If not specified your default company is used.",
                "req": false
            },
            {
                "key": "include_quickpicks",
                "value": "",
                "description": "Include meltwater-provided QUICKPICK filter sets, default \"false\"",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683546960555,
        "lastModifiedTime": 1683546960555,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "List of Filter Sets",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "filter_sets": [
                        {
                            "id": 123,
                            "name": "English and from the UK",
                            "subtype": "custom",
                            "type": "saved"
                        },
                        {
                            "id": 456,
                            "name": "Well known french journalists",
                            "subtype": "quickpick",
                            "type": "saved"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 409,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errors": [
                        {
                            "type": "string",
                            "title": "string",
                            "details": "string"
                        }
                    ],
                    "type": "NotFound"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 92017,
        "executor_type": "THIRDPARTY",
        "executor_name": "getusageinformationonspecificmetric",
        "executor_version": "v3",
        "executor_display_name": "Get usage information on specific metric",
        "executor_description": "Get usage information on specific metric",
        "executor_category": "Usage",
        "executor_category_group": "Usage",
        "service_provider": "meltwater",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.meltwater.com\u200b\u200b\u200b\u200b\u200b\u200b/v3\u200b/usage\u200b/me\u200b/metrics\u200b/{metric}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "metric",
                "value": "",
                "description": "The metric type name, for the Streaming feature only document_count is available.  Available values : export_count, document_count"
            }
        ],
        "queryParams": [
            {
                "key": "feature",
                "value": "",
                "description": "The feature name of the statistics your want to query  Available values : exports, streaming",
                "req": false
            },
            {
                "key": "period",
                "value": "",
                "description": "The time period for this statistics query  Available values : 24hours, 7days, 30days, 12months  Default value : 24hours",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683546585193,
        "lastModifiedTime": 1683546585193,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Bad Request",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Invalid feature"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Unauthorized"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "We encountered an error fetching usage. Please try again."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": "OK",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "count": 0,
                    "metric": "export_count",
                    "period": "24hours",
                    "feature": "streaming",
                    "time_series": [
                        {
                            "count": 0,
                            "timestamp": "string"
                        }
                    ],
                    "units": "hour"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    }
]