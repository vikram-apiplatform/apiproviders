[
    {
        "id": 119266,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateametastore",
        "executor_version": "v2",
        "executor_display_name": "Update a metastore",
        "executor_description": "Updates information for a specific metastore. The caller must be a metastore admin.",
        "executor_category": "Metastores",
        "executor_category_group": "Metastores",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/metastores/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique ID of the metastore."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "storage_root_credential_id": "string",
                "delta_sharing_scope": "INTERNAL",
                "delta_sharing_recipient_token_lifetime_in_seconds": 0,
                "delta_sharing_organization_name": "string",
                "owner": "string",
                "privilege_model_version": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698742420254,
        "lastModifiedTime": 1698742420254,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The metastore was successfully updated.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "storage_root": "string",
                    "default_data_access_config_id": "string",
                    "storage_root_credential_id": "string",
                    "delta_sharing_scope": "INTERNAL",
                    "delta_sharing_recipient_token_lifetime_in_seconds": 0,
                    "delta_sharing_organization_name": "string",
                    "owner": "string",
                    "privilege_model_version": "string",
                    "region": "string",
                    "metastore_id": "string",
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string",
                    "storage_root_credential_name": "string",
                    "cloud": "string",
                    "global_metastore_id": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119282,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateanassignment",
        "executor_version": "v2",
        "executor_display_name": "Update an assignment",
        "executor_description": "Updates a metastore assignment. This operation can be used to update metastore_id or default_catalog_name for a specified Workspace, if the Workspace is already assigned a metastore. The caller must be an account admin to update metastore_id; otherwise, the caller can be a Workspace admin.",
        "executor_category": "Metastores",
        "executor_category_group": "Metastores",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/workspaces/{workspace_id}/metastore",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "workspace_id",
                "value": "",
                "description": "A workspace ID."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "metastore_id": "string",
                "default_catalog_name": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698743706670,
        "lastModifiedTime": 1698743706670,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The metastore assignment was successfully updated.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119284,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteanassignment",
        "executor_version": "v2",
        "executor_display_name": "Delete an assignment",
        "executor_description": "Deletes a metastore assignment. The caller must be an account administrator.",
        "executor_category": "Metastores",
        "executor_category_group": "Metastores",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/workspaces/{workspace_id}/metastore",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "workspace_id",
                "value": "",
                "description": "A workspace ID."
            }
        ],
        "queryParams": [
            {
                "key": "metastore_id",
                "value": "",
                "description": "Query for the ID of the metastore to delete.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698743849374,
        "lastModifiedTime": 1698743849374,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The metastore assignment was successfully deleted.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119271,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteametastore",
        "executor_version": "v2",
        "executor_display_name": "Delete a metastore",
        "executor_description": "Deletes a metastore. The caller must be a metastore admin.",
        "executor_category": "Metastores",
        "executor_category_group": "Metastores",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/metastores/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique ID of the metastore."
            }
        ],
        "queryParams": [
            {
                "key": "force",
                "value": "",
                "description": "Force deletion even if the metastore is not empty. Default is false.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698743051349,
        "lastModifiedTime": 1698743051349,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The metastore was successfully deleted.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119274,
        "executor_type": "THIRDPARTY",
        "executor_name": "getmetastoreassignmentforworkspace",
        "executor_version": "v2",
        "executor_display_name": "Get metastore assignment for workspace",
        "executor_description": "Gets the metastore assignment for the workspace being accessed.",
        "executor_category": "Metastores",
        "executor_category_group": "Metastores",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/current-metastore-assignment",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698743237162,
        "lastModifiedTime": 1698743237162,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The metastore assignment was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "metastore_id": "string",
                    "workspace_id": 0,
                    "default_catalog_name": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119256,
        "executor_type": "THIRDPARTY",
        "executor_name": "getametastoresummary",
        "executor_version": "v2",
        "executor_display_name": "Get a metastore summary",
        "executor_description": "Gets information about a metastore. This summary includes the storage credential, the cloud vendor, the cloud region, and the global metastore ID.",
        "executor_category": "Metastores",
        "executor_category_group": "Metastores",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/metastore_summary",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698740620954,
        "lastModifiedTime": 1698740620954,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The metastore summary was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "metastore_id": "string",
                    "name": "string",
                    "default_data_access_config_id": "string",
                    "storage_root_credential_id": "string",
                    "cloud": "string",
                    "region": "string",
                    "global_metastore_id": "string",
                    "storage_root_credential_name": "string",
                    "privilege_model_version": "string",
                    "delta_sharing_scope": "INTERNAL",
                    "delta_sharing_recipient_token_lifetime_in_seconds": 0,
                    "delta_sharing_organization_name": "string",
                    "storage_root": "string",
                    "owner": "string",
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119258,
        "executor_type": "THIRDPARTY",
        "executor_name": "listmetastores",
        "executor_version": "v2",
        "executor_display_name": "List metastores",
        "executor_description": "Gets an array of the available metastores (as MetastoreInfo objects). The caller must be an admin to retrieve this info. There is no guarantee of a specific ordering of the elements in the array.",
        "executor_category": "Metastores",
        "executor_category_group": "Metastores",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/metastores",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698741564521,
        "lastModifiedTime": 1698741564521,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The metastore list was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "metastores": [
                        {
                            "name": "string",
                            "storage_root": "string",
                            "default_data_access_config_id": "string",
                            "storage_root_credential_id": "string",
                            "delta_sharing_scope": "INTERNAL",
                            "delta_sharing_recipient_token_lifetime_in_seconds": 0,
                            "delta_sharing_organization_name": "string",
                            "owner": "string",
                            "privilege_model_version": "string",
                            "region": "string",
                            "metastore_id": "string",
                            "created_at": 0,
                            "created_by": "string",
                            "updated_at": 0,
                            "updated_by": "string",
                            "storage_root_credential_name": "string",
                            "cloud": "string",
                            "global_metastore_id": "string"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119278,
        "executor_type": "THIRDPARTY",
        "executor_name": "createanassignment",
        "executor_version": "v2",
        "executor_display_name": "Create an assignment",
        "executor_description": "Creates a new metastore assignment. If an assignment for the same workspace_id exists, it will be overwritten by the new metastore_id and default_catalog_name. The caller must be an account admin.",
        "executor_category": "Metastores",
        "executor_category_group": "Metastores",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/workspaces/{workspace_id}/metastore",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "workspace_id",
                "value": "",
                "description": "A workspace ID."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "metastore_id": "string",
                "default_catalog_name": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698743523120,
        "lastModifiedTime": 1698743523120,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The metastore was successfully assigned.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119263,
        "executor_type": "THIRDPARTY",
        "executor_name": "getametastore",
        "executor_version": "v2",
        "executor_display_name": "Get a metastore",
        "executor_description": "Gets a metastore that matches the supplied ID. The caller must be a metastore admin to retrieve this info.",
        "executor_category": "Metastores",
        "executor_category_group": "Metastores",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/metastores/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique ID of the metastore."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698742165746,
        "lastModifiedTime": 1698742165746,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The new metastore was successfully created.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "storage_root": "string",
                    "default_data_access_config_id": "string",
                    "storage_root_credential_id": "string",
                    "delta_sharing_scope": "INTERNAL",
                    "delta_sharing_recipient_token_lifetime_in_seconds": 0,
                    "delta_sharing_organization_name": "string",
                    "owner": "string",
                    "privilege_model_version": "string",
                    "region": "string",
                    "metastore_id": "string",
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string",
                    "storage_root_credential_name": "string",
                    "cloud": "string",
                    "global_metastore_id": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119260,
        "executor_type": "THIRDPARTY",
        "executor_name": "createametastore",
        "executor_version": "v2",
        "executor_display_name": "Create a metastore",
        "executor_description": "Creates a new metastore based on a provided name and storage root path.",
        "executor_category": "Metastores",
        "executor_category_group": "Metastores",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/metastores",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "storage_root": "string",
                "region": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698741953076,
        "lastModifiedTime": 1698741953076,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The new metastore was successfully created.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "storage_root": "string",
                    "default_data_access_config_id": "string",
                    "storage_root_credential_id": "string",
                    "delta_sharing_scope": "INTERNAL",
                    "delta_sharing_recipient_token_lifetime_in_seconds": 0,
                    "delta_sharing_organization_name": "string",
                    "owner": "string",
                    "privilege_model_version": "string",
                    "region": "string",
                    "metastore_id": "string",
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string",
                    "storage_root_credential_name": "string",
                    "cloud": "string",
                    "global_metastore_id": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119269,
        "executor_type": "THIRDPARTY",
        "executor_name": "addasecret",
        "executor_version": "v2",
        "executor_display_name": "Add a secret\u2002",
        "executor_description": "Inserts a secret under the provided scope with the given name. If a secret already exists with the same name, this command overwrites the existing secret's value. The server encrypts the secret using the secret scope's encryption settings before storing it.",
        "executor_category": "Secret",
        "executor_category_group": "Secret",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/secrets/put",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "scope": "string",
                "key": "string",
                "string_value": "string",
                "bytes_value": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698742939037,
        "lastModifiedTime": 1698743069703,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "secrets": [
                        {
                            "key": "string",
                            "last_updated_timestamp": 0
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "RESOURCE_DOES_NOT_EXIST\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST, RESOURCE_LIMIT_EXCEEDED, INVALID_PARAMETER_VALUE\t",
                "description": "BAD_REQUEST - Request is invalid. RESOURCE_LIMIT_EXCEEDED - Cluster request was rejected because it would exceed a resource limit. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119262,
        "executor_type": "THIRDPARTY",
        "executor_name": "getsecretACLdetails",
        "executor_version": "v2",
        "executor_display_name": "Get secret ACL details\u2002",
        "executor_description": "Gets the details about the given ACL, such as the group and permission. Users must have the MANAGE permission to invoke this API.",
        "executor_category": "Secret",
        "executor_category_group": "Secret",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/secrets/acls/get",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "scope",
                "value": "",
                "description": "The name of the scope to fetch secret information from.",
                "req": false
            },
            {
                "key": "principal",
                "value": "",
                "description": "The principal to fetch ACL information for.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698742082600,
        "lastModifiedTime": 1698742082600,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "principal": "string",
                    "permission": "READ"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "RESOURCE_DOES_NOT_EXIST\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119268,
        "executor_type": "THIRDPARTY",
        "executor_name": "listsecretkeys",
        "executor_version": "v2",
        "executor_display_name": "List secret keys\u2002",
        "executor_description": "Lists the secret keys that are stored at this scope. This is a metadata-only operation; secret data cannot be retrieved using this API. Users need the READ permission to make this call.",
        "executor_category": "Secret",
        "executor_category_group": "Secret",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/secrets/list",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "scope",
                "value": "",
                "description": "The name of the scope to list secrets within.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698742690966,
        "lastModifiedTime": 1698742690966,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "secrets": [
                        {
                            "key": "string",
                            "last_updated_timestamp": 0
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "RESOURCE_DOES_NOT_EXIST\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119261,
        "executor_type": "THIRDPARTY",
        "executor_name": "getasecret",
        "executor_version": "v2",
        "executor_display_name": "Get a secret\u2002",
        "executor_description": "Gets the bytes representation of a secret value for the specified scope and key.",
        "executor_category": "Secret",
        "executor_category_group": "Secret",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/secrets/get",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "scope",
                "value": "",
                "description": "The name of the scope to fetch secret information from.",
                "req": false
            },
            {
                "key": "key",
                "value": "",
                "description": "The key to fetch secret for.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698741983622,
        "lastModifiedTime": 1698742141163,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "key": "string",
                    "value": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "RESOURCE_DOES_NOT_EXIST\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119259,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteanACL",
        "executor_version": "v2",
        "executor_display_name": "Delete an ACL\u2002",
        "executor_description": "Deletes the given ACL on the given scope.",
        "executor_category": "Secret",
        "executor_category_group": "Secret",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/secrets/acls/delete",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "scope": "string",
                "principal": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698741865101,
        "lastModifiedTime": 1698741865101,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "RESOURCE_DOES_NOT_EXIST\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119264,
        "executor_type": "THIRDPARTY",
        "executor_name": "listsACLs",
        "executor_version": "v2",
        "executor_display_name": "Lists ACLs\u2002",
        "executor_description": "List the ACLs for a given secret scope. Users must have the MANAGE permission to invoke this API.",
        "executor_category": "Secret",
        "executor_category_group": "Secret",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/secrets/acls/list",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "scope",
                "value": "",
                "description": "The name of the scope to fetch secret information from.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698742200149,
        "lastModifiedTime": 1698742200149,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "items": [
                        {
                            "principal": "string",
                            "permission": "READ"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "RESOURCE_DOES_NOT_EXIST\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119265,
        "executor_type": "THIRDPARTY",
        "executor_name": "createupdateanACL",
        "executor_version": "v2",
        "executor_display_name": "Create update an ACL",
        "executor_description": "Creates or overwrites the Access Control List (ACL) associated with the given principal (user or group) on the specified scope point.",
        "executor_category": "Secret",
        "executor_category_group": "Secret",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/secrets/acls/put",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "scope": "string",
                "principal": "string",
                "permission": "READ"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698742324677,
        "lastModifiedTime": 1698742324677,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "items": [
                        {
                            "principal": "string",
                            "permission": "READ"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "RESOURCE_DOES_NOT_EXIST\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "RESOURCE_ALREADY_EXISTS, INVALID_PARAMETER_VALUE\t",
                "description": "RESOURCE_ALREADY_EXISTS - Operation was performed on a resource that already exists. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119272,
        "executor_type": "THIRDPARTY",
        "executor_name": "createanewsecretscope",
        "executor_version": "v2",
        "executor_display_name": "Create a new secret scope\u2002",
        "executor_description": "The scope name must consist of alphanumeric characters, dashes, underscores, and periods, and may not exceed 128 characters. The maximum number of scopes in a workspace is 100.",
        "executor_category": "Secret",
        "executor_category_group": "Secret",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/secrets/scopes/create",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "scope": "string",
                "key": "string",
                "string_value": "string",
                "bytes_value": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698743113187,
        "lastModifiedTime": 1698743113187,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "secrets": [
                        {
                            "key": "string",
                            "last_updated_timestamp": 0
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST, RESOURCE_LIMIT_EXCEEDED, INVALID_PARAMETER_VALUE\t",
                "description": "BAD_REQUEST - Request is invalid. RESOURCE_LIMIT_EXCEEDED - Cluster request was rejected because it would exceed a resource limit. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119267,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaSecret",
        "executor_version": "v2",
        "executor_display_name": "Delete a secret",
        "executor_description": "Deletes the secret stored in this secret scope. You must have WRITE or MANAGE permission on the secret scope.",
        "executor_category": "Secret",
        "executor_category_group": "Secret",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/secrets/delete",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "scope": "string",
                "key": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698742464788,
        "lastModifiedTime": 1698742464788,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "items": [
                        {
                            "principal": "string",
                            "permission": "READ"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "RESOURCE_DOES_NOT_EXIST\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119273,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteasecretscope",
        "executor_version": "v2",
        "executor_display_name": "Delete a secret scope\u2002",
        "executor_description": "Deletes a secret scope.",
        "executor_category": "Secret",
        "executor_category_group": "Secret",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/secrets/scopes/delete",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "scope": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698743232064,
        "lastModifiedTime": 1698743232064,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "secrets": [
                        {
                            "key": "string",
                            "last_updated_timestamp": 0
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "RESOURCE_DOES_NOT_EXIST\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119286,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaworkspaceobject",
        "executor_version": "v2",
        "executor_display_name": "Delete a workspace object\u2002",
        "executor_description": "Deletes an object or a directory (and optionally recursively deletes all objects in the directory).",
        "executor_category": "Workspace",
        "executor_category_group": "Workspace",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/workspace/delete",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "path": "string",
                "recursive": "false"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698744028099,
        "lastModifiedTime": 1698744028099,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119287,
        "executor_type": "THIRDPARTY",
        "executor_name": "exportaworkspaceobject",
        "executor_version": "v2",
        "executor_display_name": "Export a workspace object\u2002",
        "executor_description": "Exports an object or the contents of an entire directory.",
        "executor_category": "Workspace",
        "executor_category_group": "Workspace",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/workspace/export",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "path",
                "value": "",
                "description": "The absolute path of the object or directory. Exporting a directory is only supported for the DBC and SOURCE format.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698744197267,
        "lastModifiedTime": 1698744197267,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "content": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119301,
        "executor_type": "THIRDPARTY",
        "executor_name": "listcontents",
        "executor_version": "v2",
        "executor_display_name": "List contents\u2002",
        "executor_description": "Lists the contents of a directory, or the object if it is not a directory. If the input path does not exist, this call returns an error RESOURCE_DOES_NOT_EXIST.",
        "executor_category": "Workspace",
        "executor_category_group": "Workspace",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/workspace/list",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "path",
                "value": "",
                "description": "The absolute path of the notebook or directory.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698746307165,
        "lastModifiedTime": 1698746307165,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "objects": [
                        {
                            "object_type": "NOTEBOOK",
                            "path": "string",
                            "language": "SCALA",
                            "created_at": 0,
                            "modified_at": 0,
                            "object_id": 0,
                            "size": 0
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119283,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateworkspaceobjectpermissions",
        "executor_version": "v2",
        "executor_display_name": "Update workspace object permissions\u2002",
        "executor_description": "Updates the permissions on a workspace object. Workspace objects can inherit permissions from their parent objects or root object.",
        "executor_category": "Workspace",
        "executor_category_group": "Workspace",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/{workspace_object_type}/{workspace_object_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "workspace_object_type",
                "value": "",
                "description": "The workspace object type for which to get or manage permissions."
            },
            {
                "key": "workspace_object_id",
                "value": "",
                "description": "The workspace object for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_MANAGE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698743770539,
        "lastModifiedTime": 1698743770539,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119285,
        "executor_type": "THIRDPARTY",
        "executor_name": "getworkspaceobjectpermissionlevels",
        "executor_version": "v2",
        "executor_display_name": "Get workspace object permission levels\u2002",
        "executor_description": "Gets the permission levels that a user can have on an object.",
        "executor_category": "Workspace",
        "executor_category_group": "Workspace",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/{workspace_object_type}/{workspace_object_id}/permissionLevels",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "workspace_object_type",
                "value": "",
                "description": "The workspace object type for which to get or manage permissions."
            },
            {
                "key": "workspace_object_id",
                "value": "",
                "description": "The workspace object for which to get or manage permissions."
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698743885896,
        "lastModifiedTime": 1698743885896,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "permission_levels": [
                        {
                            "permission_level": "CAN_MANAGE",
                            "description": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119277,
        "executor_type": "THIRDPARTY",
        "executor_name": "getworkspaceobjectpermissions",
        "executor_version": "v2",
        "executor_display_name": "Get workspace object permissions\u2002",
        "executor_description": "Gets the permissions of a workspace object. Workspace objects can inherit permissions from their parent objects or root object.",
        "executor_category": "Workspace",
        "executor_category_group": "Workspace",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/{workspace_object_type}/{workspace_object_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "workspace_object_type",
                "value": "",
                "description": "The workspace object type for which to get or manage permissions."
            },
            {
                "key": "workspace_object_id",
                "value": "",
                "description": "The workspace object for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698743481301,
        "lastModifiedTime": 1698743481301,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119288,
        "executor_type": "THIRDPARTY",
        "executor_name": "getstatus",
        "executor_version": "v2",
        "executor_display_name": "Get status\u2002",
        "executor_description": "Gets the status of an object or a directory. If path does not exist, this call returns an error RESOURCE_DOES_NOT_EXIST.",
        "executor_category": "Workspace",
        "executor_category_group": "Workspace",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/workspace/get-status",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "path",
                "value": "",
                "description": "The absolute path of the notebook or directory.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698744277741,
        "lastModifiedTime": 1698744277741,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_type": "NOTEBOOK",
                    "path": "string",
                    "language": "SCALA",
                    "created_at": 0,
                    "modified_at": 0,
                    "object_id": 0,
                    "size": 0
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119313,
        "executor_type": "THIRDPARTY",
        "executor_name": "createadirectory",
        "executor_version": "v2",
        "executor_display_name": "Create a directory",
        "executor_description": "Creates the specified directory (and necessary parent directories if they do not exist). If there is an object (not a directory) at any prefix of the input path, this call returns an error RESOURCE_ALREADY_EXISTS.",
        "executor_category": "Workspace",
        "executor_category_group": "Workspace",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/workspace/list",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "path": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698748776582,
        "lastModifiedTime": 1698748776582,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "objects": [
                        {
                            "object_type": "NOTEBOOK",
                            "path": "string",
                            "language": "SCALA",
                            "created_at": 0,
                            "modified_at": 0,
                            "object_id": 0,
                            "size": 0
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119280,
        "executor_type": "THIRDPARTY",
        "executor_name": "setworkspaceobjectpermissions",
        "executor_version": "v2",
        "executor_display_name": "Set workspace object permissions\u2002",
        "executor_description": "Sets permissions on a workspace object. Workspace objects can inherit permissions from their parent objects or root object.",
        "executor_category": "Workspace",
        "executor_category_group": "Workspace",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/{workspace_object_type}/{workspace_object_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "workspace_object_type",
                "value": "",
                "description": "The workspace object type for which to get or manage permissions."
            },
            {
                "key": "workspace_object_id",
                "value": "",
                "description": "The workspace object for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_MANAGE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698743631527,
        "lastModifiedTime": 1698743631527,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119290,
        "executor_type": "THIRDPARTY",
        "executor_name": "importaworkspaceobject",
        "executor_version": "v2",
        "executor_display_name": "Import a workspace object\u2002",
        "executor_description": "Imports a workspace object (for example, a notebook or file) or the contents of an entire directory. If path already exists and overwrite is set to false, this call returns an error RESOURCE_ALREADY_EXISTS. To import a directory, you can use either the DBC format or the SOURCE format with the language field unset. To import a single file as SOURCE, you must set the language field.",
        "executor_category": "Workspace",
        "executor_category_group": "Workspace",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/workspace/import",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "path": "string",
                "format": "SOURCE",
                "language": "SCALA",
                "content": "string",
                "overwrite": false
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698744406632,
        "lastModifiedTime": 1698746205815,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119242,
        "executor_type": "THIRDPARTY",
        "executor_name": "getrepopermissionlevels",
        "executor_version": "v2",
        "executor_display_name": "Get repo permission levels",
        "executor_description": "Gets the permission levels that a user can have on an object.",
        "executor_category": "Repos",
        "executor_category_group": "Repos",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/repos/{repo_id}/permissionLevels",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "repo_id",
                "value": "",
                "description": "The repo for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698734526517,
        "lastModifiedTime": 1698741192957,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "permission_levels": [
                        {
                            "permission_level": "CAN_MANAGE",
                            "description": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL SERVER ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE DISABLED RESOURCE DOES NOT EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD REQUEST INVALID PARAMETER VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119235,
        "executor_type": "THIRDPARTY",
        "executor_name": "getrepopermissions",
        "executor_version": "v2",
        "executor_display_name": "Get repo permissions",
        "executor_description": "Gets the permissions of a repo. Repos can inherit permissions from their root object.",
        "executor_category": "Repos",
        "executor_category_group": "Repos",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/repos/{repo_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "repo_id",
                "value": "",
                "description": "The repo for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698733839347,
        "lastModifiedTime": 1698741108128,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": []
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL SERVER ERROR",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE DISABLED RESOURCE DOES NOTE EXIST",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BADREQUEST",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION DENIED",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119244,
        "executor_type": "THIRDPARTY",
        "executor_name": "getrepos",
        "executor_version": "v2",
        "executor_display_name": "Get repos",
        "executor_description": "Returns repos that the calling user has Manage permissions on. Results are paginated with each page containing twenty repos.",
        "executor_category": "Repos",
        "executor_category_group": "Repos",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/repos",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "path_prefix",
                "value": "",
                "description": "Filters repos that have paths starting with the given path prefix.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698734792797,
        "lastModifiedTime": 1698741248506,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": "Repos were successfully returned.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "repos": [
                        {
                            "id": 5249608814509279,
                            "url": "https://github.com/jsmith/test",
                            "provider": "gitHub",
                            "path": "/Repos/Production/testrepo",
                            "branch": "main",
                            "head_commit_id": "7e0847ede61f07adede22e2bcce6050216489171",
                            "sparse_checkout": {
                                "patterns": [
                                    "string"
                                ]
                            }
                        }
                    ],
                    "next_page_token": "eyJyZXBvX3RyZWVub2RlX2lkIjo1MjQ5NjA4ODE0NTA5Mjc5fQ=="
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL SERVER ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "NOT FOUND",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119248,
        "executor_type": "THIRDPARTY",
        "executor_name": "getarepo",
        "executor_version": "v2",
        "executor_display_name": "Get a repo\u2002",
        "executor_description": "Returns the repo with the given repo ID.",
        "executor_category": "Repos",
        "executor_category_group": "Repos",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/repos/{repo_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "repo_id",
                "value": "",
                "description": "The ID for the corresponding repo to access."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698735495159,
        "lastModifiedTime": 1698741353064,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": "Repos were successfully returned",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": 5249608814509279,
                    "url": "https://github.com/jsmith/test",
                    "provider": "gitHub",
                    "path": "/Repos/Production/testrepo",
                    "branch": "main",
                    "head_commit_id": "7e0847ede61f07adede22e2bcce6050216489171",
                    "sparse_checkout": {
                        "patterns": [
                            "string"
                        ]
                    }
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL SERVER ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "NOT FOUND",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119252,
        "executor_type": "THIRDPARTY",
        "executor_name": "deletearepo",
        "executor_version": "v2",
        "executor_display_name": "Delete a repo\u2002",
        "executor_description": "Deletes the specified repo.",
        "executor_category": "Repos",
        "executor_category_group": "Repos",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/repos/{repo_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "repo_id",
                "value": "",
                "description": "The ID for the corresponding repo to access."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698735838110,
        "lastModifiedTime": 1698741434089,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": "Repos were successfully deleted",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": 5249608814509279,
                    "url": "https://github.com/jsmith/test",
                    "provider": "gitHub",
                    "path": "/Repos/Production/testrepo",
                    "branch": "main",
                    "head_commit_id": "7e0847ede61f07adede22e2bcce6050216489171",
                    "sparse_checkout": {
                        "patterns": [
                            "string"
                        ]
                    }
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL SERVER ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "NOT FOUND",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119238,
        "executor_type": "THIRDPARTY",
        "executor_name": "setrepopermissions",
        "executor_version": "v2",
        "executor_display_name": "Set repo permissions\u2002",
        "executor_description": "Sets permissions on a repo. Repos can inherit permissions from their root object.",
        "executor_category": "Repos",
        "executor_category_group": "Repos",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/repos/{repo_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "repo_id",
                "value": "",
                "description": "The repo for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_MANAGE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698734250778,
        "lastModifiedTime": 1698741128633,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": []
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL SERVER ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE DISABLED RESOURCE DOES NOT EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD REQUEST INVALID PARAMETER VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119247,
        "executor_type": "THIRDPARTY",
        "executor_name": "createarepo",
        "executor_version": "v2",
        "executor_display_name": "Create a repo",
        "executor_description": "Creates a repo in the workspace and links it to the remote Git repo specified. Note that repos created programmatically must be linked to a remote Git repo, unlike repos created in the browser.",
        "executor_category": "Repos",
        "executor_category_group": "Repos",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/repos",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "url": "https://github.com/jsmith/test",
                "provider": "gitHub",
                "path": "/Repos/Production/testrepo",
                "sparse_checkout": {
                    "patterns": [
                        "string"
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698734952255,
        "lastModifiedTime": 1698741310697,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": "Repos were successfully created",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "repos": [
                        {
                            "id": 5249608814509279,
                            "url": "https://github.com/jsmith/test",
                            "provider": "gitHub",
                            "path": "/Repos/Production/testrepo",
                            "branch": "main",
                            "head_commit_id": "7e0847ede61f07adede22e2bcce6050216489171",
                            "sparse_checkout": {
                                "patterns": [
                                    "string"
                                ]
                            }
                        }
                    ],
                    "next_page_token": "eyJyZXBvX3RyZWVub2RlX2lkIjo1MjQ5NjA4ODE0NTA5Mjc5fQ=="
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL SERVER ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "NOT FOUND",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD REQUEST",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119250,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatearepo",
        "executor_version": "v2",
        "executor_display_name": "Update a repo",
        "executor_description": "Updates the repo to a different branch or tag, or updates the repo to the latest commit on the same branch.",
        "executor_category": "Repos",
        "executor_category_group": "Repos",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/repos/{repo_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "repo_id",
                "value": "",
                "description": "The ID for the corresponding repo to access."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "branch": "main",
                "tag": "v1.0",
                "sparse_checkout": {
                    "patterns": [
                        "string"
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698735656354,
        "lastModifiedTime": 1698741372022,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": "Repos were successfully updated",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": 5249608814509279,
                    "url": "https://github.com/jsmith/test",
                    "provider": "gitHub",
                    "path": "/Repos/Production/testrepo",
                    "branch": "main",
                    "head_commit_id": "7e0847ede61f07adede22e2bcce6050216489171",
                    "sparse_checkout": {
                        "patterns": [
                            "string"
                        ]
                    }
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL SERVER ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "NOT FOUND",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": "BAD REQUEST",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119257,
        "executor_type": "THIRDPARTY",
        "executor_name": "listGroupDetails",
        "executor_version": "v2",
        "executor_display_name": "List group details",
        "executor_description": "Gets all details of the groups associated with the Databricks workspace.",
        "executor_category": "Groups",
        "executor_category_group": "Groups",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/scim/v2/Groups",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "filter",
                "value": "",
                "description": " filter string Examples: filter=displayName eq admins - Groups whose displayName equals admins. filter=displayName sw bar - Groups whose displayName starts with bar. filter=displayName co foo or displayName co bar - Group whose displayName contains foo or displayName contains bar. filter=displayName ne baz - Groups whose displayName not equals baz. filter=displayName co foo - Groups whose displayName contains foo. filter=displayName co foo and displayName co bar - Group whose displayName contains foo and displayName contains bar. Query by which the results have to be filtered. Supported operators are equals(eq), contains(co), starts with(sw) and not equals(ne). Additionally, simple expressions can be formed using logical operators - and and or. The SCIM RFC has more details but we currently only support simple expressions.",
                "req": false
            },
            {
                "key": "attributes",
                "value": "",
                "description": "Comma-separated list of attributes to return in response.",
                "req": false
            },
            {
                "key": "excludedAttributes",
                "value": "",
                "description": "Comma-separated list of attributes to exclude in response.",
                "req": false
            },
            {
                "key": "startIndex",
                "value": "",
                "description": "Specifies the index of the first result. First item is number 1.",
                "req": false
            },
            {
                "key": "count",
                "value": "",
                "description": "Desired number of results per page.",
                "req": false
            },
            {
                "key": "sortBy",
                "value": "",
                "description": "Attribute to sort the results.",
                "req": false
            },
            {
                "key": "sortOrder",
                "value": "",
                "description": "Enum: \"ascending\" \"descending\" The order to sort the results.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698741540753,
        "lastModifiedTime": 1698741540753,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "List groups operation was succesful.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "schemas": [
                        ""
                    ],
                    "totalResults": 0,
                    "startIndex": 1,
                    "itemsPerPage": 0,
                    "Resources": [
                        {
                            "schemas": [
                                ""
                            ],
                            "id": "string",
                            "displayName": "string",
                            "members": [
                                {
                                    "ref": "string",
                                    "value": "string",
                                    "display": "string",
                                    "primary": true,
                                    "type": "string"
                                }
                            ],
                            "groups": [
                                {
                                    "ref": "string",
                                    "value": "string",
                                    "display": "string",
                                    "primary": true,
                                    "type": "string"
                                }
                            ],
                            "roles": [
                                {
                                    "ref": "string",
                                    "value": "string",
                                    "display": "string",
                                    "primary": true,
                                    "type": "string"
                                }
                            ],
                            "entitlements": [
                                {
                                    "ref": "string",
                                    "value": "string",
                                    "display": "string",
                                    "primary": true,
                                    "type": "string"
                                }
                            ],
                            "externalId": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119270,
        "executor_type": "THIRDPARTY",
        "executor_name": "createNewGroup",
        "executor_version": "v2",
        "executor_display_name": "Create a new group",
        "executor_description": "Creates a group in the Databricks workspace with a unique name, using the supplied group details.  Properties of the new group.",
        "executor_category": "Groups",
        "executor_category_group": "Groups",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/scim/v2/Groups",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "schemas": [
                    "urn:ietf:params:scim:schemas:core:2.0:Group"
                ],
                "id": "string",
                "displayName": "string",
                "members": [
                    {
                        "ref": "string",
                        "value": "string",
                        "display": "string",
                        "primary": true,
                        "type": "string"
                    }
                ],
                "groups": [
                    {
                        "ref": "string",
                        "value": "string",
                        "display": "string",
                        "primary": true,
                        "type": "string"
                    }
                ],
                "roles": [
                    {
                        "ref": "string",
                        "value": "string",
                        "display": "string",
                        "primary": true,
                        "type": "string"
                    }
                ],
                "entitlements": [
                    {
                        "ref": "string",
                        "value": "string",
                        "display": "string",
                        "primary": true,
                        "type": "string"
                    }
                ],
                "externalId": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698743024454,
        "lastModifiedTime": 1698743295492,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The group creation request succeeded.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "schemas": [
                        "urn:ietf:params:scim:schemas:core:2.0:Group"
                    ],
                    "id": "string",
                    "displayName": "string",
                    "members": [
                        {
                            "ref": "string",
                            "value": "string",
                            "display": "string",
                            "primary": true,
                            "type": "string"
                        }
                    ],
                    "groups": [
                        {
                            "ref": "string",
                            "value": "string",
                            "display": "string",
                            "primary": true,
                            "type": "string"
                        }
                    ],
                    "roles": [
                        {
                            "ref": "string",
                            "value": "string",
                            "display": "string",
                            "primary": true,
                            "type": "string"
                        }
                    ],
                    "entitlements": [
                        {
                            "ref": "string",
                            "value": "string",
                            "display": "string",
                            "primary": true,
                            "type": "string"
                        }
                    ],
                    "externalId": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119275,
        "executor_type": "THIRDPARTY",
        "executor_name": "getGroupDetails",
        "executor_version": "v2",
        "executor_display_name": "Get group details",
        "executor_description": "Gets the information for a specific group in the Databricks workspace.",
        "executor_category": "Groups",
        "executor_category_group": "Groups",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/scim/v2/Groups/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique ID for a group in the Databricks workspace."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698743342912,
        "lastModifiedTime": 1698743342912,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "schemas": [
                        "urn:ietf:params:scim:schemas:core:2.0:Group"
                    ],
                    "id": "string",
                    "displayName": "string",
                    "members": [
                        {
                            "ref": "string",
                            "value": "string",
                            "display": "string",
                            "primary": true,
                            "type": "string"
                        }
                    ],
                    "groups": [
                        {
                            "ref": "string",
                            "value": "string",
                            "display": "string",
                            "primary": true,
                            "type": "string"
                        }
                    ],
                    "roles": [
                        {
                            "ref": "string",
                            "value": "string",
                            "display": "string",
                            "primary": true,
                            "type": "string"
                        }
                    ],
                    "entitlements": [
                        {
                            "ref": "string",
                            "value": "string",
                            "display": "string",
                            "primary": true,
                            "type": "string"
                        }
                    ],
                    "externalId": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119279,
        "executor_type": "THIRDPARTY",
        "executor_name": "replaceGroup",
        "executor_version": "v2",
        "executor_display_name": "Replace a group",
        "executor_description": "Updates the details of a group by replacing the entire group entity.",
        "executor_category": "Groups",
        "executor_category_group": "Groups",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/scim/v2/Groups/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique ID for a group in the Databricks workspace."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "schemas": [
                    "urn:ietf:params:scim:schemas:core:2.0:Group"
                ],
                "id": "string",
                "displayName": "string",
                "members": [
                    {
                        "ref": "string",
                        "value": "string",
                        "display": "string",
                        "primary": true,
                        "type": "string"
                    }
                ],
                "groups": [
                    {
                        "ref": "string",
                        "value": "string",
                        "display": "string",
                        "primary": true,
                        "type": "string"
                    }
                ],
                "roles": [
                    {
                        "ref": "string",
                        "value": "string",
                        "display": "string",
                        "primary": true,
                        "type": "string"
                    }
                ],
                "entitlements": [
                    {
                        "ref": "string",
                        "value": "string",
                        "display": "string",
                        "primary": true,
                        "type": "string"
                    }
                ],
                "externalId": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698743539244,
        "lastModifiedTime": 1698743539244,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Group information was updated successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119281,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateGroupDetails",
        "executor_version": "v2",
        "executor_display_name": "Update group details",
        "executor_description": "Partially updates the details of a group.",
        "executor_category": "Groups",
        "executor_category_group": "Groups",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/scim/v2/Groups/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique ID for a group in the Databricks workspace."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "schemas": [
                    "urn:ietf:params:scim:api:messages:2.0:PatchOp"
                ],
                "Operations": [
                    {
                        "op": "add",
                        "path": "string",
                        "value": {}
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698743682081,
        "lastModifiedTime": 1698744873348,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Group information was updated successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119291,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteGroup",
        "executor_version": "v2",
        "executor_display_name": "Delete a group",
        "executor_description": "Deletes a group from the Databricks workspace.",
        "executor_category": "Groups",
        "executor_category_group": "Groups",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/scim/v2/Groups/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique ID for a group in the Databricks workspace."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698744793838,
        "lastModifiedTime": 1698744793838,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "OK",
                "description": "Group was deleted successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119231,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateacredential",
        "executor_version": "v2",
        "executor_display_name": "Update a credential\u2002",
        "executor_description": "Updates the specified Git credential.",
        "executor_category": "GitCredentials",
        "executor_category_group": "GitCredentials",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/git-credentials/{credential_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "credential_id",
                "value": "",
                "description": "The ID for the corresponding credential to access."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "personal_access_token": "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",
                "git_username": "testuser",
                "git_provider": "gitHub"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698733262766,
        "lastModifiedTime": 1698733262766,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": "Git credentials were successfully updated",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "credential_id": 93488329053511,
                    "git_username": "testuser",
                    "git_provider": "gitHub"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL SERVER ERROR",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "NOT FOUND",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": "BAD REQUEST",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119232,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteacredential",
        "executor_version": "v2",
        "executor_display_name": "Delete a credential\u2002",
        "executor_description": "Deletes the specified Git credential.",
        "executor_category": "GitCredentials",
        "executor_category_group": "GitCredentials",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/git-credentials/{credential_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "credential_id",
                "value": "",
                "description": "The ID for the corresponding credential to access."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698733400329,
        "lastModifiedTime": 1698733400329,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": "Git credentials were successfully deleted",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "credential_id": 93488329053511,
                    "git_username": "testuser",
                    "git_provider": "gitHub"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL SERVER ERROR",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "NOT FOUND",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119225,
        "executor_type": "THIRDPARTY",
        "executor_name": "getGitcredentials",
        "executor_version": "v2",
        "executor_display_name": "Get Git credentials\u2002",
        "executor_description": "Lists the calling user's Git credentials. One credential per user is supported.",
        "executor_category": "GitCredentials",
        "executor_category_group": "GitCredentials",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/git-credentials",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698732599654,
        "lastModifiedTime": 1698732599655,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": "Git credentials were successfully returned.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "credentials": [
                        {
                            "credential_id": 93488329053511,
                            "git_username": "testuser",
                            "git_provider": "gitHub"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL SERVER ERROR",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119229,
        "executor_type": "THIRDPARTY",
        "executor_name": "getacredentialentry",
        "executor_version": "v2",
        "executor_display_name": "Get a credential entry",
        "executor_description": "Gets the Git credential with the specified credential ID.",
        "executor_category": "GitCredentials",
        "executor_category_group": "GitCredentials",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/git-credentials/{credential_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "credential_id",
                "value": "",
                "description": "The ID for the corresponding credential to access."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698733137804,
        "lastModifiedTime": 1698733137804,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": "Git credentials were successfully returned",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "credential_id": 93488329053511,
                    "git_username": "testuser",
                    "git_provider": "gitHub"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL SERVER ERROR",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "NOT FOUND",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119227,
        "executor_type": "THIRDPARTY",
        "executor_name": "createacredentialentry",
        "executor_version": "v2",
        "executor_display_name": "Create a credential entry",
        "executor_description": "Creates a Git credential entry for the user. Only one Git credential per user is supported, so any attempts to create credentials if an entry already exists will fail. Use the PATCH endpoint to update existing credentials, or the DELETE endpoint to delete existing credentials.",
        "executor_category": "GitCredentials",
        "executor_category_group": "GitCredentials",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/git-credentials",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "personal_access_token": "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",
                "git_username": "testuser",
                "git_provider": "gitHub"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698732883932,
        "lastModifiedTime": 1698732883932,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": "Git credentials were successfully configured",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "credential_id": 93488329053511,
                    "git_username": "testuser",
                    "git_provider": "gitHub"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL SERVER ERROR",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD REQUEST",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119295,
        "executor_type": "THIRDPARTY",
        "executor_name": "setObjectPermissions",
        "executor_version": "v2",
        "executor_display_name": "Set object permissions",
        "executor_description": "Sets permissions on an object. Objects can inherit permissions from their parent objects or root object.",
        "executor_category": "Permissions",
        "executor_category_group": "Permissions",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/{request_object_type}/{request_object_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "request_object_type",
                "value": "",
                "description": ""
            },
            {
                "key": "request_object_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_MANAGE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698745425766,
        "lastModifiedTime": 1698745425766,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119293,
        "executor_type": "THIRDPARTY",
        "executor_name": "getObjectPermissions",
        "executor_version": "v2",
        "executor_display_name": "Get object permissions",
        "executor_description": "Gets the permissions of an object. Objects can inherit permissions from their parent objects or root object.",
        "executor_category": "Permissions",
        "executor_category_group": "Permissions",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/{request_object_type}/{request_object_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "request_object_type",
                "value": "",
                "description": ""
            },
            {
                "key": "request_object_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698745085899,
        "lastModifiedTime": 1698745085899,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119296,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateObjectPermissions",
        "executor_version": "v2",
        "executor_display_name": "Update object permissions",
        "executor_description": "Updates the permissions on an object. Objects can inherit permissions from their parent objects or root object.",
        "executor_category": "Permissions",
        "executor_category_group": "Permissions",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/{request_object_type}/{request_object_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "request_object_type",
                "value": "",
                "description": ""
            },
            {
                "key": "request_object_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_MANAGE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698745528230,
        "lastModifiedTime": 1698745528230,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119298,
        "executor_type": "THIRDPARTY",
        "executor_name": "getObjectPermissionLevels",
        "executor_version": "v2",
        "executor_display_name": "Get object permission levels",
        "executor_description": "Gets the permission levels that a user can have on an object.",
        "executor_category": "Permissions",
        "executor_category_group": "Permissions",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/{request_object_type}/{request_object_id}/permissionLevels",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "request_object_type",
                "value": "",
                "description": ""
            },
            {
                "key": "request_object_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698745633324,
        "lastModifiedTime": 1698745633324,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "permission_levels": [
                        {
                            "permission_level": "CAN_MANAGE",
                            "description": "string"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119319,
        "executor_type": "THIRDPARTY",
        "executor_name": "createAnAlert",
        "executor_version": "v2",
        "executor_display_name": "Create an alert",
        "executor_description": "Creates an alert. An alert is a Databricks SQL object that periodically runs a query, evaluates a condition of its result, and notifies users or notification destinations if the condition was met.",
        "executor_category": "Alerts",
        "executor_category_group": "Alerts",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/sql/alerts",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "Total Trips > 300",
                "options": {
                    "column": "string",
                    "custom_body": "string",
                    "custom_subject": "string",
                    "muted": false,
                    "op": "string",
                    "value": {},
                    "empty_result_state": "unknown"
                },
                "query_id": "dee5cca8-1c79-4b5e-a711-e7f9d241bdf6",
                "rearm": 0,
                "parent": "folders/2025532471912059"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698749457163,
        "lastModifiedTime": 1698749457163,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "An alert was successfully created",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "created_at": "2019-08-24T14:15:22Z",
                    "id": "4e443c27-9f61-4f2e-a12d-ea5668460bf1",
                    "parent": "folders/2025532471912059",
                    "last_triggered_at": "2019-08-24T14:15:22Z",
                    "name": "Total Trips > 300",
                    "options": {
                        "column": "string",
                        "custom_body": "string",
                        "custom_subject": "string",
                        "muted": false,
                        "op": "string",
                        "value": {},
                        "empty_result_state": "unknown"
                    },
                    "query": {
                        "created_at": "2020-12-15T18:39:15.837Z",
                        "data_source_id": "0c205e24-5db2-4940-adb1-fb13c7ce960b",
                        "description": "Summarizes total order dollars for customers in the Europe/Asia region.",
                        "id": "dee5cca8-1c79-4b5e-a711-e7f9d241bdf6",
                        "is_archived": true,
                        "is_draft": true,
                        "is_safe": false,
                        "name": "Orders by month by customer",
                        "options": {
                            "moved_to_trash_at": "2019-08-24T14:15:22Z",
                            "parameters": [
                                {
                                    "title": "string",
                                    "name": "string",
                                    "type": "text",
                                    "value": {}
                                }
                            ]
                        },
                        "query": "SELECT field FROM table WHERE field = {{ param }}",
                        "updated_at": "2021-01-07T20:29:24.289Z",
                        "tags": [
                            "string"
                        ],
                        "user_id": 899619779028913
                    },
                    "rearm": 0,
                    "state": "unknown",
                    "updated_at": "2019-08-24T14:15:22Z",
                    "user": {
                        "id": 0,
                        "name": "string",
                        "email": "user@example.com"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119314,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAlerts",
        "executor_version": "v2",
        "executor_display_name": "Get alerts",
        "executor_description": "Gets a list of alerts.",
        "executor_category": "Alerts",
        "executor_category_group": "Alerts",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/sql/alerts",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698748959640,
        "lastModifiedTime": 1698748959640,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "List of alerts was successfully fetched.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "created_at": "2019-08-24T14:15:22Z",
                        "id": "4e443c27-9f61-4f2e-a12d-ea5668460bf1",
                        "parent": "folders/2025532471912059",
                        "last_triggered_at": "2019-08-24T14:15:22Z",
                        "name": "Total Trips > 300",
                        "options": {
                            "column": "string",
                            "custom_body": "string",
                            "custom_subject": "string",
                            "muted": false,
                            "op": "string",
                            "value": {},
                            "empty_result_state": "unknown"
                        },
                        "query": {
                            "created_at": "2020-12-15T18:39:15.837Z",
                            "data_source_id": "0c205e24-5db2-4940-adb1-fb13c7ce960b",
                            "description": "Summarizes total order dollars for customers in the Europe/Asia region.",
                            "id": "dee5cca8-1c79-4b5e-a711-e7f9d241bdf6",
                            "is_archived": true,
                            "is_draft": true,
                            "is_safe": false,
                            "name": "Orders by month by customer",
                            "options": {
                                "moved_to_trash_at": "2019-08-24T14:15:22Z",
                                "parameters": [
                                    {
                                        "title": "string",
                                        "name": "string",
                                        "type": "text",
                                        "value": {}
                                    }
                                ]
                            },
                            "query": "SELECT field FROM table WHERE field = {{ param }}",
                            "updated_at": "2021-01-07T20:29:24.289Z",
                            "tags": [
                                "string"
                            ],
                            "user_id": 899619779028913
                        },
                        "rearm": 0,
                        "state": "unknown",
                        "updated_at": "2019-08-24T14:15:22Z",
                        "user": {
                            "id": 0,
                            "name": "string",
                            "email": "user@example.com"
                        }
                    }
                ]
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119325,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateAnAlert",
        "executor_version": "v2",
        "executor_display_name": "Update an alert",
        "executor_description": "Updates an alert.",
        "executor_category": "Alerts",
        "executor_category_group": "Alerts",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/sql/alerts/{alert_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "alert_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "Total Trips > 300",
                "options": {
                    "column": "string",
                    "custom_body": "string",
                    "custom_subject": "string",
                    "muted": false,
                    "op": "string",
                    "value": {},
                    "empty_result_state": "unknown"
                },
                "query_id": "dee5cca8-1c79-4b5e-a711-e7f9d241bdf6",
                "rearm": 0
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698749857465,
        "lastModifiedTime": 1698749857465,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "Alert was successfully updated.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119321,
        "executor_type": "THIRDPARTY",
        "executor_name": "getanAlert",
        "executor_version": "v2",
        "executor_display_name": "Get an alert",
        "executor_description": "Gets an alert.",
        "executor_category": "Alerts",
        "executor_category_group": "Alerts",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/sql/alerts/{alert_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "alert_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698749554006,
        "lastModifiedTime": 1698749554006,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "Alert was successfully fetched.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "created_at": "2019-08-24T14:15:22Z",
                    "id": "4e443c27-9f61-4f2e-a12d-ea5668460bf1",
                    "parent": "folders/2025532471912059",
                    "last_triggered_at": "2019-08-24T14:15:22Z",
                    "name": "Total Trips > 300",
                    "options": {
                        "column": "string",
                        "custom_body": "string",
                        "custom_subject": "string",
                        "muted": false,
                        "op": "string",
                        "value": {},
                        "empty_result_state": "unknown"
                    },
                    "query": {
                        "created_at": "2020-12-15T18:39:15.837Z",
                        "data_source_id": "0c205e24-5db2-4940-adb1-fb13c7ce960b",
                        "description": "Summarizes total order dollars for customers in the Europe/Asia region.",
                        "id": "dee5cca8-1c79-4b5e-a711-e7f9d241bdf6",
                        "is_archived": true,
                        "is_draft": true,
                        "is_safe": false,
                        "name": "Orders by month by customer",
                        "options": {
                            "moved_to_trash_at": "2019-08-24T14:15:22Z",
                            "parameters": [
                                {
                                    "title": "string",
                                    "name": "string",
                                    "type": "text",
                                    "value": {}
                                }
                            ]
                        },
                        "query": "SELECT field FROM table WHERE field = {{ param }}",
                        "updated_at": "2021-01-07T20:29:24.289Z",
                        "tags": [
                            "string"
                        ],
                        "user_id": 899619779028913
                    },
                    "rearm": 0,
                    "state": "unknown",
                    "updated_at": "2019-08-24T14:15:22Z",
                    "user": {
                        "id": 0,
                        "name": "string",
                        "email": "user@example.com"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119326,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteAnAlert",
        "executor_version": "v2",
        "executor_display_name": "Delete an alert",
        "executor_description": "Deletes an alert. Deleted alerts are no longer accessible and cannot be restored. Note: Unlike queries and dashboards, alerts cannot be moved to the trash.",
        "executor_category": "Alerts",
        "executor_category_group": "Alerts",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/sql/alerts/{alert_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "alert_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698749940531,
        "lastModifiedTime": 1698749940531,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "Alert was successfully deleted.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119334,
        "executor_type": "THIRDPARTY",
        "executor_name": "changeclusterowner",
        "executor_version": "v2",
        "executor_display_name": "Change cluster owner\u2002",
        "executor_description": "Change the owner of the cluster. You must be an admin to perform this operation.",
        "executor_category": "Clusters",
        "executor_category_group": "Clusters",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/clusters/change-owner",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "cluster_id": "string",
                "owner_username": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698750586267,
        "lastModifiedTime": 1698750586268,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119372,
        "executor_type": "THIRDPARTY",
        "executor_name": "listavailabilityzones",
        "executor_version": "v2",
        "executor_display_name": "List availability zones\u2002",
        "executor_description": "Returns a list of availability zones where clusters can be created in (For example, us-west-2a). These zones can be used to launch a cluster.",
        "executor_category": "Clusters",
        "executor_category_group": "Clusters",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/clusters/list-zones",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698754776517,
        "lastModifiedTime": 1698754776517,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "zones": [
                        "string"
                    ],
                    "default_zone": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119379,
        "executor_type": "THIRDPARTY",
        "executor_name": "listavailableSparkversions",
        "executor_version": "v2",
        "executor_display_name": "List available Spark versions\u2002",
        "executor_description": "Returns the list of available Spark versions. These versions can be used to launch a cluster.",
        "executor_category": "Clusters",
        "executor_category_group": "Clusters",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/clusters/spark-versions",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698756023927,
        "lastModifiedTime": 1698756023927,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "versions": [
                        {
                            "key": "string",
                            "name": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119374,
        "executor_type": "THIRDPARTY",
        "executor_name": "pincluster",
        "executor_version": "v2",
        "executor_display_name": "Pin cluster\u2002",
        "executor_description": "Pinning a cluster ensures that the cluster will always be returned by the ListClusters API. Pinning a cluster that is already pinned will have no effect. This API can only be called by workspace admins.",
        "executor_category": "Clusters",
        "executor_category_group": "Clusters",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/clusters/permanent-delete",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "cluster_id": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698754961982,
        "lastModifiedTime": 1698754961982,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "zones": [
                        "string"
                    ],
                    "default_zone": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119383,
        "executor_type": "THIRDPARTY",
        "executor_name": "startterminatedcluster",
        "executor_version": "v2",
        "executor_display_name": "Start terminated cluster\u2002",
        "executor_description": "Starts a terminated Spark cluster with the supplied ID. This works similar to createCluster except:",
        "executor_category": "Clusters",
        "executor_category_group": "Clusters",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/clusters/start",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "cluster_id": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698758798663,
        "lastModifiedTime": 1698758798663,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119364,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateclusterconfiguration",
        "executor_version": "v2",
        "executor_display_name": "Update cluster configuration\u2002",
        "executor_description": "Updates the configuration of a cluster to match the provided attributes and size. A cluster can be updated if it is in a RUNNING or TERMINATED state.",
        "executor_category": "Clusters",
        "executor_category_group": "Clusters",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/clusters/edit",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "num_workers": 0,
                "autoscale": {
                    "min_workers": 0,
                    "max_workers": 0
                },
                "cluster_name": "string",
                "spark_version": "string",
                "spark_conf": {
                    "property1": "string",
                    "property2": "string"
                },
                "gcp_attributes": {
                    "google_service_account": "string",
                    "boot_disk_size": 0,
                    "availability": "PREEMPTIBLE_GCP",
                    "local_ssd_count": 0
                },
                "node_type_id": "string",
                "driver_node_type_id": "string",
                "ssh_public_keys": [
                    "string"
                ],
                "custom_tags": {
                    "property1": "string",
                    "property2": "string"
                },
                "cluster_log_conf": {
                    "dbfs": {
                        "destination": "string"
                    }
                },
                "init_scripts": [
                    {
                        "workspace": {
                            "destination": "string"
                        },
                        "volumes": {
                            "destination": "string"
                        },
                        "file": {
                            "destination": "string"
                        },
                        "dbfs": {
                            "destination": "string"
                        }
                    }
                ],
                "spark_env_vars": {
                    "property1": "string",
                    "property2": "string"
                },
                "autotermination_minutes": 0,
                "enable_elastic_disk": true,
                "cluster_source": "UI",
                "instance_pool_id": "string",
                "policy_id": "string",
                "enable_local_disk_encryption": true,
                "driver_instance_pool_id": "string",
                "workload_type": {
                    "clients": {
                        "notebooks": "true",
                        "jobs": "true"
                    }
                },
                "runtime_engine": "NULL",
                "docker_image": {
                    "url": "string",
                    "basic_auth": {
                        "username": "string",
                        "password": "string"
                    }
                },
                "data_security_mode": "NONE",
                "single_user_name": "string",
                "apply_policy_default_values": "false",
                "cluster_id": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698754222187,
        "lastModifiedTime": 1698754222187,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119331,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateclusterpermissions",
        "executor_version": "v2",
        "executor_display_name": "Update cluster permissions\u2002",
        "executor_description": "Updates the permissions on a cluster. Clusters can inherit permissions from their root object.",
        "executor_category": "Clusters",
        "executor_category_group": "Clusters",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/clusters/{cluster_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "cluster_id",
                "value": "",
                "description": "The cluster for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_MANAGE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698750321269,
        "lastModifiedTime": 1698750321269,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119369,
        "executor_type": "THIRDPARTY",
        "executor_name": "listallclusters",
        "executor_version": "v2",
        "executor_display_name": "List all clusters\u2002",
        "executor_description": "Return information about all pinned clusters, active clusters, up to 200 of the most recently terminated all-purpose clusters in the past 30 days, and up to 30 of the most recently terminated job clusters in the past 30 days.",
        "executor_category": "Clusters",
        "executor_category_group": "Clusters",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/clusters/list",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "can_use_client",
                "value": "",
                "description": "Filter clusters based on what type of client it can be used for. Could be either NOTEBOOKS or JOBS. No input for this field will get all clusters in the workspace without filtering on its supported client",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698754567590,
        "lastModifiedTime": 1698754567590,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "clusters": [
                        {
                            "num_workers": 0,
                            "autoscale": {
                                "min_workers": 0,
                                "max_workers": 0
                            },
                            "cluster_name": "string",
                            "spark_version": "string",
                            "spark_conf": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "gcp_attributes": {
                                "google_service_account": "string",
                                "boot_disk_size": 0,
                                "availability": "PREEMPTIBLE_GCP",
                                "local_ssd_count": 0
                            },
                            "node_type_id": "string",
                            "driver_node_type_id": "string",
                            "ssh_public_keys": [
                                "string"
                            ],
                            "custom_tags": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "cluster_log_conf": {
                                "dbfs": {
                                    "destination": "string"
                                }
                            },
                            "init_scripts": [
                                {
                                    "workspace": {
                                        "destination": "string"
                                    },
                                    "volumes": {
                                        "destination": "string"
                                    },
                                    "file": {
                                        "destination": "string"
                                    },
                                    "dbfs": {
                                        "destination": "string"
                                    }
                                }
                            ],
                            "spark_env_vars": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "autotermination_minutes": 0,
                            "enable_elastic_disk": true,
                            "cluster_source": "UI",
                            "instance_pool_id": "string",
                            "policy_id": "string",
                            "enable_local_disk_encryption": true,
                            "driver_instance_pool_id": "string",
                            "workload_type": {
                                "clients": {
                                    "notebooks": "true",
                                    "jobs": "true"
                                }
                            },
                            "runtime_engine": "NULL",
                            "docker_image": {
                                "url": "string",
                                "basic_auth": {
                                    "username": "string",
                                    "password": "string"
                                }
                            },
                            "data_security_mode": "NONE",
                            "single_user_name": "string",
                            "cluster_id": "string",
                            "creator_user_name": "string",
                            "driver": {
                                "private_ip": "string",
                                "public_dns": "string",
                                "node_id": "string",
                                "instance_id": "string",
                                "start_timestamp": 0,
                                "host_private_ip": "string"
                            },
                            "executors": [
                                {
                                    "private_ip": "string",
                                    "public_dns": "string",
                                    "node_id": "string",
                                    "instance_id": "string",
                                    "start_timestamp": 0,
                                    "host_private_ip": "string"
                                }
                            ],
                            "spark_context_id": 0,
                            "jdbc_port": 0,
                            "state": "PENDING",
                            "state_message": "string",
                            "start_time": 0,
                            "terminated_time": 0,
                            "last_state_loss_time": 0,
                            "last_restarted_time": 0,
                            "cluster_memory_mb": 0,
                            "cluster_cores": 0,
                            "default_tags": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "cluster_log_status": {
                                "last_attempted": 0,
                                "last_exception": "string"
                            },
                            "termination_reason": {
                                "code": "UNKNOWN",
                                "type": "SUCCESS",
                                "parameters": {
                                    "property1": "string",
                                    "property2": "string"
                                }
                            },
                            "spec": {
                                "num_workers": 0,
                                "autoscale": {
                                    "min_workers": 0,
                                    "max_workers": 0
                                },
                                "cluster_name": "string",
                                "spark_version": "string",
                                "spark_conf": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "gcp_attributes": {
                                    "google_service_account": "string",
                                    "boot_disk_size": 0,
                                    "availability": "PREEMPTIBLE_GCP",
                                    "local_ssd_count": 0
                                },
                                "node_type_id": "string",
                                "driver_node_type_id": "string",
                                "ssh_public_keys": [
                                    "string"
                                ],
                                "custom_tags": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "cluster_log_conf": {
                                    "dbfs": {
                                        "destination": "string"
                                    }
                                },
                                "init_scripts": [
                                    {
                                        "workspace": {
                                            "destination": "string"
                                        },
                                        "volumes": {
                                            "destination": "string"
                                        },
                                        "file": {
                                            "destination": "string"
                                        },
                                        "dbfs": {
                                            "destination": "string"
                                        }
                                    }
                                ],
                                "spark_env_vars": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "autotermination_minutes": 0,
                                "enable_elastic_disk": true,
                                "cluster_source": "UI",
                                "instance_pool_id": "string",
                                "policy_id": "string",
                                "enable_local_disk_encryption": true,
                                "driver_instance_pool_id": "string",
                                "workload_type": {
                                    "clients": {
                                        "notebooks": "true",
                                        "jobs": "true"
                                    }
                                },
                                "runtime_engine": "NULL",
                                "docker_image": {
                                    "url": "string",
                                    "basic_auth": {
                                        "username": "string",
                                        "password": "string"
                                    }
                                },
                                "data_security_mode": "NONE",
                                "single_user_name": "string",
                                "apply_policy_default_values": "false"
                            }
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119377,
        "executor_type": "THIRDPARTY",
        "executor_name": "restartcluster",
        "executor_version": "v2",
        "executor_display_name": "Restart cluster\u2002",
        "executor_description": "Restarts a Spark cluster with the supplied ID. If the cluster is not currently in a RUNNING state, nothing will happen.",
        "executor_category": "Clusters",
        "executor_category_group": "Clusters",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/clusters/restart",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "cluster_id": "string",
                "restart_user": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698755214414,
        "lastModifiedTime": 1698755214414,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "cluster_id": "string",
                    "restart_user": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119333,
        "executor_type": "THIRDPARTY",
        "executor_name": "getclusterpermissionlevels",
        "executor_version": "v2",
        "executor_display_name": "Get cluster permission levels\u2002",
        "executor_description": "Gets the permission levels that a user can have on an object.",
        "executor_category": "Clusters",
        "executor_category_group": "Clusters",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/clusters/{cluster_id}/permissionLevels",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "cluster_id",
                "value": "",
                "description": "The cluster for which to get or manage permissions."
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698750410474,
        "lastModifiedTime": 1698750410474,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "permission_levels": [
                        {
                            "permission_level": "CAN_MANAGE",
                            "description": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119366,
        "executor_type": "THIRDPARTY",
        "executor_name": "listclusteractivityevents",
        "executor_version": "v2",
        "executor_display_name": "List cluster activity events\u2002",
        "executor_description": "Retrieves a list of events about the activity of a cluster. This API is paginated. If there are more events to read, the response includes all the nparameters necessary to request the next page of events.",
        "executor_category": "Clusters",
        "executor_category_group": "Clusters",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/clusters/events",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "cluster_id": "string",
                "start_time": 0,
                "end_time": 0,
                "order": "DESC",
                "event_types": [
                    "CREATING"
                ],
                "offset": 0,
                "limit": 50
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698754364296,
        "lastModifiedTime": 1698754364296,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "events": [
                        {
                            "cluster_id": "string",
                            "timestamp": 0,
                            "type": "CREATING",
                            "details": {
                                "current_num_workers": 0,
                                "target_num_workers": 0,
                                "previous_attributes": {
                                    "cluster_name": "string",
                                    "spark_version": "string",
                                    "spark_conf": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "gcp_attributes": {
                                        "google_service_account": "string",
                                        "boot_disk_size": 0,
                                        "availability": "PREEMPTIBLE_GCP",
                                        "local_ssd_count": 0
                                    },
                                    "node_type_id": "string",
                                    "driver_node_type_id": "string",
                                    "ssh_public_keys": [
                                        "string"
                                    ],
                                    "custom_tags": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "cluster_log_conf": {
                                        "dbfs": {
                                            "destination": "string"
                                        }
                                    },
                                    "init_scripts": [
                                        {
                                            "workspace": {
                                                "destination": "string"
                                            },
                                            "volumes": {
                                                "destination": "string"
                                            },
                                            "file": {
                                                "destination": "string"
                                            },
                                            "dbfs": {
                                                "destination": "string"
                                            }
                                        }
                                    ],
                                    "spark_env_vars": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "autotermination_minutes": 0,
                                    "enable_elastic_disk": true,
                                    "cluster_source": "UI",
                                    "instance_pool_id": "string",
                                    "policy_id": "string",
                                    "enable_local_disk_encryption": true,
                                    "driver_instance_pool_id": "string",
                                    "workload_type": {
                                        "clients": {
                                            "notebooks": "true",
                                            "jobs": "true"
                                        }
                                    },
                                    "runtime_engine": "NULL",
                                    "docker_image": {
                                        "url": "string",
                                        "basic_auth": {
                                            "username": "string",
                                            "password": "string"
                                        }
                                    },
                                    "data_security_mode": "NONE",
                                    "single_user_name": "string"
                                },
                                "attributes": {
                                    "cluster_name": "string",
                                    "spark_version": "string",
                                    "spark_conf": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "gcp_attributes": {
                                        "google_service_account": "string",
                                        "boot_disk_size": 0,
                                        "availability": "PREEMPTIBLE_GCP",
                                        "local_ssd_count": 0
                                    },
                                    "node_type_id": "string",
                                    "driver_node_type_id": "string",
                                    "ssh_public_keys": [
                                        "string"
                                    ],
                                    "custom_tags": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "cluster_log_conf": {
                                        "dbfs": {
                                            "destination": "string"
                                        }
                                    },
                                    "init_scripts": [
                                        {
                                            "workspace": {
                                                "destination": "string"
                                            },
                                            "volumes": {
                                                "destination": "string"
                                            },
                                            "file": {
                                                "destination": "string"
                                            },
                                            "dbfs": {
                                                "destination": "string"
                                            }
                                        }
                                    ],
                                    "spark_env_vars": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "autotermination_minutes": 0,
                                    "enable_elastic_disk": true,
                                    "cluster_source": "UI",
                                    "instance_pool_id": "string",
                                    "policy_id": "string",
                                    "enable_local_disk_encryption": true,
                                    "driver_instance_pool_id": "string",
                                    "workload_type": {
                                        "clients": {
                                            "notebooks": "true",
                                            "jobs": "true"
                                        }
                                    },
                                    "runtime_engine": "NULL",
                                    "docker_image": {
                                        "url": "string",
                                        "basic_auth": {
                                            "username": "string",
                                            "password": "string"
                                        }
                                    },
                                    "data_security_mode": "NONE",
                                    "single_user_name": "string"
                                },
                                "previous_cluster_size": {
                                    "num_workers": 0,
                                    "autoscale": {
                                        "min_workers": 0,
                                        "max_workers": 0
                                    }
                                },
                                "cluster_size": {
                                    "num_workers": 0,
                                    "autoscale": {
                                        "min_workers": 0,
                                        "max_workers": 0
                                    }
                                },
                                "cause": "AUTOSCALE",
                                "reason": {
                                    "code": "UNKNOWN",
                                    "type": "SUCCESS",
                                    "parameters": {
                                        "property1": "string",
                                        "property2": "string"
                                    }
                                },
                                "user": "string",
                                "previous_disk_size": 0,
                                "disk_size": 0,
                                "free_space": 0,
                                "instance_id": "string",
                                "did_not_expand_reason": "string",
                                "driver_state_message": "string",
                                "job_run_name": "string",
                                "enable_termination_for_node_blocklisted": true,
                                "current_num_vcpus": 0,
                                "target_num_vcpus": 0
                            },
                            "data_plane_event_details": {
                                "event_type": "NODE_BLACKLISTED",
                                "timestamp": 0,
                                "host_id": "string",
                                "executor_failures": 0
                            }
                        }
                    ],
                    "next_page": {
                        "cluster_id": "string",
                        "start_time": 0,
                        "end_time": 0,
                        "order": "DESC",
                        "event_types": [
                            "CREATING"
                        ],
                        "offset": 0,
                        "limit": 50
                    },
                    "total_count": 0
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119367,
        "executor_type": "THIRDPARTY",
        "executor_name": "getclusterinfo",
        "executor_version": "v2",
        "executor_display_name": "Get cluster info\u2002",
        "executor_description": "Retrieves the information for a cluster given its identifier. Clusters can be described while they are running, or up to 60 days after they are terminated.",
        "executor_category": "Clusters",
        "executor_category_group": "Clusters",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/clusters/events",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "cluster_id",
                "value": "",
                "description": "The cluster about which to retrieve information.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698754446109,
        "lastModifiedTime": 1698754446109,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "num_workers": 0,
                    "autoscale": {
                        "min_workers": 0,
                        "max_workers": 0
                    },
                    "cluster_name": "string",
                    "spark_version": "string",
                    "spark_conf": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "gcp_attributes": {
                        "google_service_account": "string",
                        "boot_disk_size": 0,
                        "availability": "PREEMPTIBLE_GCP",
                        "local_ssd_count": 0
                    },
                    "node_type_id": "string",
                    "driver_node_type_id": "string",
                    "ssh_public_keys": [
                        "string"
                    ],
                    "custom_tags": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "cluster_log_conf": {
                        "dbfs": {
                            "destination": "string"
                        }
                    },
                    "init_scripts": [
                        {
                            "workspace": {
                                "destination": "string"
                            },
                            "volumes": {
                                "destination": "string"
                            },
                            "file": {
                                "destination": "string"
                            },
                            "dbfs": {
                                "destination": "string"
                            }
                        }
                    ],
                    "spark_env_vars": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "autotermination_minutes": 0,
                    "enable_elastic_disk": true,
                    "cluster_source": "UI",
                    "instance_pool_id": "string",
                    "policy_id": "string",
                    "enable_local_disk_encryption": true,
                    "driver_instance_pool_id": "string",
                    "workload_type": {
                        "clients": {
                            "notebooks": "true",
                            "jobs": "true"
                        }
                    },
                    "runtime_engine": "NULL",
                    "docker_image": {
                        "url": "string",
                        "basic_auth": {
                            "username": "string",
                            "password": "string"
                        }
                    },
                    "data_security_mode": "NONE",
                    "single_user_name": "string",
                    "cluster_id": "string",
                    "creator_user_name": "string",
                    "driver": {
                        "private_ip": "string",
                        "public_dns": "string",
                        "node_id": "string",
                        "instance_id": "string",
                        "start_timestamp": 0,
                        "host_private_ip": "string"
                    },
                    "executors": [
                        {
                            "private_ip": "string",
                            "public_dns": "string",
                            "node_id": "string",
                            "instance_id": "string",
                            "start_timestamp": 0,
                            "host_private_ip": "string"
                        }
                    ],
                    "spark_context_id": 0,
                    "jdbc_port": 0,
                    "state": "PENDING",
                    "state_message": "string",
                    "start_time": 0,
                    "terminated_time": 0,
                    "last_state_loss_time": 0,
                    "last_restarted_time": 0,
                    "cluster_memory_mb": 0,
                    "cluster_cores": 0,
                    "default_tags": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "cluster_log_status": {
                        "last_attempted": 0,
                        "last_exception": "string"
                    },
                    "termination_reason": {
                        "code": "UNKNOWN",
                        "type": "SUCCESS",
                        "parameters": {
                            "property1": "string",
                            "property2": "string"
                        }
                    },
                    "spec": {
                        "num_workers": 0,
                        "autoscale": {
                            "min_workers": 0,
                            "max_workers": 0
                        },
                        "cluster_name": "string",
                        "spark_version": "string",
                        "spark_conf": {
                            "property1": "string",
                            "property2": "string"
                        },
                        "gcp_attributes": {
                            "google_service_account": "string",
                            "boot_disk_size": 0,
                            "availability": "PREEMPTIBLE_GCP",
                            "local_ssd_count": 0
                        },
                        "node_type_id": "string",
                        "driver_node_type_id": "string",
                        "ssh_public_keys": [
                            "string"
                        ],
                        "custom_tags": {
                            "property1": "string",
                            "property2": "string"
                        },
                        "cluster_log_conf": {
                            "dbfs": {
                                "destination": "string"
                            }
                        },
                        "init_scripts": [
                            {
                                "workspace": {
                                    "destination": "string"
                                },
                                "volumes": {
                                    "destination": "string"
                                },
                                "file": {
                                    "destination": "string"
                                },
                                "dbfs": {
                                    "destination": "string"
                                }
                            }
                        ],
                        "spark_env_vars": {
                            "property1": "string",
                            "property2": "string"
                        },
                        "autotermination_minutes": 0,
                        "enable_elastic_disk": true,
                        "cluster_source": "UI",
                        "instance_pool_id": "string",
                        "policy_id": "string",
                        "enable_local_disk_encryption": true,
                        "driver_instance_pool_id": "string",
                        "workload_type": {
                            "clients": {
                                "notebooks": "true",
                                "jobs": "true"
                            }
                        },
                        "runtime_engine": "NULL",
                        "docker_image": {
                            "url": "string",
                            "basic_auth": {
                                "username": "string",
                                "password": "string"
                            }
                        },
                        "data_security_mode": "NONE",
                        "single_user_name": "string",
                        "apply_policy_default_values": "false"
                    }
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119384,
        "executor_type": "THIRDPARTY",
        "executor_name": "unpincluster",
        "executor_version": "v2",
        "executor_display_name": "Unpin cluster\u2002",
        "executor_description": "Unpinning a cluster will allow the cluster to eventually be removed from the ListClusters API. Unpinning a cluster that is not pinned will have no effect. This API can only be called by workspace admins.",
        "executor_category": "Clusters",
        "executor_category_group": "Clusters",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/clusters/unpin",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "cluster_id": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698758864711,
        "lastModifiedTime": 1698758864711,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119330,
        "executor_type": "THIRDPARTY",
        "executor_name": "setclusterpermissions",
        "executor_version": "v2",
        "executor_display_name": "Set cluster permissions\u2002",
        "executor_description": "Sets permissions on a cluster. Clusters can inherit permissions from their root object.",
        "executor_category": "Clusters",
        "executor_category_group": "Clusters",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/clusters/{cluster_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "cluster_id",
                "value": "",
                "description": "The cluster for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_MANAGE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698750240104,
        "lastModifiedTime": 1698750240104,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119361,
        "executor_type": "THIRDPARTY",
        "executor_name": "terminatecluster",
        "executor_version": "v2",
        "executor_display_name": "Terminate cluster\u2002",
        "executor_description": "Terminates the Spark cluster with the specified ID. The cluster is removed asynchronously. Once the termination has completed, the cluster will be in a TERMINATED state. If the cluster is already in a TERMINATING or TERMINATED state, nothing will happen.",
        "executor_category": "Clusters",
        "executor_category_group": "Clusters",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/clusters/delete",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "cluster_id": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698753854479,
        "lastModifiedTime": 1698753854479,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "cluster_id": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119329,
        "executor_type": "THIRDPARTY",
        "executor_name": "getclusterpermissions",
        "executor_version": "v2",
        "executor_display_name": "Get cluster permissions\u2002",
        "executor_description": "Gets the permissions of a cluster. Clusters can inherit permissions from their root object.",
        "executor_category": "Clusters",
        "executor_category_group": "Clusters",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/clusters/{cluster_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "cluster_id",
                "value": "",
                "description": "The cluster for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698750146238,
        "lastModifiedTime": 1698750146238,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119375,
        "executor_type": "THIRDPARTY",
        "executor_name": "resizecluster",
        "executor_version": "v2",
        "executor_display_name": "Resize cluster\u2002",
        "executor_description": "Resizes a cluster to have a desired number of workers. This will fail unless the cluster is in a RUNNING state.",
        "executor_category": "Clusters",
        "executor_category_group": "Clusters",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/clusters/resize",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "num_workers": 0,
                "autoscale": {
                    "min_workers": 0,
                    "max_workers": 0
                },
                "cluster_id": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698755063735,
        "lastModifiedTime": 1698755063735,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "num_workers": 0,
                    "autoscale": {
                        "min_workers": 0,
                        "max_workers": 0
                    },
                    "cluster_id": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119358,
        "executor_type": "THIRDPARTY",
        "executor_name": "createnewcluster",
        "executor_version": "v2",
        "executor_display_name": "Create new cluster\u2002",
        "executor_description": "Creates a new Spark cluster. This method will acquire new instances from the cloud provider if necessary. This method is asynchronous; the returned cluster_id can be used to poll the cluster status. When this method returns, the cluster will be in a PENDING state. The cluster will be usable once it enters a RUNNING state. Note: Databricks may not be able to acquire some of the requested nodes, due to cloud provider limitations (account limits, spot price, etc.) or transient network issues.",
        "executor_category": "Clusters",
        "executor_category_group": "Clusters",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/clusters/create",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "cluster_name": "single-node-cluster",
                "spark_version": "7 6 -scala2 12",
                "node_type_id": "i3 large",
                "num_workers": 0,
                "spark_conf": {
                    "spark databricks cluster profile": "singleNode",
                    "spark master": []
                },
                "custom_tags": {
                    "ResourceClass": "SingleNode"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698753699175,
        "lastModifiedTime": 1698754091201,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "cluster_id": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": true,
            "bodyParamDescription": [
                {
                    "key": "cluster_name",
                    "type": "String",
                    "req": true,
                    "array": false,
                    "description": "Cluster name requested by the user. This doesn't have to be unique. If not specified at creation, the cluster name will be an empty string.",
                    "value": "single-node-cluster"
                },
                {
                    "key": "spark_version",
                    "type": "String",
                    "req": true,
                    "array": false,
                    "description": "The Spark version of the cluster, e.g. 3.3.x-scala2.11. A list of available Spark versions can be retrieved by using the Clusters/SparkVersions API call.",
                    "value": "7.6.x-scala2.12"
                },
                {
                    "key": "node_type_id",
                    "type": "String",
                    "req": true,
                    "array": false,
                    "description": "This field encodes, through a single value, the resources available to each of the Spark nodes in this cluster. For example, the Spark nodes can be provisioned and optimized for memory or compute intensive workloads. A list of available node types can be retrieved by using the Clusters/ListNodeTypes API call",
                    "value": "i3.xlarge"
                },
                {
                    "key": "num_workers",
                    "type": null,
                    "req": true,
                    "array": false,
                    "description": "Number of worker nodes that this cluster should have. A cluster has one Spark Driver and num_workers Executors for a total of num_workers + 1 Spark nodes.  Note: When reading the properties of a cluster, this field reflects the desired number of workers rather than the actual current number of workers. For instance, if a cluster is resized from 5 to 10 workers, this field will immediately be updated to reflect the target size of 10 workers, whereas the workers listed in spark_info will gradually increase from 5 to 10 as the new nodes are provisioned.",
                    "value": 0
                },
                {
                    "key": "spark_conf",
                    "type": "Object",
                    "subType": [
                        {
                            "key": "spark.databricks.cluster.profile",
                            "type": "String",
                            "req": true,
                            "array": false,
                            "description": "",
                            "value": "singleNode"
                        },
                        {
                            "key": "spark.master",
                            "type": "String",
                            "req": true,
                            "array": false,
                            "description": "",
                            "value": "[*, 4]"
                        }
                    ],
                    "req": true,
                    "array": false,
                    "description": "An object containing a set of optional, user-specified Spark configuration key-value pairs. Users can also pass in a string of extra JVM options to the driver and the executors via spark.driver.extraJavaOptions and spark.executor.extraJavaOptions respectively",
                    "value": null
                },
                {
                    "key": "custom_tags",
                    "type": "Object",
                    "subType": [
                        {
                            "key": "ResourceClass",
                            "type": "String",
                            "req": true,
                            "array": false,
                            "description": "",
                            "value": "SingleNode"
                        }
                    ],
                    "req": true,
                    "array": false,
                    "description": "",
                    "value": null
                }
            ]
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119370,
        "executor_type": "THIRDPARTY",
        "executor_name": "listnodetypes",
        "executor_version": "v2",
        "executor_display_name": "List node types\u2002",
        "executor_description": "Returns a list of supported Spark node types. These node types can be used to launch a cluster.",
        "executor_category": "Clusters",
        "executor_category_group": "Clusters",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/clusters/list-node-types",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698754667863,
        "lastModifiedTime": 1698754667863,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "node_types": [
                        {
                            "node_type_id": "string",
                            "memory_mb": 0,
                            "num_gpus": 0,
                            "display_order": 0,
                            "num_cores": 0,
                            "description": "string",
                            "instance_type_id": "string",
                            "category": "string",
                            "is_deprecated": "false",
                            "is_encrypted_in_transit": "false",
                            "support_ebs_volumes": true,
                            "is_io_cache_enabled": true,
                            "is_hidden": true,
                            "support_cluster_tags": true,
                            "supports_elastic_disk": true,
                            "is_graviton": true,
                            "photon_driver_capable": true,
                            "photon_worker_capable": true,
                            "support_port_forwarding": true,
                            "node_info": {
                                "status": [
                                    "NotEnabledOnSubscription"
                                ]
                            },
                            "node_instance_type": {
                                "instance_type_id": "string",
                                "local_disks": 0,
                                "local_disk_size_gb": 0,
                                "local_nvme_disks": 0,
                                "local_nvme_disk_size_gb": 0
                            }
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119373,
        "executor_type": "THIRDPARTY",
        "executor_name": "permanentlydeletecluster",
        "executor_version": "v2",
        "executor_display_name": "Permanently delete cluster\u2002",
        "executor_description": "Permanently deletes a Spark cluster. This cluster is terminated and resources are asynchronously removed.",
        "executor_category": "Clusters",
        "executor_category_group": "Clusters",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/clusters/permanent-delete",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "cluster_id": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698754853552,
        "lastModifiedTime": 1698754853552,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "zones": [
                        "string"
                    ],
                    "default_zone": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119344,
        "executor_type": "THIRDPARTY",
        "executor_name": "getObjectAcl",
        "executor_version": "v2",
        "executor_display_name": "Get object ACL",
        "executor_description": "Gets a JSON representation of the access control list (ACL) for a specified object.",
        "executor_category": "ACLPermissions",
        "executor_category_group": "ACLPermissions",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/sql/permissions/{objectType}/{objectId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "objectType",
                "value": "",
                "description": "Enum: \"alerts\" \"dashboards\" \"data_sources\" \"queries\" The type of object permissions to check."
            },
            {
                "key": "objectId",
                "value": "",
                "description": "Object ID. An ACL is returned for the object with this UUID."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698751644732,
        "lastModifiedTime": 1698751644732,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "query/2cca1687-60ff-4886-a445-0230578c864d",
                    "object_type": "alert",
                    "access_control_list": [
                        {
                            "user_name": "user@example.com",
                            "group_name": "string",
                            "permission_level": "CAN_VIEW"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119350,
        "executor_type": "THIRDPARTY",
        "executor_name": "transferObjectOwnership",
        "executor_version": "v2",
        "executor_display_name": "Transfer object ownership",
        "executor_description": "Transfers ownership of a dashboard, query, or alert to an active user. Requires an admin API key.",
        "executor_category": "ACLPermissions",
        "executor_category_group": "ACLPermissions",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/sql/permissions/{objectType}/{objectId}/transfer",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "objectType",
                "value": "",
                "description": "Enum: \"alert\" \"dashboard\" \"query\" The type of object on which to change ownership."
            },
            {
                "key": "objectId",
                "value": "",
                "description": "The ID of the object on which to change ownership."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "new_owner": "user@example.com"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698752539985,
        "lastModifiedTime": 1698752539985,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Success"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119346,
        "executor_type": "THIRDPARTY",
        "executor_name": "setObjectAcl",
        "executor_version": "v2",
        "executor_display_name": "Set object ACL",
        "executor_description": "Sets the access control list (ACL) for a specified object. This operation will complete rewrite the ACL.",
        "executor_category": "ACLPermissions",
        "executor_category_group": "ACLPermissions",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/sql/permissions/{objectType}/{objectId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "objectType",
                "value": "",
                "description": "Enum: \"alerts\" \"dashboards\" \"data_sources\" \"queries\" The type of object permission to set."
            },
            {
                "key": "objectId",
                "value": "",
                "description": "Object ID. The ACL for the object with this UUID is overwritten by this request's POST content."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "user@example.com",
                        "group_name": "string",
                        "permission_level": "CAN_VIEW"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698751786892,
        "lastModifiedTime": 1698751786892,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "query/2cca1687-60ff-4886-a445-0230578c864d",
                    "object_type": "alert",
                    "access_control_list": [
                        {
                            "user_name": "user@example.com",
                            "group_name": "string",
                            "permission_level": "CAN_VIEW"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119352,
        "executor_type": "THIRDPARTY",
        "executor_name": "listschemas",
        "executor_version": "v2",
        "executor_display_name": "List schemas",
        "executor_description": "Gets an array of schemas for a catalog in the metastore. If the caller is the metastore admin or the owner of the parent catalog, all schemas for the catalog will be retrieved. Otherwise, only schemas owned by the caller (or for which the caller has the USE_SCHEMA privilege) will be retrieved. There is no guarantee of a specific ordering of the elements in the array.",
        "executor_category": "Schemas",
        "executor_category_group": "Schemas",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/schemas",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "catalog_name",
                "value": "",
                "description": "Parent catalog for schemas of interest.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698752835377,
        "lastModifiedTime": 1698752835377,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The schemas list was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "schemas": [
                        {
                            "name": "string",
                            "catalog_name": "string",
                            "owner": "string",
                            "comment": "string",
                            "properties": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "storage_root": "string",
                            "metastore_id": "string",
                            "full_name": "string",
                            "storage_location": "string",
                            "created_at": 0,
                            "created_by": "string",
                            "updated_at": 0,
                            "updated_by": "string",
                            "catalog_type": "string"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119362,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateaschema",
        "executor_version": "v2",
        "executor_display_name": "Update a schema",
        "executor_description": "Updates a schema for a catalog. The caller must be the owner of the schema or a metastore admin. If the caller is a metastore admin, only the owner field can be changed in the update. If the name field must be updated, the caller must be a metastore admin or have the CREATE_SCHEMA privilege on the parent catalog.",
        "executor_category": "Schemas",
        "executor_category_group": "Schemas",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/schemas/{full_name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "full_name",
                "value": "",
                "description": "Full name of the schema."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "owner": "string",
                "comment": "string",
                "properties": {
                    "property1": "string",
                    "property2": "string"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698753985483,
        "lastModifiedTime": 1698753985483,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The schema was successfully updated.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "catalog_name": "string",
                    "owner": "string",
                    "comment": "string",
                    "properties": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "storage_root": "string",
                    "metastore_id": "string",
                    "full_name": "string",
                    "storage_location": "string",
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string",
                    "catalog_type": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119360,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaschema",
        "executor_version": "v2",
        "executor_display_name": "Get a schema",
        "executor_description": "Gets the specified schema within the metastore. The caller must be a metastore admin, the owner of the schema, or a user that has the USE_SCHEMA privilege on the schema.",
        "executor_category": "Schemas",
        "executor_category_group": "Schemas",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/schemas/{full_name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "full_name",
                "value": "",
                "description": "Full name of the schema."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698753805581,
        "lastModifiedTime": 1698753805581,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The schema was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "catalog_name": "string",
                    "owner": "string",
                    "comment": "string",
                    "properties": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "storage_root": "string",
                    "metastore_id": "string",
                    "full_name": "string",
                    "storage_location": "string",
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string",
                    "catalog_type": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119365,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaschema",
        "executor_version": "v2",
        "executor_display_name": "Delete a schema",
        "executor_description": "Deletes the specified schema from the parent catalog. The caller must be the owner of the schema or an owner of the parent catalog.",
        "executor_category": "Schemas",
        "executor_category_group": "Schemas",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/schemas/{full_name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "full_name",
                "value": "",
                "description": "Full name of the schema."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698754321860,
        "lastModifiedTime": 1698754321860,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The schema was successfully deleted.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119354,
        "executor_type": "THIRDPARTY",
        "executor_name": "createaschema",
        "executor_version": "v2",
        "executor_display_name": "Create a schema",
        "executor_description": "Creates a new schema for catalog in the Metatastore. The caller must be a metastore admin, or have the CREATE_SCHEMA privilege in the parent catalog.",
        "executor_category": "Schemas",
        "executor_category_group": "Schemas",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/schemas",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "catalog_name",
                "value": "",
                "description": "Parent catalog for schemas of interest.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "catalog_name": "string",
                "comment": "string",
                "properties": {
                    "property1": "string",
                    "property2": "string"
                },
                "storage_root": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698753041582,
        "lastModifiedTime": 1698753041582,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The new schema was successfully created.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "catalog_name": "string",
                    "owner": "string",
                    "comment": "string",
                    "properties": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "storage_root": "string",
                    "metastore_id": "string",
                    "full_name": "string",
                    "storage_location": "string",
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string",
                    "catalog_type": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119303,
        "executor_type": "THIRDPARTY",
        "executor_name": "getServicePrincipalDetails",
        "executor_version": "v2",
        "executor_display_name": "Get service principal details",
        "executor_description": "Gets the details for a single service principal define in the Databricks workspace.",
        "executor_category": "ServicePrincipals",
        "executor_category_group": "ServicePrincipals",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/scim/v2/ServicePrincipals/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique ID for a service principal in the Databricks workspace."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698746787013,
        "lastModifiedTime": 1698746787013,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Service principal information was returned successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "schemas": [
                        "urn:ietf:params:scim:schemas:core:2.0:ServicePrincipal"
                    ],
                    "id": "string",
                    "applicationId": "97ab27fa-30e2-43e3-92a3-160e80f4c0d5",
                    "displayName": "string",
                    "groups": [
                        {
                            "ref": "string",
                            "value": "string",
                            "display": "string",
                            "primary": true,
                            "type": "string"
                        }
                    ],
                    "roles": [
                        {
                            "ref": "string",
                            "value": "string",
                            "display": "string",
                            "primary": true,
                            "type": "string"
                        }
                    ],
                    "entitlements": [
                        {
                            "ref": "string",
                            "value": "string",
                            "display": "string",
                            "primary": true,
                            "type": "string"
                        }
                    ],
                    "externalId": "string",
                    "active": true
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119306,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteServicePrincipal",
        "executor_version": "v2",
        "executor_display_name": "Delete a service principal",
        "executor_description": "Delete a single service principal in the Databricks workspace.",
        "executor_category": "ServicePrincipals",
        "executor_category_group": "ServicePrincipals",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/scim/v2/ServicePrincipals/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique ID for a service principal in the Databricks workspace."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698747193185,
        "lastModifiedTime": 1698747193185,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "OK",
                "description": "Service principal was deleted successfully",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119302,
        "executor_type": "THIRDPARTY",
        "executor_name": "createServicePrincipal",
        "executor_version": "v2",
        "executor_display_name": "Create a service principal",
        "executor_description": "Creates a new service principal in the Databricks workspace.  Properties of the new service principal.",
        "executor_category": "ServicePrincipals",
        "executor_category_group": "ServicePrincipals",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/scim/v2/ServicePrincipals",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "schemas": [
                    "urn:ietf:params:scim:schemas:core:2.0:ServicePrincipal"
                ],
                "id": "string",
                "applicationId": "97ab27fa-30e2-43e3-92a3-160e80f4c0d5",
                "displayName": "string",
                "groups": [
                    {
                        "ref": "string",
                        "value": "string",
                        "display": "string",
                        "primary": true,
                        "type": "string"
                    }
                ],
                "roles": [
                    {
                        "ref": "string",
                        "value": "string",
                        "display": "string",
                        "primary": true,
                        "type": "string"
                    }
                ],
                "entitlements": [
                    {
                        "ref": "string",
                        "value": "string",
                        "display": "string",
                        "primary": true,
                        "type": "string"
                    }
                ],
                "externalId": "string",
                "active": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698746678074,
        "lastModifiedTime": 1698746678074,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The user creation request succeeded.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "schemas": [
                        "urn:ietf:params:scim:schemas:core:2.0:ServicePrincipal"
                    ],
                    "id": "string",
                    "applicationId": "97ab27fa-30e2-43e3-92a3-160e80f4c0d5",
                    "displayName": "string",
                    "groups": [
                        {
                            "ref": "string",
                            "value": "string",
                            "display": "string",
                            "primary": true,
                            "type": "string"
                        }
                    ],
                    "roles": [
                        {
                            "ref": "string",
                            "value": "string",
                            "display": "string",
                            "primary": true,
                            "type": "string"
                        }
                    ],
                    "entitlements": [
                        {
                            "ref": "string",
                            "value": "string",
                            "display": "string",
                            "primary": true,
                            "type": "string"
                        }
                    ],
                    "externalId": "string",
                    "active": true
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119305,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateServicePrincipalDetails",
        "executor_version": "v2",
        "executor_display_name": "Update service principal details",
        "executor_description": "Partially updates the details of a single service principal in the Databricks workspace.",
        "executor_category": "ServicePrincipals",
        "executor_category_group": "ServicePrincipals",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/scim/v2/ServicePrincipals/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique ID for a service principal in the Databricks workspace."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "schemas": [
                    "urn:ietf:params:scim:api:messages:2.0:PatchOp"
                ],
                "Operations": [
                    {
                        "op": "add",
                        "path": "string",
                        "value": {}
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698747108278,
        "lastModifiedTime": 1698747108278,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Service principal information was updated successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119304,
        "executor_type": "THIRDPARTY",
        "executor_name": "replaceServicePrincipal",
        "executor_version": "v2",
        "executor_display_name": "Replace service principal",
        "executor_description": "Updates the details of a single service principal.  This action replaces the existing service principal with the same name.",
        "executor_category": "ServicePrincipals",
        "executor_category_group": "ServicePrincipals",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/scim/v2/ServicePrincipals/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique ID for a service principal in the Databricks workspace."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "schemas": [
                    "urn:ietf:params:scim:schemas:core:2.0:ServicePrincipal"
                ],
                "id": "string",
                "applicationId": "97ab27fa-30e2-43e3-92a3-160e80f4c0d5",
                "displayName": "string",
                "groups": [
                    {
                        "ref": "string",
                        "value": "string",
                        "display": "string",
                        "primary": true,
                        "type": "string"
                    }
                ],
                "roles": [
                    {
                        "ref": "string",
                        "value": "string",
                        "display": "string",
                        "primary": true,
                        "type": "string"
                    }
                ],
                "entitlements": [
                    {
                        "ref": "string",
                        "value": "string",
                        "display": "string",
                        "primary": true,
                        "type": "string"
                    }
                ],
                "externalId": "string",
                "active": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698746974920,
        "lastModifiedTime": 1698746974920,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Service principal information was updated successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119300,
        "executor_type": "THIRDPARTY",
        "executor_name": "listServicePrincipals",
        "executor_version": "v2",
        "executor_display_name": "List service principals",
        "executor_description": "Gets the set of service principals associated with a Databricks workspace.",
        "executor_category": "ServicePrincipals",
        "executor_category_group": "ServicePrincipals",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/scim/v2/ServicePrincipals",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "filter",
                "value": "",
                "description": "Examples: filter=displayName eq foo - Service principals whose displayName equals foo. filter=displayName sw baz - Service principals whose displayName starts with baz. filter=displayName co sp or displayName co foo - Service principals whose displayName contains sp or displayName contains foo. filter=displayName ne qux - Service principals whose displayName not equals qux. filter=displayName co bar - Service principals whose displayName contains bar. filter=displayName co sp and displayName co foo - Service principals whose displayName contains sp and displayName contains foo. Query by which the results have to be filtered. Supported operators are equals(eq), contains(co), starts with(sw) and not equals(ne). Additionally, simple expressions can be formed using logical operators - and and or. The SCIM RFC has more details but we currently only support simple expressions",
                "req": false
            },
            {
                "key": "attributes",
                "value": "",
                "description": "Comma-separated list of attributes to return in response.",
                "req": false
            },
            {
                "key": "excludedAttributes",
                "value": "",
                "description": "Comma-separated list of attributes to exclude in response.",
                "req": false
            },
            {
                "key": "startIndex",
                "value": "",
                "description": "Specifies the index of the first result. First item is number 1.",
                "req": false
            },
            {
                "key": "count",
                "value": "",
                "description": "Desired number of results per page.",
                "req": false
            },
            {
                "key": "sortBy",
                "value": "",
                "description": "Attribute to sort the results.",
                "req": false
            },
            {
                "key": "sortOrder",
                "value": "",
                "description": "Enum: \"ascending\" \"descending\" The order to sort the results.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698745937974,
        "lastModifiedTime": 1698745937974,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "List service principals operation was succesful.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "schemas": [
                        "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                    ],
                    "totalResults": 0,
                    "startIndex": 1,
                    "itemsPerPage": 0,
                    "Resources": [
                        {
                            "schemas": [
                                "urn:ietf:params:scim:schemas:core:2.0:ServicePrincipal"
                            ],
                            "id": "string",
                            "applicationId": "97ab27fa-30e2-43e3-92a3-160e80f4c0d5",
                            "displayName": "string",
                            "groups": [
                                {
                                    "ref": "string",
                                    "value": "string",
                                    "display": "string",
                                    "primary": true,
                                    "type": "string"
                                }
                            ],
                            "roles": [
                                {
                                    "ref": "string",
                                    "value": "string",
                                    "display": "string",
                                    "primary": true,
                                    "type": "string"
                                }
                            ],
                            "entitlements": [
                                {
                                    "ref": "string",
                                    "value": "string",
                                    "display": "string",
                                    "primary": true,
                                    "type": "string"
                                }
                            ],
                            "externalId": "string",
                            "active": true
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119308,
        "executor_type": "THIRDPARTY",
        "executor_name": "createNewUser",
        "executor_version": "v2",
        "executor_display_name": "Create a new user",
        "executor_description": "Creates a new user in the Databricks workspace. This new user will also be added to the Databricks account.  Properties of the new user.",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/scim/v2/Users",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "schemas": [
                    "urn:ietf:params:scim:schemas:core:2.0:User"
                ],
                "id": "string",
                "userName": "user@example.com",
                "emails": [
                    {
                        "ref": "string",
                        "value": "string",
                        "display": "string",
                        "primary": true,
                        "type": "string"
                    }
                ],
                "name": {
                    "givenName": "string",
                    "familyName": "string"
                },
                "displayName": "string",
                "groups": [
                    {
                        "ref": "string",
                        "value": "string",
                        "display": "string",
                        "primary": true,
                        "type": "string"
                    }
                ],
                "roles": [
                    {
                        "ref": "string",
                        "value": "string",
                        "display": "string",
                        "primary": true,
                        "type": "string"
                    }
                ],
                "entitlements": [
                    {
                        "ref": "string",
                        "value": "string",
                        "display": "string",
                        "primary": true,
                        "type": "string"
                    }
                ],
                "externalId": "string",
                "active": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698747712582,
        "lastModifiedTime": 1698747712582,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The user creation request succeeded.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "schemas": [
                        "urn:ietf:params:scim:schemas:core:2.0:User"
                    ],
                    "id": "string",
                    "userName": "user@example.com",
                    "emails": [
                        {
                            "ref": "string",
                            "value": "string",
                            "display": "string",
                            "primary": true,
                            "type": "string"
                        }
                    ],
                    "name": {
                        "givenName": "string",
                        "familyName": "string"
                    },
                    "displayName": "string",
                    "groups": [
                        {
                            "ref": "string",
                            "value": "string",
                            "display": "string",
                            "primary": true,
                            "type": "string"
                        }
                    ],
                    "roles": [
                        {
                            "ref": "string",
                            "value": "string",
                            "display": "string",
                            "primary": true,
                            "type": "string"
                        }
                    ],
                    "entitlements": [
                        {
                            "ref": "string",
                            "value": "string",
                            "display": "string",
                            "primary": true,
                            "type": "string"
                        }
                    ],
                    "externalId": "string",
                    "active": true
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119307,
        "executor_type": "THIRDPARTY",
        "executor_name": "lisUsers",
        "executor_version": "v2",
        "executor_display_name": "List users",
        "executor_description": "Gets details for all the users associated with a Databricks workspace.",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/scim/v2/Users",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "filter",
                "value": "",
                "description": "Examples: filter=displayName eq john - Users whose displayName equals john. filter=displayName sw jo - Users whose displayName starts with jo. filter=displayName co john or userName co doe - Users whose displayName contains john or userName contains doe. filter=displayName ne john - Users whose displayName not equals john. filter=displayName co doe - Users whose displayName contains doe. filter=displayName co john and userName co doe - Users whose displayName contains john and userName contains doe. Query by which the results have to be filtered. Supported operators are equals(eq), contains(co), starts with(sw) and not equals(ne). Additionally, simple expressions can be formed using logical operators - and and or. The SCIM RFC has more details but we currently only support simple expressions.",
                "req": false
            },
            {
                "key": "attributes",
                "value": "",
                "description": "Comma-separated list of attributes to return in response.",
                "req": false
            },
            {
                "key": "excludedAttributes",
                "value": "",
                "description": "Comma-separated list of attributes to exclude in response.",
                "req": false
            },
            {
                "key": "startIndex",
                "value": "",
                "description": "Specifies the index of the first result. First item is number 1.",
                "req": false
            },
            {
                "key": "count",
                "value": "",
                "description": "Desired number of results per page.",
                "req": false
            },
            {
                "key": "sortBy",
                "value": "",
                "description": "Attribute to sort the results. Multi-part paths are supported. For example, userName, name.givenName, and emails.",
                "req": false
            },
            {
                "key": "sortOrder",
                "value": "",
                "description": "Enum: \"ascending\" \"descending\" The order to sort the results.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698747406400,
        "lastModifiedTime": 1698747406400,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "List users operation was succesful.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "schemas": [
                        "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                    ],
                    "totalResults": 10,
                    "startIndex": 1,
                    "itemsPerPage": 0,
                    "Resources": [
                        {
                            "schemas": [
                                "urn:ietf:params:scim:schemas:core:2.0:User"
                            ],
                            "id": "string",
                            "userName": "user@example.com",
                            "emails": [
                                {
                                    "ref": "string",
                                    "value": "string",
                                    "display": "string",
                                    "primary": true,
                                    "type": "string"
                                }
                            ],
                            "name": {
                                "givenName": "string",
                                "familyName": "string"
                            },
                            "displayName": "string",
                            "groups": [
                                {
                                    "ref": "string",
                                    "value": "string",
                                    "display": "string",
                                    "primary": true,
                                    "type": "string"
                                }
                            ],
                            "roles": [
                                {
                                    "ref": "string",
                                    "value": "string",
                                    "display": "string",
                                    "primary": true,
                                    "type": "string"
                                }
                            ],
                            "entitlements": [
                                {
                                    "ref": "string",
                                    "value": "string",
                                    "display": "string",
                                    "primary": true,
                                    "type": "string"
                                }
                            ],
                            "externalId": "string",
                            "active": true
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119310,
        "executor_type": "THIRDPARTY",
        "executor_name": "replaceUser",
        "executor_version": "v2",
        "executor_display_name": "Replace a user",
        "executor_description": "Replaces a user's information with the data supplied in request.",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/scim/v2/Users/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique ID for a user in the Databricks workspace."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "schemas": [
                    "urn:ietf:params:scim:schemas:core:2.0:User"
                ],
                "id": "string",
                "userName": "user@example.com",
                "emails": [
                    {
                        "ref": "string",
                        "value": "string",
                        "display": "string",
                        "primary": true,
                        "type": "string"
                    }
                ],
                "name": {
                    "givenName": "string",
                    "familyName": "string"
                },
                "displayName": "string",
                "groups": [
                    {
                        "ref": "string",
                        "value": "string",
                        "display": "string",
                        "primary": true,
                        "type": "string"
                    }
                ],
                "roles": [
                    {
                        "ref": "string",
                        "value": "string",
                        "display": "string",
                        "primary": true,
                        "type": "string"
                    }
                ],
                "entitlements": [
                    {
                        "ref": "string",
                        "value": "string",
                        "display": "string",
                        "primary": true,
                        "type": "string"
                    }
                ],
                "externalId": "string",
                "active": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698748503411,
        "lastModifiedTime": 1698748503411,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "User information was updated successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119309,
        "executor_type": "THIRDPARTY",
        "executor_name": "getUserDetails",
        "executor_version": "v2",
        "executor_display_name": "Get user details",
        "executor_description": "Gets information for a specific user in Databricks workspace.",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/scim/v2/Users/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique ID for a user in the Databricks workspace."
            }
        ],
        "queryParams": [
            {
                "key": "filter",
                "value": "",
                "description": "Examples: filter=displayName eq john - Users whose displayName equals john. filter=displayName sw jo - Users whose displayName starts with jo. filter=displayName co john or userName co doe - Users whose displayName contains john or userName contains doe. filter=displayName ne john - Users whose displayName not equals john. filter=displayName co doe - Users whose displayName contains doe. filter=displayName co john and userName co doe - Users whose displayName contains john and userName contains doe. Query by which the results have to be filtered. Supported operators are equals(eq), contains(co), starts with(sw) and not equals(ne). Additionally, simple expressions can be formed using logical operators - and and or. The SCIM RFC has more details but we currently only support simple expressions.",
                "req": false
            },
            {
                "key": "attributes",
                "value": "",
                "description": "Comma-separated list of attributes to return in response.",
                "req": false
            },
            {
                "key": "excludedAttributes",
                "value": "",
                "description": "Comma-separated list of attributes to exclude in response.",
                "req": false
            },
            {
                "key": "startIndex",
                "value": "",
                "description": "Specifies the index of the first result. First item is number 1.",
                "req": false
            },
            {
                "key": "count",
                "value": "",
                "description": "Desired number of results per page.",
                "req": false
            },
            {
                "key": "sortBy",
                "value": "",
                "description": "Attribute to sort the results. Multi-part paths are supported. For example, userName, name.givenName, and emails.",
                "req": false
            },
            {
                "key": "sortOrder",
                "value": "",
                "description": "Enum: \"ascending\" \"descending\" The order to sort the results.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698748200504,
        "lastModifiedTime": 1698748200504,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "schemas": [
                        "urn:ietf:params:scim:schemas:core:2.0:User"
                    ],
                    "id": "string",
                    "userName": "user@example.com",
                    "emails": [
                        {
                            "ref": "string",
                            "value": "string",
                            "display": "string",
                            "primary": true,
                            "type": "string"
                        }
                    ],
                    "name": {
                        "givenName": "string",
                        "familyName": "string"
                    },
                    "displayName": "string",
                    "groups": [
                        {
                            "ref": "string",
                            "value": "string",
                            "display": "string",
                            "primary": true,
                            "type": "string"
                        }
                    ],
                    "roles": [
                        {
                            "ref": "string",
                            "value": "string",
                            "display": "string",
                            "primary": true,
                            "type": "string"
                        }
                    ],
                    "entitlements": [
                        {
                            "ref": "string",
                            "value": "string",
                            "display": "string",
                            "primary": true,
                            "type": "string"
                        }
                    ],
                    "externalId": "string",
                    "active": true
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119311,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateUserDetails",
        "executor_version": "v2",
        "executor_display_name": "Update user details",
        "executor_description": "Partially updates a user resource by applying the supplied operations on specific user attributes.",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/scim/v2/Users/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique ID for a user in the Databricks workspace."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "schemas": [
                    "urn:ietf:params:scim:api:messages:2.0:PatchOp"
                ],
                "Operations": [
                    {
                        "op": "add",
                        "path": "string",
                        "value": {}
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698748642996,
        "lastModifiedTime": 1698748642996,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "User information was updated successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119312,
        "executor_type": "THIRDPARTY",
        "executor_name": "userdelete",
        "executor_version": "v2",
        "executor_display_name": "Delete a user",
        "executor_description": "Deletes a user. Deleting a user from a Databricks workspace also removes objects associated with the user.",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/scim/v2/Users/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique ID for a user in the Databricks workspace."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698748762404,
        "lastModifiedTime": 1698748762404,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "detail": "Description of the error.",
                    "status": "HTTP status code for the error."
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "User was deleted successfully.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119328,
        "executor_type": "THIRDPARTY",
        "executor_name": "getDashboardObjects",
        "executor_version": "v2",
        "executor_display_name": "Get dashboard objects",
        "executor_description": "Fetch a paginated list of dashboard objects.",
        "executor_category": "Dashboards",
        "executor_category_group": "Dashboards",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/sql/dashboards",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "page_size",
                "value": "",
                "description": "<= 1000 Default: 25 Number of dashboards to return per page.",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "Page number to retrieve.",
                "req": false
            },
            {
                "key": "order",
                "value": "",
                "description": "Enum: \"name\" \"created_at\" Name of dashboard attribute to order by.",
                "req": false
            },
            {
                "key": "q",
                "value": "",
                "description": "Full text search term.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698750067990,
        "lastModifiedTime": 1698750931549,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "count": 0,
                    "page": 0,
                    "page_size": 0,
                    "results": [
                        {
                            "id": "string",
                            "slug": "string",
                            "parent": "folders/2025532471912059",
                            "name": "string",
                            "user_id": 0,
                            "dashboard_filters_enabled": false,
                            "widgets": [
                                {
                                    "id": "string",
                                    "width": 0,
                                    "options": {
                                        "parameterMappings": {},
                                        "isHidden": false,
                                        "position": {
                                            "autoHeight": true,
                                            "sizeX": 3,
                                            "sizeY": 3,
                                            "col": 0,
                                            "row": 0
                                        },
                                        "title": "string",
                                        "description": "string",
                                        "updated_at": "2019-08-24T14:15:22Z",
                                        "created_at": "2019-08-24T14:15:22Z"
                                    },
                                    "visualization": {
                                        "id": "string",
                                        "type": "string",
                                        "name": "string",
                                        "description": "string",
                                        "options": {},
                                        "updated_at": "2019-08-24T14:15:22Z",
                                        "created_at": "2019-08-24T14:15:22Z"
                                    }
                                }
                            ],
                            "is_archived": true,
                            "is_draft": true,
                            "tags": [
                                "string"
                            ],
                            "updated_at": "2019-08-24T14:15:22Z",
                            "created_at": "2019-08-24T14:15:22Z",
                            "is_favorite": true,
                            "can_edit": true,
                            "permission_tier": "CAN_VIEW",
                            "user": {
                                "id": 0,
                                "name": "string",
                                "email": "user@example.com"
                            },
                            "options": {
                                "moved_to_trash_at": "2019-08-24T14:15:22Z"
                            }
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119341,
        "executor_type": "THIRDPARTY",
        "executor_name": "restoreDashboard",
        "executor_version": "v2",
        "executor_display_name": "Restore a dashboard",
        "executor_description": "A restored dashboard appears in list views and searches and can be shared.",
        "executor_category": "Dashboards",
        "executor_category_group": "Dashboards",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/sql/dashboards/trash/{dashboard_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "dashboard_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698751248464,
        "lastModifiedTime": 1698751248464,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "Dashboard restored successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119338,
        "executor_type": "THIRDPARTY",
        "executor_name": "createDashboardObject",
        "executor_version": "v2",
        "executor_display_name": "Create a dashboard object",
        "executor_description": "Creates a new dashboard object. Only the name parameter is required in the POST request JSON body. Other fields can be included when duplicating dashboards with this API. Databricks does not recommend designing dashboards exclusively using this API.',",
        "executor_category": "Dashboards",
        "executor_category_group": "Dashboards",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/sql/dashboards",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "parent": "folders/2025532471912059",
                "tags": [
                    "string"
                ],
                "is_favorite": true,
                "run_as_role": "viewer",
                "dashboard_filters_enabled": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698751023376,
        "lastModifiedTime": 1698751023376,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "A dashboard object was successfully created.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "slug": "string",
                    "parent": "folders/2025532471912059",
                    "name": "string",
                    "user_id": 0,
                    "dashboard_filters_enabled": false,
                    "widgets": [
                        {
                            "id": "string",
                            "width": 0,
                            "options": {
                                "parameterMappings": {},
                                "isHidden": false,
                                "position": {
                                    "autoHeight": true,
                                    "sizeX": 3,
                                    "sizeY": 3,
                                    "col": 0,
                                    "row": 0
                                },
                                "title": "string",
                                "description": "string",
                                "updated_at": "2019-08-24T14:15:22Z",
                                "created_at": "2019-08-24T14:15:22Z"
                            },
                            "visualization": {
                                "id": "string",
                                "type": "string",
                                "name": "string",
                                "description": "string",
                                "options": {},
                                "updated_at": "2019-08-24T14:15:22Z",
                                "created_at": "2019-08-24T14:15:22Z"
                            }
                        }
                    ],
                    "is_archived": true,
                    "is_draft": true,
                    "tags": [
                        "string"
                    ],
                    "updated_at": "2019-08-24T14:15:22Z",
                    "created_at": "2019-08-24T14:15:22Z",
                    "is_favorite": true,
                    "can_edit": true,
                    "permission_tier": "CAN_VIEW",
                    "user": {
                        "id": 0,
                        "name": "string",
                        "email": "user@example.com"
                    },
                    "options": {
                        "moved_to_trash_at": "2019-08-24T14:15:22Z"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119340,
        "executor_type": "THIRDPARTY",
        "executor_name": "removeDashboard",
        "executor_version": "v2",
        "executor_display_name": "Remove a dashboard",
        "executor_description": "Moves a dashboard to the trash. Trashed dashboards do not appear in list views or searches, and cannot be shared.",
        "executor_category": "Dashboards",
        "executor_category_group": "Dashboards",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/sql/dashboards/{dashboard_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "dashboard_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698751163946,
        "lastModifiedTime": 1698751446524,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "Dashboard successfully moved to trash.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119339,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveDefinition",
        "executor_version": "v2",
        "executor_display_name": "Retrieve a definition",
        "executor_description": "Returns a JSON representation of a dashboard object, including its visualization and query objects.",
        "executor_category": "Dashboards",
        "executor_category_group": "Dashboards",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/sql/dashboards/{dashboard_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "dashboard_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698751104443,
        "lastModifiedTime": 1698751104443,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "Dashboard fetched successfully",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "slug": "string",
                    "parent": "folders/2025532471912059",
                    "name": "string",
                    "user_id": 0,
                    "dashboard_filters_enabled": false,
                    "widgets": [
                        {
                            "id": "string",
                            "width": 0,
                            "options": {
                                "parameterMappings": {},
                                "isHidden": false,
                                "position": {
                                    "autoHeight": true,
                                    "sizeX": 3,
                                    "sizeY": 3,
                                    "col": 0,
                                    "row": 0
                                },
                                "title": "string",
                                "description": "string",
                                "updated_at": "2019-08-24T14:15:22Z",
                                "created_at": "2019-08-24T14:15:22Z"
                            },
                            "visualization": {
                                "id": "string",
                                "type": "string",
                                "name": "string",
                                "description": "string",
                                "options": {},
                                "updated_at": "2019-08-24T14:15:22Z",
                                "created_at": "2019-08-24T14:15:22Z"
                            }
                        }
                    ],
                    "is_archived": true,
                    "is_draft": true,
                    "tags": [
                        "string"
                    ],
                    "updated_at": "2019-08-24T14:15:22Z",
                    "created_at": "2019-08-24T14:15:22Z",
                    "is_favorite": true,
                    "can_edit": true,
                    "permission_tier": "CAN_VIEW",
                    "user": {
                        "id": 0,
                        "name": "string",
                        "email": "user@example.com"
                    },
                    "options": {
                        "moved_to_trash_at": "2019-08-24T14:15:22Z"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119297,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaModelVersion",
        "executor_version": "v2",
        "executor_display_name": "Delete a Model Version",
        "executor_description": "Deletes a model version from the specified registered model. Any aliases assigned to the model version will also be deleted.  The caller must be a metastore admin or an owner of the parent registered model. For the latter case, the caller must also be the owner or have the USE_CATALOG privilege on the parent catalog and the USE_SCHEMA privilege on the parent schema.",
        "executor_category": "ModelVersions",
        "executor_category_group": "ModelVersions",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/models/{full_name}/versions/{version}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "full_name",
                "value": "",
                "description": "Examples: main.default.revenue_forecasting_model - Execute the operation against a model version in the `revenue_forecasting_model` under `main` catalog and `default` schema The three-level (fully qualified) name of the model version"
            },
            {
                "key": "version",
                "value": "",
                "description": "Examples: 2 - Execute the operation against the model version with version number 2, under the `main.default.revenue_forecasting` model (the model full name is specified via the `full_name` parameter) The integer version number of the model version"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698745542898,
        "lastModifiedTime": 1698745542898,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Successfully deleted the model version",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "CATALOG_DOES_NOT_EXIST, SCHEMA_DOES_NOT_EXIST, RESOURCE_DOES_NOT_EXIST",
                "description": "CATALOG_DOES_NOT_EXIST - SCHEMA_DOES_NOT_EXIST - RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119289,
        "executor_type": "THIRDPARTY",
        "executor_name": "listModelVersions",
        "executor_version": "v2",
        "executor_display_name": "List Model Versions",
        "executor_description": "List model versions. You can list model versions under a particular schema, or list all model versions in the current metastore.  The returned models are filtered based on the privileges of the calling user. For example, the metastore admin is able to list all the model versions. A regular user needs to be the owner or have the EXECUTE privilege on the parent registered model to recieve the model versions in the response. For the latter case, the caller must also be the owner or have the USE_CATALOG privilege on the parent catalog and the USE_SCHEMA privilege on the parent schema.  There is no guarantee of a specific ordering of the elements in the response.",
        "executor_category": "ModelVersions",
        "executor_category_group": "ModelVersions",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/models/{full_name}/versions",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "full_name",
                "value": "",
                "description": "Examples: main.default.revenue_forecasting - List model versions under the `main.default.revenue_forecasting` registered model The full three-level name of the registered model under which to list model versions"
            }
        ],
        "queryParams": [
            {
                "key": "max_results",
                "value": "",
                "description": "Examples: max_results=200 - Restrict the result to at most 200 model versions Max number of model versions to return",
                "req": false
            },
            {
                "key": "page_token",
                "value": "",
                "description": "Opaque token to send for the next page of results (pagination).",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698744344071,
        "lastModifiedTime": 1698744344071,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The model version list was successfully retrieved",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "model_versions": [
                        {
                            "model_name": "revenue_forecasting_model",
                            "catalog_name": "main",
                            "schema_name": "default",
                            "comment": "This model version forecasts future revenue given historical data, using classic ML techniques",
                            "source": "dbfs:/databricks/mlflow-tracking/1234567890/abcdef/artifacts/model",
                            "run_id": "abcdef",
                            "run_workspace_id": "6051234418418567",
                            "version": 1,
                            "status": "READY",
                            "id": "9876543-21zy-abcd-3210-abcdef456789",
                            "metastore_id": "11111111-1111-1111-1111-111111111111",
                            "created_at": 1666369196203,
                            "created_by": "Alice@example.com",
                            "updated_at": 1666369196203,
                            "updated_by": "Alice@example.com",
                            "storage_location": "s3://my-bucket/hello/world/models/2222-2222/versions/9876543-21zy-abcd-3210-abcdef456789"
                        },
                        {
                            "model_name": "revenue_forecasting_model",
                            "catalog_name": "main",
                            "schema_name": "default",
                            "comment": "This model version forecasts future revenue given historical data, using deep learning",
                            "source": "dbfs:/databricks/mlflow-tracking/1234567890/abcdef/artifacts/model",
                            "run_id": "abcdef",
                            "run_workspace_id": "6051234418418567",
                            "version": 2,
                            "status": "READY",
                            "id": "01234567-89ab-cdef-0123-456789abcdef",
                            "metastore_id": "11111111-1111-1111-1111-111111111111",
                            "created_at": 1666369196907,
                            "created_by": "Alice@example.com",
                            "updated_at": 1666369196907,
                            "updated_by": "Alice@example.com",
                            "storage_location": "s3://my-bucket/hello/world/models/2222-2222/versions/01234567-89ab-cdef-0123-456789abcdef"
                        }
                    ],
                    "next_page_token": "some-page-token"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "CATALOG_DOES_NOT_EXIST, SCHEMA_DOES_NOT_EXIST, RESOURCE_DOES_NOT_EXIST",
                "description": "CATALOG_DOES_NOT_EXIST - SCHEMA_DOES_NOT_EXIST - RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119294,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateaModelVersion",
        "executor_version": "v2",
        "executor_display_name": "Update a Model Version",
        "executor_description": "Updates the specified model version.  The caller must be a metastore admin or an owner of the parent registered model. For the latter case, the caller must also be the owner or have the USE_CATALOG privilege on the parent catalog and the USE_SCHEMA privilege on the parent schema.  Currently only the comment of the model version can be updated.",
        "executor_category": "ModelVersions",
        "executor_category_group": "ModelVersions",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/models/{full_name}/versions/{version}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "full_name",
                "value": "",
                "description": "Examples: main.default.revenue_forecasting_model - Execute the operation against a model version in the `revenue_forecasting_model` under `main` catalog and `default` schema The three-level (fully qualified) name of the model version"
            },
            {
                "key": "version",
                "value": "",
                "description": "Examples: 2 - Execute the operation against the model version with version number 2, under the `main.default.revenue_forecasting` model (the model full name is specified via the `full_name` parameter) The integer version number of the model version"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "comment": "This is my new model version comment"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698745364751,
        "lastModifiedTime": 1698745364751,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Successfully updated the properties of the model version",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "model_name": "revenue_forecasting_model",
                    "catalog_name": "main",
                    "schema_name": "default",
                    "comment": "This is my new model version comment",
                    "source": "dbfs:/databricks/mlflow-tracking/1234567890/abcdef/artifacts/model",
                    "run_id": "abcdef",
                    "run_workspace_id": "6051234418418567",
                    "version": 1,
                    "status": "READY",
                    "id": "01234567-89ab-cdef-0123-456789abcdef",
                    "metastore_id": "11111111-1111-1111-1111-111111111111",
                    "created_at": 1666369196203,
                    "created_by": "Alice@example.com",
                    "updated_at": 1666369196203,
                    "updated_by": "Alice@example.com",
                    "storage_location": "s3://my-bucket/hello/world/models/2222-2222/versions/01234567-89ab-cdef-0123-456789abcdef"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "CATALOG_DOES_NOT_EXIST, SCHEMA_DOES_NOT_EXIST, RESOURCE_DOES_NOT_EXIST",
                "description": "CATALOG_DOES_NOT_EXIST - SCHEMA_DOES_NOT_EXIST - RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119292,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaModelVersion",
        "executor_version": "v2",
        "executor_display_name": "Get a Model Version",
        "executor_description": "Get a model version.  The caller must be a metastore admin or an owner of (or have the EXECUTE privilege on) the parent registered model. For the latter case, the caller must also be the owner or have the USE_CATALOG privilege on the parent catalog and the USE_SCHEMA privilege on the parent schema.",
        "executor_category": "ModelVersions",
        "executor_category_group": "ModelVersions",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/models/{full_name}/versions/{version}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "full_name",
                "value": "",
                "description": "Examples: main.default.revenue_forecasting_model - Execute the operation against a model version in the `revenue_forecasting_model` under `main` catalog and `default` schema The three-level (fully qualified) name of the model version"
            },
            {
                "key": "version",
                "value": "",
                "description": "Examples: 2 - Execute the operation against the model version with version number 2, under the `main.default.revenue_forecasting` model (the model full name is specified via the `full_name` parameter) The integer version number of the model version"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698744965052,
        "lastModifiedTime": 1698744965053,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Successfully retrieved the properties of the model version",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "model_name": "revenue_forecasting_model",
                    "catalog_name": "main",
                    "schema_name": "default",
                    "comment": "This model version forecasts future revenue given historical data, using classic ML techniques",
                    "source": "dbfs:/databricks/mlflow-tracking/1234567890/abcdef/artifacts/model",
                    "run_id": "abcdef",
                    "run_workspace_id": "6051234418418567",
                    "version": 1,
                    "status": "READY",
                    "id": "01234567-89ab-cdef-0123-456789abcdef",
                    "metastore_id": "11111111-1111-1111-1111-111111111111",
                    "created_at": 1666369196203,
                    "created_by": "Alice@example.com",
                    "updated_at": 1666369196203,
                    "updated_by": "Alice@example.com",
                    "storage_location": "s3://my-bucket/hello/world/models/2222-2222/versions/01234567-89ab-cdef-0123-456789abcdef"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "CATALOG_DOES_NOT_EXIST, SCHEMA_DOES_NOT_EXIST, RESOURCE_DOES_NOT_EXIST",
                "description": "CATALOG_DOES_NOT_EXIST - SCHEMA_DOES_NOT_EXIST - RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119299,
        "executor_type": "THIRDPARTY",
        "executor_name": "getModelVersionByAlias",
        "executor_version": "v2",
        "executor_display_name": "Get Model Version By Alias",
        "executor_description": "Get a model version by alias.  The caller must be a metastore admin or an owner of (or have the EXECUTE privilege on) the registered model. For the latter case, the caller must also be the owner or have the USE_CATALOG privilege on the parent catalog and the USE_SCHEMA privilege on the parent schema.",
        "executor_category": "ModelVersions",
        "executor_category_group": "ModelVersions",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/models/{full_name}/aliases/{alias}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "full_name",
                "value": "",
                "description": "Examples: main.default.revenue_forecasting_model - Execute the operation against the registered model named `revenue_forecasting_model` under `main` catalog and `default` schema The three-level (fully qualified) name of the registered model"
            },
            {
                "key": "alias",
                "value": "",
                "description": "Examples: champion - Execute the operation against the the 'champion' alias The name of the alias"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698745780405,
        "lastModifiedTime": 1698745780405,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Successfully retrieved the properties of the model version",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "model_name": "revenue_forecasting_model",
                    "catalog_name": "main",
                    "schema_name": "default",
                    "comment": "This model version forecasts future revenue, given historical data",
                    "source": "dbfs:/databricks/mlflow-tracking/1234567890/abcdef/artifacts/model",
                    "run_id": "abcdef",
                    "run_workspace_id": "6051234418418567",
                    "version": 1,
                    "status": "PENDING_REGISTRATION",
                    "id": "01234567-89ab-cdef-0123-456789abcdef",
                    "metastore_id": "11111111-1111-1111-1111-111111111111",
                    "created_at": 1666369196203,
                    "created_by": "Alice@example.com",
                    "updated_at": 1666369196203,
                    "updated_by": "Alice@example.com",
                    "storage_location": "s3://my-bucket/hello/world/models/2222-2222/versions/01234567-89ab-cdef-0123-456789abcdef",
                    "aliases": [
                        {
                            "alias_name": "champion",
                            "version_num": 1
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "CATALOG_DOES_NOT_EXIST, SCHEMA_DOES_NOT_EXIST, RESOURCE_DOES_NOT_EXIST",
                "description": "CATALOG_DOES_NOT_EXIST - SCHEMA_DOES_NOT_EXIST - RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119316,
        "executor_type": "THIRDPARTY",
        "executor_name": "setclusterpolicypermissions",
        "executor_version": "v2",
        "executor_display_name": "Set cluster policy permissions\u2002",
        "executor_description": "Sets permissions on a cluster policy. Cluster policies can inherit permissions from their root object.",
        "executor_category": "ClusterPolicies",
        "executor_category_group": "ClusterPolicies",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/cluster-policies/{cluster_policy_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "cluster_policy_id",
                "value": "",
                "description": "The cluster policy for which to get or manage permissions."
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_USE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698749183956,
        "lastModifiedTime": 1698749183956,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_USE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119322,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaclusterpolicy",
        "executor_version": "v2",
        "executor_display_name": "Delete a cluster policy\u2002",
        "executor_description": "Delete a policy for a cluster. Clusters governed by this policy can still run, but cannot be edited.",
        "executor_category": "ClusterPolicies",
        "executor_category_group": "ClusterPolicies",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/policies/clusters/delete",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "policy_id": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698749628956,
        "lastModifiedTime": 1698749628956,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "policy_id": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119327,
        "executor_type": "THIRDPARTY",
        "executor_name": "listclusterpolicies",
        "executor_version": "v2",
        "executor_display_name": "List cluster policies\u2002",
        "executor_description": "Get a cluster policy entity. Creation and editing is availableReturns a list of policies accessible by the requesting user. to admins only.",
        "executor_category": "ClusterPolicies",
        "executor_category_group": "ClusterPolicies",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/policies/clusters/list",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "sort_order",
                "value": "",
                "description": "sort_order string Default: \"DESC\" Enum: \"DESC\" \"ASC\" The order in which the policies get listed.  DESC - Sort result list in descending order. ASC - Sort result list in ascending order.",
                "req": false
            },
            {
                "key": "sort_column",
                "value": "",
                "description": "Enum: \"POLICY_CREATION_TIME\" \"POLICY_NAME\" The cluster policy attribute to sort by.  POLICY_CREATION_TIME - Sort result list by policy creation time. POLICY_NAME - Sort result list by policy name.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698749950913,
        "lastModifiedTime": 1698749950913,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "policies": [
                        {
                            "policy_id": "string",
                            "name": "string",
                            "definition": "{ \"custom_tags.test_tag\": { \"type\": \"fixed\", \"value\": \"test_value\" } }\n",
                            "max_clusters_per_user": 1,
                            "creator_user_name": "string",
                            "created_at_timestamp": 0
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119317,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateclusterpolicypermissions",
        "executor_version": "v2",
        "executor_display_name": "Update cluster policy permissions\u2002",
        "executor_description": "Updates the permissions on a cluster policy. Cluster policies can inherit permissions from their root object.",
        "executor_category": "ClusterPolicies",
        "executor_category_group": "ClusterPolicies",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/cluster-policies/{cluster_policy_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "cluster_policy_id",
                "value": "",
                "description": "The cluster policy for which to get or manage permissions."
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_USE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698749281358,
        "lastModifiedTime": 1698749281358,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_USE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119320,
        "executor_type": "THIRDPARTY",
        "executor_name": "createanewpolicy",
        "executor_version": "v2",
        "executor_display_name": "Create a new policy\u2002",
        "executor_description": "Creates a new policy with prescribed settings.",
        "executor_category": "ClusterPolicies",
        "executor_category_group": "ClusterPolicies",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/policies/clusters/create",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "Test policy",
                "definition": "{ \"custom_tags.test_tag\": { \"type\": \"fixed\", \"value\": \"test_value\" } }\n"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698749520865,
        "lastModifiedTime": 1698749520865,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "policy_id": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119315,
        "executor_type": "THIRDPARTY",
        "executor_name": "getclusterpolicypermissions",
        "executor_version": "v2",
        "executor_display_name": "Get cluster policy permissions\u2002",
        "executor_description": "Gets the permissions of a cluster policy. Cluster policies can inherit permissions from their root object.",
        "executor_category": "ClusterPolicies",
        "executor_category_group": "ClusterPolicies",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/cluster-policies/{cluster_policy_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "cluster_policy_id",
                "value": "",
                "description": "The cluster policy for which to get or manage permissions."
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698748945066,
        "lastModifiedTime": 1698748945066,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_USE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119324,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaclusterpolicy",
        "executor_version": "v2",
        "executor_display_name": "Get a cluster policy\u2002",
        "executor_description": "Get a cluster policy entity. Creation and editing is available to admins only.",
        "executor_category": "ClusterPolicies",
        "executor_category_group": "ClusterPolicies",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/policies/clusters/get",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "policy_id",
                "value": "",
                "description": "Canonical unique identifier for the cluster policy.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698749841480,
        "lastModifiedTime": 1698749841480,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "policy_id": "string",
                    "name": "string",
                    "definition": "{ \"custom_tags.test_tag\": { \"type\": \"fixed\", \"value\": \"test_value\" } }\n",
                    "max_clusters_per_user": 1,
                    "creator_user_name": "string",
                    "created_at_timestamp": 0
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119318,
        "executor_type": "THIRDPARTY",
        "executor_name": "getclusterpolicypermissionlevels",
        "executor_version": "v2",
        "executor_display_name": "Get cluster policy permission levels\u2002",
        "executor_description": "Gets the permission levels that a user can have on an object.",
        "executor_category": "ClusterPolicies",
        "executor_category_group": "ClusterPolicies",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/cluster-policies/{cluster_policy_id}/permissionLevels",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "cluster_policy_id",
                "value": "",
                "description": "The cluster policy for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698749360561,
        "lastModifiedTime": 1698749360561,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "permission_levels": [
                        {
                            "permission_level": "CAN_USE",
                            "description": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119323,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateaclusterpolicy",
        "executor_version": "v2",
        "executor_display_name": "Update a cluster policy\u2002",
        "executor_description": "Update an existing policy for cluster. This operation may make some clusters governed by the previous policy invalid.",
        "executor_category": "ClusterPolicies",
        "executor_category_group": "ClusterPolicies",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/policies/clusters/edit",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "policy_id": "ABCD000000000000",
                "name": "Test policy",
                "definition": "{ \"custom_tags.test_tag\": { \"type\": \"fixed\", \"value\": \"test_value\" } }\n"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698749764758,
        "lastModifiedTime": 1698749764758,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Internal error.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119332,
        "executor_type": "THIRDPARTY",
        "executor_name": "listRegisteredModels",
        "executor_version": "v2",
        "executor_display_name": "List Registered Models",
        "executor_description": "List registered models. You can list registered models under a particular schema, or list all registered models in the current metastore.  The returned models are filtered based on the privileges of the calling user. For example, the metastore admin is able to list all the registered models. A regular user needs to be the owner or have the EXECUTE privilege on the registered model to recieve the registered models in the response. For the latter case, the caller must also be the owner or have the USE_CATALOG privilege on the parent catalog and the USE_SCHEMA privilege on the parent schema.  There is no guarantee of a specific ordering of the elements in the response.",
        "executor_category": "RegisteredModels",
        "executor_category_group": "RegisteredModels",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/models",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "catalog_name",
                "value": "",
                "description": "Examples: catalog_name=main - Specify the target catalog to be `main` The identifier of the catalog under which to list registered models. If specified, schema_name must be specified.",
                "req": false
            },
            {
                "key": "schema_name",
                "value": "",
                "description": "Examples: schema_name=default - Specify the target schema to be `default` The identifier of the schema under which to list registered models. If specified, catalog_name must be specified.",
                "req": false
            },
            {
                "key": "max_results",
                "value": "",
                "description": "Examples: max_results=100 - Restrict the result to at most 100 registered models Max number of registered models to return. If catalog and schema are unspecified, max_results must be specified. If max_results is unspecified, we return all results, starting from the page specified by page_token.",
                "req": false
            },
            {
                "key": "page_token",
                "value": "",
                "description": "Opaque token to send for the next page of results (pagination).",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698750382427,
        "lastModifiedTime": 1698750495056,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The registered model list was successfully retrieved",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "registered_models": [
                        {
                            "name": "revenue_forecasting_model",
                            "catalog_name": "main",
                            "schema_name": "default",
                            "full_name": "main.default.revenue_forecasting_model",
                            "owner": "Alice@example.com",
                            "id": "01234567-89ab-cdef-0123-456789abcdef",
                            "metastore_id": "11111111-1111-1111-1111-111111111111",
                            "created_at": 1666369196203,
                            "created_by": "Alice@example.com",
                            "updated_at": 1666369196203,
                            "updated_by": "Alice@example.com",
                            "storage_location": "s3://my-bucket/hello/world/models/01234567-89ab-cdef-0123-456789abcdef",
                            "securable_type": "FUNCTION",
                            "securable_kind": "FUNCTION_REGISTERED_MODEL",
                            "comment": "This model contains model versions that forecast future revenue, given historical data"
                        },
                        {
                            "name": "fraud_detection_model",
                            "catalog_name": "main",
                            "schema_name": "default",
                            "full_name": "main.default.fraud_detection_model",
                            "owner": "Alice@example.com",
                            "id": "9876543-21zy-abcd-3210-abcdef456789",
                            "metastore_id": "11111111-1111-1111-1111-111111111111",
                            "created_at": 1666369196345,
                            "created_by": "Alice@example.com",
                            "updated_at": 1666369196345,
                            "updated_by": "Alice@example.com",
                            "storage_location": "s3://my-bucket/hello/world/models/9876543-21zy-abcd-3210-abcdef456789",
                            "securable_type": "FUNCTION",
                            "securable_kind": "FUNCTION_REGISTERED_MODEL",
                            "comment": "This model contains model versions that identify fraudulent transactions"
                        }
                    ],
                    "next_page_token": "some-page-token"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "CATALOG_DOES_NOT_EXIST, SCHEMA_DOES_NOT_EXIST",
                "description": "CATALOG_DOES_NOT_EXIST - SCHEMA_DOES_NOT_EXIST -",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119348,
        "executor_type": "THIRDPARTY",
        "executor_name": "setaRegisteredModelAlias",
        "executor_version": "v2",
        "executor_display_name": "Set a Registered Model Alias",
        "executor_description": "Set an alias on the specified registered model.  The caller must be a metastore admin or an owner of the registered model. For the latter case, the caller must also be the owner or have the USE_CATALOG privilege on the parent catalog and the USE_SCHEMA privilege on the parent schema.",
        "executor_category": "RegisteredModels",
        "executor_category_group": "RegisteredModels",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/models/{full_name}/aliases/{alias}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "full_name",
                "value": "",
                "description": "Examples: main.default.revenue_forecasting_model - Execute the operation against the registered model named `revenue_forecasting_model` under `main` catalog and `default` schema The three-level (fully qualified) name of the registered model"
            },
            {
                "key": "alias",
                "value": "",
                "description": "Examples: champion - Execute the operation against the the 'champion' alias The name of the alias"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "version_num": 2
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698752093930,
        "lastModifiedTime": 1698752093930,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Successfully set the specified alias on the registered model",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "alias_name": "champion",
                    "version_num": 2
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "CATALOG_DOES_NOT_EXIST, SCHEMA_DOES_NOT_EXIST, RESOURCE_DOES_NOT_EXIST",
                "description": "CATALOG_DOES_NOT_EXIST - SCHEMA_DOES_NOT_EXIST - RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119349,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaRegisteredModelAlias",
        "executor_version": "v2",
        "executor_display_name": "Delete a Registered Model Alias",
        "executor_description": "Deletes a registered model alias.  The caller must be a metastore admin or an owner of the registered model. For the latter case, the caller must also be the owner or have the USE_CATALOG privilege on the parent catalog and the USE_SCHEMA privilege on the parent schema.",
        "executor_category": "RegisteredModels",
        "executor_category_group": "RegisteredModels",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/models/{full_name}/aliases/{alias}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "full_name",
                "value": "",
                "description": "Examples: main.default.revenue_forecasting_model - Execute the operation against the registered model named `revenue_forecasting_model` under `main` catalog and `default` schema The three-level (fully qualified) name of the registered model"
            },
            {
                "key": "alias",
                "value": "",
                "description": "Examples: champion - Execute the operation against the the 'champion' alias The name of the alias"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698752277096,
        "lastModifiedTime": 1698752277096,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Successfully deleted the registered model alias",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "CATALOG_DOES_NOT_EXIST, SCHEMA_DOES_NOT_EXIST, RESOURCE_DOES_NOT_EXIST",
                "description": "CATALOG_DOES_NOT_EXIST - SCHEMA_DOES_NOT_EXIST - RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119347,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaRegisteredModel",
        "executor_version": "v2",
        "executor_display_name": "Delete a Registered Model",
        "executor_description": "Deletes a registered model and all its model versions from the specified parent catalog and schema.  The caller must be a metastore admin or an owner of the registered model. For the latter case, the caller must also be the owner or have the USE_CATALOG privilege on the parent catalog and the USE_SCHEMA privilege on the parent schema.",
        "executor_category": "RegisteredModels",
        "executor_category_group": "RegisteredModels",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/models/{full_name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "full_name",
                "value": "",
                "description": "Examples: main.default.revenue_forecasting_model - Execute the operation against the registered model named `revenue_forecasting_model` under `main` catalog and `default` schema The three-level (fully qualified) name of the registered model"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698751870754,
        "lastModifiedTime": 1698751870754,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Successfully deleted the registered model",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "CATALOG_DOES_NOT_EXIST, SCHEMA_DOES_NOT_EXIST, RESOURCE_DOES_NOT_EXIST",
                "description": "CATALOG_DOES_NOT_EXIST - SCHEMA_DOES_NOT_EXIST - RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119337,
        "executor_type": "THIRDPARTY",
        "executor_name": "createaRegisteredModel",
        "executor_version": "v2",
        "executor_display_name": "Create a Registered Model",
        "executor_description": "Creates a new registered model in Unity Catalog.  File storage for model versions in the registered model will be located in the default location which is specified by the parent schema, or the parent catalog, or the Metastore.  For registered model creation to succeed, the user must satisfy the following conditions:  The caller must be a metastore admin, or be the owner of the parent catalog and schema, or have the USE_CATALOG privilege on the parent catalog and the USE_SCHEMA privilege on the parent schema. The caller must have the CREATE MODEL or CREATE FUNCTION privilege on the parent schema.",
        "executor_category": "RegisteredModels",
        "executor_category_group": "RegisteredModels",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/models",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "catalog_name",
                "value": "",
                "description": "Examples: catalog_name=main - Specify the target catalog to be `main` The identifier of the catalog under which to list registered models. If specified, schema_name must be specified.",
                "req": false
            },
            {
                "key": "schema_name",
                "value": "",
                "description": "Examples: schema_name=default - Specify the target schema to be `default` The identifier of the schema under which to list registered models. If specified, catalog_name must be specified.",
                "req": false
            },
            {
                "key": "max_results",
                "value": "",
                "description": "Examples: max_results=100 - Restrict the result to at most 100 registered models Max number of registered models to return. If catalog and schema are unspecified, max_results must be specified. If max_results is unspecified, we return all results, starting from the page specified by page_token.",
                "req": false
            },
            {
                "key": "page_token",
                "value": "",
                "description": "Opaque token to send for the next page of results (pagination).",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "revenue_forecasting_model",
                "catalog_name": "main",
                "schema_name": "default",
                "comment": "This model contains model versions that forecast future revenue, given historical data"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698750887647,
        "lastModifiedTime": 1698750887647,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Successfully created the registered model",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "revenue_forecasting_model",
                    "catalog_name": "main",
                    "schema_name": "default",
                    "full_name": "main.default.revenue_forecasting_model",
                    "owner": "Alice@example.com",
                    "id": "01234567-89ab-cdef-0123-456789abcdef",
                    "metastore_id": "11111111-1111-1111-1111-111111111111",
                    "created_at": 1666369196203,
                    "created_by": "Alice@example.com",
                    "updated_at": 1666369196203,
                    "updated_by": "Alice@example.com",
                    "storage_location": "s3://my-bucket/hello/world/my-model",
                    "securable_type": "FUNCTION",
                    "securable_kind": "FUNCTION_REGISTERED_MODEL",
                    "comment": "This model contains model versions that forecast future revenue, given historical data"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_ALREADY_EXISTS, INVALID_PARAMETER_VALUE",
                "description": "RESOURCE_ALREADY_EXISTS - Operation was performed on a resource that already exists. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "CATALOG_DOES_NOT_EXIST, SCHEMA_DOES_NOT_EXIST",
                "description": "CATALOG_DOES_NOT_EXIST - SCHEMA_DOES_NOT_EXIST -",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119342,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaRegisteredModel",
        "executor_version": "v2",
        "executor_display_name": "Get a Registered Model",
        "executor_description": "Get a registered model.  The caller must be a metastore admin or an owner of (or have the EXECUTE privilege on) the registered model. For the latter case, the caller must also be the owner or have the USE_CATALOG privilege on the parent catalog and the USE_SCHEMA privilege on the parent schema.",
        "executor_category": "RegisteredModels",
        "executor_category_group": "RegisteredModels",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/models/{full_name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "full_name",
                "value": "",
                "description": "Examples: main.default.revenue_forecasting_model - Execute the operation against the registered model named `revenue_forecasting_model` under `main` catalog and `default` schema The three-level (fully qualified) name of the registered model"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698751335852,
        "lastModifiedTime": 1698751335852,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Successfully retrieved the properties of the registered model",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "my_model",
                    "catalog_name": "main",
                    "schema_name": "default",
                    "full_name": "main.default.my_model",
                    "owner": "Alice@example.com",
                    "id": "01234567-89ab-cdef-0123-456789abcdef",
                    "metastore_id": "11111111-1111-1111-1111-111111111111",
                    "created_at": 1666369196203,
                    "created_by": "Alice@example.com",
                    "updated_at": 1666369196203,
                    "updated_by": "Alice@example.com",
                    "storage_location": "s3://my-bucket/hello/world/my-model",
                    "securable_type": "FUNCTION",
                    "securable_kind": "FUNCTION_REGISTERED_MODEL",
                    "comment": "This is my first model"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "CATALOG_DOES_NOT_EXIST, SCHEMA_DOES_NOT_EXIST, RESOURCE_DOES_NOT_EXIST",
                "description": "CATALOG_DOES_NOT_EXIST - SCHEMA_DOES_NOT_EXIST - RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119345,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateaRegisteredModel",
        "executor_version": "v2",
        "executor_display_name": "Update a Registered Model",
        "executor_description": "Updates the specified registered model.  The caller must be a metastore admin or an owner of the registered model. For the latter case, the caller must also be the owner or have the USE_CATALOG privilege on the parent catalog and the USE_SCHEMA privilege on the parent schema.  Currently only the name, the owner or the comment of the registered model can be updated.",
        "executor_category": "RegisteredModels",
        "executor_category_group": "RegisteredModels",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/models/{full_name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "full_name",
                "value": "",
                "description": "Examples: main.default.revenue_forecasting_model - Execute the operation against the registered model named `revenue_forecasting_model` under `main` catalog and `default` schema The three-level (fully qualified) name of the registered model"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "my_new_model"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698751675611,
        "lastModifiedTime": 1698751675611,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Successfully updated the properties of the registered model",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "my_new_model",
                    "catalog_name": "main",
                    "schema_name": "default",
                    "full_name": "main.default.my_new_model",
                    "owner": "Bob@example.com",
                    "id": "01234567-89ab-cdef-0123-456789abcdef",
                    "metastore_id": "11111111-1111-1111-1111-111111111111",
                    "created_at": 1666369196203,
                    "created_by": "Alice@example.com",
                    "updated_at": 1666369207415,
                    "updated_by": "Alice@example.com",
                    "storage_location": "s3://my-bucket/hello/world/my-model",
                    "securable_type": "FUNCTION",
                    "securable_kind": "FUNCTION_REGISTERED_MODEL",
                    "comment": "This is my new model"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_ALREADY_EXISTS, INVALID_PARAMETER_VALUE",
                "description": "RESOURCE_ALREADY_EXISTS - Operation was performed on a resource that already exists. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "CATALOG_DOES_NOT_EXIST, SCHEMA_DOES_NOT_EXIST",
                "description": "CATALOG_DOES_NOT_EXIST - SCHEMA_DOES_NOT_EXIST -",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119386,
        "executor_type": "THIRDPARTY",
        "executor_name": "getStatuS",
        "executor_version": "v2",
        "executor_display_name": "Get status\u2002",
        "executor_description": "Gets the status for an execution context.",
        "executor_category": "CommandExecution",
        "executor_category_group": "CommandExecution",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/1.2/contexts/status",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "clusterId",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "contextId",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698759260225,
        "lastModifiedTime": 1698759260225,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Status was returned successfully.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "status": "Running"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119387,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteanexecutioncontext",
        "executor_version": "v2",
        "executor_display_name": "Delete an execution context\u2002",
        "executor_description": "Deletes an execution context.",
        "executor_category": "CommandExecution",
        "executor_category_group": "CommandExecution",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/1.2/contexts/destroy",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "clusterId": "string",
                "contextId": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698759399611,
        "lastModifiedTime": 1698759399611,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Status was returned successfully.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "status": "Running"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119388,
        "executor_type": "THIRDPARTY",
        "executor_name": "runacommand",
        "executor_version": "v2",
        "executor_display_name": "Run a command\u2002",
        "executor_description": "Runs a cluster command in the given execution context, using the provided language.",
        "executor_category": "CommandExecution",
        "executor_category_group": "CommandExecution",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/1.2/commands/execute",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "clusterId": "string",
                "contextId": "string",
                "language": "python",
                "command": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698759455546,
        "lastModifiedTime": 1698759455546,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Status was returned successfully.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119385,
        "executor_type": "THIRDPARTY",
        "executor_name": "createanexecutioncontext",
        "executor_version": "v2",
        "executor_display_name": "Create an execution context\u2002",
        "executor_description": "Creates an execution context for running cluster commands.",
        "executor_category": "CommandExecution",
        "executor_category_group": "CommandExecution",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/1.2/contexts/create",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "clusterId": "string",
                "language": "python"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698759087043,
        "lastModifiedTime": 1698759087043,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Status was returned successfully.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119389,
        "executor_type": "THIRDPARTY",
        "executor_name": "getcommandinfo",
        "executor_version": "v2",
        "executor_display_name": "Get command info\u2002",
        "executor_description": "Gets the status of and, if available, the results from a currently executing command.",
        "executor_category": "CommandExecution",
        "executor_category_group": "CommandExecution",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/1.2/commands/status",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "clusterId",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "contextId",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "commandId",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698759524673,
        "lastModifiedTime": 1698759524673,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Status was returned successfully.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "status": "Cancelled",
                    "results": {
                        "resultType": "error",
                        "summary": "string",
                        "cause": "string",
                        "fileName": "string",
                        "fileNames": [
                            "string"
                        ],
                        "data": {},
                        "schema": [
                            {
                                "property1": {},
                                "property2": {}
                            }
                        ],
                        "truncated": true,
                        "isJsonSchema": true,
                        "pos": 0
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119390,
        "executor_type": "THIRDPARTY",
        "executor_name": "cancelacommand",
        "executor_version": "v2",
        "executor_display_name": "Cancel a command",
        "executor_description": "Cancels a currently running command within an execution context.",
        "executor_category": "CommandExecution",
        "executor_category_group": "CommandExecution",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/1.2/commands/cancel",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "clusterId",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "contextId",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "commandId",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "clusterId": "string",
                "contextId": "string",
                "commandId": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698759634855,
        "lastModifiedTime": 1698759634855,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Status was returned successfully.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "status": "Cancelled",
                    "results": {
                        "resultType": "error",
                        "summary": "string",
                        "cause": "string",
                        "fileName": "string",
                        "fileNames": [
                            "string"
                        ],
                        "data": {},
                        "schema": [
                            {
                                "property1": {},
                                "property2": {}
                            }
                        ],
                        "truncated": true,
                        "isJsonSchema": true,
                        "pos": 0
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119414,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSqlWarehousPermissions",
        "executor_version": "v2",
        "executor_display_name": "Get SQL warehouse permissions",
        "executor_description": "Gets the permissions of a SQL warehouse. SQL warehouses can inherit permissions from their root object.",
        "executor_category": "SQLWarehouses",
        "executor_category_group": "SQLWarehouses",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/warehouses/{warehouse_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "warehouse_id",
                "value": "",
                "description": "The SQL warehouse for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698815285984,
        "lastModifiedTime": 1698815285984,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119422,
        "executor_type": "THIRDPARTY",
        "executor_name": "setTheWorkspaceConfiguration",
        "executor_version": "v2",
        "executor_display_name": "Set the workspace configuration",
        "executor_description": "Sets the workspace level configuration that is shared by all SQL warehouses in a workspace.",
        "executor_category": "SQLWarehouses",
        "executor_category_group": "SQLWarehouses",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/sql/config/warehouses",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "security_policy": "NONE",
                "data_access_config": [
                    {
                        "key": "string",
                        "value": "string"
                    }
                ],
                "instance_profile_arn": "string",
                "channel": {
                    "name": "CHANNEL_NAME_UNSPECIFIED",
                    "dbsql_version": "string"
                },
                "global_param": {
                    "config_pair": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ],
                    "configuration_pairs": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ]
                },
                "config_param": {
                    "config_pair": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ],
                    "configuration_pairs": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ]
                },
                "sql_configuration_parameters": {
                    "config_pair": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ],
                    "configuration_pairs": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ]
                },
                "google_service_account": "string",
                "enabled_warehouse_types": [
                    {
                        "warehouse_type": "TYPE_UNSPECIFIED",
                        "enabled": true
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698816846374,
        "lastModifiedTime": 1698816846374,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119440,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateWarehouse",
        "executor_version": "v2",
        "executor_display_name": "Update a warehouse",
        "executor_description": "Updates the configuration for a SQL warehouse.",
        "executor_category": "SQLWarehouses",
        "executor_category_group": "SQLWarehouses",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/sql/warehouses/{id}/edit",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Required. Id of the warehouse to configure."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "cluster_size": "string",
                "min_num_clusters": "1",
                "max_num_clusters": 0,
                "auto_stop_mins": "120",
                "creator_name": "string",
                "instance_profile_arn": "string",
                "tags": {
                    "custom_tags": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ]
                },
                "spot_instance_policy": "POLICY_UNSPECIFIED",
                "enable_photon": true,
                "channel": {
                    "name": "CHANNEL_NAME_UNSPECIFIED",
                    "dbsql_version": "string"
                },
                "enable_serverless_compute": true,
                "warehouse_type": "TYPE_UNSPECIFIED"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698821940460,
        "lastModifiedTime": 1698821940460,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119415,
        "executor_type": "THIRDPARTY",
        "executor_name": "setSqlWarehousePermissions",
        "executor_version": "v2",
        "executor_display_name": "Set SQL warehouse permissions",
        "executor_description": "Sets permissions on a SQL warehouse. SQL warehouses can inherit permissions from their root object.",
        "executor_category": "SQLWarehouses",
        "executor_category_group": "SQLWarehouses",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/warehouses/{warehouse_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "warehouse_id",
                "value": "",
                "description": "The SQL warehouse for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_MANAGE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698815442932,
        "lastModifiedTime": 1698815442932,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119439,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteWarehouse",
        "executor_version": "v2",
        "executor_display_name": "Delete a warehouse",
        "executor_description": "Deletes a SQL warehouse.",
        "executor_category": "SQLWarehouses",
        "executor_category_group": "SQLWarehouses",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/sql/warehouses/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Required. Id of the SQL warehouse."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698821713548,
        "lastModifiedTime": 1698821713548,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119423,
        "executor_type": "THIRDPARTY",
        "executor_name": "listWarehouses",
        "executor_version": "v2",
        "executor_display_name": "List warehouses",
        "executor_description": "Lists all SQL warehouses that a user has manager permissions on.",
        "executor_category": "SQLWarehouses",
        "executor_category_group": "SQLWarehouses",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/sql/warehouses",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "run_as_user_id",
                "value": "",
                "description": "Service Principal which will be used to fetch the list of warehouses. If not specified, the user from the session header is used.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698816935803,
        "lastModifiedTime": 1698816935803,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "warehouses": [
                        {
                            "id": "string",
                            "name": "string",
                            "cluster_size": "string",
                            "min_num_clusters": "1",
                            "max_num_clusters": 0,
                            "auto_stop_mins": "120",
                            "creator_name": "string",
                            "instance_profile_arn": "string",
                            "tags": {
                                "custom_tags": [
                                    {
                                        "key": "string",
                                        "value": "string"
                                    }
                                ]
                            },
                            "spot_instance_policy": "POLICY_UNSPECIFIED",
                            "enable_photon": true,
                            "channel": {
                                "name": "CHANNEL_NAME_UNSPECIFIED",
                                "dbsql_version": "string"
                            },
                            "enable_serverless_compute": true,
                            "warehouse_type": "TYPE_UNSPECIFIED",
                            "num_clusters": 0,
                            "num_active_sessions": 0,
                            "state": "STARTING",
                            "jdbc_url": "string",
                            "odbc_params": {
                                "hostname": "string",
                                "path": "string",
                                "protocol": "string",
                                "port": 0
                            },
                            "health": {
                                "status": "STATUS_UNSPECIFIED",
                                "message": "string",
                                "failure_reason": {
                                    "code": "UNKNOWN",
                                    "type": "SUCCESS",
                                    "parameters": {
                                        "property1": "string",
                                        "property2": "string"
                                    }
                                },
                                "summary": "string",
                                "details": "string"
                            }
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119417,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateSqlWarehousePermissions",
        "executor_version": "v2",
        "executor_display_name": "Update SQL warehouse permissions",
        "executor_description": "Updates the permissions on a SQL warehouse. SQL warehouses can inherit permissions from their root object.",
        "executor_category": "SQLWarehouses",
        "executor_category_group": "SQLWarehouses",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/warehouses/{warehouse_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "warehouse_id",
                "value": "",
                "description": "The SQL warehouse for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_MANAGE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698816101913,
        "lastModifiedTime": 1698816101913,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119418,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSQLWarehousePermissionLevels",
        "executor_version": "v2",
        "executor_display_name": "Get SQL warehouse permission levels",
        "executor_description": "Gets the permission levels that a user can have on an object.",
        "executor_category": "SQLWarehouses",
        "executor_category_group": "SQLWarehouses",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/warehouses/{warehouse_id}/permissionLevels",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "warehouse_id",
                "value": "",
                "description": "The SQL warehouse for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698816266602,
        "lastModifiedTime": 1698816266602,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "permission_levels": [
                        {
                            "permission_level": "CAN_MANAGE",
                            "description": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119437,
        "executor_type": "THIRDPARTY",
        "executor_name": "createaWarehouse",
        "executor_version": "v2",
        "executor_display_name": "Create a warehouse",
        "executor_description": "Creates a new SQL warehouse.",
        "executor_category": "SQLWarehouses",
        "executor_category_group": "SQLWarehouses",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/sql/warehouses",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "cluster_size": "string",
                "min_num_clusters": "1",
                "max_num_clusters": 0,
                "auto_stop_mins": "120",
                "creator_name": "string",
                "instance_profile_arn": "string",
                "tags": {
                    "custom_tags": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ]
                },
                "spot_instance_policy": "POLICY_UNSPECIFIED",
                "enable_photon": true,
                "channel": {
                    "name": "CHANNEL_NAME_UNSPECIFIED",
                    "dbsql_version": "string"
                },
                "enable_serverless_compute": true,
                "warehouse_type": "TYPE_UNSPECIFIED"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698821513729,
        "lastModifiedTime": 1698821513729,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119419,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTheWorkspaceConfiguration",
        "executor_version": "v2",
        "executor_display_name": "Get the workspace configuration",
        "executor_description": "Gets the workspace level configuration that is shared by all SQL warehouses in a workspace.",
        "executor_category": "SQLWarehouses",
        "executor_category_group": "SQLWarehouses",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/sql/config/warehouses",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698816330540,
        "lastModifiedTime": 1698816330540,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "security_policy": "NONE",
                    "data_access_config": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ],
                    "instance_profile_arn": "string",
                    "channel": {
                        "name": "CHANNEL_NAME_UNSPECIFIED",
                        "dbsql_version": "string"
                    },
                    "global_param": {
                        "config_pair": [
                            {
                                "key": "string",
                                "value": "string"
                            }
                        ],
                        "configuration_pairs": [
                            {
                                "key": "string",
                                "value": "string"
                            }
                        ]
                    },
                    "config_param": {
                        "config_pair": [
                            {
                                "key": "string",
                                "value": "string"
                            }
                        ],
                        "configuration_pairs": [
                            {
                                "key": "string",
                                "value": "string"
                            }
                        ]
                    },
                    "sql_configuration_parameters": {
                        "config_pair": [
                            {
                                "key": "string",
                                "value": "string"
                            }
                        ],
                        "configuration_pairs": [
                            {
                                "key": "string",
                                "value": "string"
                            }
                        ]
                    },
                    "google_service_account": "string",
                    "enabled_warehouse_types": [
                        {
                            "warehouse_type": "TYPE_UNSPECIFIED",
                            "enabled": true
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119441,
        "executor_type": "THIRDPARTY",
        "executor_name": "startWarehouse",
        "executor_version": "v2",
        "executor_display_name": "Start a warehouse",
        "executor_description": "Starts a SQL warehouse.",
        "executor_category": "SQLWarehouses",
        "executor_category_group": "SQLWarehouses",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/sql/warehouses/{id}/start",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Required. Id of the SQL warehouse."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698822008709,
        "lastModifiedTime": 1698822008709,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119442,
        "executor_type": "THIRDPARTY",
        "executor_name": "stopWarehouse",
        "executor_version": "v2",
        "executor_display_name": "Stop a warehouse",
        "executor_description": "Stops a SQL warehouse.",
        "executor_category": "SQLWarehouses",
        "executor_category_group": "SQLWarehouses",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/sql/warehouses/{id}/stop",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Required. Id of the SQL warehouse."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698822054824,
        "lastModifiedTime": 1698822054824,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119438,
        "executor_type": "THIRDPARTY",
        "executor_name": "getWarehouseInfo",
        "executor_version": "v2",
        "executor_display_name": "Get warehouse info",
        "executor_description": "Gets the information for a single SQL warehouse.",
        "executor_category": "SQLWarehouses",
        "executor_category_group": "SQLWarehouses",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/sql/warehouses/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "Required. Id of the SQL warehouse."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698821605956,
        "lastModifiedTime": 1698821605956,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "string",
                    "name": "string",
                    "cluster_size": "string",
                    "min_num_clusters": "1",
                    "max_num_clusters": 0,
                    "auto_stop_mins": "120",
                    "creator_name": "string",
                    "instance_profile_arn": "string",
                    "tags": {
                        "custom_tags": [
                            {
                                "key": "string",
                                "value": "string"
                            }
                        ]
                    },
                    "spot_instance_policy": "POLICY_UNSPECIFIED",
                    "enable_photon": true,
                    "channel": {
                        "name": "CHANNEL_NAME_UNSPECIFIED",
                        "dbsql_version": "string"
                    },
                    "enable_serverless_compute": true,
                    "warehouse_type": "TYPE_UNSPECIFIED",
                    "num_clusters": 0,
                    "num_active_sessions": 0,
                    "state": "STARTING",
                    "jdbc_url": "string",
                    "odbc_params": {
                        "hostname": "string",
                        "path": "string",
                        "protocol": "string",
                        "port": 0
                    },
                    "health": {
                        "status": "STATUS_UNSPECIFIED",
                        "message": "string",
                        "failure_reason": {
                            "code": "UNKNOWN",
                            "type": "SUCCESS",
                            "parameters": {
                                "property1": "string",
                                "property2": "string"
                            }
                        },
                        "summary": "string",
                        "details": "string"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119446,
        "executor_type": "THIRDPARTY",
        "executor_name": "createCatalog",
        "executor_version": "v2",
        "executor_display_name": "Create a catalog",
        "executor_description": "Creates a new catalog instance in the parent metastore if the caller is a metastore admin or has the CREATE_CATALOG privilege.",
        "executor_category": "Catalogs",
        "executor_category_group": "Catalogs",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/catalogs",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "comment": "string",
                "properties": {
                    "property1": "string",
                    "property2": "string"
                },
                "storage_root": "string",
                "provider_name": "string",
                "share_name": "string",
                "connection_name": "string",
                "options": {
                    "property1": "string",
                    "property2": "string"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698822788164,
        "lastModifiedTime": 1698822788164,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The new catalog was successfully created.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "owner": "string",
                    "comment": "string",
                    "properties": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "storage_root": "string",
                    "provider_name": "string",
                    "share_name": "string",
                    "metastore_id": "string",
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string",
                    "catalog_type": "MANAGED_CATALOG",
                    "storage_location": "string",
                    "isolation_mode": "OPEN",
                    "connection_name": "string",
                    "options": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "full_name": "string",
                    "securable_kind": "CATALOG_STANDARD",
                    "securable_type": "CATALOG",
                    "provisioning_info": {
                        "state": "STATE_UNSPECIFIED"
                    },
                    "browse_only": true
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119450,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteCatalog",
        "executor_version": "v2",
        "executor_display_name": "Delete a catalog",
        "executor_description": "Deletes the catalog that matches the supplied name. The caller must be a metastore admin or the owner of the catalog.",
        "executor_category": "Catalogs",
        "executor_category_group": "Catalogs",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/catalogs/{name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "The name of the catalog."
            }
        ],
        "queryParams": [
            {
                "key": "force",
                "value": "",
                "description": "Force deletion even if the catalog is not empty.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698823154470,
        "lastModifiedTime": 1698823154470,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The catalog was successfully deleted.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119448,
        "executor_type": "THIRDPARTY",
        "executor_name": "getCatalog",
        "executor_version": "v2",
        "executor_display_name": "Get a catalog",
        "executor_description": "Gets the specified catalog in a metastore. The caller must be a metastore admin, the owner of the catalog, or a user that has the USE_CATALOG privilege set for their account.",
        "executor_category": "Catalogs",
        "executor_category_group": "Catalogs",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/catalogs/{name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "The name of the catalog."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698822920620,
        "lastModifiedTime": 1698822920620,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The catalog was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "owner": "string",
                    "comment": "string",
                    "properties": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "storage_root": "string",
                    "provider_name": "string",
                    "share_name": "string",
                    "metastore_id": "string",
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string",
                    "catalog_type": "MANAGED_CATALOG",
                    "storage_location": "string",
                    "isolation_mode": "OPEN",
                    "connection_name": "string",
                    "options": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "full_name": "string",
                    "securable_kind": "CATALOG_STANDARD",
                    "securable_type": "CATALOG",
                    "provisioning_info": {
                        "state": "STATE_UNSPECIFIED"
                    },
                    "browse_only": true
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119449,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateCatalog",
        "executor_version": "v2",
        "executor_display_name": "Update a catalog",
        "executor_description": "Updates the catalog that matches the supplied name. The caller must be either the owner of the catalog, or a metastore admin (when changing the owner field of the catalog).",
        "executor_category": "Catalogs",
        "executor_category_group": "Catalogs",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/catalogs/{name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "The name of the catalog."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "owner": "string",
                "comment": "string",
                "properties": {
                    "property1": "string",
                    "property2": "string"
                },
                "isolation_mode": "OPEN"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698823066262,
        "lastModifiedTime": 1698823066262,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The catalog was successfully updated.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "owner": "string",
                    "comment": "string",
                    "properties": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "storage_root": "string",
                    "provider_name": "string",
                    "share_name": "string",
                    "metastore_id": "string",
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string",
                    "catalog_type": "MANAGED_CATALOG",
                    "storage_location": "string",
                    "isolation_mode": "OPEN",
                    "connection_name": "string",
                    "options": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "full_name": "string",
                    "securable_kind": "CATALOG_STANDARD",
                    "securable_type": "CATALOG",
                    "provisioning_info": {
                        "state": "STATE_UNSPECIFIED"
                    },
                    "browse_only": true
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119445,
        "executor_type": "THIRDPARTY",
        "executor_name": "listCatalogs",
        "executor_version": "v2",
        "executor_display_name": "List catalogs",
        "executor_description": "Gets an array of catalogs in the metastore. If the caller is the metastore admin, all catalogs will be retrieved. Otherwise, only catalogs owned by the caller (or for which the caller has the USE_CATALOG privilege) will be retrieved. There is no guarantee of a specific ordering of the elements in the array.",
        "executor_category": "Catalogs",
        "executor_category_group": "Catalogs",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/catalogs",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698822385882,
        "lastModifiedTime": 1698822385882,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The catalog list was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "catalogs": [
                        {
                            "name": "string",
                            "owner": "string",
                            "comment": "string",
                            "properties": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "storage_root": "string",
                            "provider_name": "string",
                            "share_name": "string",
                            "metastore_id": "string",
                            "created_at": 0,
                            "created_by": "string",
                            "updated_at": 0,
                            "updated_by": "string",
                            "catalog_type": "MANAGED_CATALOG",
                            "storage_location": "string",
                            "isolation_mode": "OPEN",
                            "connection_name": "string",
                            "options": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "full_name": "string",
                            "securable_kind": "CATALOG_STANDARD",
                            "securable_type": "CATALOG",
                            "provisioning_info": {
                                "state": "STATE_UNSPECIFIED"
                            },
                            "browse_only": true
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119393,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaninitscript",
        "executor_version": "v2",
        "executor_display_name": "Get an init script\u2002",
        "executor_description": "Gets all the details of a script, including its Base64-encoded contents.",
        "executor_category": "GlobalInitScripts",
        "executor_category_group": "GlobalInitScripts",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/global-init-scripts/{script_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "script_id",
                "value": "",
                "description": "The ID of the global init script."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698760110845,
        "lastModifiedTime": 1698760110845,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Status was returned successfully.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "script_id": "string",
                    "name": "My example script name",
                    "position": 0,
                    "enabled": false,
                    "created_by": "user@example.com",
                    "created_at": 0,
                    "updated_by": "user@example.com",
                    "updated_at": 0,
                    "script": "ZWNobyBoZWxsbw=="
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119394,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateinitscript",
        "executor_version": "v2",
        "executor_display_name": "Update init script\u2002",
        "executor_description": "Updates a global init script, specifying only the fields to change. All fields are optional. Unspecified fields retain their current value.",
        "executor_category": "GlobalInitScripts",
        "executor_category_group": "GlobalInitScripts",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/global-init-scripts/{script_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "script_id",
                "value": "",
                "description": "The ID of the global init script."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "My example script name",
                "script": "ZWNobyBoZWxsbw==",
                "position": 0,
                "enabled": false
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698760391305,
        "lastModifiedTime": 1698760391305,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Status was returned successfully.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119391,
        "executor_type": "THIRDPARTY",
        "executor_name": "getinitscripts",
        "executor_version": "v2",
        "executor_display_name": "Get init scripts\u2002",
        "executor_description": "Get a list of all global init scripts for this workspace. This returns all properties for each script but not the script contents. To retrieve the contents of a script, use the get a global init script operation.",
        "executor_category": "GlobalInitScripts",
        "executor_category_group": "GlobalInitScripts",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/global-init-scripts",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "clusterId",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "contextId",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "commandId",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698759786264,
        "lastModifiedTime": 1698759786264,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Status was returned successfully.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "scripts": [
                        {
                            "script_id": "string",
                            "name": "My example script name",
                            "position": 0,
                            "enabled": false,
                            "created_by": "user@example.com",
                            "created_at": 0,
                            "updated_by": "user@example.com",
                            "updated_at": 0
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119392,
        "executor_type": "THIRDPARTY",
        "executor_name": "createinitscript",
        "executor_version": "v2",
        "executor_display_name": "Create init script\u2002",
        "executor_description": "Creates a new global init script in this workspace.",
        "executor_category": "GlobalInitScripts",
        "executor_category_group": "GlobalInitScripts",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/global-init-scripts",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "clusterId",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "contextId",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "commandId",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "My example script name",
                "script": "ZWNobyBoZWxsbw==",
                "position": 0,
                "enabled": false
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698759936934,
        "lastModifiedTime": 1698760347784,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Status was returned successfully.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "script_id": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119395,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteinitscript",
        "executor_version": "v2",
        "executor_display_name": "Delete init script\u2002",
        "executor_description": "Deletes a global init script.",
        "executor_category": "GlobalInitScripts",
        "executor_category_group": "GlobalInitScripts",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/global-init-scripts/{script_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "script_id",
                "value": "",
                "description": "The ID of the global init script."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698760511615,
        "lastModifiedTime": 1698760511615,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Status was returned successfully.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119409,
        "executor_type": "THIRDPARTY",
        "executor_name": "disableasystemschema",
        "executor_version": "v2",
        "executor_display_name": "Disable a system schema",
        "executor_description": "Disables the system schema and removes it from the system catalog. The caller must be an account admin or a metastore admin.",
        "executor_category": "SystemSchemas",
        "executor_category_group": "SystemSchemas",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/metastores/{metastore_id}/systemschemas/{schema_name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "metastore_id",
                "value": "",
                "description": "The metastore ID under which the system schema lives."
            },
            {
                "key": "schema_name",
                "value": "",
                "description": "Full name of the system schema."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698812784244,
        "lastModifiedTime": 1698812784244,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The schema was successfully disabled.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119408,
        "executor_type": "THIRDPARTY",
        "executor_name": "enableasystemschema",
        "executor_version": "v2",
        "executor_display_name": "Enable a system schema",
        "executor_description": "Enables the system schema and adds it to the system catalog. The caller must be an account admin or a metastore admin.",
        "executor_category": "SystemSchemas",
        "executor_category_group": "SystemSchemas",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/metastores/{metastore_id}/systemschemas/{schema_name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "metastore_id",
                "value": "",
                "description": "The metastore ID under which the system schema lives."
            },
            {
                "key": "schema_name",
                "value": "",
                "description": "Full name of the system schema."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698812514191,
        "lastModifiedTime": 1698812514191,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The system schema was successfully enabled.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119407,
        "executor_type": "THIRDPARTY",
        "executor_name": "listsystemschemas",
        "executor_version": "v2",
        "executor_display_name": "List system schemas",
        "executor_description": "Gets an array of system schemas for a metastore. The caller must be an account admin or a metastore admin.",
        "executor_category": "SystemSchemas",
        "executor_category_group": "SystemSchemas",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/metastores/{metastore_id}/systemschemas",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "metastore_id",
                "value": "",
                "description": "The ID for the metastore in which the system schema resides."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698812260543,
        "lastModifiedTime": 1698812260543,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The schemas list was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "schemas": [
                        {
                            "schema": "string",
                            "state": "AVAILABLE"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119412,
        "executor_type": "THIRDPARTY",
        "executor_name": "getResultChunkByIndex",
        "executor_version": "v2",
        "executor_display_name": "Get result chunk by index",
        "executor_description": "After the statement execution has SUCCEEDED, this request can be used to fetch any chunk by index. Whereas the first chunk with chunk_index=0 is typically fetched with Statementexecution/ExecuteStatement or Statementexecution/GetStatement, this request can be used to fetch subsequent chunks. The response structure is identical to the nested result element described in the Statementexecution/GetStatement request, and similarly includes the next_chunk_index and next_chunk_internal_link fields for simple iteration through the result set.",
        "executor_category": "StatementExecution",
        "executor_category_group": "StatementExecution",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/sql/statements/{statement_id}/result/chunks/{chunk_index}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "statement_id",
                "value": "",
                "description": ""
            },
            {
                "key": "chunk_index",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698815073087,
        "lastModifiedTime": 1698815073087,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "chunk_index": 0,
                    "row_offset": 0,
                    "row_count": 139800,
                    "next_chunk_index": 1,
                    "next_chunk_internal_link": "/api/2.0/sql/statements/01eda0ed-9149-1648-bb5d-46d635ab7d74/result/chunks/1",
                    "data_array": [
                        [
                            "0-54-0.8256375429534709"
                        ],
                        [
                            "// ... 139799 more rows"
                        ]
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "REQUEST_LIMIT_EXCEEDED",
                "description": "Request is rejected due to throttling.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "TEMPORARILY_UNAVAILABLE",
                "description": "Service is currently unavailable.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119413,
        "executor_type": "THIRDPARTY",
        "executor_name": "cancelStatementExecution",
        "executor_version": "v2",
        "executor_display_name": "Cancel statement execution",
        "executor_description": "Requests that an executing statement be canceled. Callers must poll for status to see the terminal state.",
        "executor_category": "StatementExecution",
        "executor_category_group": "StatementExecution",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/sql/statements/{statement_id}/cancel",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "statement_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698815164813,
        "lastModifiedTime": 1698815164814,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "OK",
                "description": "Cancel response is empty; receiving response indicates successful receipt.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "REQUEST_LIMIT_EXCEEDED",
                "description": "Request is rejected due to throttling.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "TEMPORARILY_UNAVAILABLE",
                "description": "Service is currently unavailable.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119410,
        "executor_type": "THIRDPARTY",
        "executor_name": "executeSqlStatement",
        "executor_version": "v2",
        "executor_display_name": "Execute a SQL statement",
        "executor_description": "Execute a SQL statement and optionally await its results for a specified time.",
        "executor_category": "StatementExecution",
        "executor_category_group": "StatementExecution",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/sql/statements/",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "warehouse_id": "abcdef0123456789",
                "statement": "SELECT * FROM range(100)",
                "wait_timeout": "0s"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698814839964,
        "lastModifiedTime": 1698814839964,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statement_id": "01eda0e7-e315-1846-84e2-79a963ffad44",
                    "status": {
                        "state": "SUCCEEDED"
                    },
                    "manifest": {
                        "format": "JSON_ARRAY",
                        "schema": {
                            "column_count": 1,
                            "columns": [
                                {
                                    "name": "id",
                                    "position": 0,
                                    "type_name": "LONG",
                                    "type_text": "BIGINT"
                                }
                            ]
                        }
                    },
                    "result": {
                        "chunk_index": 0,
                        "row_offset": 0,
                        "row_count": 3,
                        "data_array": [
                            [
                                "0"
                            ],
                            [
                                "1"
                            ],
                            [
                                "2"
                            ]
                        ]
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "REQUEST_LIMIT_EXCEEDED",
                "description": "Request is rejected due to throttling.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "TEMPORARILY_UNAVAILABLE",
                "description": "Service is currently unavailable.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119411,
        "executor_type": "THIRDPARTY",
        "executor_name": "getStatusManifestAndResultFirstChunk",
        "executor_version": "v2",
        "executor_display_name": "Get status, manifest, and result first chunk",
        "executor_description": "This request can be used to poll for the statement's status. When the status.state field is SUCCEEDED it will also return the result manifest and the first chunk of the result data. When the statement is in the terminal states CANCELED, CLOSED or FAILED, it returns HTTP 200 with the state set. After at least 12 hours in terminal state, the statement is removed from the warehouse and further calls will receive an HTTP 404 response.",
        "executor_category": "StatementExecution",
        "executor_category_group": "StatementExecution",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/sql/statements/{statement_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "statement_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698814993179,
        "lastModifiedTime": 1698814993179,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statement_id": "01eda0e7-e315-1846-84e2-79a963ffad44",
                    "status": {
                        "state": "SUCCEEDED"
                    },
                    "manifest": {
                        "format": "JSON_ARRAY",
                        "schema": {
                            "column_count": 1,
                            "columns": [
                                {
                                    "name": "id",
                                    "position": 0,
                                    "type_name": "LONG",
                                    "type_text": "BIGINT"
                                }
                            ]
                        }
                    },
                    "result": {
                        "chunk_index": 0,
                        "row_offset": 0,
                        "row_count": 3,
                        "data_array": [
                            [
                                "0"
                            ],
                            [
                                "1"
                            ],
                            [
                                "2"
                            ]
                        ]
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "REQUEST_LIMIT_EXCEEDED",
                "description": "Request is rejected due to throttling.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "TEMPORARILY_UNAVAILABLE",
                "description": "Service is currently unavailable.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119420,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteatableconstraint",
        "executor_version": "v2",
        "executor_display_name": "Delete a table constraint",
        "executor_description": "Deletes a table constraint.  For the table constraint deletion to succeed, the user must satisfy both of these conditions:  the user must have the USE_CATALOG privilege on the table's parent catalog, the USE_SCHEMA privilege on the table's parent schema, and be the owner of the table. if cascade argument is true, the user must have the following permissions on all of the child tables: the USE_CATALOG privilege on the table's catalog, the USE_SCHEMA privilege on the table's schema, and be the owner of the table.",
        "executor_category": "TableConstraints",
        "executor_category_group": "TableConstraints",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/constraints/{full_name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "full_name",
                "value": "",
                "description": "Full name of the table referenced by the constraint."
            }
        ],
        "queryParams": [
            {
                "key": "constraint_name",
                "value": "",
                "description": "The name of the constraint to delete.",
                "req": false
            },
            {
                "key": "cascade",
                "value": "",
                "description": "If true, try deleting all child constraints of the current constraint. If false, reject this operation if the current constraint has any child constraints.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698816356676,
        "lastModifiedTime": 1698816356676,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The table constraint was successfully deleted.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "primary_key_constraint": {
                        "name": "string",
                        "child_columns": [
                            "string"
                        ]
                    },
                    "foreign_key_constraint": {
                        "name": "string",
                        "child_columns": [
                            "string"
                        ],
                        "parent_table": "string",
                        "parent_columns": [
                            "string"
                        ]
                    },
                    "named_table_constraint": {
                        "name": "string"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119416,
        "executor_type": "THIRDPARTY",
        "executor_name": "createatableconstraint",
        "executor_version": "v2",
        "executor_display_name": "Create a table constraint",
        "executor_description": "Creates a new table constraint.  For the table constraint creation to succeed, the user must satisfy both of these conditions:  the user must have the USE_CATALOG privilege on the table's parent catalog, the USE_SCHEMA privilege on the table's parent schema, and be the owner of the table. if the new constraint is a ForeignKeyConstraint, the user must have the USE_CATALOG privilege on the referenced parent table's catalog, the USE_SCHEMA privilege on the referenced parent table's schema, and be the owner of the referenced parent table.",
        "executor_category": "TableConstraints",
        "executor_category_group": "TableConstraints",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/constraints",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "full_name_arg": "string",
                "constraint": {
                    "primary_key_constraint": {
                        "name": "string",
                        "child_columns": [
                            "string"
                        ]
                    },
                    "foreign_key_constraint": {
                        "name": "string",
                        "child_columns": [
                            "string"
                        ],
                        "parent_table": "string",
                        "parent_columns": [
                            "string"
                        ]
                    },
                    "named_table_constraint": {
                        "name": "string"
                    }
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698815557156,
        "lastModifiedTime": 1698815557156,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The new table constraint was successfully created.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "primary_key_constraint": {
                        "name": "string",
                        "child_columns": [
                            "string"
                        ]
                    },
                    "foreign_key_constraint": {
                        "name": "string",
                        "child_columns": [
                            "string"
                        ],
                        "parent_table": "string",
                        "parent_columns": [
                            "string"
                        ]
                    },
                    "named_table_constraint": {
                        "name": "string"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119429,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaVolume",
        "executor_version": "v2",
        "executor_display_name": "Get a Volume",
        "executor_description": "Gets a volume from the metastore for a specific catalog and schema.  The caller must be a metastore admin or an owner of (or have the READ VOLUME privilege on) the volume. For the latter case, the caller must also be the owner or have the USE_CATALOG privilege on the parent catalog and the USE_SCHEMA privilege on the parent schema.",
        "executor_category": "Volumes",
        "executor_category_group": "Volumes",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/volumes/{full_name_arg}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "full_name_arg",
                "value": "",
                "description": "Examples: main.default.my_volume - Execute the operation against the volume named `my_volume` under `main` catalog and `default` schema The three-level (fully qualified) name of the volume"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698818689701,
        "lastModifiedTime": 1698818689701,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Successfully retrieved the properties of the volume.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "catalog_name": "main",
                    "schema_name": "default",
                    "name": "my_volume",
                    "full_name": "main.default.my_volume",
                    "volume_type": "EXTERNAL",
                    "owner": "Alice@example.com",
                    "volume_id": "01234567-89ab-cdef-0123-456789abcdef",
                    "metastore_id": "11111111-1111-1111-1111-111111111111",
                    "created_at": 1666369196203,
                    "created_by": "Alice@example.com",
                    "updated_at": 1666369196203,
                    "updated_by": "Alice@example.com",
                    "storage_location": "s3://my-bucket/hello/world/my-volume",
                    "comment": "This is my first volume"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119431,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaVolume",
        "executor_version": "v2",
        "executor_display_name": "Delete a Volume",
        "executor_description": "Deletes a volume from the specified parent catalog and schema.  The caller must be a metastore admin or an owner of the volume. For the latter case, the caller must also be the owner or have the USE_CATALOG privilege on the parent catalog and the USE_SCHEMA privilege on the parent schema.",
        "executor_category": "Volumes",
        "executor_category_group": "Volumes",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/volumes/{full_name_arg}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "full_name_arg",
                "value": "",
                "description": "Examples: main.default.my_volume - Execute the operation against the volume named `my_volume` under `main` catalog and `default` schema The three-level (fully qualified) name of the volume"
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698819054746,
        "lastModifiedTime": 1698819054746,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Successfully deleted the volume.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119430,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateaVolume",
        "executor_version": "v2",
        "executor_display_name": "Update a Volume",
        "executor_description": "Updates the specified volume under the specified parent catalog and schema.  The caller must be a metastore admin or an owner of the volume. For the latter case, the caller must also be the owner or have the USE_CATALOG privilege on the parent catalog and the USE_SCHEMA privilege on the parent schema.  Currently only the name, the owner or the comment of the volume could be updated.",
        "executor_category": "Volumes",
        "executor_category_group": "Volumes",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/volumes/{full_name_arg}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "full_name_arg",
                "value": "",
                "description": "Examples: main.default.my_volume - Execute the operation against the volume named `my_volume` under `main` catalog and `default` schema The three-level (fully qualified) name of the volume"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "my_new_volume"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698818928472,
        "lastModifiedTime": 1698818928472,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Successfully updated the properties of the volume.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "catalog_name": "main",
                    "schema_name": "default",
                    "name": "my_new_volume",
                    "full_name": "main.default.my_new_volume",
                    "volume_type": "EXTERNAL",
                    "owner": "Bob@example.com",
                    "volume_id": "01234567-89ab-cdef-0123-456789abcdef",
                    "metastore_id": "11111111-1111-1111-1111-111111111111",
                    "created_at": 1666369196203,
                    "created_by": "Alice@example.com",
                    "updated_at": 1666369207415,
                    "updated_by": "Alice@example.com",
                    "storage_location": "s3://my-bucket/hello/world/my-volume",
                    "comment": "This is my new volume"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119428,
        "executor_type": "THIRDPARTY",
        "executor_name": "createaVolume",
        "executor_version": "v2",
        "executor_display_name": "Create a Volume",
        "executor_description": "Creates a new volume.  The user could create either an external volume or a managed volume. An external volume will be created in the specified external location, while a managed volume will be located in the default location which is specified by the parent schema, or the parent catalog, or the Metastore.  For the volume creation to succeed, the user must satisfy following conditions:  The caller must be a metastore admin, or be the owner of the parent catalog and schema, or have the USE_CATALOG privilege on the parent catalog and the USE_SCHEMA privilege on the parent schema. The caller must have CREATE VOLUME privilege on the parent schema. For an external volume, following conditions also need to satisfy  The caller must have CREATE EXTERNAL VOLUME privilege on the external location. There are no other tables, nor volumes existing in the specified storage location. The specified storage location is not under the location of other tables, nor volumes, or catalogs or schemas.",
        "executor_category": "Volumes",
        "executor_category_group": "Volumes",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/volumes",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "include_delta_metadata",
                "value": "",
                "description": "Whether delta metadata should be included in the response.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "catalog_name": "main",
                "schema_name": "default",
                "name": "my_volume",
                "volume_type": "EXTERNAL",
                "storage_location": "s3://my-bucket/hello/world/my-volume",
                "comment": "This is my first volume"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698818342441,
        "lastModifiedTime": 1698818342441,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Successfully created the volume.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "catalog_name": "main",
                    "schema_name": "default",
                    "name": "my_volume",
                    "full_name": "main.default.my_volume",
                    "volume_type": "EXTERNAL",
                    "owner": "Alice@example.com",
                    "volume_id": "01234567-89ab-cdef-0123-456789abcdef",
                    "metastore_id": "11111111-1111-1111-1111-111111111111",
                    "created_at": 1666369196203,
                    "created_by": "Alice@example.com",
                    "updated_at": 1666369196203,
                    "updated_by": "Alice@example.com",
                    "storage_location": "s3://my-bucket/hello/world/my-volume",
                    "comment": "This is my first volume"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119436,
        "executor_type": "THIRDPARTY",
        "executor_name": "getinstancepoolpermissionlevels",
        "executor_version": "v2",
        "executor_display_name": "Get instance pool permission levels\u2002",
        "executor_description": "Gets the permission levels that a user can have on an object.",
        "executor_category": "InstancePools",
        "executor_category_group": "InstancePools",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/instance-pools/{instance_pool_id}/permissionLevels",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "instance_pool_id",
                "value": "",
                "description": "The instance pool for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698821209831,
        "lastModifiedTime": 1698821209831,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Response indicating that the scripts were retrieved successfully.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "permission_levels": [
                        {
                            "permission_level": "CAN_MANAGE",
                            "description": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED\t",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119460,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaninstancepool",
        "executor_version": "v2",
        "executor_display_name": "Delete an instance pool\u2002",
        "executor_description": "Deletes the instance pool permanently. The idle instances in the pool are terminated asynchronously.",
        "executor_category": "InstancePools",
        "executor_category_group": "InstancePools",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/instance-pools/delete",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "instance_pool_id": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698824716858,
        "lastModifiedTime": 1698824716858,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "instance_pool_id": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119463,
        "executor_type": "THIRDPARTY",
        "executor_name": "getinstancepoolinformation",
        "executor_version": "v2",
        "executor_display_name": "Get instance pool information\u2002",
        "executor_description": "Retrieve the information for an instance pool based on its identifier.",
        "executor_category": "InstancePools",
        "executor_category_group": "InstancePools",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/instance-pools/get",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "instance_pool_id",
                "value": "",
                "description": "The canonical unique identifier for the instance pool.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698824870459,
        "lastModifiedTime": 1698824870459,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "instance_pool_name": "string",
                    "min_idle_instances": 0,
                    "max_capacity": 0,
                    "gcp_attributes": {
                        "gcp_availability": "PREEMPTIBLE_GCP",
                        "local_ssd_count": 0
                    },
                    "node_type_id": "string",
                    "custom_tags": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "idle_instance_autotermination_minutes": 0,
                    "enable_elastic_disk": true,
                    "disk_spec": {
                        "disk_type": {
                            "ebs_volume_type": "GENERAL_PURPOSE_SSD",
                            "azure_disk_volume_type": "PREMIUM_LRS"
                        },
                        "disk_count": "0",
                        "disk_size": 0,
                        "disk_iops": 0,
                        "disk_throughput": 0
                    },
                    "preloaded_docker_images": [
                        {
                            "url": "string",
                            "basic_auth": {
                                "username": "string",
                                "password": "string"
                            }
                        }
                    ],
                    "preloaded_spark_versions": [
                        "string"
                    ],
                    "instance_pool_id": "string",
                    "default_tags": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "state": "ACTIVE",
                    "stats": {
                        "used_count": 0,
                        "idle_count": 0,
                        "pending_used_count": 0,
                        "pending_idle_count": 0
                    },
                    "status": {
                        "pending_instance_errors": [
                            {
                                "instance_id": "string",
                                "message": "string"
                            }
                        ]
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119433,
        "executor_type": "THIRDPARTY",
        "executor_name": "getinstancepoolpermissions",
        "executor_version": "v2",
        "executor_display_name": "Get instance pool permissions\u2002",
        "executor_description": "Gets the permissions of an instance pool. Instance pools can inherit permissions from their root object.",
        "executor_category": "InstancePools",
        "executor_category_group": "InstancePools",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/instance-pools/{instance_pool_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "instance_pool_id",
                "value": "",
                "description": "The instance pool for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698820778876,
        "lastModifiedTime": 1698820778876,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Response indicating that the scripts were retrieved successfully.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED\t",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119464,
        "executor_type": "THIRDPARTY",
        "executor_name": "listinstancepoolinfo",
        "executor_version": "v2",
        "executor_display_name": "List instance pool info\u2002",
        "executor_description": "Gets a list of instance pools with their statistics.",
        "executor_category": "InstancePools",
        "executor_category_group": "InstancePools",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/instance-pools/list",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698824935704,
        "lastModifiedTime": 1698824935704,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "instance_pools": [
                        {
                            "instance_pool_name": "string",
                            "min_idle_instances": 0,
                            "max_capacity": 0,
                            "gcp_attributes": {
                                "gcp_availability": "PREEMPTIBLE_GCP",
                                "local_ssd_count": 0
                            },
                            "node_type_id": "string",
                            "custom_tags": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "idle_instance_autotermination_minutes": 0,
                            "enable_elastic_disk": true,
                            "disk_spec": {
                                "disk_type": {
                                    "ebs_volume_type": "GENERAL_PURPOSE_SSD",
                                    "azure_disk_volume_type": "PREMIUM_LRS"
                                },
                                "disk_count": "0",
                                "disk_size": 0,
                                "disk_iops": 0,
                                "disk_throughput": 0
                            },
                            "preloaded_docker_images": [
                                {
                                    "url": "string",
                                    "basic_auth": {
                                        "username": "string",
                                        "password": "string"
                                    }
                                }
                            ],
                            "preloaded_spark_versions": [
                                "string"
                            ],
                            "instance_pool_id": "string",
                            "default_tags": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "state": "ACTIVE",
                            "stats": {
                                "used_count": 0,
                                "idle_count": 0,
                                "pending_used_count": 0,
                                "pending_idle_count": 0
                            },
                            "status": {
                                "pending_instance_errors": [
                                    {
                                        "instance_id": "string",
                                        "message": "string"
                                    }
                                ]
                            }
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119458,
        "executor_type": "THIRDPARTY",
        "executor_name": "createanewinstancepool",
        "executor_version": "v2",
        "executor_display_name": "Create a new instance pool\u2002",
        "executor_description": "Creates a new instance pool using idle and ready-to-use cloud instances.",
        "executor_category": "InstancePools",
        "executor_category_group": "InstancePools",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/instance-pools/create",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "instance_pool_name": "string",
                "min_idle_instances": 0,
                "max_capacity": 0,
                "gcp_attributes": {
                    "gcp_availability": "PREEMPTIBLE_GCP",
                    "local_ssd_count": 0
                },
                "node_type_id": "string",
                "custom_tags": {
                    "property1": "string",
                    "property2": "string"
                },
                "idle_instance_autotermination_minutes": 0,
                "enable_elastic_disk": true,
                "disk_spec": {
                    "disk_type": {
                        "ebs_volume_type": "GENERAL_PURPOSE_SSD",
                        "azure_disk_volume_type": "PREMIUM_LRS"
                    },
                    "disk_count": "0",
                    "disk_size": 0,
                    "disk_iops": 0,
                    "disk_throughput": 0
                },
                "preloaded_docker_images": [
                    {
                        "url": "string",
                        "basic_auth": {
                            "username": "string",
                            "password": "string"
                        }
                    }
                ],
                "preloaded_spark_versions": [
                    "string"
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698824549679,
        "lastModifiedTime": 1698824549679,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "instance_pool_id": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119461,
        "executor_type": "THIRDPARTY",
        "executor_name": "editanexistinginstancepool",
        "executor_version": "v2",
        "executor_display_name": "Edit an existing instance pool\u2002",
        "executor_description": "Modifies the configuration of an existing instance pool.",
        "executor_category": "InstancePools",
        "executor_category_group": "InstancePools",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/instance-pools/edit",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "instance_pool_name": "string",
                "min_idle_instances": 0,
                "max_capacity": 0,
                "custom_tags": {
                    "property1": "string",
                    "property2": "string"
                },
                "idle_instance_autotermination_minutes": 0,
                "instance_pool_id": "string",
                "node_type_id": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698824797353,
        "lastModifiedTime": 1698824797353,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "instance_pool_id": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119434,
        "executor_type": "THIRDPARTY",
        "executor_name": "setinstancepoolpermissions",
        "executor_version": "v2",
        "executor_display_name": "Set instance pool permissions\u2002",
        "executor_description": "Sets permissions on an instance pool. Instance pools can inherit permissions from their root object.",
        "executor_category": "InstancePools",
        "executor_category_group": "InstancePools",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/instance-pools/{instance_pool_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "instance_pool_id",
                "value": "",
                "description": "The instance pool for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_MANAGE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698820931856,
        "lastModifiedTime": 1698820931856,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Response indicating that the scripts were retrieved successfully.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED\t",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119435,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateinstancepoolpermissions",
        "executor_version": "v2",
        "executor_display_name": "Update instance pool permissions\u2002",
        "executor_description": "Updates the permissions on an instance pool. Instance pools can inherit permissions from their root object.",
        "executor_category": "InstancePools",
        "executor_category_group": "InstancePools",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/instance-pools/{instance_pool_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "instance_pool_id",
                "value": "",
                "description": "The instance pool for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_MANAGE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698821095288,
        "lastModifiedTime": 1698821095288,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Response indicating that the scripts were retrieved successfully.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST\t",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED\t",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119468,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteAnExternalLocation",
        "executor_version": "v2",
        "executor_display_name": "Delete an external location",
        "executor_description": "Deletes the specified external location from the metastore. The caller must be the owner of the external location.",
        "executor_category": "ExternalLocations",
        "executor_category_group": "ExternalLocations",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/external-locations/{name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "Name of the external location."
            }
        ],
        "queryParams": [
            {
                "key": "force",
                "value": "",
                "description": "Force deletion even if there are dependent external tables or mounts.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698825134418,
        "lastModifiedTime": 1698825134419,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The external location was successfully deleted.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119467,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateAnExternalLocation",
        "executor_version": "v2",
        "executor_display_name": "Update an external location",
        "executor_description": "Updates an external location in the metastore. The caller must be the owner of the external location, or be a metastore admin. In the second case, the admin can only update the name of the external location.",
        "executor_category": "ExternalLocations",
        "executor_category_group": "ExternalLocations",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/external-locations/{name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "Name of the external location."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "url": "string",
                "credential_name": "string",
                "read_only": true,
                "comment": "string",
                "owner": "string",
                "force": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698825051062,
        "lastModifiedTime": 1698825051062,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The external location was successfully updated.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "url": "string",
                    "credential_name": "string",
                    "read_only": true,
                    "comment": "string",
                    "owner": "string",
                    "metastore_id": "string",
                    "credential_id": "string",
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119457,
        "executor_type": "THIRDPARTY",
        "executor_name": "createAnExternalLocation",
        "executor_version": "v2",
        "executor_display_name": "Create an external location",
        "executor_description": "Creates a new external location entry in the metastore. The caller must be a metastore admin or have the CREATE_EXTERNAL_LOCATION privilege on both the metastore and the associated storage credential.",
        "executor_category": "ExternalLocations",
        "executor_category_group": "ExternalLocations",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/external-locations",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "url": "string",
                "credential_name": "string",
                "read_only": true,
                "comment": "string",
                "skip_validation": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698824244303,
        "lastModifiedTime": 1698824244303,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The new external location was successfully created.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "url": "string",
                    "credential_name": "string",
                    "read_only": true,
                    "comment": "string",
                    "owner": "string",
                    "metastore_id": "string",
                    "credential_id": "string",
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119456,
        "executor_type": "THIRDPARTY",
        "executor_name": "listExternalLocations",
        "executor_version": "v2",
        "executor_display_name": "List external locations",
        "executor_description": "Gets an array of external locations (ExternalLocationInfo objects) from the metastore. The caller must be a metastore admin, the owner of the external location, or a user that has some privilege on the external location. There is no guarantee of a specific ordering of the elements in the array.",
        "executor_category": "ExternalLocations",
        "executor_category_group": "ExternalLocations",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/external-locations",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698824014665,
        "lastModifiedTime": 1698824078476,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The external location list was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "external_locations": [
                        {
                            "name": "string",
                            "url": "string",
                            "credential_name": "string",
                            "read_only": true,
                            "comment": "string",
                            "owner": "string",
                            "metastore_id": "string",
                            "credential_id": "string",
                            "created_at": 0,
                            "created_by": "string",
                            "updated_at": 0,
                            "updated_by": "string"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119459,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAnExternalLocation",
        "executor_version": "v2",
        "executor_display_name": "Get an external location",
        "executor_description": "Gets an external location from the metastore. The caller must be either a metastore admin, the owner of the external location, or a user that has some privilege on the external location.",
        "executor_category": "ExternalLocations",
        "executor_category_group": "ExternalLocations",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/external-locations/{name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "Name of the external location."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698824617121,
        "lastModifiedTime": 1698824617121,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The external location was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "url": "string",
                    "credential_name": "string",
                    "read_only": true,
                    "comment": "string",
                    "owner": "string",
                    "metastore_id": "string",
                    "credential_id": "string",
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119474,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateaprovider",
        "executor_version": "v2",
        "executor_display_name": "Update a provider",
        "executor_description": "Updates the information for an authentication provider, if the caller is a metastore admin or is the owner of the provider. If the update changes the provider name, the caller must be both a metastore admin and the owner of the provider.",
        "executor_category": "Providers",
        "executor_category_group": "Providers",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/providers/{name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "Name of the provider."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "recipient_profile_str": "string",
                "comment": "string",
                "owner": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698825435254,
        "lastModifiedTime": 1698825435254,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The provider was successfully updated.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "authentication_type": "TOKEN",
                    "recipient_profile_str": "string",
                    "comment": "string",
                    "owner": "string",
                    "recipient_profile": {
                        "share_credentials_version": 0,
                        "endpoint": "string",
                        "bearer_token": "string"
                    },
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string",
                    "cloud": "string",
                    "region": "string",
                    "metastore_id": "string",
                    "data_provider_global_metastore_id": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119462,
        "executor_type": "THIRDPARTY",
        "executor_name": "listproviders",
        "executor_version": "v2",
        "executor_display_name": "List providers",
        "executor_description": "Gets an array of available authentication providers. The caller must either be a metastore admin or the owner of the providers. Providers not owned by the caller are not included in the response. There is no guarantee of a specific ordering of the elements in the array.",
        "executor_category": "Providers",
        "executor_category_group": "Providers",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/providers",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "data_provider_global_metastore_id",
                "value": "",
                "description": "If not provided, all providers will be returned. If no providers exist with this ID, no results will be returned.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698824826819,
        "lastModifiedTime": 1698824826819,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The provider list was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "providers": [
                        {
                            "name": "string",
                            "authentication_type": "TOKEN",
                            "recipient_profile_str": "string",
                            "comment": "string",
                            "owner": "string",
                            "recipient_profile": {
                                "share_credentials_version": 0,
                                "endpoint": "string",
                                "bearer_token": "string"
                            },
                            "created_at": 0,
                            "created_by": "string",
                            "updated_at": 0,
                            "updated_by": "string",
                            "cloud": "string",
                            "region": "string",
                            "metastore_id": "string",
                            "data_provider_global_metastore_id": "string"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119486,
        "executor_type": "THIRDPARTY",
        "executor_name": "listsharesbyProvider",
        "executor_version": "v2",
        "executor_display_name": "List shares by Provider",
        "executor_description": "Gets an array of a specified provider's shares within the metastore where:  the caller is a metastore admin, or the caller is the owner.",
        "executor_category": "Providers",
        "executor_category_group": "Providers",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/providers/{name}/shares",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "Name of the provider in which to list shares."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698826165475,
        "lastModifiedTime": 1698826165475,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The provider shares list was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "shares": [
                        {
                            "name": "string"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119465,
        "executor_type": "THIRDPARTY",
        "executor_name": "createanauthprovider",
        "executor_version": "v2",
        "executor_display_name": "Create an auth provider",
        "executor_description": "Creates a new authentication provider minimally based on a name and authentication type. The caller must be an admin on the metastore.",
        "executor_category": "Providers",
        "executor_category_group": "Providers",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/providers",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "authentication_type": "TOKEN",
                "comment": "string",
                "recipient_profile_str": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698825011203,
        "lastModifiedTime": 1698825011203,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The new provider was successfully created.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "authentication_type": "TOKEN",
                    "recipient_profile_str": "string",
                    "comment": "string",
                    "owner": "string",
                    "recipient_profile": {
                        "share_credentials_version": 0,
                        "endpoint": "string",
                        "bearer_token": "string"
                    },
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string",
                    "cloud": "string",
                    "region": "string",
                    "metastore_id": "string",
                    "data_provider_global_metastore_id": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119479,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaprovider",
        "executor_version": "v2",
        "executor_display_name": "Delete a provider",
        "executor_description": "Deletes an authentication provider, if the caller is a metastore admin or is the owner of the provider.",
        "executor_category": "Providers",
        "executor_category_group": "Providers",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/providers/{name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "Name of the provider."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698825824757,
        "lastModifiedTime": 1698825824757,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The provider was successfully deleted.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "authentication_type": "TOKEN",
                    "recipient_profile_str": "string",
                    "comment": "string",
                    "owner": "string",
                    "recipient_profile": {
                        "share_credentials_version": 0,
                        "endpoint": "string",
                        "bearer_token": "string"
                    },
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string",
                    "cloud": "string",
                    "region": "string",
                    "metastore_id": "string",
                    "data_provider_global_metastore_id": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119469,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaprovider",
        "executor_version": "v2",
        "executor_display_name": "Get a provider",
        "executor_description": "Gets a specific authentication provider. The caller must supply the name of the provider, and must either be a metastore admin or the owner of the provider.",
        "executor_category": "Providers",
        "executor_category_group": "Providers",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/providers/{name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "Name of the provider."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698825149424,
        "lastModifiedTime": 1698825493082,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The provider was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "authentication_type": "TOKEN",
                    "recipient_profile_str": "string",
                    "comment": "string",
                    "owner": "string",
                    "recipient_profile": {
                        "share_credentials_version": 0,
                        "endpoint": "string",
                        "bearer_token": "string"
                    },
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string",
                    "cloud": "string",
                    "region": "string",
                    "metastore_id": "string",
                    "data_provider_global_metastore_id": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119353,
        "executor_type": "THIRDPARTY",
        "executor_name": "createNewQueryDefinition",
        "executor_version": "v2",
        "executor_display_name": "Create a new query definition",
        "executor_description": "Creates a new query definition. Queries created with this endpoint belong to the authenticated user making the request.  The data_source_id field specifies the ID of the SQL warehouse to run this query against. You can use the Data Sources API to see a complete list of available SQL warehouses. Or you can copy the data_source_id from an existing query.",
        "executor_category": "QueriesResults",
        "executor_category_group": "QueriesResults",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/sql/queries",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data_source_id": "0c205e24-5db2-4940-adb1-fb13c7ce960b",
                "query": "SELECT field FROM table WHERE field = {{ param }}",
                "name": "Orders by month by customer",
                "parent": "folders/2025532471912059",
                "description": "Summarizes total order dollars for customers in the Europe/Asia region.",
                "options": {},
                "run_as_role": "viewer"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698752966987,
        "lastModifiedTime": 1698752966987,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "Query created successfully",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "dee5cca8-1c79-4b5e-a711-e7f9d241bdf6",
                    "parent": "folders/2025532471912059",
                    "latest_query_data_id": "46697357-0db7-47dd-ae4c-850f5b060287",
                    "name": "Orders by month by customer",
                    "description": "Summarizes total order dollars for customers in the Europe/Asia region.",
                    "query": "SELECT field FROM table WHERE field = {{ param }}",
                    "query_hash": "string",
                    "is_archived": true,
                    "is_draft": true,
                    "updated_at": "2021-01-07T20:29:24.289Z",
                    "created_at": "2020-12-15T18:39:15.837Z",
                    "data_source_id": "0c205e24-5db2-4940-adb1-fb13c7ce960b",
                    "options": {
                        "moved_to_trash_at": "2019-08-24T14:15:22Z",
                        "parameters": [
                            {
                                "title": "string",
                                "name": "string",
                                "type": "text",
                                "value": {}
                            }
                        ]
                    },
                    "tags": [
                        "string"
                    ],
                    "is_safe": false,
                    "user_id": 899619779028913,
                    "last_modified_by_id": 0,
                    "visualizations": [
                        {
                            "id": "string",
                            "type": "string",
                            "name": "string",
                            "description": "string",
                            "options": {},
                            "updated_at": "2019-08-24T14:15:22Z",
                            "created_at": "2019-08-24T14:15:22Z"
                        }
                    ],
                    "is_favorite": true,
                    "user": {
                        "id": 0,
                        "name": "string",
                        "email": "user@example.com"
                    },
                    "last_modified_by": {
                        "id": 0,
                        "name": "string",
                        "email": "user@example.com"
                    },
                    "can_edit": true,
                    "permission_tier": "CAN_VIEW",
                    "run_as_role": "viewer"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119357,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteQuery",
        "executor_version": "v2",
        "executor_display_name": "Delete a query",
        "executor_description": "Moves a query to the trash. Trashed queries immediately disappear from searches and list views, and they cannot be used for alerts. The trash is deleted after 30 days.",
        "executor_category": "QueriesResults",
        "executor_category_group": "QueriesResults",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/sql/queries/{query_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "query_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698753674496,
        "lastModifiedTime": 1698753674496,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "OK",
                "description": "Query moved to trash.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119351,
        "executor_type": "THIRDPARTY",
        "executor_name": "getListOfQueries",
        "executor_version": "v2",
        "executor_display_name": "Get a list of queries",
        "executor_description": "Gets a list of queries. Optionally, this list can be filtered by a search term.",
        "executor_category": "QueriesResults",
        "executor_category_group": "QueriesResults",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/sql/queries",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "page_size",
                "value": "",
                "description": "<= 1000 Default: 25 Number of queries to return per page.",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "Page number to retrieve.",
                "req": false
            },
            {
                "key": "order",
                "value": "",
                "description": "Name of query attribute to order by. Default sort order is ascending. Append a dash (-) to order descending instead.  name: The name of the query.  created_at: The timestamp the query was created.  runtime: The time it took to run this query. This is blank for parameterized queries. A blank value is treated as the highest value for sorting.  executed_at: The timestamp when the query was last run.  created_by: The user name of the user that created the query.",
                "req": false
            },
            {
                "key": "q",
                "value": "",
                "description": "Full text search term",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698752735236,
        "lastModifiedTime": 1698752735236,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "count": 0,
                    "page": 0,
                    "page_size": 0,
                    "results": [
                        {
                            "id": "dee5cca8-1c79-4b5e-a711-e7f9d241bdf6",
                            "parent": "folders/2025532471912059",
                            "latest_query_data_id": "46697357-0db7-47dd-ae4c-850f5b060287",
                            "name": "Orders by month by customer",
                            "description": "Summarizes total order dollars for customers in the Europe/Asia region.",
                            "query": "SELECT field FROM table WHERE field = {{ param }}",
                            "query_hash": "string",
                            "is_archived": true,
                            "is_draft": true,
                            "updated_at": "2021-01-07T20:29:24.289Z",
                            "created_at": "2020-12-15T18:39:15.837Z",
                            "data_source_id": "0c205e24-5db2-4940-adb1-fb13c7ce960b",
                            "options": {
                                "moved_to_trash_at": "2019-08-24T14:15:22Z",
                                "parameters": [
                                    {
                                        "title": "string",
                                        "name": "string",
                                        "type": "text",
                                        "value": {}
                                    }
                                ]
                            },
                            "tags": [
                                "string"
                            ],
                            "is_safe": false,
                            "user_id": 899619779028913,
                            "last_modified_by_id": 0,
                            "visualizations": [
                                {
                                    "id": "string",
                                    "type": "string",
                                    "name": "string",
                                    "description": "string",
                                    "options": {},
                                    "updated_at": "2019-08-24T14:15:22Z",
                                    "created_at": "2019-08-24T14:15:22Z"
                                }
                            ],
                            "is_favorite": true,
                            "user": {
                                "id": 0,
                                "name": "string",
                                "email": "user@example.com"
                            },
                            "last_modified_by": {
                                "id": 0,
                                "name": "string",
                                "email": "user@example.com"
                            },
                            "can_edit": true,
                            "permission_tier": "CAN_VIEW",
                            "run_as_role": "viewer"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119355,
        "executor_type": "THIRDPARTY",
        "executor_name": "getQueryDefinition",
        "executor_version": "v2",
        "executor_display_name": "Get a query definition",
        "executor_description": "Retrieve a query object definition along with contextual permissions information about the currently authenticated user.",
        "executor_category": "QueriesResults",
        "executor_category_group": "QueriesResults",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/sql/queries/{query_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "query_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698753042870,
        "lastModifiedTime": 1698753042870,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "Query fetched successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "dee5cca8-1c79-4b5e-a711-e7f9d241bdf6",
                    "parent": "folders/2025532471912059",
                    "latest_query_data_id": "46697357-0db7-47dd-ae4c-850f5b060287",
                    "name": "Orders by month by customer",
                    "description": "Summarizes total order dollars for customers in the Europe/Asia region.",
                    "query": "SELECT field FROM table WHERE field = {{ param }}",
                    "query_hash": "string",
                    "is_archived": true,
                    "is_draft": true,
                    "updated_at": "2021-01-07T20:29:24.289Z",
                    "created_at": "2020-12-15T18:39:15.837Z",
                    "data_source_id": "0c205e24-5db2-4940-adb1-fb13c7ce960b",
                    "options": {
                        "moved_to_trash_at": "2019-08-24T14:15:22Z",
                        "parameters": [
                            {
                                "title": "string",
                                "name": "string",
                                "type": "text",
                                "value": {}
                            }
                        ]
                    },
                    "tags": [
                        "string"
                    ],
                    "is_safe": false,
                    "user_id": 899619779028913,
                    "last_modified_by_id": 0,
                    "visualizations": [
                        {
                            "id": "string",
                            "type": "string",
                            "name": "string",
                            "description": "string",
                            "options": {},
                            "updated_at": "2019-08-24T14:15:22Z",
                            "created_at": "2019-08-24T14:15:22Z"
                        }
                    ],
                    "is_favorite": true,
                    "user": {
                        "id": 0,
                        "name": "string",
                        "email": "user@example.com"
                    },
                    "last_modified_by": {
                        "id": 0,
                        "name": "string",
                        "email": "user@example.com"
                    },
                    "can_edit": true,
                    "permission_tier": "CAN_VIEW",
                    "run_as_role": "viewer"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119359,
        "executor_type": "THIRDPARTY",
        "executor_name": "restoreQuery",
        "executor_version": "v2",
        "executor_display_name": "Restore a query",
        "executor_description": "Restore a query that has been moved to the trash. A restored query appears in list views and searches. You can use restored queries for alerts.",
        "executor_category": "QueriesResults",
        "executor_category_group": "QueriesResults",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/sql/queries/trash/{query_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "query_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698753743535,
        "lastModifiedTime": 1698753743535,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "OK",
                "description": "Query restored successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119356,
        "executor_type": "THIRDPARTY",
        "executor_name": "changeQueryDefinition",
        "executor_version": "v2",
        "executor_display_name": "Change a query definition",
        "executor_description": "Modify this query definition.",
        "executor_category": "QueriesResults",
        "executor_category_group": "QueriesResults",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/sql/queries/{query_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "query_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "data_source_id": "0c205e24-5db2-4940-adb1-fb13c7ce960b",
                "query": "SELECT field FROM table WHERE field = {{ param }}",
                "name": "Orders by month by customer",
                "description": "Summarizes total order dollars for customers in the Europe/Asia region.",
                "options": {}
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698753451278,
        "lastModifiedTime": 1698753451278,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "dee5cca8-1c79-4b5e-a711-e7f9d241bdf6",
                    "parent": "folders/2025532471912059",
                    "latest_query_data_id": "46697357-0db7-47dd-ae4c-850f5b060287",
                    "name": "Orders by month by customer",
                    "description": "Summarizes total order dollars for customers in the Europe/Asia region.",
                    "query": "SELECT field FROM table WHERE field = {{ param }}",
                    "query_hash": "string",
                    "is_archived": true,
                    "is_draft": true,
                    "updated_at": "2021-01-07T20:29:24.289Z",
                    "created_at": "2020-12-15T18:39:15.837Z",
                    "data_source_id": "0c205e24-5db2-4940-adb1-fb13c7ce960b",
                    "options": {
                        "moved_to_trash_at": "2019-08-24T14:15:22Z",
                        "parameters": [
                            {
                                "title": "string",
                                "name": "string",
                                "type": "text",
                                "value": {}
                            }
                        ]
                    },
                    "tags": [
                        "string"
                    ],
                    "is_safe": false,
                    "user_id": 899619779028913,
                    "last_modified_by_id": 0,
                    "visualizations": [
                        {
                            "id": "string",
                            "type": "string",
                            "name": "string",
                            "description": "string",
                            "options": {},
                            "updated_at": "2019-08-24T14:15:22Z",
                            "created_at": "2019-08-24T14:15:22Z"
                        }
                    ],
                    "is_favorite": true,
                    "user": {
                        "id": 0,
                        "name": "string",
                        "email": "user@example.com"
                    },
                    "last_modified_by": {
                        "id": 0,
                        "name": "string",
                        "email": "user@example.com"
                    },
                    "can_edit": true,
                    "permission_tier": "CAN_VIEW",
                    "run_as_role": "viewer"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119451,
        "executor_type": "THIRDPARTY",
        "executor_name": "listConnections",
        "executor_version": "v2",
        "executor_display_name": "List connections",
        "executor_description": "List all connections.",
        "executor_category": "Connections",
        "executor_category_group": "Connections",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/connections",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698823238545,
        "lastModifiedTime": 1698823238545,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The connection list was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "connections": [
                        {
                            "name": "string",
                            "connection_type": "MYSQL",
                            "options": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "owner": "string",
                            "read_only": true,
                            "comment": "string",
                            "properties": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "full_name": "string",
                            "url": "string",
                            "credential_type": "USERNAME_PASSWORD",
                            "connection_id": "string",
                            "metastore_id": "string",
                            "created_at": 0,
                            "created_by": "string",
                            "updated_at": 0,
                            "updated_by": "string",
                            "securable_kind": "CONNECTION_BIGQUERY",
                            "securable_type": "CONNECTION",
                            "provisioning_info": {
                                "state": "STATE_UNSPECIFIED"
                            }
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119452,
        "executor_type": "THIRDPARTY",
        "executor_name": "createConnection",
        "executor_version": "v2",
        "executor_display_name": "Create a connection",
        "executor_description": "Creates a new connection  Creates a new connection to an external data source. It allows users to specify connection details and configurations for interaction with the external server.",
        "executor_category": "Connections",
        "executor_category_group": "Connections",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/connections",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "connection_type": "MYSQL",
                "options": {
                    "property1": "string",
                    "property2": "string"
                },
                "read_only": true,
                "comment": "string",
                "properties": {
                    "property1": "string",
                    "property2": "string"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698823381522,
        "lastModifiedTime": 1698823381522,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The connection was successfully created.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "connection_type": "MYSQL",
                    "options": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "owner": "string",
                    "read_only": true,
                    "comment": "string",
                    "properties": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "full_name": "string",
                    "url": "string",
                    "credential_type": "USERNAME_PASSWORD",
                    "connection_id": "string",
                    "metastore_id": "string",
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string",
                    "securable_kind": "CONNECTION_BIGQUERY",
                    "securable_type": "CONNECTION",
                    "provisioning_info": {
                        "state": "STATE_UNSPECIFIED"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119455,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaConnection",
        "executor_version": "v2",
        "executor_display_name": "Delete a connection",
        "executor_description": "Deletes the connection that matches the supplied name.",
        "executor_category": "Connections",
        "executor_category_group": "Connections",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/connections/{name_arg}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name_arg",
                "value": "",
                "description": "The name of the connection to be deleted."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698823747063,
        "lastModifiedTime": 1698823747063,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The connection was successfully deleted.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119454,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateaConnection",
        "executor_version": "v2",
        "executor_display_name": "Update a connection",
        "executor_description": "Updates the connection that matches the supplied name.",
        "executor_category": "Connections",
        "executor_category_group": "Connections",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/connections/{name_arg}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name_arg",
                "value": "",
                "description": "Name of the connection."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "options": {
                    "property1": "string",
                    "property2": "string"
                },
                "owner": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698823648129,
        "lastModifiedTime": 1698823648129,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The connection was successfully updated.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "connection_type": "MYSQL",
                    "options": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "owner": "string",
                    "read_only": true,
                    "comment": "string",
                    "properties": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "full_name": "string",
                    "url": "string",
                    "credential_type": "USERNAME_PASSWORD",
                    "connection_id": "string",
                    "metastore_id": "string",
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string",
                    "securable_kind": "CONNECTION_BIGQUERY",
                    "securable_type": "CONNECTION",
                    "provisioning_info": {
                        "state": "STATE_UNSPECIFIED"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119453,
        "executor_type": "THIRDPARTY",
        "executor_name": "getConnection",
        "executor_version": "v2",
        "executor_display_name": "Get a connection",
        "executor_description": "Gets a connection from it's name.",
        "executor_category": "Connections",
        "executor_category_group": "Connections",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/connections/{name_arg}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name_arg",
                "value": "",
                "description": "Name of the connection."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698823525113,
        "lastModifiedTime": 1698823525113,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The connection was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "connection_type": "MYSQL",
                    "options": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "owner": "string",
                    "read_only": true,
                    "comment": "string",
                    "properties": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "full_name": "string",
                    "url": "string",
                    "credential_type": "USERNAME_PASSWORD",
                    "connection_id": "string",
                    "metastore_id": "string",
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string",
                    "securable_kind": "CONNECTION_BIGQUERY",
                    "securable_type": "CONNECTION",
                    "provisioning_info": {
                        "state": "STATE_UNSPECIFIED"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119471,
        "executor_type": "THIRDPARTY",
        "executor_name": "listFunctions",
        "executor_version": "v2",
        "executor_display_name": "List functions",
        "executor_description": "List functions within the specified parent catalog and schema. If the user is a metastore admin, all functions are returned in the output list. Otherwise, the user must have the USE_CATALOG privilege on the catalog and the USE_SCHEMA privilege on the schema, and the output list contains only functions for which either the user has the EXECUTE privilege or the user is the owner. There is no guarantee of a specific ordering of the elements in the array.",
        "executor_category": "Functions",
        "executor_category_group": "Functions",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/functions",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "catalog_name",
                "value": "",
                "description": "Name of parent catalog for functions of interest.",
                "req": false
            },
            {
                "key": "schema_name",
                "value": "",
                "description": "Parent schema of functions.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698825276237,
        "lastModifiedTime": 1698825276237,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The function list was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "functions": [
                        {
                            "name": "string",
                            "catalog_name": "string",
                            "schema_name": "string",
                            "input_params": {
                                "parameters": [
                                    {
                                        "name": "string",
                                        "type_text": "string",
                                        "type_json": "string",
                                        "type_name": "BOOLEAN",
                                        "type_precision": 0,
                                        "type_scale": 0,
                                        "type_interval_type": "string",
                                        "position": 0,
                                        "parameter_mode": "IN",
                                        "parameter_type": "PARAM",
                                        "parameter_default": "string",
                                        "comment": "string"
                                    }
                                ]
                            },
                            "data_type": "BOOLEAN",
                            "full_data_type": "string",
                            "return_params": {
                                "parameters": [
                                    {
                                        "name": "string",
                                        "type_text": "string",
                                        "type_json": "string",
                                        "type_name": "BOOLEAN",
                                        "type_precision": 0,
                                        "type_scale": 0,
                                        "type_interval_type": "string",
                                        "position": 0,
                                        "parameter_mode": "IN",
                                        "parameter_type": "PARAM",
                                        "parameter_default": "string",
                                        "comment": "string"
                                    }
                                ]
                            },
                            "routine_body": "SQL",
                            "routine_definition": "string",
                            "routine_dependencies": [
                                {
                                    "table": {
                                        "table_full_name": "string"
                                    },
                                    "function": {
                                        "function_full_name": "string"
                                    }
                                }
                            ],
                            "parameter_style": "S",
                            "is_deterministic": true,
                            "sql_data_access": "CONTAINS_SQL",
                            "is_null_call": true,
                            "security_type": "DEFINER",
                            "specific_name": "string",
                            "external_name": "string",
                            "external_language": "string",
                            "sql_path": "string",
                            "owner": "string",
                            "comment": "string",
                            "properties": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "metastore_id": "string",
                            "full_name": "string",
                            "created_at": 0,
                            "created_by": "string",
                            "updated_at": 0,
                            "updated_by": "string",
                            "function_id": "string"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119482,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateFunction",
        "executor_version": "v2",
        "executor_display_name": "Update a function",
        "executor_description": "Updates the function that matches the supplied name. Only the owner of the function can be updated. If the user is not a metastore admin, the user must be a member of the group that is the new function owner.  Is a metastore admin Is the owner of the function's parent catalog Is the owner of the function's parent schema and has the USE_CATALOG privilege on its parent catalog Is the owner of the function itself and has the USE_CATALOG privilege on its parent catalog as well as the USE_SCHEMA privilege on the function's parent schema.",
        "executor_category": "Functions",
        "executor_category_group": "Functions",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/functions/{name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "The fully-qualified name of the function (of the form catalog_name.schema_name.function__name)."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "owner": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698826008347,
        "lastModifiedTime": 1698826008347,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The function was successfully updated.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "catalog_name": "string",
                    "schema_name": "string",
                    "input_params": {
                        "parameters": [
                            {
                                "name": "string",
                                "type_text": "string",
                                "type_json": "string",
                                "type_name": "BOOLEAN",
                                "type_precision": 0,
                                "type_scale": 0,
                                "type_interval_type": "string",
                                "position": 0,
                                "parameter_mode": "IN",
                                "parameter_type": "PARAM",
                                "parameter_default": "string",
                                "comment": "string"
                            }
                        ]
                    },
                    "data_type": "BOOLEAN",
                    "full_data_type": "string",
                    "return_params": {
                        "parameters": [
                            {
                                "name": "string",
                                "type_text": "string",
                                "type_json": "string",
                                "type_name": "BOOLEAN",
                                "type_precision": 0,
                                "type_scale": 0,
                                "type_interval_type": "string",
                                "position": 0,
                                "parameter_mode": "IN",
                                "parameter_type": "PARAM",
                                "parameter_default": "string",
                                "comment": "string"
                            }
                        ]
                    },
                    "routine_body": "SQL",
                    "routine_definition": "string",
                    "routine_dependencies": [
                        {
                            "table": {
                                "table_full_name": "string"
                            },
                            "function": {
                                "function_full_name": "string"
                            }
                        }
                    ],
                    "parameter_style": "S",
                    "is_deterministic": true,
                    "sql_data_access": "CONTAINS_SQL",
                    "is_null_call": true,
                    "security_type": "DEFINER",
                    "specific_name": "string",
                    "external_name": "string",
                    "external_language": "string",
                    "sql_path": "string",
                    "owner": "string",
                    "comment": "string",
                    "properties": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "metastore_id": "string",
                    "full_name": "string",
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string",
                    "function_id": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119478,
        "executor_type": "THIRDPARTY",
        "executor_name": "createFunction",
        "executor_version": "v2",
        "executor_display_name": "Create a function",
        "executor_description": "Creates a new function  The user must have the following permissions in order for the function to be created:  USE_CATALOG on the function's parent catalog USE_SCHEMA and CREATE_FUNCTION on the function's parent schema",
        "executor_category": "Functions",
        "executor_category_group": "Functions",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/functions",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "catalog_name": "string",
                "schema_name": "string",
                "input_params": {
                    "parameters": [
                        {
                            "name": "string",
                            "type_text": "string",
                            "type_json": "string",
                            "type_name": "BOOLEAN",
                            "type_precision": 0,
                            "type_scale": 0,
                            "type_interval_type": "string",
                            "position": 0,
                            "parameter_mode": "IN",
                            "parameter_type": "PARAM",
                            "parameter_default": "string",
                            "comment": "string"
                        }
                    ]
                },
                "data_type": "BOOLEAN",
                "full_data_type": "string",
                "return_params": {
                    "parameters": [
                        {
                            "name": "string",
                            "type_text": "string",
                            "type_json": "string",
                            "type_name": "BOOLEAN",
                            "type_precision": 0,
                            "type_scale": 0,
                            "type_interval_type": "string",
                            "position": 0,
                            "parameter_mode": "IN",
                            "parameter_type": "PARAM",
                            "parameter_default": "string",
                            "comment": "string"
                        }
                    ]
                },
                "routine_body": "SQL",
                "routine_definition": "string",
                "routine_dependencies": [
                    {
                        "table": {
                            "table_full_name": "string"
                        },
                        "function": {
                            "function_full_name": "string"
                        }
                    }
                ],
                "parameter_style": "S",
                "is_deterministic": true,
                "sql_data_access": "CONTAINS_SQL",
                "is_null_call": true,
                "security_type": "DEFINER",
                "specific_name": "string",
                "external_name": "string",
                "external_language": "string",
                "sql_path": "string",
                "comment": "string",
                "properties": {
                    "property1": "string",
                    "property2": "string"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698825791411,
        "lastModifiedTime": 1698825791411,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The new function was successfully created.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "catalog_name": "string",
                    "schema_name": "string",
                    "input_params": {
                        "parameters": [
                            {
                                "name": "string",
                                "type_text": "string",
                                "type_json": "string",
                                "type_name": "BOOLEAN",
                                "type_precision": 0,
                                "type_scale": 0,
                                "type_interval_type": "string",
                                "position": 0,
                                "parameter_mode": "IN",
                                "parameter_type": "PARAM",
                                "parameter_default": "string",
                                "comment": "string"
                            }
                        ]
                    },
                    "data_type": "BOOLEAN",
                    "full_data_type": "string",
                    "return_params": {
                        "parameters": [
                            {
                                "name": "string",
                                "type_text": "string",
                                "type_json": "string",
                                "type_name": "BOOLEAN",
                                "type_precision": 0,
                                "type_scale": 0,
                                "type_interval_type": "string",
                                "position": 0,
                                "parameter_mode": "IN",
                                "parameter_type": "PARAM",
                                "parameter_default": "string",
                                "comment": "string"
                            }
                        ]
                    },
                    "routine_body": "SQL",
                    "routine_definition": "string",
                    "routine_dependencies": [
                        {
                            "table": {
                                "table_full_name": "string"
                            },
                            "function": {
                                "function_full_name": "string"
                            }
                        }
                    ],
                    "parameter_style": "S",
                    "is_deterministic": true,
                    "sql_data_access": "CONTAINS_SQL",
                    "is_null_call": true,
                    "security_type": "DEFINER",
                    "specific_name": "string",
                    "external_name": "string",
                    "external_language": "string",
                    "sql_path": "string",
                    "owner": "string",
                    "comment": "string",
                    "properties": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "metastore_id": "string",
                    "full_name": "string",
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string",
                    "function_id": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119480,
        "executor_type": "THIRDPARTY",
        "executor_name": "getFunction",
        "executor_version": "v2",
        "executor_display_name": "Get a function",
        "executor_description": "Gets a function from within a parent catalog and schema. For the fetch to succeed, the user must satisfy one of the following requirements:  Is a metastore admin Is an owner of the function's parent catalog Have the USE_CATALOG privilege on the function's parent catalog and be the owner of the function Have the USE_CATALOG privilege on the function's parent catalog, the USE_SCHEMA privilege on the function's parent schema, and the EXECUTE privilege on the function itself",
        "executor_category": "Functions",
        "executor_category_group": "Functions",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/functions/{name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "The fully-qualified name of the function (of the form catalog_name.schema_name.function__name)."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698825881170,
        "lastModifiedTime": 1698825881170,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The function was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "catalog_name": "string",
                    "schema_name": "string",
                    "input_params": {
                        "parameters": [
                            {
                                "name": "string",
                                "type_text": "string",
                                "type_json": "string",
                                "type_name": "BOOLEAN",
                                "type_precision": 0,
                                "type_scale": 0,
                                "type_interval_type": "string",
                                "position": 0,
                                "parameter_mode": "IN",
                                "parameter_type": "PARAM",
                                "parameter_default": "string",
                                "comment": "string"
                            }
                        ]
                    },
                    "data_type": "BOOLEAN",
                    "full_data_type": "string",
                    "return_params": {
                        "parameters": [
                            {
                                "name": "string",
                                "type_text": "string",
                                "type_json": "string",
                                "type_name": "BOOLEAN",
                                "type_precision": 0,
                                "type_scale": 0,
                                "type_interval_type": "string",
                                "position": 0,
                                "parameter_mode": "IN",
                                "parameter_type": "PARAM",
                                "parameter_default": "string",
                                "comment": "string"
                            }
                        ]
                    },
                    "routine_body": "SQL",
                    "routine_definition": "string",
                    "routine_dependencies": [
                        {
                            "table": {
                                "table_full_name": "string"
                            },
                            "function": {
                                "function_full_name": "string"
                            }
                        }
                    ],
                    "parameter_style": "S",
                    "is_deterministic": true,
                    "sql_data_access": "CONTAINS_SQL",
                    "is_null_call": true,
                    "security_type": "DEFINER",
                    "specific_name": "string",
                    "external_name": "string",
                    "external_language": "string",
                    "sql_path": "string",
                    "owner": "string",
                    "comment": "string",
                    "properties": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "metastore_id": "string",
                    "full_name": "string",
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string",
                    "function_id": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119484,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteFunction",
        "executor_version": "v2",
        "executor_display_name": "Delete a function",
        "executor_description": "Deletes the function that matches the supplied name. For the deletion to succeed, the user must satisfy one of the following conditions:  Is the owner of the function's parent catalog Is the owner of the function's parent schema and have the USE_CATALOG privilege on its parent catalog Is the owner of the function itself and have both the USE_CATALOG privilege on its parent catalog and the USE_SCHEMA privilege on its parent schema",
        "executor_category": "Functions",
        "executor_category_group": "Functions",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/functions/{name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "The fully-qualified name of the function (of the form catalog_name.schema_name.function__name)."
            }
        ],
        "queryParams": [
            {
                "key": "force",
                "value": "",
                "description": "Force deletion even if the function is notempty.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698826092120,
        "lastModifiedTime": 1698826092120,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The function was successfully deleted.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119496,
        "executor_type": "THIRDPARTY",
        "executor_name": "getExperimentPermissions",
        "executor_version": "v2",
        "executor_display_name": "Get experiment permissions",
        "executor_description": "Gets the permissions of an experiment. Experiments can inherit permissions from their root object.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/experiments/{experiment_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "experiment_id",
                "value": "",
                "description": "The experiment for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698827112732,
        "lastModifiedTime": 1698827112732,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119507,
        "executor_type": "THIRDPARTY",
        "executor_name": "getHistoryOfGiveMetricWithinRun",
        "executor_version": "v2",
        "executor_display_name": "Get history of a given metric within a run",
        "executor_description": "Gets a list of all values for the specified metric for a given run.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/metrics/get-history",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "run_id",
                "value": "",
                "description": "ID of the run whose artifacts to list. Must be provided.",
                "req": false
            },
            {
                "key": "run_uuid",
                "value": "",
                "description": "[Deprecated, use run_id instead] ID of the run whose artifacts to list. This field will be removed in a future MLflow version.",
                "req": false
            },
            {
                "key": "metric_key",
                "value": "",
                "description": "Name of the metric.",
                "req": false
            },
            {
                "key": "page_token",
                "value": "",
                "description": "Token indicating the page of metric histories to fetch.",
                "req": false
            },
            {
                "key": "max_results",
                "value": "",
                "description": "<= 25000 Default: 25000 Maximum number of Metric records to return per paginated request. Default is set to 25,000. If set higher than 25,000, a request Exception will be raised.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698829386228,
        "lastModifiedTime": 1698829386228,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "metrics": [
                        {
                            "key": "string",
                            "value": 0,
                            "timestamp": 0,
                            "step": "0"
                        }
                    ],
                    "next_page_token": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119510,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAnExperiment",
        "executor_version": "v2",
        "executor_display_name": "Get an experiment",
        "executor_description": "Gets metadata for an experiment. This method works on deleted experiments.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/experiments/get",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "experiment_id",
                "value": "",
                "description": "ID of the associated experiment.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698829674510,
        "lastModifiedTime": 1698829674510,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "experiment": {
                        "experiment_id": "string",
                        "name": "string",
                        "artifact_location": "string",
                        "lifecycle_stage": "string",
                        "last_update_time": 0,
                        "creation_time": 0,
                        "tags": [
                            {
                                "key": "string",
                                "value": "string"
                            }
                        ]
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119505,
        "executor_type": "THIRDPARTY",
        "executor_name": "getExperimentPermissionLevels",
        "executor_version": "v2",
        "executor_display_name": "Get experiment permission levels",
        "executor_description": "Gets the permission levels that a user can have on an object.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/experiments/{experiment_id}/permissionLevels",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "experiment_id",
                "value": "",
                "description": "The experiment for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698829109538,
        "lastModifiedTime": 1698829109538,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "permission_levels": [
                        {
                            "permission_level": "CAN_MANAGE",
                            "description": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119509,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteAnExperiment",
        "executor_version": "v2",
        "executor_display_name": "Delete an experiment",
        "executor_description": "Marks an experiment and associated metadata, runs, metrics, params, and tags for deletion. If the experiment uses FileStore, artifacts associated with experiment are also deleted.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/experiments/delete",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "experiment_id": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698829608532,
        "lastModifiedTime": 1698829608532,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119533,
        "executor_type": "THIRDPARTY",
        "executor_name": "logMetric",
        "executor_version": "v2",
        "executor_display_name": "Log a metric",
        "executor_description": "Logs a metric for a run. A metric is a key-value pair (string key, float value) with an associated timestamp. Examples include the various metrics that represent ML model accuracy. A metric can be logged multiple times.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/runs/log-metric",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "run_id": "string",
                "run_uuid": "string",
                "key": "string",
                "value": 0,
                "timestamp": 0,
                "step": "0"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698832383358,
        "lastModifiedTime": 1698832383358,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119513,
        "executor_type": "THIRDPARTY",
        "executor_name": "restoresAnExperiment",
        "executor_version": "v2",
        "executor_display_name": "Restores an experiment",
        "executor_description": "Restore an experiment marked for deletion. This also restores associated metadata, runs, metrics, params, and tags. If experiment uses FileStore, underlying artifacts associated with experiment are also restored.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/experiments/restore",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "experiment_id": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698829918989,
        "lastModifiedTime": 1698829918989,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119514,
        "executor_type": "THIRDPARTY",
        "executor_name": "searchExperiments",
        "executor_version": "v2",
        "executor_display_name": "Search experiments",
        "executor_description": "Searches for experiments that satisfy specified search criteria.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/experiments/search",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "max_results": 0,
                "page_token": "string",
                "filter": "string",
                "order_by": [
                    "string"
                ],
                "view_type": "ACTIVE_ONLY"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698830022770,
        "lastModifiedTime": 1698830022770,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "experiments": [
                        {
                            "experiment_id": "string",
                            "name": "string",
                            "artifact_location": "string",
                            "lifecycle_stage": "string",
                            "last_update_time": 0,
                            "creation_time": 0,
                            "tags": [
                                {
                                    "key": "string",
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "next_page_token": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119520,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateAnExperiment",
        "executor_version": "v2",
        "executor_display_name": "Update an experiment",
        "executor_description": "Updates experiment metadata.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/experiments/update",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "experiment_id": "string",
                "new_name": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698831572710,
        "lastModifiedTime": 1698831572710,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119531,
        "executor_type": "THIRDPARTY",
        "executor_name": "logBatch",
        "executor_version": "v2",
        "executor_display_name": "Log a batch",
        "executor_description": "Logs a batch of metrics, params, and tags for a run. If any data failed to be persisted, the server will respond with an error (non-200 status code).  In case of error (due to internal server error or an invalid request), partial data may be written.  You can write metrics, params, and tags in interleaving fashion, but within a given entity type are guaranteed to follow the order specified in the request body.  The overwrite behavior for metrics, params, and tags is as follows:  Metrics: metric values are never overwritten. Logging a metric (key, value, timestamp) appends to the set of values for the metric with the provided key.  Tags: tag values can be overwritten by successive writes to the same tag key. That is, if multiple tag values with the same key are provided in the same API request, the last-provided tag value is written. Logging the same tag (key, value) is permitted. Specifically, logging a tag is idempotent.  Parameters: once written, param values cannot be changed (attempting to overwrite a param value will result in an error). However, logging the same param (key, value) is permitted. Specifically, logging a param is idempotent.  Request Limits A single JSON-serialized API request may be up to 1 MB in size and contain:  No more than 1000 metrics, params, and tags in total  Up to 1000 metrics  Up to 100 params  Up to 100 tags",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/runs/log-batch",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "run_id": "string",
                "metrics": [
                    {
                        "key": "string",
                        "value": 0,
                        "timestamp": 0,
                        "step": "0"
                    }
                ],
                "params": [
                    {
                        "key": "string",
                        "value": "string"
                    }
                ],
                "tags": [
                    {
                        "key": "string",
                        "value": "string"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698832277744,
        "lastModifiedTime": 1698832277744,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119542,
        "executor_type": "THIRDPARTY",
        "executor_name": "restoreRun",
        "executor_version": "v2",
        "executor_display_name": "Restore a run",
        "executor_description": "Logs a param used for a run. A param is a key-value pair (string key, string value). Examples include hyperparameters used for ML model training and constant dates and values used in an ETL pipeline. A param can be logged only once for a run.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/runs/restore",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "run_id": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698832788810,
        "lastModifiedTime": 1698832788810,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119544,
        "executor_type": "THIRDPARTY",
        "executor_name": "restoreRunsByDeletionTime",
        "executor_version": "v2",
        "executor_display_name": "Restore runs by deletion time",
        "executor_description": "Bulk restore runs in an experiment that were deleted no earlier than the specified timestamp. Restores at most max_runs per request.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/databricks/runs/restore-runs",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "experiment_id": "string",
                "min_timestamp_millis": 0,
                "max_runs": "10000"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698832961504,
        "lastModifiedTime": 1698832961504,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "runs_restored": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119548,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateRun",
        "executor_version": "v2",
        "executor_display_name": "Update a run",
        "executor_description": "Updates run metadata.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/runs/update",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "run_id": "string",
                "run_uuid": "string",
                "status": "RUNNING",
                "end_time": 0
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698833330741,
        "lastModifiedTime": 1698833330741,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "run_info": {
                        "run_id": "string",
                        "run_uuid": "string",
                        "experiment_id": "string",
                        "user_id": "string",
                        "status": "RUNNING",
                        "start_time": 0,
                        "end_time": 0,
                        "artifact_uri": "string",
                        "lifecycle_stage": "string"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119506,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllArtifacts",
        "executor_version": "v2",
        "executor_display_name": "Get all artifacts",
        "executor_description": "List artifacts for a run. Takes an optional artifact_path prefix. If it is specified, the response contains only artifacts with the specified prefix.\",",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/artifacts/list",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "run_id",
                "value": "",
                "description": "ID of the run whose artifacts to list. Must be provided.",
                "req": false
            },
            {
                "key": "run_uuid",
                "value": "",
                "description": "[Deprecated, use run_id instead] ID of the run whose artifacts to list. This field will be removed in a future MLflow version.",
                "req": false
            },
            {
                "key": "path",
                "value": "",
                "description": "Filter artifacts matching this path (a relative path from the root artifact directory).",
                "req": false
            },
            {
                "key": "page_token",
                "value": "",
                "description": "Token indicating the page of artifact results to fetch",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698829254885,
        "lastModifiedTime": 1698829254885,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "root_uri": "string",
                    "files": [
                        {
                            "path": "string",
                            "is_dir": true,
                            "file_size": 0
                        }
                    ],
                    "next_page_token": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119527,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteatag",
        "executor_version": "v2",
        "executor_display_name": "Delete a tag",
        "executor_description": "Deletes a tag on a run. Tags are run metadata that can be updated during a run and after a run completes.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/runs/delete-tag",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "run_id": "string",
                "key": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698831955626,
        "lastModifiedTime": 1698831955626,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119537,
        "executor_type": "THIRDPARTY",
        "executor_name": "logInputsToRun",
        "executor_version": "v2",
        "executor_display_name": "Log inputs to a run",
        "executor_description": "NOTE: Experimental: This API may change or be removed in a future release without warning.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/runs/log-inputs",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "run_id": "string",
                "datasets": [
                    {
                        "tags": [
                            {
                                "key": "string",
                                "value": "string"
                            }
                        ],
                        "dataset": {
                            "name": "string",
                            "digest": "string",
                            "source_type": "string",
                            "source": "string",
                            "schema": "string",
                            "profile": "string"
                        }
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698832632317,
        "lastModifiedTime": 1698832632317,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119500,
        "executor_type": "THIRDPARTY",
        "executor_name": "setExperimentPermissions",
        "executor_version": "v2",
        "executor_display_name": "Set experiment permissions",
        "executor_description": "Sets permissions on an experiment. Experiments can inherit permissions from their root object.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/experiments/{experiment_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "experiment_id",
                "value": "",
                "description": "The experiment for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_MANAGE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698827394355,
        "lastModifiedTime": 1698827394355,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119508,
        "executor_type": "THIRDPARTY",
        "executor_name": "createExperiment",
        "executor_version": "v2",
        "executor_display_name": "Create experiment",
        "executor_description": "Creates an experiment with a name. Returns the ID of the newly created experiment. Validates that another experiment with the same name does not already exist and fails if another experiment with the same name already exists.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/experiments/create",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "artifact_location": "string",
                "tags": [
                    {
                        "key": "string",
                        "value": "string"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698829517987,
        "lastModifiedTime": 1698829517987,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "experiment_id": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119534,
        "executor_type": "THIRDPARTY",
        "executor_name": "logModel",
        "executor_version": "v2",
        "executor_display_name": "Log a model",
        "executor_description": "Logs a metric for a run. A metric is a key-value pair (string key, float value) with an associated timestamp. Examples include the various metrics that represent ML model accuracy. A metric can be logged multiple times.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/runs/log-model",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "run_id": "string",
                "model_json": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698832453461,
        "lastModifiedTime": 1698832453461,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119504,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateExperimentPermissions",
        "executor_version": "v2",
        "executor_display_name": "Update experiment permissions",
        "executor_description": "Updates the permissions on an experiment. Experiments can inherit permissions from their root object.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/experiments/{experiment_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "experiment_id",
                "value": "",
                "description": "The experiment for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_MANAGE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698829014509,
        "lastModifiedTime": 1698829014509,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119522,
        "executor_type": "THIRDPARTY",
        "executor_name": "createRun",
        "executor_version": "v2",
        "executor_display_name": "Create a run",
        "executor_description": "Creates a new run within an experiment. A run is usually a single execution of a machine learning or data ETL pipeline. MLflow uses runs to track the mlflowParam, mlflowMetric and mlflowRunTag associated with a single execution.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/runs/create",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "experiment_id": "string",
                "user_id": "string",
                "start_time": 0,
                "tags": [
                    {
                        "key": "string",
                        "value": "string"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698831690507,
        "lastModifiedTime": 1698831690507,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "run": {
                        "info": {
                            "run_id": "string",
                            "run_uuid": "string",
                            "experiment_id": "string",
                            "user_id": "string",
                            "status": "RUNNING",
                            "start_time": 0,
                            "end_time": 0,
                            "artifact_uri": "string",
                            "lifecycle_stage": "string"
                        },
                        "data": {
                            "metrics": [
                                {
                                    "key": "string",
                                    "value": 0,
                                    "timestamp": 0,
                                    "step": "0"
                                }
                            ],
                            "params": [
                                {
                                    "key": "string",
                                    "value": "string"
                                }
                            ],
                            "tags": [
                                {
                                    "key": "string",
                                    "value": "string"
                                }
                            ]
                        },
                        "inputs": {
                            "dataset_inputs": [
                                {
                                    "tags": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "dataset": {
                                        "name": "string",
                                        "digest": "string",
                                        "source_type": "string",
                                        "source": "string",
                                        "schema": "string",
                                        "profile": "string"
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119515,
        "executor_type": "THIRDPARTY",
        "executor_name": "setTag",
        "executor_version": "v2",
        "executor_display_name": "Set a tag",
        "executor_description": "Sets a tag on an experiment. Experiment tags are metadata that can be updated.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/experiments/set-experiment-tag",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "experiment_id": "string",
                "key": "string",
                "value": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698830116208,
        "lastModifiedTime": 1698830116208,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119512,
        "executor_type": "THIRDPARTY",
        "executor_name": "listExperiments",
        "executor_version": "v2",
        "executor_display_name": "List experiments",
        "executor_description": "Gets a list of all experiments.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/experiments/list",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "view_type",
                "value": "",
                "description": "Qualifier for type of experiments to be returned. If unspecified, return only active experiments.",
                "req": false
            },
            {
                "key": "max_results",
                "value": "",
                "description": "<= 1000 Maximum number of experiments desired. If max_results is unspecified, return all experiments. If max_results is too large, it'll be automatically capped at 1000. Callers of this endpoint are encouraged to pass max_results explicitly and leverage page_token to iterate through experiments.",
                "req": false
            },
            {
                "key": "page_token",
                "value": "",
                "description": "Token indicating the page of experiments to fetch",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698829836004,
        "lastModifiedTime": 1698829836004,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "experiments": [
                        {
                            "experiment_id": "string",
                            "name": "string",
                            "artifact_location": "string",
                            "lifecycle_stage": "string",
                            "last_update_time": 0,
                            "creation_time": 0,
                            "tags": [
                                {
                                    "key": "string",
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "next_page_token": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119546,
        "executor_type": "THIRDPARTY",
        "executor_name": "searchForRuns",
        "executor_version": "v2",
        "executor_display_name": "Search for runs",
        "executor_description": "Searches for runs that satisfy expressions.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/runs/search",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "experiment_ids": [
                    "string"
                ],
                "filter": "string",
                "run_view_type": "ACTIVE_ONLY",
                "max_results": "1000",
                "order_by": [
                    "string"
                ],
                "page_token": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698833109491,
        "lastModifiedTime": 1698833109491,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "runs": [
                        {
                            "info": {
                                "run_id": "string",
                                "run_uuid": "string",
                                "experiment_id": "string",
                                "user_id": "string",
                                "status": "RUNNING",
                                "start_time": 0,
                                "end_time": 0,
                                "artifact_uri": "string",
                                "lifecycle_stage": "string"
                            },
                            "data": {
                                "metrics": [
                                    {
                                        "key": "string",
                                        "value": 0,
                                        "timestamp": 0,
                                        "step": "0"
                                    }
                                ],
                                "params": [
                                    {
                                        "key": "string",
                                        "value": "string"
                                    }
                                ],
                                "tags": [
                                    {
                                        "key": "string",
                                        "value": "string"
                                    }
                                ]
                            },
                            "inputs": {
                                "dataset_inputs": [
                                    {
                                        "tags": [
                                            {
                                                "key": "string",
                                                "value": "string"
                                            }
                                        ],
                                        "dataset": {
                                            "name": "string",
                                            "digest": "string",
                                            "source_type": "string",
                                            "source": "string",
                                            "schema": "string",
                                            "profile": "string"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "next_page_token": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119547,
        "executor_type": "THIRDPARTY",
        "executor_name": "setaTag",
        "executor_version": "v2",
        "executor_display_name": "Set a tag",
        "executor_description": "Sets a tag on a run. Tags are run metadata that can be updated during a run and after a run completes.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/runs/set-tag",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "run_id": "string",
                "run_uuid": "string",
                "key": "string",
                "value": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698833233307,
        "lastModifiedTime": 1698833233307,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119523,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaRun",
        "executor_version": "v2",
        "executor_display_name": "Delete a run",
        "executor_description": "Marks a run for deletion.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/runs/delete",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "run_id": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698831765437,
        "lastModifiedTime": 1698831765437,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119524,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteRunsByCreationTime",
        "executor_version": "v2",
        "executor_display_name": "Delete runs by creation time",
        "executor_description": "Bulk delete runs in an experiment that were created prior to or at the specified timestamp. Deletes at most max_runs per request.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/databricks/runs/delete-runs",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "experiment_id": "string",
                "max_timestamp_millis": 0,
                "max_runs": "10000"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698831858922,
        "lastModifiedTime": 1698831858922,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "runs_deleted": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119528,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaRun",
        "executor_version": "v2",
        "executor_display_name": "Get a run",
        "executor_description": "Gets the metadata, metrics, params, and tags for a run. In the case where multiple metrics with the same key are logged for a run, return only the value with the latest timestamp.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/runs/get",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "run_id",
                "value": "",
                "description": "ID of the run to fetch. Must be provided.",
                "req": false
            },
            {
                "key": "run_uuid",
                "value": "",
                "description": "[Deprecated, use run_id instead] ID of the run to fetch. This field will be removed in a future MLflow version.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698832058443,
        "lastModifiedTime": 1698832058443,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "run": {
                        "info": {
                            "run_id": "string",
                            "run_uuid": "string",
                            "experiment_id": "string",
                            "user_id": "string",
                            "status": "RUNNING",
                            "start_time": 0,
                            "end_time": 0,
                            "artifact_uri": "string",
                            "lifecycle_stage": "string"
                        },
                        "data": {
                            "metrics": [
                                {
                                    "key": "string",
                                    "value": 0,
                                    "timestamp": 0,
                                    "step": "0"
                                }
                            ],
                            "params": [
                                {
                                    "key": "string",
                                    "value": "string"
                                }
                            ],
                            "tags": [
                                {
                                    "key": "string",
                                    "value": "string"
                                }
                            ]
                        },
                        "inputs": {
                            "dataset_inputs": [
                                {
                                    "tags": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "dataset": {
                                        "name": "string",
                                        "digest": "string",
                                        "source_type": "string",
                                        "source": "string",
                                        "schema": "string",
                                        "profile": "string"
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119511,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaMetadata",
        "executor_version": "v2",
        "executor_display_name": "Get metadata",
        "executor_description": "Gets metadata for an experiment.  This endpoint will return deleted experiments, but prefers the active experiment if an active and deleted experiment share the same name. If multiple deleted experiments share the same name, the API will return one of them.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/experiments/get-by-name",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "experiment_name",
                "value": "",
                "description": "Name of the associated experiment.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698829745007,
        "lastModifiedTime": 1698829745007,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "experiment": {
                        "experiment_id": "string",
                        "name": "string",
                        "artifact_location": "string",
                        "lifecycle_stage": "string",
                        "last_update_time": 0,
                        "creation_time": 0,
                        "tags": [
                            {
                                "key": "string",
                                "value": "string"
                            }
                        ]
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119540,
        "executor_type": "THIRDPARTY",
        "executor_name": "logParam",
        "executor_version": "v2",
        "executor_display_name": "Log a param",
        "executor_description": "Logs a param used for a run. A param is a key-value pair (string key, string value). Examples include hyperparameters used for ML model training and constant dates and values used in an ETL pipeline. A param can be logged only once for a run.",
        "executor_category": "Experiments",
        "executor_category_group": "Experiments",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/runs/log-parameter",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "run_id": "string",
                "run_uuid": "string",
                "key": "string",
                "value": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698832730125,
        "lastModifiedTime": 1698832730125,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "RESOURCE_LIMIT_EXCEEDED",
                "description": "Cluster request was rejected because it would exceed a resource limit.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119499,
        "executor_type": "THIRDPARTY",
        "executor_name": "listsharerecipients",
        "executor_version": "v2",
        "executor_display_name": "List share recipients",
        "executor_description": "Gets an array of all share recipients within the current metastore where:  the caller is a metastore admin, or the caller is the owner. There is no guarantee of a specific ordering of the elements in the array.",
        "executor_category": "Recipients",
        "executor_category_group": "Recipients",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/recipients",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "data_recipient_global_metastore_id",
                "value": "",
                "description": "If not provided, all recipients will be returned. If no recipients exist with this ID, no results will be returned.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698827374518,
        "lastModifiedTime": 1698827374518,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The list of recipients was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recipients": [
                        {
                            "name": "string",
                            "authentication_type": "TOKEN",
                            "sharing_code": "string",
                            "data_recipient_global_metastore_id": "string",
                            "owner": "string",
                            "comment": "string",
                            "ip_access_list": {
                                "allowed_ip_addresses": [
                                    "string"
                                ]
                            },
                            "properties_kvpairs": {
                                "properties": {
                                    "property1": "string",
                                    "property2": "string"
                                }
                            },
                            "activation_url": "string",
                            "activated": true,
                            "created_at": 0,
                            "created_by": "string",
                            "tokens": [
                                {
                                    "id": "string",
                                    "created_at": 0,
                                    "created_by": "string",
                                    "activation_url": "string",
                                    "expiration_time": 0,
                                    "updated_at": 0,
                                    "updated_by": "string"
                                }
                            ],
                            "updated_at": 0,
                            "updated_by": "string",
                            "cloud": "string",
                            "region": "string",
                            "metastore_id": "string"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119519,
        "executor_type": "THIRDPARTY",
        "executor_name": "getrecipientsharepermissions",
        "executor_version": "v2",
        "executor_display_name": "Get recipient share permissions",
        "executor_description": "Gets the share permissions for the specified Recipient. The caller must be a metastore admin or the owner of the Recipient.",
        "executor_category": "Recipients",
        "executor_category_group": "Recipients",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/recipients/{name}/share-permissions",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "The name of the Recipient."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698831237780,
        "lastModifiedTime": 1698831237780,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The recipient share permissions list was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "permissions_out": [
                        {
                            "share_name": "string",
                            "privilege_assignments": [
                                {
                                    "principal": "string",
                                    "privileges": [
                                        "READ_PRIVATE_FILES"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119502,
        "executor_type": "THIRDPARTY",
        "executor_name": "getasharerecipient",
        "executor_version": "v2",
        "executor_display_name": "Get a share recipient",
        "executor_description": "Gets a share recipient from the metastore if:  the caller is the owner of the share recipient, or: is a metastore admin",
        "executor_category": "Recipients",
        "executor_category_group": "Recipients",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/recipients/{name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "Name of the recipient."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698827890423,
        "lastModifiedTime": 1698827890423,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The recipient was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "authentication_type": "TOKEN",
                    "sharing_code": "string",
                    "data_recipient_global_metastore_id": "string",
                    "owner": "string",
                    "comment": "string",
                    "ip_access_list": {
                        "allowed_ip_addresses": [
                            "string"
                        ]
                    },
                    "properties_kvpairs": {
                        "properties": {
                            "property1": "string",
                            "property2": "string"
                        }
                    },
                    "activation_url": "string",
                    "activated": true,
                    "created_at": 0,
                    "created_by": "string",
                    "tokens": [
                        {
                            "id": "string",
                            "created_at": 0,
                            "created_by": "string",
                            "activation_url": "string",
                            "expiration_time": 0,
                            "updated_at": 0,
                            "updated_by": "string"
                        }
                    ],
                    "updated_at": 0,
                    "updated_by": "string",
                    "cloud": "string",
                    "region": "string",
                    "metastore_id": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119517,
        "executor_type": "THIRDPARTY",
        "executor_name": "rotateatoken",
        "executor_version": "v2",
        "executor_display_name": "Rotate a token",
        "executor_description": "Refreshes the specified recipient's delta sharing authentication token with the provided token info. The caller must be the owner of the recipient.",
        "executor_category": "Recipients",
        "executor_category_group": "Recipients",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/recipients/{name}/rotate-token",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "The name of the recipient."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "existing_token_expire_in_seconds": 0
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698830933133,
        "lastModifiedTime": 1698830933133,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The recipient token was successfully rotated.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "authentication_type": "TOKEN",
                    "sharing_code": "string",
                    "data_recipient_global_metastore_id": "string",
                    "owner": "string",
                    "comment": "string",
                    "ip_access_list": {
                        "allowed_ip_addresses": [
                            "string"
                        ]
                    },
                    "properties_kvpairs": {
                        "properties": {
                            "property1": "string",
                            "property2": "string"
                        }
                    },
                    "activation_url": "string",
                    "activated": true,
                    "created_at": 0,
                    "created_by": "string",
                    "tokens": [
                        {
                            "id": "string",
                            "created_at": 0,
                            "created_by": "string",
                            "activation_url": "string",
                            "expiration_time": 0,
                            "updated_at": 0,
                            "updated_by": "string"
                        }
                    ],
                    "updated_at": 0,
                    "updated_by": "string",
                    "cloud": "string",
                    "region": "string",
                    "metastore_id": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119501,
        "executor_type": "THIRDPARTY",
        "executor_name": "createasharerecipient",
        "executor_version": "v2",
        "executor_display_name": "Create a share recipient",
        "executor_description": "Creates a new recipient with the delta sharing authentication type in the metastore. The caller must be a metastore admin or has the CREATE_RECIPIENT privilege on the metastore.",
        "executor_category": "Recipients",
        "executor_category_group": "Recipients",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/recipients",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "data_recipient_global_metastore_id",
                "value": "",
                "description": "If not provided, all recipients will be returned. If no recipients exist with this ID, no results will be returned.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "authentication_type": "TOKEN",
                "owner": "string",
                "comment": "string",
                "ip_access_list": {
                    "allowed_ip_addresses": [
                        "string"
                    ]
                },
                "properties_kvpairs": {
                    "properties": {
                        "property1": "string",
                        "property2": "string"
                    }
                },
                "data_recipient_global_metastore_id": "string",
                "sharing_code": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698827739880,
        "lastModifiedTime": 1698827739880,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The new recipient was successfully created.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "authentication_type": "TOKEN",
                    "sharing_code": "string",
                    "data_recipient_global_metastore_id": "string",
                    "owner": "string",
                    "comment": "string",
                    "ip_access_list": {
                        "allowed_ip_addresses": [
                            "string"
                        ]
                    },
                    "properties_kvpairs": {
                        "properties": {
                            "property1": "string",
                            "property2": "string"
                        }
                    },
                    "activation_url": "string",
                    "activated": true,
                    "created_at": 0,
                    "created_by": "string",
                    "tokens": [
                        {
                            "id": "string",
                            "created_at": 0,
                            "created_by": "string",
                            "activation_url": "string",
                            "expiration_time": 0,
                            "updated_at": 0,
                            "updated_by": "string"
                        }
                    ],
                    "updated_at": 0,
                    "updated_by": "string",
                    "cloud": "string",
                    "region": "string",
                    "metastore_id": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119503,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateasharerecipient",
        "executor_version": "v2",
        "executor_display_name": "Update a share recipient",
        "executor_description": "Updates an existing recipient in the metastore. The caller must be a metastore admin or the owner of the recipient. If the recipient name will be updated, the user must be both a metastore admin and the owner of the recipient.",
        "executor_category": "Recipients",
        "executor_category_group": "Recipients",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/recipients/{name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "Name of the recipient."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "owner": "string",
                "comment": "string",
                "ip_access_list": {
                    "allowed_ip_addresses": [
                        "string"
                    ]
                },
                "properties_kvpairs": {
                    "properties": {
                        "property1": "string",
                        "property2": "string"
                    }
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698828298012,
        "lastModifiedTime": 1698828298012,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The recipient was successfully updated.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119516,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteasharerecipient",
        "executor_version": "v2",
        "executor_display_name": "Delete a share recipient",
        "executor_description": "Deletes the specified recipient from the metastore. The caller must be the owner of the recipient.",
        "executor_category": "Recipients",
        "executor_category_group": "Recipients",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/recipients/{name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "Name of the recipient."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698830557131,
        "lastModifiedTime": 1698830557131,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The recipient was successfully deleted.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119535,
        "executor_type": "THIRDPARTY",
        "executor_name": "cancelarun",
        "executor_version": "v2",
        "executor_display_name": "Cancel a run\u2002",
        "executor_description": "Cancels a job run or a task run. The run is canceled asynchronously, so it may still be running when this request completes.",
        "executor_category": "Jobs",
        "executor_category_group": "Jobs",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/jobs/runs/cancel",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "run_id": 0
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698832476615,
        "lastModifiedTime": 1698832476615,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE\t",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "REQUEST_LIMIT_EXCEEDED",
                "description": "Request is rejected due to throttling.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119498,
        "executor_type": "THIRDPARTY",
        "executor_name": "triggeranewjobrun",
        "executor_version": "v2",
        "executor_display_name": "Trigger a new job run\u2002",
        "executor_description": "Run a job and return the run_id of the triggered run.",
        "executor_category": "Jobs",
        "executor_category_group": "Jobs\u2002",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/jobs/run-now",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "job_id": 0,
                "idempotency_token": "string",
                "queue": {
                    "enabled": true
                },
                "jar_params": [
                    "string"
                ],
                "notebook_params": {
                    "property1": "string",
                    "property2": "string"
                },
                "python_params": [
                    "string"
                ],
                "spark_submit_params": [
                    "string"
                ],
                "python_named_params": {
                    "property1": "string",
                    "property2": "string"
                },
                "pipeline_params": {
                    "full_refresh": true
                },
                "dbt_commands": [
                    "string"
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698827323890,
        "lastModifiedTime": 1698827577573,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "run_id": 0,
                    "number_in_job": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED\t",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "REQUEST_LIMIT_EXCEEDED",
                "description": "Request is rejected due to throttling.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "FEATURE_DISABLED\t",
                "description": "If a given user/entity is trying to use a feature which has been disabled.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119493,
        "executor_type": "THIRDPARTY",
        "executor_name": "overwriteallsettingsforajob",
        "executor_version": "v2",
        "executor_display_name": "Overwrite all settings for a job\u2002",
        "executor_description": "Overwrite all settings for the given job. Use the Update endpoint to update job settings partially.",
        "executor_category": "Jobs",
        "executor_category_group": "Jobs\u2002",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/jobs/reset",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "job_id": 0,
                "new_settings": {
                    "name": "Untitled",
                    "queue": {
                        "enabled": true
                    },
                    "tags": {},
                    "tasks": [
                        {
                            "task_key": "Task_Key",
                            "description": "This is the description for this task.",
                            "depends_on": [
                                {
                                    "task_key": "string"
                                }
                            ],
                            "run_if": "ALL_SUCCESS",
                            "existing_cluster_id": "string",
                            "new_cluster": {
                                "num_workers": 0,
                                "autoscale": {
                                    "min_workers": 0,
                                    "max_workers": 0
                                },
                                "cluster_name": "string",
                                "spark_version": "string",
                                "spark_conf": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "gcp_attributes": {
                                    "google_service_account": "string",
                                    "boot_disk_size": 0,
                                    "availability": "PREEMPTIBLE_GCP",
                                    "local_ssd_count": 0
                                },
                                "node_type_id": "string",
                                "driver_node_type_id": "string",
                                "ssh_public_keys": [
                                    "string"
                                ],
                                "custom_tags": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "cluster_log_conf": {
                                    "dbfs": {
                                        "destination": "string"
                                    }
                                },
                                "init_scripts": [
                                    {
                                        "workspace": {
                                            "destination": "string"
                                        },
                                        "volumes": {
                                            "destination": "string"
                                        },
                                        "file": {
                                            "destination": "string"
                                        },
                                        "dbfs": {
                                            "destination": "string"
                                        }
                                    }
                                ],
                                "spark_env_vars": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "autotermination_minutes": 0,
                                "enable_elastic_disk": true,
                                "cluster_source": "UI",
                                "instance_pool_id": "string",
                                "policy_id": "string",
                                "enable_local_disk_encryption": true,
                                "driver_instance_pool_id": "string",
                                "workload_type": {
                                    "clients": {
                                        "notebooks": "true",
                                        "jobs": "true"
                                    }
                                },
                                "runtime_engine": "NULL",
                                "docker_image": {
                                    "url": "string",
                                    "basic_auth": {
                                        "username": "string",
                                        "password": "string"
                                    }
                                },
                                "data_security_mode": "NONE",
                                "single_user_name": "string",
                                "apply_policy_default_values": "false"
                            },
                            "job_cluster_key": "string",
                            "notebook_task": {
                                "notebook_path": "string",
                                "source": "WORKSPACE",
                                "base_parameters": {
                                    "property1": "string",
                                    "property2": "string"
                                }
                            },
                            "spark_jar_task": {
                                "main_class_name": "string",
                                "parameters": [
                                    "string"
                                ],
                                "jar_uri": "string"
                            },
                            "spark_python_task": {
                                "python_file": "string",
                                "source": "WORKSPACE",
                                "parameters": [
                                    "string"
                                ]
                            },
                            "spark_submit_task": {
                                "parameters": [
                                    "string"
                                ]
                            },
                            "pipeline_task": {
                                "pipeline_id": "string",
                                "full_refresh": false
                            },
                            "python_wheel_task": {
                                "package_name": "string",
                                "entry_point": "string",
                                "parameters": [
                                    "string"
                                ],
                                "named_parameters": {
                                    "property1": "string",
                                    "property2": "string"
                                }
                            },
                            "dbt_task": {
                                "project_directory": "string",
                                "commands": [
                                    "string"
                                ],
                                "schema": "string",
                                "warehouse_id": "string",
                                "catalog": "string",
                                "profiles_directory": "string"
                            },
                            "run_job_task": {
                                "job_id": 0
                            },
                            "libraries": [
                                {
                                    "jar": "string",
                                    "egg": "string",
                                    "pypi": {
                                        "package": "string",
                                        "repo": "string"
                                    },
                                    "maven": {
                                        "coordinates": "string",
                                        "repo": "string",
                                        "exclusions": [
                                            "string"
                                        ]
                                    },
                                    "cran": {
                                        "package": "string",
                                        "repo": "string"
                                    },
                                    "whl": "string"
                                }
                            ],
                            "email_notifications": {
                                "on_start": [
                                    "string"
                                ],
                                "on_success": [
                                    "string"
                                ],
                                "on_failure": [
                                    "string"
                                ],
                                "on_duration_warning_threshold_exceeded": [
                                    "string"
                                ]
                            },
                            "webhook_notifications": {
                                "on_start": [
                                    {
                                        "id": "string"
                                    }
                                ],
                                "on_success": [
                                    {
                                        "id": "string"
                                    }
                                ],
                                "on_failure": [
                                    {
                                        "id": "string"
                                    }
                                ],
                                "on_duration_warning_threshold_exceeded": [
                                    {
                                        "id": "string"
                                    }
                                ]
                            },
                            "notification_settings": {
                                "no_alert_for_skipped_runs": false,
                                "no_alert_for_canceled_runs": false,
                                "alert_on_last_attempt": false
                            },
                            "timeout_seconds": 0,
                            "health": {
                                "rules": [
                                    {
                                        "metric": "RUN_DURATION_SECONDS",
                                        "op": "GREATER_THAN",
                                        "value": 0
                                    }
                                ]
                            },
                            "max_retries": 0,
                            "min_retry_interval_millis": 0,
                            "retry_on_timeout": false
                        }
                    ],
                    "job_clusters": [
                        {
                            "job_cluster_key": "string",
                            "new_cluster": {
                                "num_workers": 0,
                                "autoscale": {
                                    "min_workers": 0,
                                    "max_workers": 0
                                },
                                "cluster_name": "string",
                                "spark_version": "string",
                                "spark_conf": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "gcp_attributes": {
                                    "google_service_account": "string",
                                    "boot_disk_size": 0,
                                    "availability": "PREEMPTIBLE_GCP",
                                    "local_ssd_count": 0
                                },
                                "node_type_id": "string",
                                "driver_node_type_id": "string",
                                "ssh_public_keys": [
                                    "string"
                                ],
                                "custom_tags": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "cluster_log_conf": {
                                    "dbfs": {
                                        "destination": "string"
                                    }
                                },
                                "init_scripts": [
                                    {
                                        "workspace": {
                                            "destination": "string"
                                        },
                                        "volumes": {
                                            "destination": "string"
                                        },
                                        "file": {
                                            "destination": "string"
                                        },
                                        "dbfs": {
                                            "destination": "string"
                                        }
                                    }
                                ],
                                "spark_env_vars": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "autotermination_minutes": 0,
                                "enable_elastic_disk": true,
                                "cluster_source": "UI",
                                "instance_pool_id": "string",
                                "policy_id": "string",
                                "enable_local_disk_encryption": true,
                                "driver_instance_pool_id": "string",
                                "workload_type": {
                                    "clients": {
                                        "notebooks": "true",
                                        "jobs": "true"
                                    }
                                },
                                "runtime_engine": "NULL",
                                "docker_image": {
                                    "url": "string",
                                    "basic_auth": {
                                        "username": "string",
                                        "password": "string"
                                    }
                                },
                                "data_security_mode": "NONE",
                                "single_user_name": "string",
                                "apply_policy_default_values": "false"
                            }
                        }
                    ],
                    "email_notifications": {
                        "on_start": [
                            "string"
                        ],
                        "on_success": [
                            "string"
                        ],
                        "on_failure": [
                            "string"
                        ],
                        "on_duration_warning_threshold_exceeded": [
                            "string"
                        ],
                        "no_alert_for_skipped_runs": false
                    },
                    "webhook_notifications": {
                        "on_start": [
                            {
                                "id": "string"
                            }
                        ],
                        "on_success": [
                            {
                                "id": "string"
                            }
                        ],
                        "on_failure": [
                            {
                                "id": "string"
                            }
                        ],
                        "on_duration_warning_threshold_exceeded": [
                            {
                                "id": "string"
                            }
                        ]
                    },
                    "notification_settings": {
                        "no_alert_for_skipped_runs": false,
                        "no_alert_for_canceled_runs": false
                    },
                    "timeout_seconds": 0,
                    "health": {
                        "rules": [
                            {
                                "metric": "RUN_DURATION_SECONDS",
                                "op": "GREATER_THAN",
                                "value": 0
                            }
                        ]
                    },
                    "schedule": {
                        "quartz_cron_expression": "string",
                        "timezone_id": "string",
                        "pause_status": "PAUSED"
                    },
                    "continuous": {
                        "pause_status": "PAUSED"
                    },
                    "max_concurrent_runs": 1,
                    "git_source": {
                        "git_url": "string",
                        "git_provider": "gitHub",
                        "git_branch": "string",
                        "git_tag": "string",
                        "git_commit": "string"
                    },
                    "format": "SINGLE_TASK",
                    "run_as": {
                        "user_name": "string",
                        "service_principal_name": "string"
                    }
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698826762730,
        "lastModifiedTime": 1698827458090,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED\t",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "REQUEST_LIMIT_EXCEEDED",
                "description": "Request is rejected due to throttling.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119518,
        "executor_type": "THIRDPARTY",
        "executor_name": "createandtriggeraonetimerun",
        "executor_version": "v2",
        "executor_display_name": "Create and trigger a one-time run\u2002",
        "executor_description": "Submit a one-time run. This endpoint allows you to submit a workload directly without creating a job. Runs submitted using this endpoint don\u2019t display in the UI. Use the jobs/runs/get API to check the run state after the job is submitted.",
        "executor_category": "Jobs",
        "executor_category_group": "Jobs\u2002",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/jobs/runs/submit",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "tasks": [
                    {
                        "task_key": "Task_Key",
                        "depends_on": [
                            {
                                "task_key": "string"
                            }
                        ],
                        "existing_cluster_id": "string",
                        "new_cluster": {
                            "num_workers": 0,
                            "autoscale": {
                                "min_workers": 0,
                                "max_workers": 0
                            },
                            "cluster_name": "string",
                            "spark_version": "string",
                            "spark_conf": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "gcp_attributes": {
                                "google_service_account": "string",
                                "boot_disk_size": 0,
                                "availability": "PREEMPTIBLE_GCP",
                                "local_ssd_count": 0
                            },
                            "node_type_id": "string",
                            "driver_node_type_id": "string",
                            "ssh_public_keys": [
                                "string"
                            ],
                            "custom_tags": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "cluster_log_conf": {
                                "dbfs": {
                                    "destination": "string"
                                }
                            },
                            "init_scripts": [
                                {
                                    "workspace": {
                                        "destination": "string"
                                    },
                                    "volumes": {
                                        "destination": "string"
                                    },
                                    "file": {
                                        "destination": "string"
                                    },
                                    "dbfs": {
                                        "destination": "string"
                                    }
                                }
                            ],
                            "spark_env_vars": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "autotermination_minutes": 0,
                            "enable_elastic_disk": true,
                            "cluster_source": "UI",
                            "instance_pool_id": "string",
                            "policy_id": "string",
                            "enable_local_disk_encryption": true,
                            "driver_instance_pool_id": "string",
                            "workload_type": {
                                "clients": {
                                    "notebooks": "true",
                                    "jobs": "true"
                                }
                            },
                            "runtime_engine": "NULL",
                            "docker_image": {
                                "url": "string",
                                "basic_auth": {
                                    "username": "string",
                                    "password": "string"
                                }
                            },
                            "data_security_mode": "NONE",
                            "single_user_name": "string",
                            "apply_policy_default_values": "false"
                        },
                        "notebook_task": {
                            "notebook_path": "string",
                            "source": "WORKSPACE",
                            "base_parameters": {
                                "property1": "string",
                                "property2": "string"
                            }
                        },
                        "spark_jar_task": {
                            "main_class_name": "string",
                            "parameters": [
                                "string"
                            ],
                            "jar_uri": "string"
                        },
                        "spark_python_task": {
                            "python_file": "string",
                            "source": "WORKSPACE",
                            "parameters": [
                                "string"
                            ]
                        },
                        "spark_submit_task": {
                            "parameters": [
                                "string"
                            ]
                        },
                        "pipeline_task": {
                            "pipeline_id": "string",
                            "full_refresh": false
                        },
                        "python_wheel_task": {
                            "package_name": "string",
                            "entry_point": "string",
                            "parameters": [
                                "string"
                            ],
                            "named_parameters": {
                                "property1": "string",
                                "property2": "string"
                            }
                        },
                        "libraries": [
                            {
                                "jar": "string",
                                "egg": "string",
                                "pypi": {
                                    "package": "string",
                                    "repo": "string"
                                },
                                "maven": {
                                    "coordinates": "string",
                                    "repo": "string",
                                    "exclusions": [
                                        "string"
                                    ]
                                },
                                "cran": {
                                    "package": "string",
                                    "repo": "string"
                                },
                                "whl": "string"
                            }
                        ],
                        "timeout_seconds": 0,
                        "health": {
                            "rules": [
                                {
                                    "metric": "RUN_DURATION_SECONDS",
                                    "op": "GREATER_THAN",
                                    "value": 0
                                }
                            ]
                        },
                        "email_notifications": {
                            "on_start": [
                                "string"
                            ],
                            "on_success": [
                                "string"
                            ],
                            "on_failure": [
                                "string"
                            ],
                            "on_duration_warning_threshold_exceeded": [
                                "string"
                            ],
                            "no_alert_for_skipped_runs": false
                        },
                        "notification_settings": {
                            "no_alert_for_skipped_runs": false,
                            "no_alert_for_canceled_runs": false,
                            "alert_on_last_attempt": false
                        },
                        "webhook_notifications": {
                            "on_start": [
                                {
                                    "id": "string"
                                }
                            ],
                            "on_success": [
                                {
                                    "id": "string"
                                }
                            ],
                            "on_failure": [
                                {
                                    "id": "string"
                                }
                            ],
                            "on_duration_warning_threshold_exceeded": [
                                {
                                    "id": "string"
                                }
                            ]
                        }
                    }
                ],
                "run_name": "string",
                "git_source": {
                    "git_url": "string",
                    "git_provider": "gitHub",
                    "git_branch": "string",
                    "git_tag": "string",
                    "git_commit": "string"
                },
                "timeout_seconds": 0,
                "health": {
                    "rules": [
                        {
                            "metric": "RUN_DURATION_SECONDS",
                            "op": "GREATER_THAN",
                            "value": 0
                        }
                    ]
                },
                "email_notifications": {
                    "on_start": [
                        "string"
                    ],
                    "on_success": [
                        "string"
                    ],
                    "on_failure": [
                        "string"
                    ],
                    "on_duration_warning_threshold_exceeded": [
                        "string"
                    ],
                    "no_alert_for_skipped_runs": false
                },
                "webhook_notifications": {
                    "on_start": [
                        {
                            "id": "string"
                        }
                    ],
                    "on_success": [
                        {
                            "id": "string"
                        }
                    ],
                    "on_failure": [
                        {
                            "id": "string"
                        }
                    ],
                    "on_duration_warning_threshold_exceeded": [
                        {
                            "id": "string"
                        }
                    ]
                },
                "notification_settings": {
                    "no_alert_for_skipped_runs": false,
                    "no_alert_for_canceled_runs": false
                },
                "idempotency_token": "string",
                "queue": {
                    "enabled": true
                },
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_MANAGE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698831199886,
        "lastModifiedTime": 1698831199886,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "run_id": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED\t",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "REQUEST_LIMIT_EXCEEDED",
                "description": "Request is rejected due to throttling.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "FEATURE_DISABLED\t",
                "description": "If a given user/entity is trying to use a feature which has been disabled.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119481,
        "executor_type": "THIRDPARTY",
        "executor_name": "getjobpermissionlevels",
        "executor_version": "v2",
        "executor_display_name": "Get job permission levels\u2002",
        "executor_description": "Gets the permission levels that a user can have on an object.",
        "executor_category": "Jobs",
        "executor_category_group": "Jobs\u2002",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/jobs/{job_id}/permissionLevels",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "job_id",
                "value": "",
                "description": "The job for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698825944834,
        "lastModifiedTime": 1698825944834,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "permission_levels": [
                        {
                            "permission_level": "CAN_MANAGE",
                            "description": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED\t",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119475,
        "executor_type": "THIRDPARTY",
        "executor_name": "getjobpermissions",
        "executor_version": "v2",
        "executor_display_name": "Get job permissions\u2002",
        "executor_description": "Gets the permissions of a job. Jobs can inherit permissions from their root object.",
        "executor_category": "Jobs",
        "executor_category_group": "Jobs\u2002",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/jobs/{job_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "job_id",
                "value": "",
                "description": "The job for which to get or manage permissions."
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698825569214,
        "lastModifiedTime": 1698825569214,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED\t",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119476,
        "executor_type": "THIRDPARTY",
        "executor_name": "setjobpermissions",
        "executor_version": "v2",
        "executor_display_name": "Set job permissions\u2002",
        "executor_description": "Sets permissions on a job. Jobs can inherit permissions from their root object.",
        "executor_category": "Jobs",
        "executor_category_group": "Jobs\u2002",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/jobs/{job_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "job_id",
                "value": "",
                "description": "The job for which to get or manage permissions."
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_MANAGE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698825682076,
        "lastModifiedTime": 1698825682076,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED\t",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119485,
        "executor_type": "THIRDPARTY",
        "executor_name": "createanewjob",
        "executor_version": "v2",
        "executor_display_name": "Create a new job\u2002",
        "executor_description": "Create a new job.",
        "executor_category": "Jobs",
        "executor_category_group": "Jobs\u2002",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/jobs/create",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "run_as": {
                    "user_name": "sharky@databricks.com"
                },
                "name": "Shark Predictor",
                "email_notifications": {
                    "on_failure": [
                        "sharky@databricks.com"
                    ]
                },
                "notification_settings": {
                    "no_alert_for_skipped_runs": false,
                    "no_alert_for_canceled_runs": false,
                    "alert_on_last_attempt": false
                },
                "webhook_notifications": {},
                "max_concurrent_runs": 1,
                "tasks": [
                    {
                        "task_key": "weather_ocean_data",
                        "run_if": "ALL_SUCCESS",
                        "notebook_task": {
                            "notebook_path": "/Users/sharky@databricks.com/weather_ingest",
                            "source": "WORKSPACE"
                        },
                        "existing_cluster_id": "0914-084715-44dhyjfb"
                    },
                    {
                        "task_key": "shark_sightings",
                        "run_if": "ALL_SUCCESS",
                        "notebook_task": {
                            "notebook_path": "/Users/sharky@databricks.com/shark_sightings_scraper",
                            "source": "WORKSPACE"
                        },
                        "existing_cluster_id": "0914-084715-44dhyjfb"
                    },
                    {
                        "task_key": "reef_data",
                        "run_if": "ALL_SUCCESS",
                        "notebook_task": {
                            "notebook_path": "/Users/sharky@databricks.com/reef_data",
                            "source": "WORKSPACE"
                        },
                        "existing_cluster_id": "0914-084715-44dhyjfb"
                    },
                    {
                        "task_key": "combine_shark_data",
                        "depends_on": [
                            {
                                "task_key": "reef_data"
                            },
                            {
                                "task_key": "shark_sightings"
                            },
                            {
                                "task_key": "weather_ocean_data"
                            }
                        ],
                        "run_if": "AT_LEAST_ONE_SUCCESS",
                        "pipeline_task": {
                            "pipeline_id": "1165597e-f650-4bf3-9a4f-fc2f2d40d2c3"
                        }
                    },
                    {
                        "task_key": "check_drift",
                        "depends_on": [
                            {
                                "task_key": "combine_shark_data"
                            }
                        ],
                        "run_if": "ALL_SUCCESS",
                        "notebook_task": {
                            "notebook_path": "/Users/sharky@databricks.com/check_drift",
                            "source": "WORKSPACE"
                        },
                        "existing_cluster_id": "0914-084715-44dhyjfb"
                    },
                    {
                        "task_key": "if_drift_above_threshold",
                        "depends_on": [
                            {
                                "task_key": "check_drift"
                            }
                        ],
                        "run_if": "ALL_SUCCESS",
                        "condition_task": {
                            "op": "EQUAL_TO",
                            "left": "{{tasks.check_drift.values.retrain}}",
                            "right": "true"
                        }
                    },
                    {
                        "task_key": "retrain_model",
                        "depends_on": [
                            {
                                "task_key": "if_drift_above_threshold",
                                "outcome": "true"
                            }
                        ],
                        "run_if": "ALL_SUCCESS",
                        "spark_python_task": {
                            "python_file": "/Users/sharky@databricks.com/retrain.py"
                        },
                        "existing_cluster_id": "0914-084715-44dhyjfb"
                    },
                    {
                        "task_key": "refresh_shark_dashboard",
                        "depends_on": [
                            {
                                "task_key": "retrain_model"
                            },
                            {
                                "task_key": "if_drift_above_threshold",
                                "outcome": "false"
                            }
                        ],
                        "run_if": "ALL_SUCCESS",
                        "sql_task": {
                            "dashboard": {
                                "dashboard_id": "0007ce2d-9d7d-48ca-b273-734c75080f58"
                            },
                            "warehouse_id": "791ba2a31c7fd70a"
                        }
                    }
                ],
                "format": "MULTI_TASK"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698826155161,
        "lastModifiedTime": 1698826155161,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "job_id": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED\t",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "REQUEST_LIMIT_EXCEEDED\t",
                "description": "Request is rejected due to throttling.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119530,
        "executor_type": "THIRDPARTY",
        "executor_name": "getasinglejobrun",
        "executor_version": "v2",
        "executor_display_name": "Get a single job run\u2002",
        "executor_description": "Retrieve the metadata of a run.",
        "executor_category": "Jobs",
        "executor_category_group": "Jobs",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/jobs/runs/get",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "include_history",
                "value": "",
                "description": "Whether to include the repair history in the response.",
                "req": false
            },
            {
                "key": "run_id",
                "value": "",
                "description": "The canonical identifier of the run for which to retrieve the metadata. This field is required.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "basic_authentication",
            "authAttributes": {
                "username": "",
                "password": ""
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698832250747,
        "lastModifiedTime": 1698832250747,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "job_id": 0,
                    "run_id": 0,
                    "number_in_job": 0,
                    "creator_user_name": "string",
                    "original_attempt_run_id": 0,
                    "state": {
                        "life_cycle_state": "PENDING",
                        "queue_reason": "string",
                        "result_state": "SUCCESS",
                        "user_cancelled_or_timedout": true,
                        "state_message": "string"
                    },
                    "schedule": {
                        "quartz_cron_expression": "string",
                        "timezone_id": "string",
                        "pause_status": "PAUSED"
                    },
                    "continuous": {
                        "pause_status": "PAUSED"
                    },
                    "tasks": [
                        {
                            "run_id": 0,
                            "task_key": "Task_Key",
                            "description": "This is the description for this task.",
                            "run_if": "ALL_SUCCESS",
                            "state": {
                                "life_cycle_state": "PENDING",
                                "queue_reason": "string",
                                "result_state": "SUCCESS",
                                "user_cancelled_or_timedout": true,
                                "state_message": "string"
                            },
                            "depends_on": [
                                {
                                    "task_key": "string"
                                }
                            ],
                            "existing_cluster_id": "string",
                            "new_cluster": {
                                "num_workers": 0,
                                "autoscale": {
                                    "min_workers": 0,
                                    "max_workers": 0
                                },
                                "cluster_name": "string",
                                "spark_version": "string",
                                "spark_conf": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "gcp_attributes": {
                                    "google_service_account": "string",
                                    "boot_disk_size": 0,
                                    "availability": "PREEMPTIBLE_GCP",
                                    "local_ssd_count": 0
                                },
                                "node_type_id": "string",
                                "driver_node_type_id": "string",
                                "ssh_public_keys": [
                                    "string"
                                ],
                                "custom_tags": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "cluster_log_conf": {
                                    "dbfs": {
                                        "destination": "string"
                                    }
                                },
                                "init_scripts": [
                                    {
                                        "workspace": {
                                            "destination": "string"
                                        },
                                        "volumes": {
                                            "destination": "string"
                                        },
                                        "file": {
                                            "destination": "string"
                                        },
                                        "dbfs": {
                                            "destination": "string"
                                        }
                                    }
                                ],
                                "spark_env_vars": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "autotermination_minutes": 0,
                                "enable_elastic_disk": true,
                                "cluster_source": "UI",
                                "instance_pool_id": "string",
                                "policy_id": "string",
                                "enable_local_disk_encryption": true,
                                "driver_instance_pool_id": "string",
                                "workload_type": {
                                    "clients": {
                                        "notebooks": "true",
                                        "jobs": "true"
                                    }
                                },
                                "runtime_engine": "NULL",
                                "docker_image": {
                                    "url": "string",
                                    "basic_auth": {
                                        "username": "string",
                                        "password": "string"
                                    }
                                },
                                "data_security_mode": "NONE",
                                "single_user_name": "string",
                                "apply_policy_default_values": "false"
                            },
                            "libraries": [
                                {
                                    "jar": "string",
                                    "egg": "string",
                                    "pypi": {
                                        "package": "string",
                                        "repo": "string"
                                    },
                                    "maven": {
                                        "coordinates": "string",
                                        "repo": "string",
                                        "exclusions": [
                                            "string"
                                        ]
                                    },
                                    "cran": {
                                        "package": "string",
                                        "repo": "string"
                                    },
                                    "whl": "string"
                                }
                            ],
                            "notebook_task": {
                                "notebook_path": "string",
                                "source": "WORKSPACE",
                                "base_parameters": {
                                    "property1": "string",
                                    "property2": "string"
                                }
                            },
                            "spark_jar_task": {
                                "main_class_name": "string",
                                "parameters": [
                                    "string"
                                ],
                                "jar_uri": "string"
                            },
                            "spark_python_task": {
                                "python_file": "string",
                                "source": "WORKSPACE",
                                "parameters": [
                                    "string"
                                ]
                            },
                            "spark_submit_task": {
                                "parameters": [
                                    "string"
                                ]
                            },
                            "pipeline_task": {
                                "pipeline_id": "string",
                                "full_refresh": false
                            },
                            "python_wheel_task": {
                                "package_name": "string",
                                "entry_point": "string",
                                "parameters": [
                                    "string"
                                ],
                                "named_parameters": {
                                    "property1": "string",
                                    "property2": "string"
                                }
                            },
                            "dbt_task": {
                                "project_directory": "string",
                                "commands": [
                                    "string"
                                ],
                                "schema": "string",
                                "warehouse_id": "string",
                                "catalog": "string",
                                "profiles_directory": "string"
                            },
                            "run_job_task": {
                                "job_id": 0
                            },
                            "start_time": 0,
                            "setup_duration": 0,
                            "execution_duration": 0,
                            "cleanup_duration": 0,
                            "end_time": 0,
                            "queue_duration": 0,
                            "attempt_number": 0,
                            "cluster_instance": {
                                "cluster_id": "string",
                                "spark_context_id": "string"
                            },
                            "git_source": {
                                "git_url": "string",
                                "git_provider": "gitHub",
                                "git_branch": "string",
                                "git_tag": "string",
                                "git_commit": "string",
                                "git_snapshot": {
                                    "used_commit": "string"
                                }
                            }
                        }
                    ],
                    "job_clusters": [
                        {
                            "job_cluster_key": "string",
                            "new_cluster": {
                                "num_workers": 0,
                                "autoscale": {
                                    "min_workers": 0,
                                    "max_workers": 0
                                },
                                "cluster_name": "string",
                                "spark_version": "string",
                                "spark_conf": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "gcp_attributes": {
                                    "google_service_account": "string",
                                    "boot_disk_size": 0,
                                    "availability": "PREEMPTIBLE_GCP",
                                    "local_ssd_count": 0
                                },
                                "node_type_id": "string",
                                "driver_node_type_id": "string",
                                "ssh_public_keys": [
                                    "string"
                                ],
                                "custom_tags": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "cluster_log_conf": {
                                    "dbfs": {
                                        "destination": "string"
                                    }
                                },
                                "init_scripts": [
                                    {
                                        "workspace": {
                                            "destination": "string"
                                        },
                                        "volumes": {
                                            "destination": "string"
                                        },
                                        "file": {
                                            "destination": "string"
                                        },
                                        "dbfs": {
                                            "destination": "string"
                                        }
                                    }
                                ],
                                "spark_env_vars": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "autotermination_minutes": 0,
                                "enable_elastic_disk": true,
                                "cluster_source": "UI",
                                "instance_pool_id": "string",
                                "policy_id": "string",
                                "enable_local_disk_encryption": true,
                                "driver_instance_pool_id": "string",
                                "workload_type": {
                                    "clients": {
                                        "notebooks": "true",
                                        "jobs": "true"
                                    }
                                },
                                "runtime_engine": "NULL",
                                "docker_image": {
                                    "url": "string",
                                    "basic_auth": {
                                        "username": "string",
                                        "password": "string"
                                    }
                                },
                                "data_security_mode": "NONE",
                                "single_user_name": "string",
                                "apply_policy_default_values": "false"
                            }
                        }
                    ],
                    "cluster_spec": {
                        "existing_cluster_id": "string",
                        "new_cluster": {
                            "num_workers": 0,
                            "autoscale": {
                                "min_workers": 0,
                                "max_workers": 0
                            },
                            "cluster_name": "string",
                            "spark_version": "string",
                            "spark_conf": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "gcp_attributes": {
                                "google_service_account": "string",
                                "boot_disk_size": 0,
                                "availability": "PREEMPTIBLE_GCP",
                                "local_ssd_count": 0
                            },
                            "node_type_id": "string",
                            "driver_node_type_id": "string",
                            "ssh_public_keys": [
                                "string"
                            ],
                            "custom_tags": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "cluster_log_conf": {
                                "dbfs": {
                                    "destination": "string"
                                }
                            },
                            "init_scripts": [
                                {
                                    "workspace": {
                                        "destination": "string"
                                    },
                                    "volumes": {
                                        "destination": "string"
                                    },
                                    "file": {
                                        "destination": "string"
                                    },
                                    "dbfs": {
                                        "destination": "string"
                                    }
                                }
                            ],
                            "spark_env_vars": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "autotermination_minutes": 0,
                            "enable_elastic_disk": true,
                            "cluster_source": "UI",
                            "instance_pool_id": "string",
                            "policy_id": "string",
                            "enable_local_disk_encryption": true,
                            "driver_instance_pool_id": "string",
                            "workload_type": {
                                "clients": {
                                    "notebooks": "true",
                                    "jobs": "true"
                                }
                            },
                            "runtime_engine": "NULL",
                            "docker_image": {
                                "url": "string",
                                "basic_auth": {
                                    "username": "string",
                                    "password": "string"
                                }
                            },
                            "data_security_mode": "NONE",
                            "single_user_name": "string",
                            "apply_policy_default_values": "false"
                        },
                        "libraries": [
                            {
                                "jar": "string",
                                "egg": "string",
                                "pypi": {
                                    "package": "string",
                                    "repo": "string"
                                },
                                "maven": {
                                    "coordinates": "string",
                                    "repo": "string",
                                    "exclusions": [
                                        "string"
                                    ]
                                },
                                "cran": {
                                    "package": "string",
                                    "repo": "string"
                                },
                                "whl": "string"
                            }
                        ]
                    },
                    "cluster_instance": {
                        "cluster_id": "string",
                        "spark_context_id": "string"
                    },
                    "git_source": {
                        "git_url": "string",
                        "git_provider": "gitHub",
                        "git_branch": "string",
                        "git_tag": "string",
                        "git_commit": "string",
                        "git_snapshot": {
                            "used_commit": "string"
                        }
                    },
                    "overriding_parameters": {
                        "jar_params": [
                            "string"
                        ],
                        "notebook_params": {
                            "property1": "string",
                            "property2": "string"
                        },
                        "python_params": [
                            "string"
                        ],
                        "spark_submit_params": [
                            "string"
                        ],
                        "python_named_params": {
                            "property1": "string",
                            "property2": "string"
                        },
                        "pipeline_params": {
                            "full_refresh": true
                        },
                        "dbt_commands": [
                            "string"
                        ]
                    },
                    "start_time": 0,
                    "setup_duration": 0,
                    "execution_duration": 0,
                    "cleanup_duration": 0,
                    "end_time": 0,
                    "trigger_info": {
                        "run_id": 0
                    },
                    "run_duration": 0,
                    "trigger": "PERIODIC",
                    "run_name": "Untitled",
                    "run_page_url": "string",
                    "run_type": "JOB_RUN",
                    "attempt_number": 0,
                    "repair_history": [
                        {
                            "type": "ORIGINAL",
                            "start_time": 0,
                            "end_time": 0,
                            "state": {
                                "life_cycle_state": "PENDING",
                                "queue_reason": "string",
                                "result_state": "SUCCESS",
                                "user_cancelled_or_timedout": true,
                                "state_message": "string"
                            },
                            "id": 0,
                            "task_run_ids": [
                                0
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE\t",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "REQUEST_LIMIT_EXCEEDED",
                "description": "Request is rejected due to throttling.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119488,
        "executor_type": "THIRDPARTY",
        "executor_name": "listJOBS",
        "executor_version": "v2",
        "executor_display_name": "List jobs\u2002",
        "executor_description": "Retrieves a list of jobs.",
        "executor_category": "Jobs",
        "executor_category_group": "Jobs\u2002",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/jobs/list",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698826382649,
        "lastModifiedTime": 1698826382649,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "permission_levels": [
                        {
                            "permission_level": "CAN_MANAGE",
                            "description": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED\t",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119494,
        "executor_type": "THIRDPARTY",
        "executor_name": "partiallyupdateajob",
        "executor_version": "v2",
        "executor_display_name": "Partially update a job\u2002",
        "executor_description": "Add, update, or remove specific settings of an existing job. Use the ResetJob to overwrite all job settings.",
        "executor_category": "Jobs",
        "executor_category_group": "Jobs\u2002",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/jobs/update",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "job_id": 0,
                "new_settings": {
                    "name": "Untitled",
                    "queue": {
                        "enabled": true
                    },
                    "tags": {},
                    "tasks": [
                        {
                            "task_key": "Task_Key",
                            "description": "This is the description for this task.",
                            "depends_on": [
                                {
                                    "task_key": "string"
                                }
                            ],
                            "run_if": "ALL_SUCCESS",
                            "existing_cluster_id": "string",
                            "new_cluster": {
                                "num_workers": 0,
                                "autoscale": {
                                    "min_workers": 0,
                                    "max_workers": 0
                                },
                                "cluster_name": "string",
                                "spark_version": "string",
                                "spark_conf": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "gcp_attributes": {
                                    "google_service_account": "string",
                                    "boot_disk_size": 0,
                                    "availability": "PREEMPTIBLE_GCP",
                                    "local_ssd_count": 0
                                },
                                "node_type_id": "string",
                                "driver_node_type_id": "string",
                                "ssh_public_keys": [
                                    "string"
                                ],
                                "custom_tags": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "cluster_log_conf": {
                                    "dbfs": {
                                        "destination": "string"
                                    }
                                },
                                "init_scripts": [
                                    {
                                        "workspace": {
                                            "destination": "string"
                                        },
                                        "volumes": {
                                            "destination": "string"
                                        },
                                        "file": {
                                            "destination": "string"
                                        },
                                        "dbfs": {
                                            "destination": "string"
                                        }
                                    }
                                ],
                                "spark_env_vars": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "autotermination_minutes": 0,
                                "enable_elastic_disk": true,
                                "cluster_source": "UI",
                                "instance_pool_id": "string",
                                "policy_id": "string",
                                "enable_local_disk_encryption": true,
                                "driver_instance_pool_id": "string",
                                "workload_type": {
                                    "clients": {
                                        "notebooks": "true",
                                        "jobs": "true"
                                    }
                                },
                                "runtime_engine": "NULL",
                                "docker_image": {
                                    "url": "string",
                                    "basic_auth": {
                                        "username": "string",
                                        "password": "string"
                                    }
                                },
                                "data_security_mode": "NONE",
                                "single_user_name": "string",
                                "apply_policy_default_values": "false"
                            },
                            "job_cluster_key": "string",
                            "notebook_task": {
                                "notebook_path": "string",
                                "source": "WORKSPACE",
                                "base_parameters": {
                                    "property1": "string",
                                    "property2": "string"
                                }
                            },
                            "spark_jar_task": {
                                "main_class_name": "string",
                                "parameters": [
                                    "string"
                                ],
                                "jar_uri": "string"
                            },
                            "spark_python_task": {
                                "python_file": "string",
                                "source": "WORKSPACE",
                                "parameters": [
                                    "string"
                                ]
                            },
                            "spark_submit_task": {
                                "parameters": [
                                    "string"
                                ]
                            },
                            "pipeline_task": {
                                "pipeline_id": "string",
                                "full_refresh": false
                            },
                            "python_wheel_task": {
                                "package_name": "string",
                                "entry_point": "string",
                                "parameters": [
                                    "string"
                                ],
                                "named_parameters": {
                                    "property1": "string",
                                    "property2": "string"
                                }
                            },
                            "dbt_task": {
                                "project_directory": "string",
                                "commands": [
                                    "string"
                                ],
                                "schema": "string",
                                "warehouse_id": "string",
                                "catalog": "string",
                                "profiles_directory": "string"
                            },
                            "run_job_task": {
                                "job_id": 0
                            },
                            "libraries": [
                                {
                                    "jar": "string",
                                    "egg": "string",
                                    "pypi": {
                                        "package": "string",
                                        "repo": "string"
                                    },
                                    "maven": {
                                        "coordinates": "string",
                                        "repo": "string",
                                        "exclusions": [
                                            "string"
                                        ]
                                    },
                                    "cran": {
                                        "package": "string",
                                        "repo": "string"
                                    },
                                    "whl": "string"
                                }
                            ],
                            "email_notifications": {
                                "on_start": [
                                    "string"
                                ],
                                "on_success": [
                                    "string"
                                ],
                                "on_failure": [
                                    "string"
                                ],
                                "on_duration_warning_threshold_exceeded": [
                                    "string"
                                ]
                            },
                            "webhook_notifications": {
                                "on_start": [
                                    {
                                        "id": "string"
                                    }
                                ],
                                "on_success": [
                                    {
                                        "id": "string"
                                    }
                                ],
                                "on_failure": [
                                    {
                                        "id": "string"
                                    }
                                ],
                                "on_duration_warning_threshold_exceeded": [
                                    {
                                        "id": "string"
                                    }
                                ]
                            },
                            "notification_settings": {
                                "no_alert_for_skipped_runs": false,
                                "no_alert_for_canceled_runs": false,
                                "alert_on_last_attempt": false
                            },
                            "timeout_seconds": 0,
                            "health": {
                                "rules": [
                                    {
                                        "metric": "RUN_DURATION_SECONDS",
                                        "op": "GREATER_THAN",
                                        "value": 0
                                    }
                                ]
                            },
                            "max_retries": 0,
                            "min_retry_interval_millis": 0,
                            "retry_on_timeout": false
                        }
                    ],
                    "job_clusters": [
                        {
                            "job_cluster_key": "string",
                            "new_cluster": {
                                "num_workers": 0,
                                "autoscale": {
                                    "min_workers": 0,
                                    "max_workers": 0
                                },
                                "cluster_name": "string",
                                "spark_version": "string",
                                "spark_conf": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "gcp_attributes": {
                                    "google_service_account": "string",
                                    "boot_disk_size": 0,
                                    "availability": "PREEMPTIBLE_GCP",
                                    "local_ssd_count": 0
                                },
                                "node_type_id": "string",
                                "driver_node_type_id": "string",
                                "ssh_public_keys": [
                                    "string"
                                ],
                                "custom_tags": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "cluster_log_conf": {
                                    "dbfs": {
                                        "destination": "string"
                                    }
                                },
                                "init_scripts": [
                                    {
                                        "workspace": {
                                            "destination": "string"
                                        },
                                        "volumes": {
                                            "destination": "string"
                                        },
                                        "file": {
                                            "destination": "string"
                                        },
                                        "dbfs": {
                                            "destination": "string"
                                        }
                                    }
                                ],
                                "spark_env_vars": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "autotermination_minutes": 0,
                                "enable_elastic_disk": true,
                                "cluster_source": "UI",
                                "instance_pool_id": "string",
                                "policy_id": "string",
                                "enable_local_disk_encryption": true,
                                "driver_instance_pool_id": "string",
                                "workload_type": {
                                    "clients": {
                                        "notebooks": "true",
                                        "jobs": "true"
                                    }
                                },
                                "runtime_engine": "NULL",
                                "docker_image": {
                                    "url": "string",
                                    "basic_auth": {
                                        "username": "string",
                                        "password": "string"
                                    }
                                },
                                "data_security_mode": "NONE",
                                "single_user_name": "string",
                                "apply_policy_default_values": "false"
                            }
                        }
                    ],
                    "email_notifications": {
                        "on_start": [
                            "string"
                        ],
                        "on_success": [
                            "string"
                        ],
                        "on_failure": [
                            "string"
                        ],
                        "on_duration_warning_threshold_exceeded": [
                            "string"
                        ],
                        "no_alert_for_skipped_runs": false
                    },
                    "webhook_notifications": {
                        "on_start": [
                            {
                                "id": "string"
                            }
                        ],
                        "on_success": [
                            {
                                "id": "string"
                            }
                        ],
                        "on_failure": [
                            {
                                "id": "string"
                            }
                        ],
                        "on_duration_warning_threshold_exceeded": [
                            {
                                "id": "string"
                            }
                        ]
                    },
                    "notification_settings": {
                        "no_alert_for_skipped_runs": false,
                        "no_alert_for_canceled_runs": false
                    },
                    "timeout_seconds": 0,
                    "health": {
                        "rules": [
                            {
                                "metric": "RUN_DURATION_SECONDS",
                                "op": "GREATER_THAN",
                                "value": 0
                            }
                        ]
                    },
                    "schedule": {
                        "quartz_cron_expression": "string",
                        "timezone_id": "string",
                        "pause_status": "PAUSED"
                    },
                    "continuous": {
                        "pause_status": "PAUSED"
                    },
                    "max_concurrent_runs": 1,
                    "git_source": {
                        "git_url": "string",
                        "git_provider": "gitHub",
                        "git_branch": "string",
                        "git_tag": "string",
                        "git_commit": "string"
                    },
                    "format": "SINGLE_TASK",
                    "run_as": {
                        "user_name": "string",
                        "service_principal_name": "string"
                    }
                },
                "fields_to_remove": [
                    "string"
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698826900896,
        "lastModifiedTime": 1698827511601,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED\t",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "REQUEST_LIMIT_EXCEEDED",
                "description": "Request is rejected due to throttling.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119525,
        "executor_type": "THIRDPARTY",
        "executor_name": "listjobruns",
        "executor_version": "v2",
        "executor_display_name": "List job runs\u2002",
        "executor_description": "List runs in descending order by start time.",
        "executor_category": "Jobs",
        "executor_category_group": "Jobs",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/jobs/runs/list",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "active_only",
                "value": "",
                "description": "If active_only is true, only active runs are included in the results; otherwise, lists both active and completed runs. An active run is a run in the QUEUED, PENDING, RUNNING, or TERMINATING. This field cannot be true when completed_only is true.",
                "req": false
            },
            {
                "key": "completed_only",
                "value": "",
                "description": "If completed_only is true, only completed runs are included in the results; otherwise, lists both active and completed runs. This field cannot be true when active_only is true.",
                "req": false
            },
            {
                "key": "job_id",
                "value": "",
                "description": "The job for which to list runs. If omitted, the Jobs service lists runs from all jobs.",
                "req": false
            },
            {
                "key": "page_token",
                "value": "",
                "description": "Use next_page_token or prev_page_token returned from the previous request to list the next or previous page of runs respectively.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "The offset of the first run to return, relative to the most recent run.  Deprecated since June 2023. Use page_token to iterate through the pages instead",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "The number of runs to return. This value must be greater than 0 and less than 25. The default value is 20. If a request specifies a limit of 0, the service instead uses the maximum limit.",
                "req": false
            },
            {
                "key": "run_type",
                "value": "",
                "description": "The type of runs to return. For a description of run types, see Jobs/GetRun.",
                "req": false
            },
            {
                "key": "expand_tasks",
                "value": "",
                "description": "Whether to include task and cluster details in the response.",
                "req": false
            },
            {
                "key": "start_time_from",
                "value": "",
                "description": "Show runs that started at or after this value. The value must be a UTC timestamp in milliseconds. Can be combined with start_time_to to filter by a time range.",
                "req": false
            },
            {
                "key": "start_time_to",
                "value": "",
                "description": "Show runs that started at or before this value. The value must be a UTC timestamp in milliseconds. Can be combined with start_time_from to filter by a time range.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698831886144,
        "lastModifiedTime": 1698831886144,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "runs": [
                        {
                            "job_id": 0,
                            "run_id": 0,
                            "number_in_job": 0,
                            "creator_user_name": "string",
                            "original_attempt_run_id": 0,
                            "state": {
                                "life_cycle_state": "PENDING",
                                "queue_reason": "string",
                                "result_state": "SUCCESS",
                                "user_cancelled_or_timedout": true,
                                "state_message": "string"
                            },
                            "schedule": {
                                "quartz_cron_expression": "string",
                                "timezone_id": "string",
                                "pause_status": "PAUSED"
                            },
                            "continuous": {
                                "pause_status": "PAUSED"
                            },
                            "tasks": [
                                {
                                    "run_id": 0,
                                    "task_key": "Task_Key",
                                    "description": "This is the description for this task.",
                                    "run_if": "ALL_SUCCESS",
                                    "state": {
                                        "life_cycle_state": "PENDING",
                                        "queue_reason": "string",
                                        "result_state": "SUCCESS",
                                        "user_cancelled_or_timedout": true,
                                        "state_message": "string"
                                    },
                                    "depends_on": [
                                        {
                                            "task_key": "string"
                                        }
                                    ],
                                    "existing_cluster_id": "string",
                                    "new_cluster": {
                                        "num_workers": 0,
                                        "autoscale": {
                                            "min_workers": 0,
                                            "max_workers": 0
                                        },
                                        "cluster_name": "string",
                                        "spark_version": "string",
                                        "spark_conf": {
                                            "property1": "string",
                                            "property2": "string"
                                        },
                                        "gcp_attributes": {
                                            "google_service_account": "string",
                                            "boot_disk_size": 0,
                                            "availability": "PREEMPTIBLE_GCP",
                                            "local_ssd_count": 0
                                        },
                                        "node_type_id": "string",
                                        "driver_node_type_id": "string",
                                        "ssh_public_keys": [
                                            "string"
                                        ],
                                        "custom_tags": {
                                            "property1": "string",
                                            "property2": "string"
                                        },
                                        "cluster_log_conf": {
                                            "dbfs": {
                                                "destination": "string"
                                            }
                                        },
                                        "init_scripts": [
                                            {
                                                "workspace": {
                                                    "destination": "string"
                                                },
                                                "volumes": {
                                                    "destination": "string"
                                                },
                                                "file": {
                                                    "destination": "string"
                                                },
                                                "dbfs": {
                                                    "destination": "string"
                                                }
                                            }
                                        ],
                                        "spark_env_vars": {
                                            "property1": "string",
                                            "property2": "string"
                                        },
                                        "autotermination_minutes": 0,
                                        "enable_elastic_disk": true,
                                        "cluster_source": "UI",
                                        "instance_pool_id": "string",
                                        "policy_id": "string",
                                        "enable_local_disk_encryption": true,
                                        "driver_instance_pool_id": "string",
                                        "workload_type": {
                                            "clients": {
                                                "notebooks": "true",
                                                "jobs": "true"
                                            }
                                        },
                                        "runtime_engine": "NULL",
                                        "docker_image": {
                                            "url": "string",
                                            "basic_auth": {
                                                "username": "string",
                                                "password": "string"
                                            }
                                        },
                                        "data_security_mode": "NONE",
                                        "single_user_name": "string",
                                        "apply_policy_default_values": "false"
                                    },
                                    "libraries": [
                                        {
                                            "jar": "string",
                                            "egg": "string",
                                            "pypi": {
                                                "package": "string",
                                                "repo": "string"
                                            },
                                            "maven": {
                                                "coordinates": "string",
                                                "repo": "string",
                                                "exclusions": [
                                                    "string"
                                                ]
                                            },
                                            "cran": {
                                                "package": "string",
                                                "repo": "string"
                                            },
                                            "whl": "string"
                                        }
                                    ],
                                    "notebook_task": {
                                        "notebook_path": "string",
                                        "source": "WORKSPACE",
                                        "base_parameters": {
                                            "property1": "string",
                                            "property2": "string"
                                        }
                                    },
                                    "spark_jar_task": {
                                        "main_class_name": "string",
                                        "parameters": [
                                            "string"
                                        ],
                                        "jar_uri": "string"
                                    },
                                    "spark_python_task": {
                                        "python_file": "string",
                                        "source": "WORKSPACE",
                                        "parameters": [
                                            "string"
                                        ]
                                    },
                                    "spark_submit_task": {
                                        "parameters": [
                                            "string"
                                        ]
                                    },
                                    "pipeline_task": {
                                        "pipeline_id": "string",
                                        "full_refresh": false
                                    },
                                    "python_wheel_task": {
                                        "package_name": "string",
                                        "entry_point": "string",
                                        "parameters": [
                                            "string"
                                        ],
                                        "named_parameters": {
                                            "property1": "string",
                                            "property2": "string"
                                        }
                                    },
                                    "dbt_task": {
                                        "project_directory": "string",
                                        "commands": [
                                            "string"
                                        ],
                                        "schema": "string",
                                        "warehouse_id": "string",
                                        "catalog": "string",
                                        "profiles_directory": "string"
                                    },
                                    "run_job_task": {
                                        "job_id": 0
                                    },
                                    "start_time": 0,
                                    "setup_duration": 0,
                                    "execution_duration": 0,
                                    "cleanup_duration": 0,
                                    "end_time": 0,
                                    "queue_duration": 0,
                                    "attempt_number": 0,
                                    "cluster_instance": {
                                        "cluster_id": "string",
                                        "spark_context_id": "string"
                                    },
                                    "git_source": {
                                        "git_url": "string",
                                        "git_provider": "gitHub",
                                        "git_branch": "string",
                                        "git_tag": "string",
                                        "git_commit": "string",
                                        "git_snapshot": {
                                            "used_commit": "string"
                                        }
                                    }
                                }
                            ],
                            "job_clusters": [
                                {
                                    "job_cluster_key": "string",
                                    "new_cluster": {
                                        "num_workers": 0,
                                        "autoscale": {
                                            "min_workers": 0,
                                            "max_workers": 0
                                        },
                                        "cluster_name": "string",
                                        "spark_version": "string",
                                        "spark_conf": {
                                            "property1": "string",
                                            "property2": "string"
                                        },
                                        "gcp_attributes": {
                                            "google_service_account": "string",
                                            "boot_disk_size": 0,
                                            "availability": "PREEMPTIBLE_GCP",
                                            "local_ssd_count": 0
                                        },
                                        "node_type_id": "string",
                                        "driver_node_type_id": "string",
                                        "ssh_public_keys": [
                                            "string"
                                        ],
                                        "custom_tags": {
                                            "property1": "string",
                                            "property2": "string"
                                        },
                                        "cluster_log_conf": {
                                            "dbfs": {
                                                "destination": "string"
                                            }
                                        },
                                        "init_scripts": [
                                            {
                                                "workspace": {
                                                    "destination": "string"
                                                },
                                                "volumes": {
                                                    "destination": "string"
                                                },
                                                "file": {
                                                    "destination": "string"
                                                },
                                                "dbfs": {
                                                    "destination": "string"
                                                }
                                            }
                                        ],
                                        "spark_env_vars": {
                                            "property1": "string",
                                            "property2": "string"
                                        },
                                        "autotermination_minutes": 0,
                                        "enable_elastic_disk": true,
                                        "cluster_source": "UI",
                                        "instance_pool_id": "string",
                                        "policy_id": "string",
                                        "enable_local_disk_encryption": true,
                                        "driver_instance_pool_id": "string",
                                        "workload_type": {
                                            "clients": {
                                                "notebooks": "true",
                                                "jobs": "true"
                                            }
                                        },
                                        "runtime_engine": "NULL",
                                        "docker_image": {
                                            "url": "string",
                                            "basic_auth": {
                                                "username": "string",
                                                "password": "string"
                                            }
                                        },
                                        "data_security_mode": "NONE",
                                        "single_user_name": "string",
                                        "apply_policy_default_values": "false"
                                    }
                                }
                            ],
                            "cluster_spec": {
                                "existing_cluster_id": "string",
                                "new_cluster": {
                                    "num_workers": 0,
                                    "autoscale": {
                                        "min_workers": 0,
                                        "max_workers": 0
                                    },
                                    "cluster_name": "string",
                                    "spark_version": "string",
                                    "spark_conf": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "gcp_attributes": {
                                        "google_service_account": "string",
                                        "boot_disk_size": 0,
                                        "availability": "PREEMPTIBLE_GCP",
                                        "local_ssd_count": 0
                                    },
                                    "node_type_id": "string",
                                    "driver_node_type_id": "string",
                                    "ssh_public_keys": [
                                        "string"
                                    ],
                                    "custom_tags": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "cluster_log_conf": {
                                        "dbfs": {
                                            "destination": "string"
                                        }
                                    },
                                    "init_scripts": [
                                        {
                                            "workspace": {
                                                "destination": "string"
                                            },
                                            "volumes": {
                                                "destination": "string"
                                            },
                                            "file": {
                                                "destination": "string"
                                            },
                                            "dbfs": {
                                                "destination": "string"
                                            }
                                        }
                                    ],
                                    "spark_env_vars": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "autotermination_minutes": 0,
                                    "enable_elastic_disk": true,
                                    "cluster_source": "UI",
                                    "instance_pool_id": "string",
                                    "policy_id": "string",
                                    "enable_local_disk_encryption": true,
                                    "driver_instance_pool_id": "string",
                                    "workload_type": {
                                        "clients": {
                                            "notebooks": "true",
                                            "jobs": "true"
                                        }
                                    },
                                    "runtime_engine": "NULL",
                                    "docker_image": {
                                        "url": "string",
                                        "basic_auth": {
                                            "username": "string",
                                            "password": "string"
                                        }
                                    },
                                    "data_security_mode": "NONE",
                                    "single_user_name": "string",
                                    "apply_policy_default_values": "false"
                                },
                                "libraries": [
                                    {
                                        "jar": "string",
                                        "egg": "string",
                                        "pypi": {
                                            "package": "string",
                                            "repo": "string"
                                        },
                                        "maven": {
                                            "coordinates": "string",
                                            "repo": "string",
                                            "exclusions": [
                                                "string"
                                            ]
                                        },
                                        "cran": {
                                            "package": "string",
                                            "repo": "string"
                                        },
                                        "whl": "string"
                                    }
                                ]
                            },
                            "cluster_instance": {
                                "cluster_id": "string",
                                "spark_context_id": "string"
                            },
                            "git_source": {
                                "git_url": "string",
                                "git_provider": "gitHub",
                                "git_branch": "string",
                                "git_tag": "string",
                                "git_commit": "string",
                                "git_snapshot": {
                                    "used_commit": "string"
                                }
                            },
                            "overriding_parameters": {
                                "jar_params": [
                                    "string"
                                ],
                                "notebook_params": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "python_params": [
                                    "string"
                                ],
                                "spark_submit_params": [
                                    "string"
                                ],
                                "python_named_params": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "pipeline_params": {
                                    "full_refresh": true
                                },
                                "dbt_commands": [
                                    "string"
                                ]
                            },
                            "start_time": 0,
                            "setup_duration": 0,
                            "execution_duration": 0,
                            "cleanup_duration": 0,
                            "end_time": 0,
                            "trigger_info": {
                                "run_id": 0
                            },
                            "run_duration": 0,
                            "trigger": "PERIODIC",
                            "run_name": "Untitled",
                            "run_page_url": "string",
                            "run_type": "JOB_RUN",
                            "attempt_number": 0
                        }
                    ],
                    "has_more": true,
                    "next_page_token": "string",
                    "prev_page_token": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE\t",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "REQUEST_LIMIT_EXCEEDED\t",
                "description": "Request is rejected due to throttling.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119541,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteajobrun",
        "executor_version": "v2",
        "executor_display_name": "Delete a job run\u2002",
        "executor_description": "Deletes a non-active run. Returns an error if the run is active.",
        "executor_category": "Jobs",
        "executor_category_group": "Jobs",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/jobs/runs/delete",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "run_id",
                "value": "",
                "description": "The canonical identifier for the run. This field is required.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "run_id": 0
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698832743124,
        "lastModifiedTime": 1698832743124,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "notebook_output": {
                        "result": "string",
                        "truncated": true
                    },
                    "dbt_output": {
                        "artifacts_link": "string",
                        "artifacts_headers": {
                            "property1": "string",
                            "property2": "string"
                        }
                    },
                    "run_job_output": {
                        "run_id": 0
                    },
                    "logs": "string",
                    "logs_truncated": true,
                    "error": "string",
                    "error_trace": "string",
                    "metadata": {
                        "job_id": 0,
                        "run_id": 0,
                        "number_in_job": 0,
                        "creator_user_name": "string",
                        "original_attempt_run_id": 0,
                        "state": {
                            "life_cycle_state": "PENDING",
                            "queue_reason": "string",
                            "result_state": "SUCCESS",
                            "user_cancelled_or_timedout": true,
                            "state_message": "string"
                        },
                        "schedule": {
                            "quartz_cron_expression": "string",
                            "timezone_id": "string",
                            "pause_status": "PAUSED"
                        },
                        "continuous": {
                            "pause_status": "PAUSED"
                        },
                        "tasks": [
                            {
                                "run_id": 0,
                                "task_key": "Task_Key",
                                "description": "This is the description for this task.",
                                "run_if": "ALL_SUCCESS",
                                "state": {
                                    "life_cycle_state": "PENDING",
                                    "queue_reason": "string",
                                    "result_state": "SUCCESS",
                                    "user_cancelled_or_timedout": true,
                                    "state_message": "string"
                                },
                                "depends_on": [
                                    {
                                        "task_key": "string"
                                    }
                                ],
                                "existing_cluster_id": "string",
                                "new_cluster": {
                                    "num_workers": 0,
                                    "autoscale": {
                                        "min_workers": 0,
                                        "max_workers": 0
                                    },
                                    "cluster_name": "string",
                                    "spark_version": "string",
                                    "spark_conf": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "gcp_attributes": {
                                        "google_service_account": "string",
                                        "boot_disk_size": 0,
                                        "availability": "PREEMPTIBLE_GCP",
                                        "local_ssd_count": 0
                                    },
                                    "node_type_id": "string",
                                    "driver_node_type_id": "string",
                                    "ssh_public_keys": [
                                        "string"
                                    ],
                                    "custom_tags": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "cluster_log_conf": {
                                        "dbfs": {
                                            "destination": "string"
                                        }
                                    },
                                    "init_scripts": [
                                        {
                                            "workspace": {
                                                "destination": "string"
                                            },
                                            "volumes": {
                                                "destination": "string"
                                            },
                                            "file": {
                                                "destination": "string"
                                            },
                                            "dbfs": {
                                                "destination": "string"
                                            }
                                        }
                                    ],
                                    "spark_env_vars": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "autotermination_minutes": 0,
                                    "enable_elastic_disk": true,
                                    "cluster_source": "UI",
                                    "instance_pool_id": "string",
                                    "policy_id": "string",
                                    "enable_local_disk_encryption": true,
                                    "driver_instance_pool_id": "string",
                                    "workload_type": {
                                        "clients": {
                                            "notebooks": "true",
                                            "jobs": "true"
                                        }
                                    },
                                    "runtime_engine": "NULL",
                                    "docker_image": {
                                        "url": "string",
                                        "basic_auth": {
                                            "username": "string",
                                            "password": "string"
                                        }
                                    },
                                    "data_security_mode": "NONE",
                                    "single_user_name": "string",
                                    "apply_policy_default_values": "false"
                                },
                                "libraries": [
                                    {
                                        "jar": "string",
                                        "egg": "string",
                                        "pypi": {
                                            "package": "string",
                                            "repo": "string"
                                        },
                                        "maven": {
                                            "coordinates": "string",
                                            "repo": "string",
                                            "exclusions": [
                                                "string"
                                            ]
                                        },
                                        "cran": {
                                            "package": "string",
                                            "repo": "string"
                                        },
                                        "whl": "string"
                                    }
                                ],
                                "notebook_task": {
                                    "notebook_path": "string",
                                    "source": "WORKSPACE",
                                    "base_parameters": {
                                        "property1": "string",
                                        "property2": "string"
                                    }
                                },
                                "spark_jar_task": {
                                    "main_class_name": "string",
                                    "parameters": [
                                        "string"
                                    ],
                                    "jar_uri": "string"
                                },
                                "spark_python_task": {
                                    "python_file": "string",
                                    "source": "WORKSPACE",
                                    "parameters": [
                                        "string"
                                    ]
                                },
                                "spark_submit_task": {
                                    "parameters": [
                                        "string"
                                    ]
                                },
                                "pipeline_task": {
                                    "pipeline_id": "string",
                                    "full_refresh": false
                                },
                                "python_wheel_task": {
                                    "package_name": "string",
                                    "entry_point": "string",
                                    "parameters": [
                                        "string"
                                    ],
                                    "named_parameters": {
                                        "property1": "string",
                                        "property2": "string"
                                    }
                                },
                                "dbt_task": {
                                    "project_directory": "string",
                                    "commands": [
                                        "string"
                                    ],
                                    "schema": "string",
                                    "warehouse_id": "string",
                                    "catalog": "string",
                                    "profiles_directory": "string"
                                },
                                "run_job_task": {
                                    "job_id": 0
                                },
                                "start_time": 0,
                                "setup_duration": 0,
                                "execution_duration": 0,
                                "cleanup_duration": 0,
                                "end_time": 0,
                                "queue_duration": 0,
                                "attempt_number": 0,
                                "cluster_instance": {
                                    "cluster_id": "string",
                                    "spark_context_id": "string"
                                },
                                "git_source": {
                                    "git_url": "string",
                                    "git_provider": "gitHub",
                                    "git_branch": "string",
                                    "git_tag": "string",
                                    "git_commit": "string",
                                    "git_snapshot": {
                                        "used_commit": "string"
                                    }
                                }
                            }
                        ],
                        "job_clusters": [
                            {
                                "job_cluster_key": "string",
                                "new_cluster": {
                                    "num_workers": 0,
                                    "autoscale": {
                                        "min_workers": 0,
                                        "max_workers": 0
                                    },
                                    "cluster_name": "string",
                                    "spark_version": "string",
                                    "spark_conf": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "gcp_attributes": {
                                        "google_service_account": "string",
                                        "boot_disk_size": 0,
                                        "availability": "PREEMPTIBLE_GCP",
                                        "local_ssd_count": 0
                                    },
                                    "node_type_id": "string",
                                    "driver_node_type_id": "string",
                                    "ssh_public_keys": [
                                        "string"
                                    ],
                                    "custom_tags": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "cluster_log_conf": {
                                        "dbfs": {
                                            "destination": "string"
                                        }
                                    },
                                    "init_scripts": [
                                        {
                                            "workspace": {
                                                "destination": "string"
                                            },
                                            "volumes": {
                                                "destination": "string"
                                            },
                                            "file": {
                                                "destination": "string"
                                            },
                                            "dbfs": {
                                                "destination": "string"
                                            }
                                        }
                                    ],
                                    "spark_env_vars": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "autotermination_minutes": 0,
                                    "enable_elastic_disk": true,
                                    "cluster_source": "UI",
                                    "instance_pool_id": "string",
                                    "policy_id": "string",
                                    "enable_local_disk_encryption": true,
                                    "driver_instance_pool_id": "string",
                                    "workload_type": {
                                        "clients": {
                                            "notebooks": "true",
                                            "jobs": "true"
                                        }
                                    },
                                    "runtime_engine": "NULL",
                                    "docker_image": {
                                        "url": "string",
                                        "basic_auth": {
                                            "username": "string",
                                            "password": "string"
                                        }
                                    },
                                    "data_security_mode": "NONE",
                                    "single_user_name": "string",
                                    "apply_policy_default_values": "false"
                                }
                            }
                        ],
                        "cluster_spec": {
                            "existing_cluster_id": "string",
                            "new_cluster": {
                                "num_workers": 0,
                                "autoscale": {
                                    "min_workers": 0,
                                    "max_workers": 0
                                },
                                "cluster_name": "string",
                                "spark_version": "string",
                                "spark_conf": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "gcp_attributes": {
                                    "google_service_account": "string",
                                    "boot_disk_size": 0,
                                    "availability": "PREEMPTIBLE_GCP",
                                    "local_ssd_count": 0
                                },
                                "node_type_id": "string",
                                "driver_node_type_id": "string",
                                "ssh_public_keys": [
                                    "string"
                                ],
                                "custom_tags": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "cluster_log_conf": {
                                    "dbfs": {
                                        "destination": "string"
                                    }
                                },
                                "init_scripts": [
                                    {
                                        "workspace": {
                                            "destination": "string"
                                        },
                                        "volumes": {
                                            "destination": "string"
                                        },
                                        "file": {
                                            "destination": "string"
                                        },
                                        "dbfs": {
                                            "destination": "string"
                                        }
                                    }
                                ],
                                "spark_env_vars": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "autotermination_minutes": 0,
                                "enable_elastic_disk": true,
                                "cluster_source": "UI",
                                "instance_pool_id": "string",
                                "policy_id": "string",
                                "enable_local_disk_encryption": true,
                                "driver_instance_pool_id": "string",
                                "workload_type": {
                                    "clients": {
                                        "notebooks": "true",
                                        "jobs": "true"
                                    }
                                },
                                "runtime_engine": "NULL",
                                "docker_image": {
                                    "url": "string",
                                    "basic_auth": {
                                        "username": "string",
                                        "password": "string"
                                    }
                                },
                                "data_security_mode": "NONE",
                                "single_user_name": "string",
                                "apply_policy_default_values": "false"
                            },
                            "libraries": [
                                {
                                    "jar": "string",
                                    "egg": "string",
                                    "pypi": {
                                        "package": "string",
                                        "repo": "string"
                                    },
                                    "maven": {
                                        "coordinates": "string",
                                        "repo": "string",
                                        "exclusions": [
                                            "string"
                                        ]
                                    },
                                    "cran": {
                                        "package": "string",
                                        "repo": "string"
                                    },
                                    "whl": "string"
                                }
                            ]
                        },
                        "cluster_instance": {
                            "cluster_id": "string",
                            "spark_context_id": "string"
                        },
                        "git_source": {
                            "git_url": "string",
                            "git_provider": "gitHub",
                            "git_branch": "string",
                            "git_tag": "string",
                            "git_commit": "string",
                            "git_snapshot": {
                                "used_commit": "string"
                            }
                        },
                        "overriding_parameters": {
                            "jar_params": [
                                "string"
                            ],
                            "notebook_params": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "python_params": [
                                "string"
                            ],
                            "spark_submit_params": [
                                "string"
                            ],
                            "python_named_params": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "pipeline_params": {
                                "full_refresh": true
                            },
                            "dbt_commands": [
                                "string"
                            ]
                        },
                        "start_time": 0,
                        "setup_duration": 0,
                        "execution_duration": 0,
                        "cleanup_duration": 0,
                        "end_time": 0,
                        "trigger_info": {
                            "run_id": 0
                        },
                        "run_duration": 0,
                        "trigger": "PERIODIC",
                        "run_name": "Untitled",
                        "run_page_url": "string",
                        "run_type": "JOB_RUN",
                        "attempt_number": 0,
                        "repair_history": [
                            {
                                "type": "ORIGINAL",
                                "start_time": 0,
                                "end_time": 0,
                                "state": {
                                    "life_cycle_state": "PENDING",
                                    "queue_reason": "string",
                                    "result_state": "SUCCESS",
                                    "user_cancelled_or_timedout": true,
                                    "state_message": "string"
                                },
                                "id": 0,
                                "task_run_ids": [
                                    0
                                ]
                            }
                        ]
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE\t",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "REQUEST_LIMIT_EXCEEDED",
                "description": "Request is rejected due to throttling.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119491,
        "executor_type": "THIRDPARTY",
        "executor_name": "getasinglejob",
        "executor_version": "v2",
        "executor_display_name": "Get a single job\u2002",
        "executor_description": "Retrieves the details for a single job.",
        "executor_category": "Jobs",
        "executor_category_group": "Jobs\u2002",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/jobs/get",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "job_id",
                "value": "",
                "description": "The canonical identifier of the job to retrieve information about. This field is required.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698826583848,
        "lastModifiedTime": 1698826583848,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "job_id": 0,
                    "creator_user_name": "string",
                    "settings": {
                        "name": "Untitled",
                        "queue": {
                            "enabled": true
                        },
                        "tags": {},
                        "tasks": [
                            {
                                "task_key": "Task_Key",
                                "description": "This is the description for this task.",
                                "depends_on": [
                                    {
                                        "task_key": "string"
                                    }
                                ],
                                "run_if": "ALL_SUCCESS",
                                "existing_cluster_id": "string",
                                "new_cluster": {
                                    "num_workers": 0,
                                    "autoscale": {
                                        "min_workers": 0,
                                        "max_workers": 0
                                    },
                                    "cluster_name": "string",
                                    "spark_version": "string",
                                    "spark_conf": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "gcp_attributes": {
                                        "google_service_account": "string",
                                        "boot_disk_size": 0,
                                        "availability": "PREEMPTIBLE_GCP",
                                        "local_ssd_count": 0
                                    },
                                    "node_type_id": "string",
                                    "driver_node_type_id": "string",
                                    "ssh_public_keys": [
                                        "string"
                                    ],
                                    "custom_tags": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "cluster_log_conf": {
                                        "dbfs": {
                                            "destination": "string"
                                        }
                                    },
                                    "init_scripts": [
                                        {
                                            "workspace": {
                                                "destination": "string"
                                            },
                                            "volumes": {
                                                "destination": "string"
                                            },
                                            "file": {
                                                "destination": "string"
                                            },
                                            "dbfs": {
                                                "destination": "string"
                                            }
                                        }
                                    ],
                                    "spark_env_vars": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "autotermination_minutes": 0,
                                    "enable_elastic_disk": true,
                                    "cluster_source": "UI",
                                    "instance_pool_id": "string",
                                    "policy_id": "string",
                                    "enable_local_disk_encryption": true,
                                    "driver_instance_pool_id": "string",
                                    "workload_type": {
                                        "clients": {
                                            "notebooks": "true",
                                            "jobs": "true"
                                        }
                                    },
                                    "runtime_engine": "NULL",
                                    "docker_image": {
                                        "url": "string",
                                        "basic_auth": {
                                            "username": "string",
                                            "password": "string"
                                        }
                                    },
                                    "data_security_mode": "NONE",
                                    "single_user_name": "string",
                                    "apply_policy_default_values": "false"
                                },
                                "job_cluster_key": "string",
                                "notebook_task": {
                                    "notebook_path": "string",
                                    "source": "WORKSPACE",
                                    "base_parameters": {
                                        "property1": "string",
                                        "property2": "string"
                                    }
                                },
                                "spark_jar_task": {
                                    "main_class_name": "string",
                                    "parameters": [
                                        "string"
                                    ],
                                    "jar_uri": "string"
                                },
                                "spark_python_task": {
                                    "python_file": "string",
                                    "source": "WORKSPACE",
                                    "parameters": [
                                        "string"
                                    ]
                                },
                                "spark_submit_task": {
                                    "parameters": [
                                        "string"
                                    ]
                                },
                                "pipeline_task": {
                                    "pipeline_id": "string",
                                    "full_refresh": false
                                },
                                "python_wheel_task": {
                                    "package_name": "string",
                                    "entry_point": "string",
                                    "parameters": [
                                        "string"
                                    ],
                                    "named_parameters": {
                                        "property1": "string",
                                        "property2": "string"
                                    }
                                },
                                "dbt_task": {
                                    "project_directory": "string",
                                    "commands": [
                                        "string"
                                    ],
                                    "schema": "string",
                                    "warehouse_id": "string",
                                    "catalog": "string",
                                    "profiles_directory": "string"
                                },
                                "run_job_task": {
                                    "job_id": 0
                                },
                                "libraries": [
                                    {
                                        "jar": "string",
                                        "egg": "string",
                                        "pypi": {
                                            "package": "string",
                                            "repo": "string"
                                        },
                                        "maven": {
                                            "coordinates": "string",
                                            "repo": "string",
                                            "exclusions": [
                                                "string"
                                            ]
                                        },
                                        "cran": {
                                            "package": "string",
                                            "repo": "string"
                                        },
                                        "whl": "string"
                                    }
                                ],
                                "email_notifications": {
                                    "on_start": [
                                        "string"
                                    ],
                                    "on_success": [
                                        "string"
                                    ],
                                    "on_failure": [
                                        "string"
                                    ],
                                    "on_duration_warning_threshold_exceeded": [
                                        "string"
                                    ]
                                },
                                "webhook_notifications": {
                                    "on_start": [
                                        {
                                            "id": "string"
                                        }
                                    ],
                                    "on_success": [
                                        {
                                            "id": "string"
                                        }
                                    ],
                                    "on_failure": [
                                        {
                                            "id": "string"
                                        }
                                    ],
                                    "on_duration_warning_threshold_exceeded": [
                                        {
                                            "id": "string"
                                        }
                                    ]
                                },
                                "notification_settings": {
                                    "no_alert_for_skipped_runs": false,
                                    "no_alert_for_canceled_runs": false,
                                    "alert_on_last_attempt": false
                                },
                                "timeout_seconds": 0,
                                "health": {
                                    "rules": [
                                        {
                                            "metric": "RUN_DURATION_SECONDS",
                                            "op": "GREATER_THAN",
                                            "value": 0
                                        }
                                    ]
                                },
                                "max_retries": 0,
                                "min_retry_interval_millis": 0,
                                "retry_on_timeout": false
                            }
                        ],
                        "job_clusters": [
                            {
                                "job_cluster_key": "string",
                                "new_cluster": {
                                    "num_workers": 0,
                                    "autoscale": {
                                        "min_workers": 0,
                                        "max_workers": 0
                                    },
                                    "cluster_name": "string",
                                    "spark_version": "string",
                                    "spark_conf": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "gcp_attributes": {
                                        "google_service_account": "string",
                                        "boot_disk_size": 0,
                                        "availability": "PREEMPTIBLE_GCP",
                                        "local_ssd_count": 0
                                    },
                                    "node_type_id": "string",
                                    "driver_node_type_id": "string",
                                    "ssh_public_keys": [
                                        "string"
                                    ],
                                    "custom_tags": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "cluster_log_conf": {
                                        "dbfs": {
                                            "destination": "string"
                                        }
                                    },
                                    "init_scripts": [
                                        {
                                            "workspace": {
                                                "destination": "string"
                                            },
                                            "volumes": {
                                                "destination": "string"
                                            },
                                            "file": {
                                                "destination": "string"
                                            },
                                            "dbfs": {
                                                "destination": "string"
                                            }
                                        }
                                    ],
                                    "spark_env_vars": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "autotermination_minutes": 0,
                                    "enable_elastic_disk": true,
                                    "cluster_source": "UI",
                                    "instance_pool_id": "string",
                                    "policy_id": "string",
                                    "enable_local_disk_encryption": true,
                                    "driver_instance_pool_id": "string",
                                    "workload_type": {
                                        "clients": {
                                            "notebooks": "true",
                                            "jobs": "true"
                                        }
                                    },
                                    "runtime_engine": "NULL",
                                    "docker_image": {
                                        "url": "string",
                                        "basic_auth": {
                                            "username": "string",
                                            "password": "string"
                                        }
                                    },
                                    "data_security_mode": "NONE",
                                    "single_user_name": "string",
                                    "apply_policy_default_values": "false"
                                }
                            }
                        ],
                        "email_notifications": {
                            "on_start": [
                                "string"
                            ],
                            "on_success": [
                                "string"
                            ],
                            "on_failure": [
                                "string"
                            ],
                            "on_duration_warning_threshold_exceeded": [
                                "string"
                            ],
                            "no_alert_for_skipped_runs": false
                        },
                        "webhook_notifications": {
                            "on_start": [
                                {
                                    "id": "string"
                                }
                            ],
                            "on_success": [
                                {
                                    "id": "string"
                                }
                            ],
                            "on_failure": [
                                {
                                    "id": "string"
                                }
                            ],
                            "on_duration_warning_threshold_exceeded": [
                                {
                                    "id": "string"
                                }
                            ]
                        },
                        "notification_settings": {
                            "no_alert_for_skipped_runs": false,
                            "no_alert_for_canceled_runs": false
                        },
                        "timeout_seconds": 0,
                        "health": {
                            "rules": [
                                {
                                    "metric": "RUN_DURATION_SECONDS",
                                    "op": "GREATER_THAN",
                                    "value": 0
                                }
                            ]
                        },
                        "schedule": {
                            "quartz_cron_expression": "string",
                            "timezone_id": "string",
                            "pause_status": "PAUSED"
                        },
                        "continuous": {
                            "pause_status": "PAUSED"
                        },
                        "max_concurrent_runs": 1,
                        "git_source": {
                            "git_url": "string",
                            "git_provider": "gitHub",
                            "git_branch": "string",
                            "git_tag": "string",
                            "git_commit": "string",
                            "git_snapshot": {
                                "used_commit": "string"
                            }
                        },
                        "format": "SINGLE_TASK",
                        "run_as": {
                            "user_name": "string",
                            "service_principal_name": "string"
                        }
                    },
                    "created_time": 0,
                    "run_as_user_name": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED\t",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "REQUEST_LIMIT_EXCEEDED",
                "description": "Request is rejected due to throttling.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119495,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteajob",
        "executor_version": "v2",
        "executor_display_name": "Delete a job\u2002",
        "executor_description": "Deletes a job.",
        "executor_category": "Jobs",
        "executor_category_group": "Jobs\u2002",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/jobs/delete",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "job_id": 0
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698827074521,
        "lastModifiedTime": 1698827546290,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED\t",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "REQUEST_LIMIT_EXCEEDED",
                "description": "Request is rejected due to throttling.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119545,
        "executor_type": "THIRDPARTY",
        "executor_name": "repairajobrun",
        "executor_version": "v2",
        "executor_display_name": "Repair a job run\u2002",
        "executor_description": "Re-run one or more tasks. Tasks are re-run as part of the original job run. They use the current job and task settings, and can be viewed in the history for the original job run.",
        "executor_category": "Jobs",
        "executor_category_group": "Jobs",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/jobs/runs/repair",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "run_id": 0,
                "rerun_tasks": [
                    "string"
                ],
                "latest_repair_id": 0,
                "rerun_all_failed_tasks": false,
                "rerun_dependent_tasks": false,
                "jar_params": [
                    "string"
                ],
                "notebook_params": {
                    "property1": "string",
                    "property2": "string"
                },
                "python_params": [
                    "string"
                ],
                "spark_submit_params": [
                    "string"
                ],
                "python_named_params": {
                    "property1": "string",
                    "property2": "string"
                },
                "pipeline_params": {
                    "full_refresh": true
                },
                "dbt_commands": [
                    "string"
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698833000247,
        "lastModifiedTime": 1698833000247,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "repair_id": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE\t",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "REQUEST_LIMIT_EXCEEDED",
                "description": "Request is rejected due to throttling.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119538,
        "executor_type": "THIRDPARTY",
        "executor_name": "gettheoutputforasinglerun",
        "executor_version": "v2",
        "executor_display_name": "Get the output for a single run\u2002",
        "executor_description": "Retrieve the output and metadata of a single task run. When a notebook task returns a value through the dbutils.notebook.exit() call, you can use this endpoint to retrieve that value. Databricks restricts this API to returning the first 5 MB of the output. To return a larger result, you can store job results in a cloud storage service.",
        "executor_category": "Jobs",
        "executor_category_group": "Jobs",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/jobs/runs/get-output",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "run_id",
                "value": "",
                "description": "The canonical identifier for the run. This field is required.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698832646898,
        "lastModifiedTime": 1698832646898,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "notebook_output": {
                        "result": "string",
                        "truncated": true
                    },
                    "dbt_output": {
                        "artifacts_link": "string",
                        "artifacts_headers": {
                            "property1": "string",
                            "property2": "string"
                        }
                    },
                    "run_job_output": {
                        "run_id": 0
                    },
                    "logs": "string",
                    "logs_truncated": true,
                    "error": "string",
                    "error_trace": "string",
                    "metadata": {
                        "job_id": 0,
                        "run_id": 0,
                        "number_in_job": 0,
                        "creator_user_name": "string",
                        "original_attempt_run_id": 0,
                        "state": {
                            "life_cycle_state": "PENDING",
                            "queue_reason": "string",
                            "result_state": "SUCCESS",
                            "user_cancelled_or_timedout": true,
                            "state_message": "string"
                        },
                        "schedule": {
                            "quartz_cron_expression": "string",
                            "timezone_id": "string",
                            "pause_status": "PAUSED"
                        },
                        "continuous": {
                            "pause_status": "PAUSED"
                        },
                        "tasks": [
                            {
                                "run_id": 0,
                                "task_key": "Task_Key",
                                "description": "This is the description for this task.",
                                "run_if": "ALL_SUCCESS",
                                "state": {
                                    "life_cycle_state": "PENDING",
                                    "queue_reason": "string",
                                    "result_state": "SUCCESS",
                                    "user_cancelled_or_timedout": true,
                                    "state_message": "string"
                                },
                                "depends_on": [
                                    {
                                        "task_key": "string"
                                    }
                                ],
                                "existing_cluster_id": "string",
                                "new_cluster": {
                                    "num_workers": 0,
                                    "autoscale": {
                                        "min_workers": 0,
                                        "max_workers": 0
                                    },
                                    "cluster_name": "string",
                                    "spark_version": "string",
                                    "spark_conf": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "gcp_attributes": {
                                        "google_service_account": "string",
                                        "boot_disk_size": 0,
                                        "availability": "PREEMPTIBLE_GCP",
                                        "local_ssd_count": 0
                                    },
                                    "node_type_id": "string",
                                    "driver_node_type_id": "string",
                                    "ssh_public_keys": [
                                        "string"
                                    ],
                                    "custom_tags": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "cluster_log_conf": {
                                        "dbfs": {
                                            "destination": "string"
                                        }
                                    },
                                    "init_scripts": [
                                        {
                                            "workspace": {
                                                "destination": "string"
                                            },
                                            "volumes": {
                                                "destination": "string"
                                            },
                                            "file": {
                                                "destination": "string"
                                            },
                                            "dbfs": {
                                                "destination": "string"
                                            }
                                        }
                                    ],
                                    "spark_env_vars": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "autotermination_minutes": 0,
                                    "enable_elastic_disk": true,
                                    "cluster_source": "UI",
                                    "instance_pool_id": "string",
                                    "policy_id": "string",
                                    "enable_local_disk_encryption": true,
                                    "driver_instance_pool_id": "string",
                                    "workload_type": {
                                        "clients": {
                                            "notebooks": "true",
                                            "jobs": "true"
                                        }
                                    },
                                    "runtime_engine": "NULL",
                                    "docker_image": {
                                        "url": "string",
                                        "basic_auth": {
                                            "username": "string",
                                            "password": "string"
                                        }
                                    },
                                    "data_security_mode": "NONE",
                                    "single_user_name": "string",
                                    "apply_policy_default_values": "false"
                                },
                                "libraries": [
                                    {
                                        "jar": "string",
                                        "egg": "string",
                                        "pypi": {
                                            "package": "string",
                                            "repo": "string"
                                        },
                                        "maven": {
                                            "coordinates": "string",
                                            "repo": "string",
                                            "exclusions": [
                                                "string"
                                            ]
                                        },
                                        "cran": {
                                            "package": "string",
                                            "repo": "string"
                                        },
                                        "whl": "string"
                                    }
                                ],
                                "notebook_task": {
                                    "notebook_path": "string",
                                    "source": "WORKSPACE",
                                    "base_parameters": {
                                        "property1": "string",
                                        "property2": "string"
                                    }
                                },
                                "spark_jar_task": {
                                    "main_class_name": "string",
                                    "parameters": [
                                        "string"
                                    ],
                                    "jar_uri": "string"
                                },
                                "spark_python_task": {
                                    "python_file": "string",
                                    "source": "WORKSPACE",
                                    "parameters": [
                                        "string"
                                    ]
                                },
                                "spark_submit_task": {
                                    "parameters": [
                                        "string"
                                    ]
                                },
                                "pipeline_task": {
                                    "pipeline_id": "string",
                                    "full_refresh": false
                                },
                                "python_wheel_task": {
                                    "package_name": "string",
                                    "entry_point": "string",
                                    "parameters": [
                                        "string"
                                    ],
                                    "named_parameters": {
                                        "property1": "string",
                                        "property2": "string"
                                    }
                                },
                                "dbt_task": {
                                    "project_directory": "string",
                                    "commands": [
                                        "string"
                                    ],
                                    "schema": "string",
                                    "warehouse_id": "string",
                                    "catalog": "string",
                                    "profiles_directory": "string"
                                },
                                "run_job_task": {
                                    "job_id": 0
                                },
                                "start_time": 0,
                                "setup_duration": 0,
                                "execution_duration": 0,
                                "cleanup_duration": 0,
                                "end_time": 0,
                                "queue_duration": 0,
                                "attempt_number": 0,
                                "cluster_instance": {
                                    "cluster_id": "string",
                                    "spark_context_id": "string"
                                },
                                "git_source": {
                                    "git_url": "string",
                                    "git_provider": "gitHub",
                                    "git_branch": "string",
                                    "git_tag": "string",
                                    "git_commit": "string",
                                    "git_snapshot": {
                                        "used_commit": "string"
                                    }
                                }
                            }
                        ],
                        "job_clusters": [
                            {
                                "job_cluster_key": "string",
                                "new_cluster": {
                                    "num_workers": 0,
                                    "autoscale": {
                                        "min_workers": 0,
                                        "max_workers": 0
                                    },
                                    "cluster_name": "string",
                                    "spark_version": "string",
                                    "spark_conf": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "gcp_attributes": {
                                        "google_service_account": "string",
                                        "boot_disk_size": 0,
                                        "availability": "PREEMPTIBLE_GCP",
                                        "local_ssd_count": 0
                                    },
                                    "node_type_id": "string",
                                    "driver_node_type_id": "string",
                                    "ssh_public_keys": [
                                        "string"
                                    ],
                                    "custom_tags": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "cluster_log_conf": {
                                        "dbfs": {
                                            "destination": "string"
                                        }
                                    },
                                    "init_scripts": [
                                        {
                                            "workspace": {
                                                "destination": "string"
                                            },
                                            "volumes": {
                                                "destination": "string"
                                            },
                                            "file": {
                                                "destination": "string"
                                            },
                                            "dbfs": {
                                                "destination": "string"
                                            }
                                        }
                                    ],
                                    "spark_env_vars": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "autotermination_minutes": 0,
                                    "enable_elastic_disk": true,
                                    "cluster_source": "UI",
                                    "instance_pool_id": "string",
                                    "policy_id": "string",
                                    "enable_local_disk_encryption": true,
                                    "driver_instance_pool_id": "string",
                                    "workload_type": {
                                        "clients": {
                                            "notebooks": "true",
                                            "jobs": "true"
                                        }
                                    },
                                    "runtime_engine": "NULL",
                                    "docker_image": {
                                        "url": "string",
                                        "basic_auth": {
                                            "username": "string",
                                            "password": "string"
                                        }
                                    },
                                    "data_security_mode": "NONE",
                                    "single_user_name": "string",
                                    "apply_policy_default_values": "false"
                                }
                            }
                        ],
                        "cluster_spec": {
                            "existing_cluster_id": "string",
                            "new_cluster": {
                                "num_workers": 0,
                                "autoscale": {
                                    "min_workers": 0,
                                    "max_workers": 0
                                },
                                "cluster_name": "string",
                                "spark_version": "string",
                                "spark_conf": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "gcp_attributes": {
                                    "google_service_account": "string",
                                    "boot_disk_size": 0,
                                    "availability": "PREEMPTIBLE_GCP",
                                    "local_ssd_count": 0
                                },
                                "node_type_id": "string",
                                "driver_node_type_id": "string",
                                "ssh_public_keys": [
                                    "string"
                                ],
                                "custom_tags": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "cluster_log_conf": {
                                    "dbfs": {
                                        "destination": "string"
                                    }
                                },
                                "init_scripts": [
                                    {
                                        "workspace": {
                                            "destination": "string"
                                        },
                                        "volumes": {
                                            "destination": "string"
                                        },
                                        "file": {
                                            "destination": "string"
                                        },
                                        "dbfs": {
                                            "destination": "string"
                                        }
                                    }
                                ],
                                "spark_env_vars": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "autotermination_minutes": 0,
                                "enable_elastic_disk": true,
                                "cluster_source": "UI",
                                "instance_pool_id": "string",
                                "policy_id": "string",
                                "enable_local_disk_encryption": true,
                                "driver_instance_pool_id": "string",
                                "workload_type": {
                                    "clients": {
                                        "notebooks": "true",
                                        "jobs": "true"
                                    }
                                },
                                "runtime_engine": "NULL",
                                "docker_image": {
                                    "url": "string",
                                    "basic_auth": {
                                        "username": "string",
                                        "password": "string"
                                    }
                                },
                                "data_security_mode": "NONE",
                                "single_user_name": "string",
                                "apply_policy_default_values": "false"
                            },
                            "libraries": [
                                {
                                    "jar": "string",
                                    "egg": "string",
                                    "pypi": {
                                        "package": "string",
                                        "repo": "string"
                                    },
                                    "maven": {
                                        "coordinates": "string",
                                        "repo": "string",
                                        "exclusions": [
                                            "string"
                                        ]
                                    },
                                    "cran": {
                                        "package": "string",
                                        "repo": "string"
                                    },
                                    "whl": "string"
                                }
                            ]
                        },
                        "cluster_instance": {
                            "cluster_id": "string",
                            "spark_context_id": "string"
                        },
                        "git_source": {
                            "git_url": "string",
                            "git_provider": "gitHub",
                            "git_branch": "string",
                            "git_tag": "string",
                            "git_commit": "string",
                            "git_snapshot": {
                                "used_commit": "string"
                            }
                        },
                        "overriding_parameters": {
                            "jar_params": [
                                "string"
                            ],
                            "notebook_params": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "python_params": [
                                "string"
                            ],
                            "spark_submit_params": [
                                "string"
                            ],
                            "python_named_params": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "pipeline_params": {
                                "full_refresh": true
                            },
                            "dbt_commands": [
                                "string"
                            ]
                        },
                        "start_time": 0,
                        "setup_duration": 0,
                        "execution_duration": 0,
                        "cleanup_duration": 0,
                        "end_time": 0,
                        "trigger_info": {
                            "run_id": 0
                        },
                        "run_duration": 0,
                        "trigger": "PERIODIC",
                        "run_name": "Untitled",
                        "run_page_url": "string",
                        "run_type": "JOB_RUN",
                        "attempt_number": 0,
                        "repair_history": [
                            {
                                "type": "ORIGINAL",
                                "start_time": 0,
                                "end_time": 0,
                                "state": {
                                    "life_cycle_state": "PENDING",
                                    "queue_reason": "string",
                                    "result_state": "SUCCESS",
                                    "user_cancelled_or_timedout": true,
                                    "state_message": "string"
                                },
                                "id": 0,
                                "task_run_ids": [
                                    0
                                ]
                            }
                        ]
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE\t",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "REQUEST_LIMIT_EXCEEDED",
                "description": "Request is rejected due to throttling.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119477,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatejobpermissions",
        "executor_version": "v2",
        "executor_display_name": "Update job permissions\u2002",
        "executor_description": "Updates the permissions on a job. Jobs can inherit permissions from their root object.",
        "executor_category": "Jobs",
        "executor_category_group": "Jobs\u2002",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/jobs/{job_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "job_id",
                "value": "",
                "description": "The job for which to get or manage permissions."
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_MANAGE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698825784884,
        "lastModifiedTime": 1698825784884,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED\t",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119532,
        "executor_type": "THIRDPARTY",
        "executor_name": "exportandretrieveajobrun",
        "executor_version": "v2",
        "executor_display_name": "Export and retrieve a job run\u2002",
        "executor_description": "Export and retrieve the job run task.",
        "executor_category": "Jobs",
        "executor_category_group": "Jobs",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/jobs/runs/export",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "run_id",
                "value": "",
                "description": "The canonical identifier of the run for which to retrieve the metadata. This field is required.",
                "req": false
            },
            {
                "key": "views_to_export",
                "value": "",
                "description": "Which views to export (CODE, DASHBOARDS, or ALL). Defaults to CODE.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698832344589,
        "lastModifiedTime": 1698832344589,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "views": [
                        {
                            "content": "string",
                            "name": "string",
                            "type": "NOTEBOOK"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE\t",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "REQUEST_LIMIT_EXCEEDED",
                "description": "Request is rejected due to throttling.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119536,
        "executor_type": "THIRDPARTY",
        "executor_name": "cancelallrunsofajob",
        "executor_version": "v2",
        "executor_display_name": "Cancel all runs of a job\u2002",
        "executor_description": "Cancels all active runs of a job. The runs are canceled asynchronously, so it doesn't prevent new runs from being started.",
        "executor_category": "Jobs",
        "executor_category_group": "Jobs",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/jobs/runs/cancel-all",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "job_id": 0,
                "all_queued_runs": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698832562083,
        "lastModifiedTime": 1698832562083,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE\t",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "REQUEST_LIMIT_EXCEEDED",
                "description": "Request is rejected due to throttling.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119559,
        "executor_type": "THIRDPARTY",
        "executor_name": "getRegisteredModelPermissionLevels",
        "executor_version": "v2",
        "executor_display_name": "Get registered model permission levels",
        "executor_description": "Gets the permission levels that a user can have on an object.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/registered-models/{registered_model_id}/permissionLevels",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "registered_model_id",
                "value": "",
                "description": "The registered model for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698834490113,
        "lastModifiedTime": 1698834490113,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "permission_levels": [
                        {
                            "permission_level": "CAN_MANAGE",
                            "description": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119645,
        "executor_type": "THIRDPARTY",
        "executor_name": "testRegistryWebhook",
        "executor_version": "v2",
        "executor_display_name": "Test a webhook",
        "executor_description": "Tests a registry webhook.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/registry-webhooks/test",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "id": "124323",
                "event": "MODEL_VERSION_CREATED"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698840521600,
        "lastModifiedTime": 1698840521600,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "Registry webhook was tested successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "webhook": {
                        "status_code": 0,
                        "body": "string"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119573,
        "executor_type": "THIRDPARTY",
        "executor_name": "setVersionTag",
        "executor_version": "v2",
        "executor_display_name": "Set a version tag",
        "executor_description": "Sets a model version tag.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/model-versions/set-tag",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "name",
                "value": "",
                "description": "Unique name of the model.",
                "req": false
            },
            {
                "key": "version",
                "value": "",
                "description": "Model version number.",
                "req": false
            },
            {
                "key": "key",
                "value": "",
                "description": "Name of the tag. Maximum size depends on storage backend. If a tag with this name already exists, its preexisting value will be replaced by the specified value. All storage backends are guaranteed to support key values up to 250 bytes in size.",
                "req": false
            },
            {
                "key": "value",
                "value": "",
                "description": "String value of the tag being logged. Maximum size depends on storage backend. All storage backends are guaranteed to support key values up to 5000 bytes in size.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698835285723,
        "lastModifiedTime": 1698835285723,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "version": "string",
                    "key": "string",
                    "value": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119632,
        "executor_type": "THIRDPARTY",
        "executor_name": "postComment",
        "executor_version": "v2",
        "executor_display_name": "Post a comment",
        "executor_description": "Posts a comment on a model version. A comment can be submitted either by a user or programmatically to display relevant information about the model. For example, test results or deployment errors.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/comments/create",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "search_ads_model",
                "version": "1",
                "comment": "This version is great!"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698839663086,
        "lastModifiedTime": 1698839663086,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "Comment was made successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "comment": {
                        "id": "string",
                        "creation_timestamp": 1594437249910,
                        "last_updated_timestamp": 1594437549910,
                        "user_id": "jane.doe@example.com",
                        "comment": "This version is great!",
                        "available_actions": [
                            "EDIT_COMMENT"
                        ]
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119637,
        "executor_type": "THIRDPARTY",
        "executor_name": "createRegistryWebhook",
        "executor_version": "v2",
        "executor_display_name": "Create a webhook",
        "executor_description": "Creates a registry webhook.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/registry-webhooks/create",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "job_spec": {
                    "job_id": "string",
                    "access_token": "string",
                    "workspace_url": "string"
                },
                "http_url_spec": {
                    "url": "string",
                    "secret": "string",
                    "enable_ssl_verification": true,
                    "authorization": "string"
                },
                "events": [
                    "MODEL_VERSION_CREATED"
                ],
                "model_name": "registered-model-1",
                "description": "Webhook for comment creation",
                "status": "ACTIVE"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698840087252,
        "lastModifiedTime": 1698840087252,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "Registry webhook was created successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "webhook": {
                        "id": "124323",
                        "events": [
                            "MODEL_VERSION_CREATED",
                            "MODEL_VERSION_TRANSITIONED_TO_STAGING",
                            "COMMENT_CREATED"
                        ],
                        "creation_timestamp": 1594437249910,
                        "last_updated_timestamp": 1594437549910,
                        "description": "Webhook for comment creation",
                        "status": "ACTIVE",
                        "http_url_spec": {
                            "url": "https://hooks.slack.com/services/...",
                            "enable_ssl_verification": true
                        },
                        "model_name": "registered-model-1"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119639,
        "executor_type": "THIRDPARTY",
        "executor_name": "listRegistryWebhooks",
        "executor_version": "v2",
        "executor_display_name": "List registry webhooks",
        "executor_description": "Lists all registry webhooks.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/registry-webhooks/list",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "model_name",
                "value": "",
                "description": "If not specified, all webhooks associated with the specified events are listed, regardless of their associated model.",
                "req": false
            },
            {
                "key": "events",
                "value": "",
                "description": "Items Enum: \"MODEL_VERSION_CREATED\" \"MODEL_VERSION_TRANSITIONED_STAGE\" \"TRANSITION_REQUEST_CREATED\" \"COMMENT_CREATED\" \"REGISTERED_MODEL_CREATED\" \"MODEL_VERSION_TAG_SET\" \"MODEL_VERSION_TRANSITIONED_TO_STAGING\" \"MODEL_VERSION_TRANSITIONED_TO_PRODUCTION\" \"MODEL_VERSION_TRANSITIONED_TO_ARCHIVED\" \"TRANSITION_REQUEST_TO_STAGING_CREATED\" \"TRANSITION_REQUEST_TO_PRODUCTION_CREATED\" \"TRANSITION_REQUEST_TO_ARCHIVED_CREATED\" If events is specified, any webhook with one or more of the specified trigger events is included in the output. If events is not specified, webhooks of all event types are included in the output.",
                "req": false
            },
            {
                "key": "page_token",
                "value": "",
                "description": "Token indicating the page of artifact results to fetch",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698840202502,
        "lastModifiedTime": 1698840202502,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "Registry webhooks listed successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "webhooks": [
                        {
                            "id": "124323",
                            "events": [
                                "MODEL_VERSION_CREATED",
                                "MODEL_VERSION_TRANSITIONED_TO_STAGING",
                                "COMMENT_CREATED"
                            ],
                            "creation_timestamp": 1594437249910,
                            "last_updated_timestamp": 1594437549910,
                            "description": "Webhook for comment creation",
                            "status": "ACTIVE",
                            "http_url_spec": {
                                "url": "https://hooks.slack.com/services/...",
                                "enable_ssl_verification": true
                            },
                            "model_name": "registered-model-1"
                        },
                        {
                            "id": "126324",
                            "events": [
                                "MODEL_VERSION_CREATED",
                                "MODEL_VERSION_TRANSITIONED_TO_STAGING",
                                "COMMENT_CREATED"
                            ],
                            "creation_timestamp": 1594437248910,
                            "last_updated_timestamp": 1594437549915,
                            "description": "Webhook for comment creation",
                            "status": "ACTIVE",
                            "job_spec": {
                                "job_id": "1",
                                "workspace_url": "http://.."
                            },
                            "model_name": "registered-model-1"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119551,
        "executor_type": "THIRDPARTY",
        "executor_name": "getRegisteredModelPermissions",
        "executor_version": "v2",
        "executor_display_name": "Get registered model permissions",
        "executor_description": "Gets the permissions of a registered model. Registered models can inherit permissions from their root object.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/registered-models/{registered_model_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "registered_model_id",
                "value": "",
                "description": "The registered model for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698833558521,
        "lastModifiedTime": 1698833558521,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119555,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateRegisteredModelPermissions",
        "executor_version": "v2",
        "executor_display_name": "Update registered model permissions",
        "executor_description": "Updates the permissions on a registered model. Registered models can inherit permissions from their root object.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/registered-models/{registered_model_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "registered_model_id",
                "value": "",
                "description": "The registered model for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_MANAGE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698833781178,
        "lastModifiedTime": 1698833781178,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119569,
        "executor_type": "THIRDPARTY",
        "executor_name": "getModelVersionUri",
        "executor_version": "v2",
        "executor_display_name": "Get a model version URI",
        "executor_description": "Gets a URI to download the model version.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/model-versions/get-download-uri",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "name",
                "value": "",
                "description": "Name of the registered model",
                "req": false
            },
            {
                "key": "version",
                "value": "",
                "description": "Model version number",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698835013585,
        "lastModifiedTime": 1698835013585,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "artifact_uri": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119579,
        "executor_type": "THIRDPARTY",
        "executor_name": "createModel",
        "executor_version": "v2",
        "executor_display_name": "Create a model",
        "executor_description": "Creates a new registered model with the name specified in the request body.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/registered-models/create",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "tags": [
                    {
                        "key": "string",
                        "value": "string"
                    }
                ],
                "description": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698835993198,
        "lastModifiedTime": 1698835993198,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "registered_model": {
                        "name": "string",
                        "creation_timestamp": 0,
                        "last_updated_timestamp": 0,
                        "user_id": "string",
                        "description": "string",
                        "latest_versions": [
                            {
                                "name": "string",
                                "version": "string",
                                "creation_timestamp": 0,
                                "last_updated_timestamp": 0,
                                "user_id": "string",
                                "current_stage": "string",
                                "description": "string",
                                "source": "string",
                                "run_id": "string",
                                "status": "PENDING_REGISTRATION",
                                "status_message": "string",
                                "tags": [
                                    {
                                        "key": "string",
                                        "value": "string"
                                    }
                                ],
                                "run_link": "string"
                            }
                        ],
                        "tags": [
                            {
                                "key": "string",
                                "value": "string"
                            }
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119567,
        "executor_type": "THIRDPARTY",
        "executor_name": "getModelVersion",
        "executor_version": "v2",
        "executor_display_name": "Get a model version",
        "executor_description": "Get a model version.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/model-versions/get",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "name",
                "value": "",
                "description": "Name of the registered model",
                "req": false
            },
            {
                "key": "version",
                "value": "",
                "description": "Model version number",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698834936977,
        "lastModifiedTime": 1698834936977,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "model_version": {
                        "name": "string",
                        "version": "string",
                        "creation_timestamp": 0,
                        "last_updated_timestamp": 0,
                        "user_id": "string",
                        "current_stage": "string",
                        "description": "string",
                        "source": "string",
                        "run_id": "string",
                        "status": "PENDING_REGISTRATION",
                        "status_message": "string",
                        "tags": [
                            {
                                "key": "string",
                                "value": "string"
                            }
                        ],
                        "run_link": "string"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119561,
        "executor_type": "THIRDPARTY",
        "executor_name": "createModelVersion",
        "executor_version": "v2",
        "executor_display_name": "Create a model version",
        "executor_description": "Creates a model version.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/model-versions/create",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "source": "string",
                "run_id": "string",
                "tags": [
                    {
                        "key": "string",
                        "value": "string"
                    }
                ],
                "run_link": "string",
                "description": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698834694063,
        "lastModifiedTime": 1698834694063,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "model_version": {
                        "name": "string",
                        "version": "string",
                        "creation_timestamp": 0,
                        "last_updated_timestamp": 0,
                        "user_id": "string",
                        "current_stage": "string",
                        "description": "string",
                        "source": "string",
                        "run_id": "string",
                        "status": "PENDING_REGISTRATION",
                        "status_message": "string",
                        "tags": [
                            {
                                "key": "string",
                                "value": "string"
                            }
                        ],
                        "run_link": "string"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119575,
        "executor_type": "THIRDPARTY",
        "executor_name": "transitionStage",
        "executor_version": "v2",
        "executor_display_name": "Transition a stage",
        "executor_description": "Transition a model version's stage. This is a Azure Databricks workspace version of the MLflow endpoint that also accepts a comment associated with the transition to be recorded.\",",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/databricks/model-versions/transition-stage",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "search_ads_model",
                "version": "1",
                "stage": "None",
                "archive_existing_versions": true,
                "comment": "This version is great!"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698835602661,
        "lastModifiedTime": 1698835602661,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "Model version's stage was updated successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "model_version": {
                        "name": "search_ads_model",
                        "version": "1",
                        "creation_timestamp": 1594437249910,
                        "last_updated_timestamp": 1594437549910,
                        "user_id": "jane.doe@example.com",
                        "current_stage": "None",
                        "description": "Here's some extra info.",
                        "source": "dbfs:/databricks/mlflow-tracking/run123/model",
                        "run_id": "6fc74c92704341aaa49e74dcc6031057",
                        "status": "PENDING_REGISTRATION",
                        "status_message": "Source could not be found.",
                        "permission_level": "CAN_MANAGE",
                        "tags": [
                            {
                                "key": "string",
                                "value": "string"
                            }
                        ],
                        "run_link": "https://<databricks-instance>/#mlflow/experiments/28774367/runs/6fc74c92704341aaa49e74dcc6031057"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST",
                "description": "Bad request. Invalid parameter value.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 409,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ALREADY_EXISTS",
                "description": "Operation was rejected due a conflict with an existing resource.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119591,
        "executor_type": "THIRDPARTY",
        "executor_name": "listModels",
        "executor_version": "v2",
        "executor_display_name": "List models",
        "executor_description": "Lists all available registered models, up to the limit specified in max_results.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/registered-models/list",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "max_results",
                "value": "",
                "description": "<= 1000 Maximum number of registered models desired. Max threshold is 1000.",
                "req": false
            },
            {
                "key": "page_token",
                "value": "",
                "description": "Pagination token to go to the next page based on a previous query.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698836941733,
        "lastModifiedTime": 1698836941733,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "registered_models": [
                        {
                            "name": "string",
                            "creation_timestamp": 0,
                            "last_updated_timestamp": 0,
                            "user_id": "string",
                            "description": "string",
                            "latest_versions": [
                                {
                                    "name": "string",
                                    "version": "string",
                                    "creation_timestamp": 0,
                                    "last_updated_timestamp": 0,
                                    "user_id": "string",
                                    "current_stage": "string",
                                    "description": "string",
                                    "source": "string",
                                    "run_id": "string",
                                    "status": "PENDING_REGISTRATION",
                                    "status_message": "string",
                                    "tags": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "run_link": "string"
                                }
                            ],
                            "tags": [
                                {
                                    "key": "string",
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "next_page_token": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119624,
        "executor_type": "THIRDPARTY",
        "executor_name": "approveTransitionRequest",
        "executor_version": "v2",
        "executor_display_name": "Approve transition request",
        "executor_description": "Approves a model version stage transition request.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/transition-requests/approve",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "search_ads_model",
                "version": "1",
                "stage": "None",
                "archive_existing_versions": true,
                "comment": "This version is great!"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698839268321,
        "lastModifiedTime": 1698839268321,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "Model version's stage was updated successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "activity": {
                        "id": "6fc74c92704341aaa49e74dcc6031057",
                        "creation_timestamp": 1594437249910,
                        "last_updated_timestamp": 1594437549910,
                        "user_id": "jane.doe@example.com",
                        "activity_type": "APPLIED_TRANSITION",
                        "from_stage": "None",
                        "to_stage": "None",
                        "comment": "This version is great!",
                        "system_comment": "string"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119626,
        "executor_type": "THIRDPARTY",
        "executor_name": "rejectTransitionRequest",
        "executor_version": "v2",
        "executor_display_name": "Reject a transition request",
        "executor_description": "Rejects a model version stage transition request.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/transition-requests/reject",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "search_ads_model",
                "version": "1",
                "stage": "None",
                "comment": "This version is great!"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698839405880,
        "lastModifiedTime": 1698839405880,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "Model version's stage was updated successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "activity": {
                        "id": "6fc74c92704341aaa49e74dcc6031057",
                        "creation_timestamp": 1594437249910,
                        "last_updated_timestamp": 1594437549910,
                        "user_id": "jane.doe@example.com",
                        "activity_type": "APPLIED_TRANSITION",
                        "from_stage": "None",
                        "to_stage": "None",
                        "comment": "This version is great!",
                        "system_comment": "string"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119590,
        "executor_type": "THIRDPARTY",
        "executor_name": "getModel",
        "executor_version": "v2",
        "executor_display_name": "Get model",
        "executor_description": "Get the details of a model. This is a Azure Databricks workspace version of the MLflow endpoint that also returns the model's Azure Databricks workspace ID and the permission level of the requesting user on the model.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/databricks/registered-models/get",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "name",
                "value": "",
                "description": "Registered model unique name identifier.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698836850902,
        "lastModifiedTime": 1698836850902,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "registered_model_databricks": {
                        "name": "search_ads_model",
                        "creation_timestamp": 1594437249910,
                        "last_updated_timestamp": 1594437549910,
                        "user_id": "jane.doe@example.com",
                        "description": "Here's some extra info.",
                        "latest_versions": [
                            {
                                "name": "string",
                                "version": "string",
                                "creation_timestamp": 0,
                                "last_updated_timestamp": 0,
                                "user_id": "string",
                                "current_stage": "string",
                                "description": "string",
                                "source": "string",
                                "run_id": "string",
                                "status": "PENDING_REGISTRATION",
                                "status_message": "string",
                                "tags": [
                                    {
                                        "key": "string",
                                        "value": "string"
                                    }
                                ],
                                "run_link": "string"
                            }
                        ],
                        "id": "6fc74c92704341aaa49e74dcc6031057",
                        "permission_level": "CAN_MANAGE",
                        "tags": [
                            {
                                "key": "string",
                                "value": "string"
                            }
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119594,
        "executor_type": "THIRDPARTY",
        "executor_name": "searchModels",
        "executor_version": "v2",
        "executor_display_name": "Search models",
        "executor_description": "Search for registered models based on the specified filter.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/registered-models/search",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "filter",
                "value": "",
                "description": "String filter condition, like \"name LIKE 'my-model-name'\". Interpreted in the backend automatically as \"name LIKE '%my-model-name%'\". Single boolean condition, with string values wrapped in single quotes.",
                "req": false
            },
            {
                "key": "max_results",
                "value": "",
                "description": "<= 1000 Default: 100 Maximum number of models desired. Default is 100. Max threshold is 1000.",
                "req": false
            },
            {
                "key": "order_by",
                "value": "",
                "description": "List of columns for ordering search results, which can include model name and last updated timestamp with an optional \"DESC\" or \"ASC\" annotation, where \"ASC\" is the default. Tiebreaks are done by model name ASC.",
                "req": false
            },
            {
                "key": "page_token",
                "value": "",
                "description": "Pagination token to go to the next page based on a previous search query.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698837197901,
        "lastModifiedTime": 1698837197901,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "registered_models": [
                        {
                            "name": "string",
                            "creation_timestamp": 0,
                            "last_updated_timestamp": 0,
                            "user_id": "string",
                            "description": "string",
                            "latest_versions": [
                                {
                                    "name": "string",
                                    "version": "string",
                                    "creation_timestamp": 0,
                                    "last_updated_timestamp": 0,
                                    "user_id": "string",
                                    "current_stage": "string",
                                    "description": "string",
                                    "source": "string",
                                    "run_id": "string",
                                    "status": "PENDING_REGISTRATION",
                                    "status_message": "string",
                                    "tags": [
                                        {
                                            "key": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "run_link": "string"
                                }
                            ],
                            "tags": [
                                {
                                    "key": "string",
                                    "value": "string"
                                }
                            ]
                        }
                    ],
                    "next_page_token": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119619,
        "executor_type": "THIRDPARTY",
        "executor_name": "makeTransitionRequest",
        "executor_version": "v2",
        "executor_display_name": "Make a transition request",
        "executor_description": "Creates a model version stage transition request.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/transition-requests/create",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "search_ads_model",
                "version": "1",
                "stage": "None",
                "comment": "This version is great!"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698838899857,
        "lastModifiedTime": 1698838899857,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "request": {
                        "creation_timestamp": 1594437249910,
                        "to_stage": "None",
                        "user_id": "jane.doe@example.com",
                        "comment": "This version is great!",
                        "available_actions": [
                            "APPROVE_TRANSITION_REQUEST"
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119642,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteRegistryWebhook",
        "executor_version": "v2",
        "executor_display_name": "Delete a webhook",
        "executor_description": "Deletes a registry webhook.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/registry-webhooks/delete",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "id",
                "value": "",
                "description": "Webhook ID required to delete a registry webhook.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698840406934,
        "lastModifiedTime": 1698840406934,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "Registry webhook was deleted successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119554,
        "executor_type": "THIRDPARTY",
        "executor_name": "setRegisteredModelPermissions",
        "executor_version": "v2",
        "executor_display_name": "Set registered model permissions",
        "executor_description": "Sets permissions on a registered model. Registered models can inherit permissions from their root object.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/registered-models/{registered_model_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "registered_model_id",
                "value": "",
                "description": "The registered model for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_MANAGE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698833689598,
        "lastModifiedTime": 1698833689598,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119617,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateModel",
        "executor_version": "v2",
        "executor_display_name": "Update model",
        "executor_description": "Updates a registered model.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/registered-models/update",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "description": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698838796383,
        "lastModifiedTime": 1698838796383,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119565,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteModelVersionTag",
        "executor_version": "v2",
        "executor_display_name": "Delete a model version tag",
        "executor_description": "Deletes a model version tag.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/model-versions/delete-tag",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "name",
                "value": "",
                "description": "Name of the registered model that the tag was logged under.",
                "req": false
            },
            {
                "key": "version",
                "value": "",
                "description": "Model version number that the tag was logged under.",
                "req": false
            },
            {
                "key": "key",
                "value": "",
                "description": "Name of the tag. The name must be an exact match; wild-card deletion is not supported. Maximum size is 250 bytes.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698834861294,
        "lastModifiedTime": 1698834861294,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119588,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteModelTag",
        "executor_version": "v2",
        "executor_display_name": "Delete a model tag",
        "executor_description": "Deletes the tag for a registered model.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/registered-models/delete-tag",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "name",
                "value": "",
                "description": "Name of the registered model that the tag was logged under.",
                "req": false
            },
            {
                "key": "key",
                "value": "",
                "description": "Name of the tag. The name must be an exact match; wild-card deletion is not supported. Maximum size is 250 bytes.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698836777079,
        "lastModifiedTime": 1698836777079,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119620,
        "executor_type": "THIRDPARTY",
        "executor_name": "listTransitionRequests",
        "executor_version": "v2",
        "executor_display_name": "List transition requests",
        "executor_description": "Gets a list of all open stage transition requests for the model version.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/transition-requests/list",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "name",
                "value": "",
                "description": "Name of the model.",
                "req": false
            },
            {
                "key": "version",
                "value": "",
                "description": "Version of the model.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698838991984,
        "lastModifiedTime": 1698838991984,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "requests": [
                        {
                            "id": "6fc74c92704341aaa49e74dcc6031057",
                            "creation_timestamp": 1594437249910,
                            "last_updated_timestamp": 1594437549910,
                            "user_id": "jane.doe@example.com",
                            "activity_type": "APPLIED_TRANSITION",
                            "from_stage": "None",
                            "to_stage": "None",
                            "comment": "This version is great!",
                            "system_comment": "string"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119577,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateModelVersion",
        "executor_version": "v2",
        "executor_display_name": "Update model version",
        "executor_description": "Updates the model version.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/model-versions/update",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "version": "string",
                "description": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698835862533,
        "lastModifiedTime": 1698835862533,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119629,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteTransitionRequest",
        "executor_version": "v2",
        "executor_display_name": "Delete a transition request",
        "executor_description": "Cancels a model version stage transition request.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/transition-requests/delete",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "name",
                "value": "",
                "description": "Name of the model.",
                "req": false
            },
            {
                "key": "version",
                "value": "",
                "description": "Version of the model.",
                "req": false
            },
            {
                "key": "stage",
                "value": "",
                "description": "Enum: \"None\" \"Staging\" \"Production\" \"Archived\" Target stage of the transition request. Valid values are:  None: The initial stage of a model version.  Staging: Staging or pre-production stage.  Production: Production stage.  Archived: Archived stage.",
                "req": false
            },
            {
                "key": "creator",
                "value": "",
                "description": "Username of the user who created this request. Of the transition requests matching the specified details, only the one transition created by this user will be deleted.",
                "req": false
            },
            {
                "key": "comment",
                "value": "",
                "description": "User-provided comment on the action.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698839543626,
        "lastModifiedTime": 1698839543626,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "Transition request was deleted successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119641,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateRegistryWebhook",
        "executor_version": "v2",
        "executor_display_name": "Update a webhook",
        "executor_description": "Updates a registry webhook.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/registry-webhooks/update",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "id": "124323",
                "status": "DISABLED"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698840315568,
        "lastModifiedTime": 1698840315568,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "Registry webhook was updated successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "webhook": {
                        "id": "124323",
                        "events": [
                            "MODEL_VERSION_CREATED",
                            "MODEL_VERSION_TRANSITIONED_TO_STAGING",
                            "COMMENT_CREATED"
                        ],
                        "creation_timestamp": 1594437249910,
                        "last_updated_timestamp": 1639707520991,
                        "description": "Webhook for comment creation",
                        "status": "DISABLED",
                        "http_url_spec": {
                            "url": "https://hooks.slack.com/services/...",
                            "enable_ssl_verification": true
                        },
                        "model_name": "registered-model-1"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119634,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateacomment",
        "executor_version": "v2",
        "executor_display_name": "Update a comment",
        "executor_description": "Post an edit to a comment on a model version.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/comments/update",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "id": "6fc74c92704341aaa49e74dcc6031057",
                "comment": "This version is great!"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698839784399,
        "lastModifiedTime": 1698839784399,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "Comment was updated successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "comment": {
                        "id": "string",
                        "creation_timestamp": 1594437249910,
                        "last_updated_timestamp": 1594437549910,
                        "user_id": "jane.doe@example.com",
                        "comment": "This version is great!",
                        "available_actions": [
                            "EDIT_COMMENT"
                        ]
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119585,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTheLatestVersion",
        "executor_version": "v2",
        "executor_display_name": "Get the latest version",
        "executor_description": "Gets the latest version of a registered model.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/registered-models/get-latest-versions",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "stages": [
                    "string"
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698836620115,
        "lastModifiedTime": 1698836620115,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "model_versions": [
                        {
                            "name": "string",
                            "version": "string",
                            "creation_timestamp": 0,
                            "last_updated_timestamp": 0,
                            "user_id": "string",
                            "current_stage": "string",
                            "description": "string",
                            "source": "string",
                            "run_id": "string",
                            "status": "PENDING_REGISTRATION",
                            "status_message": "string",
                            "tags": [
                                {
                                    "key": "string",
                                    "value": "string"
                                }
                            ],
                            "run_link": "string"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119592,
        "executor_type": "THIRDPARTY",
        "executor_name": "renameModel",
        "executor_version": "v2",
        "executor_display_name": "Rename a model",
        "executor_description": "Renames a registered model.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/registered-models/rename",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "new_name": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698837071093,
        "lastModifiedTime": 1698837071093,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "registered_model": {
                        "name": "string",
                        "creation_timestamp": 0,
                        "last_updated_timestamp": 0,
                        "user_id": "string",
                        "description": "string",
                        "latest_versions": [
                            {
                                "name": "string",
                                "version": "string",
                                "creation_timestamp": 0,
                                "last_updated_timestamp": 0,
                                "user_id": "string",
                                "current_stage": "string",
                                "description": "string",
                                "source": "string",
                                "run_id": "string",
                                "status": "PENDING_REGISTRATION",
                                "status_message": "string",
                                "tags": [
                                    {
                                        "key": "string",
                                        "value": "string"
                                    }
                                ],
                                "run_link": "string"
                            }
                        ],
                        "tags": [
                            {
                                "key": "string",
                                "value": "string"
                            }
                        ]
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119596,
        "executor_type": "THIRDPARTY",
        "executor_name": "setatag",
        "executor_version": "v2",
        "executor_display_name": "Set a tag",
        "executor_description": "Sets a tag on a registered model.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/registered-models/set-tag",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "key": "string",
                "value": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698837322874,
        "lastModifiedTime": 1698837322874,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119635,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteacomment",
        "executor_version": "v2",
        "executor_display_name": "Delete a comment",
        "executor_description": "Deletes a comment on a model version.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/comments/delete",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "id",
                "value": "",
                "description": "Unique identifier of an activity",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698839857296,
        "lastModifiedTime": 1698839857296,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "Comment was deleted successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119587,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteModel",
        "executor_version": "v2",
        "executor_display_name": "Delete a model",
        "executor_description": "Deletes a registered model.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/registered-models/delete",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "name",
                "value": "",
                "description": "Registered model unique name identifier.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698836704502,
        "lastModifiedTime": 1698836704502,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119563,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteModelVersion",
        "executor_version": "v2",
        "executor_display_name": "Delete a model version",
        "executor_description": "Deletes a model version.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/model-versions/delete",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "name",
                "value": "",
                "description": "Name of the registered model",
                "req": false
            },
            {
                "key": "version",
                "value": "",
                "description": "Model version number",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698834776913,
        "lastModifiedTime": 1698834776913,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119571,
        "executor_type": "THIRDPARTY",
        "executor_name": "searchesModelVersions",
        "executor_version": "v2",
        "executor_display_name": "Searches model versions",
        "executor_description": "Searches for specific model versions based on the supplied filter.",
        "executor_category": "ModelRegistry",
        "executor_category_group": "ModelRegistry",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/mlflow/model-versions/search",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "filter",
                "value": "",
                "description": "String filter condition, like \"name='my-model-name'\". Must be a single boolean condition, with string values wrapped in single quotes.",
                "req": false
            },
            {
                "key": "max_results",
                "value": "",
                "description": "<= 10000 Maximum number of models desired. Max threshold is 10K.",
                "req": false
            },
            {
                "key": "order_by",
                "value": "",
                "description": "List of columns to be ordered by including model name, version, stage with an optional \"DESC\" or \"ASC\" annotation, where \"ASC\" is the default. Tiebreaks are done by latest stage transition timestamp, followed by name ASC, followed by version DESC.",
                "req": false
            },
            {
                "key": "page_token",
                "value": "",
                "description": "Pagination token to go to next page based on previous search query.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698835154285,
        "lastModifiedTime": 1698835154285,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "model_versions": [
                        {
                            "name": "string",
                            "version": "string",
                            "creation_timestamp": 0,
                            "last_updated_timestamp": 0,
                            "user_id": "string",
                            "current_stage": "string",
                            "description": "string",
                            "source": "string",
                            "run_id": "string",
                            "status": "PENDING_REGISTRATION",
                            "status_message": "string",
                            "tags": [
                                {
                                    "key": "string",
                                    "value": "string"
                                }
                            ],
                            "run_link": "string"
                        }
                    ],
                    "next_page_token": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119568,
        "executor_type": "THIRDPARTY",
        "executor_name": "listpipelineupdates",
        "executor_version": "v2",
        "executor_display_name": "List pipeline updates\u2002",
        "executor_description": "List updates for an active pipeline.",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/pipelines/{pipeline_id}/updates",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "pipeline_id",
                "value": "",
                "description": "The pipeline to return updates for."
            }
        ],
        "queryParams": [
            {
                "key": "page_token",
                "value": "",
                "description": "Page token returned by previous call",
                "req": false
            },
            {
                "key": "max_results",
                "value": "",
                "description": "Max number of entries to return in a single page.",
                "req": false
            },
            {
                "key": "until_update_id",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698834993041,
        "lastModifiedTime": 1698834993041,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "updates": [
                        {
                            "pipeline_id": "string",
                            "update_id": "string",
                            "config": {
                                "id": "string",
                                "name": "string",
                                "storage": "string",
                                "configuration": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "clusters": [
                                    {
                                        "label": "string",
                                        "spark_conf": {
                                            "property1": "string",
                                            "property2": "string"
                                        },
                                        "gcp_attributes": {
                                            "google_service_account": "string",
                                            "boot_disk_size": 0,
                                            "availability": "PREEMPTIBLE_GCP",
                                            "local_ssd_count": 0
                                        },
                                        "node_type_id": "string",
                                        "driver_node_type_id": "string",
                                        "ssh_public_keys": [
                                            "string"
                                        ],
                                        "custom_tags": {
                                            "property1": "string",
                                            "property2": "string"
                                        },
                                        "cluster_log_conf": {
                                            "dbfs": {
                                                "destination": "string"
                                            }
                                        },
                                        "spark_env_vars": {
                                            "property1": "string",
                                            "property2": "string"
                                        },
                                        "instance_pool_id": "string",
                                        "driver_instance_pool_id": "string",
                                        "policy_id": "string",
                                        "num_workers": 0,
                                        "autoscale": {
                                            "min_workers": 0,
                                            "max_workers": 0
                                        },
                                        "apply_policy_default_values": true
                                    }
                                ],
                                "libraries": [
                                    {
                                        "notebook": {
                                            "path": "string"
                                        },
                                        "file": {
                                            "path": "string"
                                        }
                                    }
                                ],
                                "trigger": {
                                    "manual": {},
                                    "cron": {
                                        "quartz_cron_schedule": "string",
                                        "timezone_id": "string"
                                    }
                                },
                                "target": "string",
                                "filters": {
                                    "include": [
                                        "string"
                                    ],
                                    "exclude": [
                                        "string"
                                    ]
                                },
                                "continuous": true,
                                "development": true,
                                "photon": true,
                                "edition": "string",
                                "channel": "string",
                                "catalog": "string",
                                "notifications": [
                                    {
                                        "email_recipients": [
                                            "string"
                                        ],
                                        "alerts": [
                                            "string"
                                        ]
                                    }
                                ]
                            },
                            "cause": "API_CALL",
                            "state": "QUEUED",
                            "cluster_id": "string",
                            "creation_time": 0,
                            "full_refresh": true,
                            "refresh_selection": [
                                "string"
                            ],
                            "full_refresh_selection": [
                                "string"
                            ]
                        }
                    ],
                    "next_page_token": "string",
                    "prev_page_token": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119574,
        "executor_type": "THIRDPARTY",
        "executor_name": "listpipelineevents",
        "executor_version": "v2",
        "executor_display_name": "List pipeline events\u2002",
        "executor_description": "Retrieves events for a pipeline.",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/pipelines/{pipeline_id}/events",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "pipeline_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "max_results",
                "value": "",
                "description": "Max number of entries to return in a single page. The system may return fewer than max_results events in a response, even if there are more events available.",
                "req": false
            },
            {
                "key": "order_by",
                "value": "",
                "description": "A string indicating a sort order by timestamp for the results, for example, [\"timestamp asc\"]. The sort order can be ascending or descending. By default, events are returned in descending order by timestamp.",
                "req": false
            },
            {
                "key": "filter",
                "value": "",
                "description": "Criteria to select a subset of results, expressed using a SQL-like syntax. The supported filters are:  level='INFO' (or WARN or ERROR) level in ('INFO', 'WARN') id='[event-id]' timestamp > 'TIMESTAMP' (or >=,<,<=,=) Composite expressions are supported, for example: level in ('ERROR', 'WARN') AND timestamp> '2021-07-22T06:37:33.083Z'",
                "req": false
            },
            {
                "key": "page_token",
                "value": "",
                "description": "Page token returned by previous call. This field is mutually exclusive with all fields in this request except max_results. An error is returned if any fields other than max_results are set when this field is set.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698835405608,
        "lastModifiedTime": 1698835405608,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "next_page_token": "string",
                    "prev_page_token": "string",
                    "events": [
                        {
                            "id": "string",
                            "sequence": {
                                "data_plane_id": {
                                    "instance": "string",
                                    "seq_no": {}
                                },
                                "control_plane_seq_no": 0
                            },
                            "origin": {
                                "cloud": "string",
                                "region": "string",
                                "org_id": 0,
                                "pipeline_id": "string",
                                "pipeline_name": "string",
                                "cluster_id": "string",
                                "update_id": "string",
                                "maintenance_id": "string",
                                "table_id": "string",
                                "dataset_name": "string",
                                "flow_id": "string",
                                "flow_name": "string",
                                "batch_id": 0,
                                "request_id": "string",
                                "uc_resource_id": "string",
                                "host": "string",
                                "materialization_name": "string"
                            },
                            "timestamp": "string",
                            "message": "string",
                            "level": "INFO",
                            "error": {
                                "fatal": true,
                                "exceptions": [
                                    {
                                        "class_name": "string",
                                        "message": "string",
                                        "stack": [
                                            {
                                                "declaring_class": "string",
                                                "method_name": "string",
                                                "file_name": "string",
                                                "line_number": 0
                                            }
                                        ]
                                    }
                                ]
                            },
                            "event_type": "string",
                            "maturity_level": "STABLE"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119557,
        "executor_type": "THIRDPARTY",
        "executor_name": "createapipeline",
        "executor_version": "v2",
        "executor_display_name": "Create a pipeline\u2002",
        "executor_description": "Creates a new data processing pipeline based on the requested configuration. If successful, this method returns the ID of the new pipeline.",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/pipelines",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "id": "string",
                "name": "string",
                "storage": "string",
                "configuration": {
                    "property1": "string",
                    "property2": "string"
                },
                "clusters": [
                    {
                        "label": "string",
                        "spark_conf": {
                            "property1": "string",
                            "property2": "string"
                        },
                        "gcp_attributes": {
                            "google_service_account": "string",
                            "boot_disk_size": 0,
                            "availability": "PREEMPTIBLE_GCP",
                            "local_ssd_count": 0
                        },
                        "node_type_id": "string",
                        "driver_node_type_id": "string",
                        "ssh_public_keys": [
                            "string"
                        ],
                        "custom_tags": {
                            "property1": "string",
                            "property2": "string"
                        },
                        "cluster_log_conf": {
                            "dbfs": {
                                "destination": "string"
                            }
                        },
                        "spark_env_vars": {
                            "property1": "string",
                            "property2": "string"
                        },
                        "instance_pool_id": "string",
                        "driver_instance_pool_id": "string",
                        "policy_id": "string",
                        "num_workers": 0,
                        "autoscale": {
                            "min_workers": 0,
                            "max_workers": 0
                        },
                        "apply_policy_default_values": true
                    }
                ],
                "libraries": [
                    {
                        "notebook": {
                            "path": "string"
                        },
                        "file": {
                            "path": "string"
                        }
                    }
                ],
                "trigger": {
                    "manual": {},
                    "cron": {
                        "quartz_cron_schedule": "string",
                        "timezone_id": "string"
                    }
                },
                "target": "string",
                "filters": {
                    "include": [
                        "string"
                    ],
                    "exclude": [
                        "string"
                    ]
                },
                "continuous": true,
                "development": true,
                "photon": true,
                "edition": "string",
                "channel": "string",
                "catalog": "string",
                "notifications": [
                    {
                        "email_recipients": [
                            "string"
                        ],
                        "alerts": [
                            "string"
                        ]
                    }
                ],
                "allow_duplicate_names": "false",
                "dry_run": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698834239895,
        "lastModifiedTime": 1698834427554,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "pipeline_id": "string",
                    "effective_settings": {
                        "id": "string",
                        "name": "string",
                        "storage": "string",
                        "configuration": {
                            "property1": "string",
                            "property2": "string"
                        },
                        "clusters": [
                            {
                                "label": "string",
                                "spark_conf": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "gcp_attributes": {
                                    "google_service_account": "string",
                                    "boot_disk_size": 0,
                                    "availability": "PREEMPTIBLE_GCP",
                                    "local_ssd_count": 0
                                },
                                "node_type_id": "string",
                                "driver_node_type_id": "string",
                                "ssh_public_keys": [
                                    "string"
                                ],
                                "custom_tags": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "cluster_log_conf": {
                                    "dbfs": {
                                        "destination": "string"
                                    }
                                },
                                "spark_env_vars": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "instance_pool_id": "string",
                                "driver_instance_pool_id": "string",
                                "policy_id": "string",
                                "num_workers": 0,
                                "autoscale": {
                                    "min_workers": 0,
                                    "max_workers": 0
                                },
                                "apply_policy_default_values": true
                            }
                        ],
                        "libraries": [
                            {
                                "notebook": {
                                    "path": "string"
                                },
                                "file": {
                                    "path": "string"
                                }
                            }
                        ],
                        "trigger": {
                            "manual": {},
                            "cron": {
                                "quartz_cron_schedule": "string",
                                "timezone_id": "string"
                            }
                        },
                        "target": "string",
                        "filters": {
                            "include": [
                                "string"
                            ],
                            "exclude": [
                                "string"
                            ]
                        },
                        "continuous": true,
                        "development": true,
                        "photon": true,
                        "edition": "string",
                        "channel": "string",
                        "catalog": "string",
                        "notifications": [
                            {
                                "email_recipients": [
                                    "string"
                                ],
                                "alerts": [
                                    "string"
                                ]
                            }
                        ]
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 409,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "RESOURCE_CONFLICT",
                "description": "Request was rejected due a conflict with an existing resource.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119556,
        "executor_type": "THIRDPARTY",
        "executor_name": "listpipelines",
        "executor_version": "v2",
        "executor_display_name": "List pipelines\u2002",
        "executor_description": "Lists pipelines defined in the Delta Live Tables system.",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/pipelines",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "max_results",
                "value": "",
                "description": "The maximum number of entries to return in a single page. The system may return fewer than max_results events in a response, even if there are more events available. This field is optional. The default value is 25. The maximum value is 100. An error is returned if the value of max_results is greater than 100.",
                "req": false
            },
            {
                "key": "page_token",
                "value": "",
                "description": "Page token returned by previous call",
                "req": false
            },
            {
                "key": "order_by",
                "value": "",
                "description": "A list of strings specifying the order of results. Supported order_by fields are id and name. The default is id asc. This field is optional.",
                "req": false
            },
            {
                "key": "filter",
                "value": "",
                "description": "Select a subset of results based on the specified criteria. The supported filters are:  notebook='<path>' to select pipelines that reference the provided notebook path. name LIKE '[pattern]' to select pipelines with a name that matches pattern. Wildcards are supported, for example: name LIKE '%shopping%' Composite filters are not supported. This field is optional.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698834011103,
        "lastModifiedTime": 1698834011103,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statuses": [
                        {
                            "pipeline_id": "string",
                            "state": "DEPLOYING",
                            "cluster_id": "string",
                            "name": "string",
                            "latest_updates": [
                                {
                                    "update_id": "string",
                                    "state": "QUEUED",
                                    "creation_time": "string"
                                }
                            ],
                            "creator_user_name": "string",
                            "run_as_user_name": "string"
                        }
                    ],
                    "next_page_token": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119552,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatepipelinepermissions",
        "executor_version": "v2",
        "executor_display_name": "Update pipeline permissions\u2002",
        "executor_description": "Updates the permissions on a pipeline. Pipelines can inherit permissions from their root object.",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/pipelines/{pipeline_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "pipeline_id",
                "value": "",
                "description": "The pipeline for which to get or manage permissions."
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_MANAGE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698833593886,
        "lastModifiedTime": 1698833593886,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE\t",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119558,
        "executor_type": "THIRDPARTY",
        "executor_name": "getapipeline",
        "executor_version": "v2",
        "executor_display_name": "Get a pipeline\u2002",
        "executor_description": "Get a pipeline\u2002",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/pipelines/{pipeline_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "pipeline_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698834361910,
        "lastModifiedTime": 1698834361910,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "pipeline_id": "string",
                    "spec": {
                        "id": "string",
                        "name": "string",
                        "storage": "string",
                        "configuration": {
                            "property1": "string",
                            "property2": "string"
                        },
                        "clusters": [
                            {
                                "label": "string",
                                "spark_conf": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "gcp_attributes": {
                                    "google_service_account": "string",
                                    "boot_disk_size": 0,
                                    "availability": "PREEMPTIBLE_GCP",
                                    "local_ssd_count": 0
                                },
                                "node_type_id": "string",
                                "driver_node_type_id": "string",
                                "ssh_public_keys": [
                                    "string"
                                ],
                                "custom_tags": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "cluster_log_conf": {
                                    "dbfs": {
                                        "destination": "string"
                                    }
                                },
                                "spark_env_vars": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "instance_pool_id": "string",
                                "driver_instance_pool_id": "string",
                                "policy_id": "string",
                                "num_workers": 0,
                                "autoscale": {
                                    "min_workers": 0,
                                    "max_workers": 0
                                },
                                "apply_policy_default_values": true
                            }
                        ],
                        "libraries": [
                            {
                                "notebook": {
                                    "path": "string"
                                },
                                "file": {
                                    "path": "string"
                                }
                            }
                        ],
                        "trigger": {
                            "manual": {},
                            "cron": {
                                "quartz_cron_schedule": "string",
                                "timezone_id": "string"
                            }
                        },
                        "target": "string",
                        "filters": {
                            "include": [
                                "string"
                            ],
                            "exclude": [
                                "string"
                            ]
                        },
                        "continuous": true,
                        "development": true,
                        "photon": true,
                        "edition": "string",
                        "channel": "string",
                        "catalog": "string",
                        "notifications": [
                            {
                                "email_recipients": [
                                    "string"
                                ],
                                "alerts": [
                                    "string"
                                ]
                            }
                        ]
                    },
                    "state": "DEPLOYING",
                    "cause": "string",
                    "cluster_id": "string",
                    "name": "string",
                    "health": "HEALTHY",
                    "creator_user_name": "string",
                    "latest_updates": [
                        {
                            "update_id": "string",
                            "state": "QUEUED",
                            "creation_time": "string"
                        }
                    ],
                    "last_modified": 0,
                    "run_as_user_name": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119560,
        "executor_type": "THIRDPARTY",
        "executor_name": "editapipeline",
        "executor_version": "v2",
        "executor_display_name": "Edit a pipeline\u2002",
        "executor_description": "Updates a pipeline with the supplied configuration.",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/pipelines/{pipeline_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "pipeline_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "id": "string",
                "name": "string",
                "storage": "string",
                "configuration": {
                    "property1": "string",
                    "property2": "string"
                },
                "clusters": [
                    {
                        "label": "string",
                        "spark_conf": {
                            "property1": "string",
                            "property2": "string"
                        },
                        "gcp_attributes": {
                            "google_service_account": "string",
                            "boot_disk_size": 0,
                            "availability": "PREEMPTIBLE_GCP",
                            "local_ssd_count": 0
                        },
                        "node_type_id": "string",
                        "driver_node_type_id": "string",
                        "ssh_public_keys": [
                            "string"
                        ],
                        "custom_tags": {
                            "property1": "string",
                            "property2": "string"
                        },
                        "cluster_log_conf": {
                            "dbfs": {
                                "destination": "string"
                            }
                        },
                        "spark_env_vars": {
                            "property1": "string",
                            "property2": "string"
                        },
                        "instance_pool_id": "string",
                        "driver_instance_pool_id": "string",
                        "policy_id": "string",
                        "num_workers": 0,
                        "autoscale": {
                            "min_workers": 0,
                            "max_workers": 0
                        },
                        "apply_policy_default_values": true
                    }
                ],
                "libraries": [
                    {
                        "notebook": {
                            "path": "string"
                        },
                        "file": {
                            "path": "string"
                        }
                    }
                ],
                "trigger": {
                    "manual": {},
                    "cron": {
                        "quartz_cron_schedule": "string",
                        "timezone_id": "string"
                    }
                },
                "target": "string",
                "filters": {
                    "include": [
                        "string"
                    ],
                    "exclude": [
                        "string"
                    ]
                },
                "continuous": true,
                "development": true,
                "photon": true,
                "edition": "string",
                "channel": "string",
                "catalog": "string",
                "notifications": [
                    {
                        "email_recipients": [
                            "string"
                        ],
                        "alerts": [
                            "string"
                        ]
                    }
                ],
                "pipeline_id": "string",
                "allow_duplicate_names": "false",
                "expected_last_modified": 0
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698834526500,
        "lastModifiedTime": 1698834662044,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "pipeline_id": "string",
                    "spec": {
                        "id": "string",
                        "name": "string",
                        "storage": "string",
                        "configuration": {
                            "property1": "string",
                            "property2": "string"
                        },
                        "clusters": [
                            {
                                "label": "string",
                                "spark_conf": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "gcp_attributes": {
                                    "google_service_account": "string",
                                    "boot_disk_size": 0,
                                    "availability": "PREEMPTIBLE_GCP",
                                    "local_ssd_count": 0
                                },
                                "node_type_id": "string",
                                "driver_node_type_id": "string",
                                "ssh_public_keys": [
                                    "string"
                                ],
                                "custom_tags": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "cluster_log_conf": {
                                    "dbfs": {
                                        "destination": "string"
                                    }
                                },
                                "spark_env_vars": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "instance_pool_id": "string",
                                "driver_instance_pool_id": "string",
                                "policy_id": "string",
                                "num_workers": 0,
                                "autoscale": {
                                    "min_workers": 0,
                                    "max_workers": 0
                                },
                                "apply_policy_default_values": true
                            }
                        ],
                        "libraries": [
                            {
                                "notebook": {
                                    "path": "string"
                                },
                                "file": {
                                    "path": "string"
                                }
                            }
                        ],
                        "trigger": {
                            "manual": {},
                            "cron": {
                                "quartz_cron_schedule": "string",
                                "timezone_id": "string"
                            }
                        },
                        "target": "string",
                        "filters": {
                            "include": [
                                "string"
                            ],
                            "exclude": [
                                "string"
                            ]
                        },
                        "continuous": true,
                        "development": true,
                        "photon": true,
                        "edition": "string",
                        "channel": "string",
                        "catalog": "string",
                        "notifications": [
                            {
                                "email_recipients": [
                                    "string"
                                ],
                                "alerts": [
                                    "string"
                                ]
                            }
                        ]
                    },
                    "state": "DEPLOYING",
                    "cause": "string",
                    "cluster_id": "string",
                    "name": "string",
                    "health": "HEALTHY",
                    "creator_user_name": "string",
                    "latest_updates": [
                        {
                            "update_id": "string",
                            "state": "QUEUED",
                            "creation_time": "string"
                        }
                    ],
                    "last_modified": 0,
                    "run_as_user_name": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 409,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "RESOURCE_CONFLICT",
                "description": "Request was rejected due a conflict with an existing resource.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119562,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaPipeline",
        "executor_version": "v2",
        "executor_display_name": "Delete a pipeline\u2002",
        "executor_description": "Deletes a pipeline.",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/pipelines/{pipeline_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "pipeline_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698834735990,
        "lastModifiedTime": 1698834735990,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119572,
        "executor_type": "THIRDPARTY",
        "executor_name": "getapipelineupdate",
        "executor_version": "v2",
        "executor_display_name": "Get a pipeline update\u2002",
        "executor_description": "Gets an update from an active pipeline.",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/pipelines/{pipeline_id}/updates/{update_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "pipeline_id",
                "value": "",
                "description": "The ID of the pipeline."
            },
            {
                "key": "update_id",
                "value": "",
                "description": "The ID of the update."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698835209381,
        "lastModifiedTime": 1698835209381,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "update": {
                        "pipeline_id": "string",
                        "update_id": "string",
                        "config": {
                            "id": "string",
                            "name": "string",
                            "storage": "string",
                            "configuration": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "clusters": [
                                {
                                    "label": "string",
                                    "spark_conf": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "gcp_attributes": {
                                        "google_service_account": "string",
                                        "boot_disk_size": 0,
                                        "availability": "PREEMPTIBLE_GCP",
                                        "local_ssd_count": 0
                                    },
                                    "node_type_id": "string",
                                    "driver_node_type_id": "string",
                                    "ssh_public_keys": [
                                        "string"
                                    ],
                                    "custom_tags": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "cluster_log_conf": {
                                        "dbfs": {
                                            "destination": "string"
                                        }
                                    },
                                    "spark_env_vars": {
                                        "property1": "string",
                                        "property2": "string"
                                    },
                                    "instance_pool_id": "string",
                                    "driver_instance_pool_id": "string",
                                    "policy_id": "string",
                                    "num_workers": 0,
                                    "autoscale": {
                                        "min_workers": 0,
                                        "max_workers": 0
                                    },
                                    "apply_policy_default_values": true
                                }
                            ],
                            "libraries": [
                                {
                                    "notebook": {
                                        "path": "string"
                                    },
                                    "file": {
                                        "path": "string"
                                    }
                                }
                            ],
                            "trigger": {
                                "manual": {},
                                "cron": {
                                    "quartz_cron_schedule": "string",
                                    "timezone_id": "string"
                                }
                            },
                            "target": "string",
                            "filters": {
                                "include": [
                                    "string"
                                ],
                                "exclude": [
                                    "string"
                                ]
                            },
                            "continuous": true,
                            "development": true,
                            "photon": true,
                            "edition": "string",
                            "channel": "string",
                            "catalog": "string",
                            "notifications": [
                                {
                                    "email_recipients": [
                                        "string"
                                    ],
                                    "alerts": [
                                        "string"
                                    ]
                                }
                            ]
                        },
                        "cause": "API_CALL",
                        "state": "QUEUED",
                        "cluster_id": "string",
                        "creation_time": 0,
                        "full_refresh": true,
                        "refresh_selection": [
                            "string"
                        ],
                        "full_refresh_selection": [
                            "string"
                        ]
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119553,
        "executor_type": "THIRDPARTY",
        "executor_name": "getpipelinepermissionlevels",
        "executor_version": "v2",
        "executor_display_name": "Get pipeline permission levels\u2002",
        "executor_description": "Gets the permission levels that a user can have on an object.",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/pipelines/{pipeline_id}/permissionLevels",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "pipeline_id",
                "value": "",
                "description": "The pipeline for which to get or manage permissions."
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698833683471,
        "lastModifiedTime": 1698833683471,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "permission_levels": [
                        {
                            "permission_level": "CAN_MANAGE",
                            "description": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE\t",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119566,
        "executor_type": "THIRDPARTY",
        "executor_name": "stopapipeline",
        "executor_version": "v2",
        "executor_display_name": "Stop a pipeline\u2002",
        "executor_description": "Stops the pipeline by canceling the active update. If there is no active update for the pipeline, this request is a no-op.",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/pipelines/{pipeline_id}/stop",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "pipeline_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698834882599,
        "lastModifiedTime": 1698834882599,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 409,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INVALID_STATE_TRANSITION",
                "description": "If the user attempts to perform an invalid state transition on a shard.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119549,
        "executor_type": "THIRDPARTY",
        "executor_name": "getpipelinepermissions",
        "executor_version": "v2",
        "executor_display_name": "Get pipeline permissions\u2002",
        "executor_description": "Gets the permissions of a pipeline. Pipelines can inherit permissions from their root object.",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/pipelines/{pipeline_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "pipeline_id",
                "value": "",
                "description": "The pipeline for which to get or manage permissions."
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698833342333,
        "lastModifiedTime": 1698833342333,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE\t",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119550,
        "executor_type": "THIRDPARTY",
        "executor_name": "setpipelinepermissions",
        "executor_version": "v2",
        "executor_display_name": "Set pipeline permissions\u2002",
        "executor_description": "Gets the permissions of a pipeline. Pipelines can iSets permissions on a pipeline. Pipelines can inherit permissions from their root object.nherit permissions from their root object.",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/pipelines/{pipeline_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "pipeline_id",
                "value": "",
                "description": "The pipeline for which to get or manage permissions."
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_MANAGE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698833481329,
        "lastModifiedTime": 1698833481329,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE\t",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST\t",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119564,
        "executor_type": "THIRDPARTY",
        "executor_name": "resetapipeline",
        "executor_version": "v2",
        "executor_display_name": "Reset a pipeline\u2002",
        "executor_description": "Resets a pipeline.",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/pipelines/{pipeline_id}/reset",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "pipeline_id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698834811174,
        "lastModifiedTime": 1698834811174,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 409,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INVALID_STATE_TRANSITION",
                "description": "If the user attempts to perform an invalid state transition on a shard.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119570,
        "executor_type": "THIRDPARTY",
        "executor_name": "startapipeline",
        "executor_version": "v2",
        "executor_display_name": "Start a pipeline\u2002",
        "executor_description": "Starts a new update for the pipeline. If there is already an active update for the pipeline, the request will fail and the active update will remain running.",
        "executor_category": "Pipelines",
        "executor_category_group": "Pipelines",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/pipelines/{pipeline_id}/updates",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "pipeline_id",
                "value": "",
                "description": "The pipeline to return updates for."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "full_refresh": true,
                "cause": "API_CALL",
                "refresh_selection": [
                    "string"
                ],
                "full_refresh_selection": [
                    "string"
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698835117925,
        "lastModifiedTime": 1698835246176,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "update_id": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 409,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INVALID_STATE_TRANSITION\t",
                "description": "If the user attempts to perform an invalid state transition on a shard.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119584,
        "executor_type": "THIRDPARTY",
        "executor_name": "createaDirectory",
        "executor_version": "v2",
        "executor_display_name": "Create a directory\u2002",
        "executor_description": "Creates the given directory and necessary parent directories if they do not exist. If a file (not a directory) exists at any prefix of the input path, this call throws an exception with RESOURCE_ALREADY_EXISTS. Note: If this operation fails, it might have succeeded in creating some of the necessary parent directories.",
        "executor_category": "DBFS",
        "executor_category_group": "DBFS",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/dbfs/mkdirs",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "path": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698836493885,
        "lastModifiedTime": 1698836795928,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119583,
        "executor_type": "THIRDPARTY",
        "executor_name": "listdirectorycontentsorfiledetails",
        "executor_version": "v2",
        "executor_display_name": "List directory contents or file details\u2002",
        "executor_description": "List the contents of a directory, or details of the file. If the file or directory does not exist, this call throws an exception with RESOURCE_DOES_NOT_EXIST.",
        "executor_category": "DBFS",
        "executor_category_group": "DBFS",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/dbfs/list",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "path",
                "value": "",
                "description": "The path of the file or directory. The path should be the absolute DBFS path.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698836293804,
        "lastModifiedTime": 1698836293804,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "files": [
                        {
                            "path": "string",
                            "is_dir": true,
                            "file_size": 0,
                            "modification_time": 0
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119586,
        "executor_type": "THIRDPARTY",
        "executor_name": "moveafile",
        "executor_version": "v2",
        "executor_display_name": "Move a file\u2002",
        "executor_description": "Moves a file from one location to another location within DBFS. If the source file does not exist, this call throws an exception with RESOURCE_DOES_NOT_EXIST. If a file already exists in the destination path, this call throws an exception with RESOURCE_ALREADY_EXISTS. If the given source path is a directory, this call always recursively moves all files.\",",
        "executor_category": "DBFS",
        "executor_category_group": "DBFS",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/dbfs/move",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "source_path": "string",
                "destination_path": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698836674139,
        "lastModifiedTime": 1698836674139,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119576,
        "executor_type": "THIRDPARTY",
        "executor_name": "appenddatablock",
        "executor_version": "v2",
        "executor_display_name": "Append data block\u2002",
        "executor_description": "Appends a block of data to the stream specified by the input handle. If the handle does not exist, this call will throw an exception with RESOURCE_DOES_NOT_EXIST.",
        "executor_category": "DBFS",
        "executor_category_group": "DBFS",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/dbfs/add-block",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "handle": 0,
                "data": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698835820566,
        "lastModifiedTime": 1698836693959,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119593,
        "executor_type": "THIRDPARTY",
        "executor_name": "getthecontentsofafile",
        "executor_version": "v2",
        "executor_display_name": "Get the contents of a file\u2002",
        "executor_description": "Returns the contents of a file. If the file does not exist, this call throws an exception with RESOURCE_DOES_NOT_EXIST. If the path is a directory, the read length is negative, or if the offset is negative, this call throws an exception with INVALID_PARAMETER_VALUE. If the read length exceeds 1 MB, this call throws an exception with MAX_READ_SIZE_EXCEEDED.",
        "executor_category": "DBFS",
        "executor_category_group": "DBFS",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/dbfs/read",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "path",
                "value": "",
                "description": "The path of the file to read. The path should be the absolute DBFS path.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "The offset to read from in bytes.",
                "req": false
            },
            {
                "key": "length",
                "value": "",
                "description": "The number of bytes to read starting from the offset. This has a limit of 1 MB, and a default value of 0.5 MB.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698837076122,
        "lastModifiedTime": 1698837076122,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "bytes_read": 0,
                    "data": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119581,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteafiledirectory",
        "executor_version": "v2",
        "executor_display_name": "Delete a file/directory\u2002",
        "executor_description": "Delete the file or directory (optionally recursively delete all files in the directory). This call throws an exception with IO_ERROR if the path is a non-empty directory and recursive is set to false or on other similar errors.  When you delete a large number of files, the delete operation is done in increments. The call returns a response after approximately 45 seconds with an error message (503 Service Unavailable) asking you to re-invoke the delete operation until the directory structure is fully deleted.  For operations that delete more than 10K files, we discourage using the DBFS REST API, but advise you to perform such operations in the context of a cluster, using the File system utility (dbutils.fs). dbutils.fs covers the functional scope of the DBFS REST API, but from notebooks. Running such operations using notebooks provides better control and manageability, such as selective deletes, and the possibility to automate periodic delete jobs.",
        "executor_category": "DBFS",
        "executor_category_group": "DBFS",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/dbfs/delete",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "path": "string",
                "recursive": "false"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698836133313,
        "lastModifiedTime": 1698836133313,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "string",
                    "recursive": "false"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119580,
        "executor_type": "THIRDPARTY",
        "executor_name": "openastream",
        "executor_version": "v2",
        "executor_display_name": "Open a stream\u2002",
        "executor_description": "Opens a stream to write to a file and returns a handle to this stream. There is a 10 minute idle timeout on this handle. If a file or directory already exists on the given path and overwrite is set to false, this call throws an exception with RESOURCE_ALREADY_EXISTS.",
        "executor_category": "DBFS",
        "executor_category_group": "DBFS",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/dbfs/create",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "path": "string",
                "overwrite": "false"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698836045373,
        "lastModifiedTime": 1698836045374,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "handle": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119589,
        "executor_type": "THIRDPARTY",
        "executor_name": "uploaDafile",
        "executor_version": "v2",
        "executor_display_name": "Upload a file\u2002",
        "executor_description": "Uploads a file through the use of multipart form post. It is mainly used for streaming uploads, but can also be used as a convenient single call for data upload.",
        "executor_category": "DBFS",
        "executor_category_group": "DBFS",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/dbfs/put",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "path": "string",
                "contents": "string",
                "overwrite": "false"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698836830067,
        "lastModifiedTime": 1698836830067,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119578,
        "executor_type": "THIRDPARTY",
        "executor_name": "closethestream",
        "executor_version": "v2",
        "executor_display_name": "Close the stream\u2002",
        "executor_description": "Closes the stream specified by the input handle. If the handle does not exist, this call throws an exception with RESOURCE_DOES_NOT_EXIST.",
        "executor_category": "DBFS",
        "executor_category_group": "DBFS",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/dbfs/close",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "handle": 0
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698835925516,
        "lastModifiedTime": 1698835925516,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119582,
        "executor_type": "THIRDPARTY",
        "executor_name": "gettheinformationofafileordirectory",
        "executor_version": "v2",
        "executor_display_name": "Get the information of a file or directory\u2002",
        "executor_description": "Delete the file or directory (optionaGets the file information for a file or directory. If the file or directory does not exist, this call throws an exception with RESOURCE_DOES_NOT_EXIST.lly recursively delete all files in the directory). This call throws an exception with IO_ERROR if the path is a non-empty directory and recursive is set to false or on other similar errors.  When you delete a large number of files, the delete operation is done in increments. The call returns a response after approximately 45 seconds with an error message (503 Service Unavailable) asking you to re-invoke the delete operation until the directory structure is fully deleted.  For operations that delete more than 10K files, we discourage using the DBFS REST API, but advise you to perform such operations in the context of a cluster, using the File system utility (dbutils.fs). dbutils.fs covers the functional scope of the DBFS REST API, but from notebooks. Running such operations using notebooks provides better control and manageability, such as selective deletes, and the possibility to automate periodic delete jobs.",
        "executor_category": "DBFS",
        "executor_category_group": "DBFS",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/dbfs/get-status",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "path",
                "value": "",
                "description": "The path of the file or directory. The path should be the absolute DBFS path.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698836230062,
        "lastModifiedTime": 1698836230062,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "string",
                    "is_dir": true,
                    "file_size": 0,
                    "modification_time": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119607,
        "executor_type": "THIRDPARTY",
        "executor_name": "createaccesslist",
        "executor_version": "v2",
        "executor_display_name": "Create access list",
        "executor_description": "Creates an IP access list for this workspace.  A list can be an allow list or a block list. See the top of this file for a description of how the server treats allow lists and block lists at runtime.  When creating or updating an IP access list:  For all allow lists and block lists combined, the API supports a maximum of 1000 IP/CIDR values, where one CIDR counts as a single value. Attempts to exceed that number return error 400 with error_code value QUOTA_EXCEEDED. If the new list would block the calling user's current IP, error 400 is returned with error_code value INVALID_STATE. It can take a few minutes for the changes to take effect. Note: Your new IP access list has no effect until you enable the feature. See Workspaceconf/SetStatus  Details required to configure a block list or allow list.",
        "executor_category": "IPAccessLists",
        "executor_category_group": "IPAccessLists",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/ip-access-lists",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "label": "Office VPN",
                "list_type": "ALLOW",
                "ip_addresses": [
                    "192.168.100.0/22"
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698838102369,
        "lastModifiedTime": 1698838102369,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "An IP access list was successfully created.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "ip_access_list": {
                        "list_id": "430bbdbc-9d7f-4d06-a273-67ca4ba4ae4b",
                        "label": "Office VPN",
                        "ip_addresses": [
                            "192.168.100.0/22"
                        ],
                        "address_count": 2,
                        "list_type": "ALLOW",
                        "created_at": 1580265020299,
                        "created_by": 202480738464078,
                        "updated_at": 1580265020299,
                        "updated_by": 202480738464089,
                        "enabled": true
                    }
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "BAD_REQUEST - Request is invalid. INVALID_STATE - If one or more of the inputs to a given enpoint are not in a valid state for the action. RESOURCE_ALREADY_EXISTS - Operation was performed on a resource that already exists. QUOTA_EXCEEDED -",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST, INVALID_STATE, RESOURCE_ALREADY_EXISTS, QUOTA_EXCEEDED",
                "description": "BAD_REQUEST - Request is invalid. INVALID_STATE - If one or more of the inputs to a given enpoint are not in a valid state for the action. RESOURCE_ALREADY_EXISTS - Operation was performed on a resource that already exists. QUOTA_EXCEEDED -",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119616,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaccesslist",
        "executor_version": "v2",
        "executor_display_name": "Delete access list",
        "executor_description": "Deletes an IP access list, specified by its list ID.",
        "executor_category": "IPAccessLists",
        "executor_category_group": "IPAccessLists",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/ip-access-lists/{ip_access_list_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "ip_access_list_id",
                "value": "",
                "description": "The ID for the corresponding IP access list to modify."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698838704846,
        "lastModifiedTime": 1698838704846,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The IP access list was successfully deleted.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "BAD_REQUEST - Request is invalid. INVALID_STATE - If one or more of the inputs to a given enpoint are not in a valid state for the action. RESOURCE_ALREADY_EXISTS - Operation was performed on a resource that already exists. QUOTA_EXCEEDED -",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST, INVALID_STATE, RESOURCE_ALREADY_EXISTS, QUOTA_EXCEEDED",
                "description": "BAD_REQUEST - Request is invalid. INVALID_STATE - If one or more of the inputs to a given enpoint are not in a valid state for the action. RESOURCE_ALREADY_EXISTS - Operation was performed on a resource that already exists. QUOTA_EXCEEDED -",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119614,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateaccesslist",
        "executor_version": "v2",
        "executor_display_name": "Update access list",
        "executor_description": "Updates an existing IP access list, specified by its ID.  A list can include allow lists and block lists. See the top of this file for a description of how the server treats allow lists and block lists at run time.  When updating an IP access list:  For all allow lists and block lists combined, the API supports a maximum of 1000 IP/CIDR values, where one CIDR counts as a single value. Attempts to exceed that number return error 400 with error_code value QUOTA_EXCEEDED. If the updated list would block the calling user's current IP, error 400 is returned with error_code value INVALID_STATE. It can take a few minutes for the changes to take effect. Note that your resulting IP access list has no effect until you enable the feature. See Workspaceconf/SetStatus.",
        "executor_category": "IPAccessLists",
        "executor_category_group": "IPAccessLists",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/ip-access-lists/{ip_access_list_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "ip_access_list_id",
                "value": "",
                "description": "The ID for the corresponding IP access list to modify."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "list_id": "430bbdbc-9d7f-4d06-a273-67ca4ba4ae4b",
                "label": "Office VPN",
                "list_type": "ALLOW",
                "ip_addresses": [
                    "192.168.100.0/22"
                ],
                "enabled": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698838611771,
        "lastModifiedTime": 1698838611771,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The IP access list was successfully updated.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "BAD_REQUEST - Request is invalid. INVALID_STATE - If one or more of the inputs to a given enpoint are not in a valid state for the action. RESOURCE_ALREADY_EXISTS - Operation was performed on a resource that already exists. QUOTA_EXCEEDED -",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST, INVALID_STATE, RESOURCE_ALREADY_EXISTS, QUOTA_EXCEEDED",
                "description": "BAD_REQUEST - Request is invalid. INVALID_STATE - If one or more of the inputs to a given enpoint are not in a valid state for the action. RESOURCE_ALREADY_EXISTS - Operation was performed on a resource that already exists. QUOTA_EXCEEDED -",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119609,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaccesslist",
        "executor_version": "v2",
        "executor_display_name": "Get access list",
        "executor_description": "Gets an IP access list, specified by its list ID.",
        "executor_category": "IPAccessLists",
        "executor_category_group": "IPAccessLists",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/ip-access-lists/{ip_access_list_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "ip_access_list_id",
                "value": "",
                "description": "The ID for the corresponding IP access list to modify."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698838266392,
        "lastModifiedTime": 1698838266392,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "An IP access list was successfully returned.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "ip_access_list": {
                        "list_id": "430bbdbc-9d7f-4d06-a273-67ca4ba4ae4b",
                        "label": "Office VPN",
                        "ip_addresses": [
                            "192.168.100.0/22"
                        ],
                        "address_count": 2,
                        "list_type": "ALLOW",
                        "created_at": 1580265020299,
                        "created_by": 202480738464078,
                        "updated_at": 1580265020299,
                        "updated_by": 202480738464089,
                        "enabled": true
                    }
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "BAD_REQUEST - Request is invalid. INVALID_STATE - If one or more of the inputs to a given enpoint are not in a valid state for the action. RESOURCE_ALREADY_EXISTS - Operation was performed on a resource that already exists. QUOTA_EXCEEDED -",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST, INVALID_STATE, RESOURCE_ALREADY_EXISTS, QUOTA_EXCEEDED",
                "description": "BAD_REQUEST - Request is invalid. INVALID_STATE - If one or more of the inputs to a given enpoint are not in a valid state for the action. RESOURCE_ALREADY_EXISTS - Operation was performed on a resource that already exists. QUOTA_EXCEEDED -",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119612,
        "executor_type": "THIRDPARTY",
        "executor_name": "replaceaccesslist",
        "executor_version": "v2",
        "executor_display_name": "Replace access list",
        "executor_description": "Replaces an IP access list, specified by its ID.  A list can include allow lists and block lists. See the top of this file for a description of how the server treats allow lists and block lists at run time. When replacing an IP access list:  For all allow lists and block lists combined, the API supports a maximum of 1000 IP/CIDR values, where one CIDR counts as a single value. Attempts to exceed that number return error 400 with error_code value QUOTA_EXCEEDED. If the resulting list would block the calling user's current IP, error 400 is returned with error_code value INVALID_STATE. It can take a few minutes for the changes to take effect. Note that your resulting IP access list has no effect until you enable the feature. See Workspaceconf/SetStatus.",
        "executor_category": "IPAccessLists",
        "executor_category_group": "IPAccessLists",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/ip-access-lists/{ip_access_list_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "ip_access_list_id",
                "value": "",
                "description": "The ID for the corresponding IP access list to modify."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "list_id": "430bbdbc-9d7f-4d06-a273-67ca4ba4ae4b",
                "label": "Office VPN",
                "list_type": "ALLOW",
                "ip_addresses": [
                    "192.168.100.0/22"
                ],
                "enabled": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698838446543,
        "lastModifiedTime": 1698838446543,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The IP access list was successfully replaced.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "BAD_REQUEST - Request is invalid. INVALID_STATE - If one or more of the inputs to a given enpoint are not in a valid state for the action. RESOURCE_ALREADY_EXISTS - Operation was performed on a resource that already exists. QUOTA_EXCEEDED -",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST, INVALID_STATE, RESOURCE_ALREADY_EXISTS, QUOTA_EXCEEDED",
                "description": "BAD_REQUEST - Request is invalid. INVALID_STATE - If one or more of the inputs to a given enpoint are not in a valid state for the action. RESOURCE_ALREADY_EXISTS - Operation was performed on a resource that already exists. QUOTA_EXCEEDED -",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119603,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaccesslists",
        "executor_version": "v2",
        "executor_display_name": "Get access lists",
        "executor_description": "Gets all IP access lists for the specified workspace.",
        "executor_category": "IPAccessLists",
        "executor_category_group": "IPAccessLists",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/ip-access-lists",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698837870824,
        "lastModifiedTime": 1698837870824,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "IP access lists were successfully returned.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "ip_access_lists": [
                        {
                            "list_id": "430bbdbc-9d7f-4d06-a273-67ca4ba4ae4b",
                            "label": "Office VPN",
                            "ip_addresses": [
                                "192.168.100.0/22"
                            ],
                            "address_count": 2,
                            "list_type": "ALLOW",
                            "created_at": 1580265020299,
                            "created_by": 202480738464078,
                            "updated_at": 1580265020299,
                            "updated_by": 202480738464089,
                            "enabled": true
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED",
                "description": "If a given user/entity is trying to use a feature which has been disabled.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119611,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrievethemostrecentlog",
        "executor_version": "v2",
        "executor_display_name": "Retrieve the most recent log lines associated with a given serving endpoint's served model\u2002",
        "executor_description": "Retrieves the service logs associated with the provided served model.",
        "executor_category": "Servingendpoints\u2002",
        "executor_category_group": "Servingendpoints",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/serving-endpoints/{name}/served-models/{served_model_name}/logs",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "The name of the serving endpoint that the served model belongs to. This field is required."
            },
            {
                "key": "served_model_name",
                "value": "",
                "description": "The name of the served model that logs will be retrieved for. This field is required."
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698838439204,
        "lastModifiedTime": 1698838439204,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "logs": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119606,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaservingendpoint",
        "executor_version": "v2",
        "executor_display_name": "Delete a serving endpoint\u2002",
        "executor_description": "Delete a serving endpoint\u2002",
        "executor_category": "Servingendpoints\u2002",
        "executor_category_group": "Servingendpoints",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/serving-endpoints/{name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "The name of the serving endpoint. This field is required."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698838099631,
        "lastModifiedTime": 1698838099631,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119598,
        "executor_type": "THIRDPARTY",
        "executor_name": "setservingendpointpermissions",
        "executor_version": "v2",
        "executor_display_name": "Set serving endpoint permissions\u2002",
        "executor_description": "Sets permissions on a serving endpoint. Serving endpoints can inherit permissions from their root object.",
        "executor_category": "Servingendpoints\u2002",
        "executor_category_group": "Servingendpoints",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/serving-endpoints/{serving_endpoint_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "serving_endpoint_id",
                "value": "",
                "description": "The serving endpoint for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_MANAGE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698837428639,
        "lastModifiedTime": 1698837428639,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119604,
        "executor_type": "THIRDPARTY",
        "executor_name": "createanewservingendpoint",
        "executor_version": "v2",
        "executor_display_name": "Create a new serving endpoint\u2002",
        "executor_description": "Create a new serving endpoint\u2002",
        "executor_category": "Servingendpoints\u2002",
        "executor_category_group": "Servingendpoints",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/serving-endpoints",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "config": {
                    "served_models": [
                        {
                            "name": "string",
                            "model_name": "string",
                            "model_version": "string",
                            "workload_size": "string",
                            "workload_type": "string",
                            "scale_to_zero_enabled": true,
                            "environment_vars": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "instance_profile_arn": "string"
                        }
                    ],
                    "traffic_config": {
                        "routes": [
                            {
                                "served_model_name": "string",
                                "traffic_percentage": 0
                            }
                        ]
                    }
                },
                "tags": [
                    {
                        "key": "string",
                        "value": "string"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698837918922,
        "lastModifiedTime": 1698837918922,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "creator": "string",
                    "creation_timestamp": 0,
                    "last_updated_timestamp": 0,
                    "state": {
                        "ready": "READY",
                        "config_update": "NOT_UPDATING"
                    },
                    "config": {
                        "served_models": [
                            {
                                "name": "string",
                                "model_name": "string",
                                "model_version": "string",
                                "workload_size": "string",
                                "workload_type": "string",
                                "scale_to_zero_enabled": true,
                                "environment_vars": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "instance_profile_arn": "string",
                                "state": {
                                    "deployment": "DEPLOYMENT_CREATING",
                                    "deployment_state_message": "string"
                                },
                                "creator": "string",
                                "creation_timestamp": 0
                            }
                        ],
                        "traffic_config": {
                            "routes": [
                                {
                                    "served_model_name": "string",
                                    "traffic_percentage": 0
                                }
                            ]
                        },
                        "config_version": 0
                    },
                    "pending_config": {
                        "served_models": [
                            {
                                "name": "string",
                                "model_name": "string",
                                "model_version": "string",
                                "workload_size": "string",
                                "workload_type": "string",
                                "scale_to_zero_enabled": true,
                                "environment_vars": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "instance_profile_arn": "string",
                                "state": {
                                    "deployment": "DEPLOYMENT_CREATING",
                                    "deployment_state_message": "string"
                                },
                                "creator": "string",
                                "creation_timestamp": 0
                            }
                        ],
                        "traffic_config": {
                            "routes": [
                                {
                                    "served_model_name": "string",
                                    "traffic_percentage": 0
                                }
                            ]
                        },
                        "config_version": 0,
                        "start_time": 0
                    },
                    "id": "string",
                    "permission_level": "CAN_MANAGE",
                    "tags": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119615,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrievethemetricsassociatedwithaservingendpoint",
        "executor_version": "v2",
        "executor_display_name": "Retrieve the metrics associated with a serving endpoint\u2002",
        "executor_description": "Retrieves the metrics associated with the provided serving endpoint in either Prometheus or OpenMetrics exposition format.",
        "executor_category": "Servingendpoints\u2002",
        "executor_category_group": "Servingendpoints",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://b2b.gateway.apiplatform.io/v2/retrievethemetricsassociatedwithaservingendpoint",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "The name of the serving endpoint to retrieve metrics for. This field is required."
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "apikey",
                "value": "",
                "description": ""
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": false,
        "creationTime": 1698838640916,
        "lastModifiedTime": 1698838640916,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "logs": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119605,
        "executor_type": "THIRDPARTY",
        "executor_name": "getasingleservingendpoint",
        "executor_version": "v2",
        "executor_display_name": "Get a single serving endpoint\u2002",
        "executor_description": "Retrieves the details for a single serving endpoint.",
        "executor_category": "Servingendpoints\u2002",
        "executor_category_group": "Servingendpoints",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/serving-endpoints/{name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "The name of the serving endpoint. This field is required."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698838022414,
        "lastModifiedTime": 1698838022414,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "creator": "string",
                    "creation_timestamp": 0,
                    "last_updated_timestamp": 0,
                    "state": {
                        "ready": "READY",
                        "config_update": "NOT_UPDATING"
                    },
                    "config": {
                        "served_models": [
                            {
                                "name": "string",
                                "model_name": "string",
                                "model_version": "string",
                                "workload_size": "string",
                                "workload_type": "string",
                                "scale_to_zero_enabled": true,
                                "environment_vars": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "instance_profile_arn": "string",
                                "state": {
                                    "deployment": "DEPLOYMENT_CREATING",
                                    "deployment_state_message": "string"
                                },
                                "creator": "string",
                                "creation_timestamp": 0
                            }
                        ],
                        "traffic_config": {
                            "routes": [
                                {
                                    "served_model_name": "string",
                                    "traffic_percentage": 0
                                }
                            ]
                        },
                        "config_version": 0
                    },
                    "pending_config": {
                        "served_models": [
                            {
                                "name": "string",
                                "model_name": "string",
                                "model_version": "string",
                                "workload_size": "string",
                                "workload_type": "string",
                                "scale_to_zero_enabled": true,
                                "environment_vars": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "instance_profile_arn": "string",
                                "state": {
                                    "deployment": "DEPLOYMENT_CREATING",
                                    "deployment_state_message": "string"
                                },
                                "creator": "string",
                                "creation_timestamp": 0
                            }
                        ],
                        "traffic_config": {
                            "routes": [
                                {
                                    "served_model_name": "string",
                                    "traffic_percentage": 0
                                }
                            ]
                        },
                        "config_version": 0,
                        "start_time": 0
                    },
                    "id": "string",
                    "permission_level": "CAN_MANAGE",
                    "tags": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119608,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateaservingendpointwithanewconfig",
        "executor_version": "v2",
        "executor_display_name": "Update a serving endpoint with a new config.\u2002",
        "executor_description": "Updates any combination of the serving endpoint's served models, the compute configuration of those served models, and the endpoint's traffic config. An endpoint that already has an update in progress can not be updated until the current update completes or fails.",
        "executor_category": "Servingendpoints\u2002",
        "executor_category_group": "Servingendpoints",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/serving-endpoints/{name}/config",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "The name of the serving endpoint to update. This field is required."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "served_models": [
                    {
                        "name": "string",
                        "model_name": "string",
                        "model_version": "string",
                        "workload_size": "string",
                        "workload_type": "string",
                        "scale_to_zero_enabled": true,
                        "environment_vars": {
                            "property1": "string",
                            "property2": "string"
                        },
                        "instance_profile_arn": "string"
                    }
                ],
                "traffic_config": {
                    "routes": [
                        {
                            "served_model_name": "string",
                            "traffic_percentage": 0
                        }
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698838230086,
        "lastModifiedTime": 1698838230086,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "creator": "string",
                    "creation_timestamp": 0,
                    "last_updated_timestamp": 0,
                    "state": {
                        "ready": "READY",
                        "config_update": "NOT_UPDATING"
                    },
                    "config": {
                        "served_models": [
                            {
                                "name": "string",
                                "model_name": "string",
                                "model_version": "string",
                                "workload_size": "string",
                                "workload_type": "string",
                                "scale_to_zero_enabled": true,
                                "environment_vars": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "instance_profile_arn": "string",
                                "state": {
                                    "deployment": "DEPLOYMENT_CREATING",
                                    "deployment_state_message": "string"
                                },
                                "creator": "string",
                                "creation_timestamp": 0
                            }
                        ],
                        "traffic_config": {
                            "routes": [
                                {
                                    "served_model_name": "string",
                                    "traffic_percentage": 0
                                }
                            ]
                        },
                        "config_version": 0
                    },
                    "pending_config": {
                        "served_models": [
                            {
                                "name": "string",
                                "model_name": "string",
                                "model_version": "string",
                                "workload_size": "string",
                                "workload_type": "string",
                                "scale_to_zero_enabled": true,
                                "environment_vars": {
                                    "property1": "string",
                                    "property2": "string"
                                },
                                "instance_profile_arn": "string",
                                "state": {
                                    "deployment": "DEPLOYMENT_CREATING",
                                    "deployment_state_message": "string"
                                },
                                "creator": "string",
                                "creation_timestamp": 0
                            }
                        ],
                        "traffic_config": {
                            "routes": [
                                {
                                    "served_model_name": "string",
                                    "traffic_percentage": 0
                                }
                            ]
                        },
                        "config_version": 0,
                        "start_time": 0
                    },
                    "id": "string",
                    "permission_level": "CAN_MANAGE",
                    "tags": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 409,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119610,
        "executor_type": "THIRDPARTY",
        "executor_name": "patchthetagsofaservingendpoint",
        "executor_version": "v2",
        "executor_display_name": "Patch the tags of a serving endpoint\u2002",
        "executor_description": "Used to batch add and delete tags from a serving endpoint with a single API call.",
        "executor_category": "Servingendpoints\u2002",
        "executor_category_group": "Servingendpoints",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/serving-endpoints/{name}/tags",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "The name of the serving endpoint who's tags to patch. This field is required."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "add_tags": [
                    {
                        "key": "string",
                        "value": "string"
                    }
                ],
                "delete_tags": [
                    "string"
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698838340580,
        "lastModifiedTime": 1698838340580,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "key": "string",
                        "value": "string"
                    }
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119601,
        "executor_type": "THIRDPARTY",
        "executor_name": "getservingendpointpermissionlevels",
        "executor_version": "v2",
        "executor_display_name": "Get serving endpoint permission levels\u2002",
        "executor_description": "Gets the permission levels that a user can have on an object.",
        "executor_category": "Servingendpoints\u2002",
        "executor_category_group": "Servingendpoints",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/serving-endpoints/{serving_endpoint_id}/permissionLevels",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "serving_endpoint_id",
                "value": "",
                "description": "The serving endpoint for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698837691681,
        "lastModifiedTime": 1698837691681,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "permission_levels": [
                        {
                            "permission_level": "CAN_MANAGE",
                            "description": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119602,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveallservingendpoints",
        "executor_version": "v2",
        "executor_display_name": "Retrieve all serving endpoints\u2002",
        "executor_description": "Retrieve all serving endpoints\u2002",
        "executor_category": "Servingendpoints\u2002",
        "executor_category_group": "Servingendpoints",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/serving-endpoints",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698837767622,
        "lastModifiedTime": 1698837767622,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "endpoints": [
                        {
                            "name": "string",
                            "creator": "string",
                            "creation_timestamp": 0,
                            "last_updated_timestamp": 0,
                            "state": {
                                "ready": "READY",
                                "config_update": "NOT_UPDATING"
                            },
                            "config": {
                                "served_models": [
                                    {
                                        "name": "string",
                                        "model_name": "string",
                                        "model_version": "string"
                                    }
                                ]
                            },
                            "tags": [
                                {
                                    "key": "string",
                                    "value": "string"
                                }
                            ],
                            "id": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119595,
        "executor_type": "THIRDPARTY",
        "executor_name": "getservingendpointpermissions",
        "executor_version": "v2",
        "executor_display_name": "Get serving endpoint permissions\u2002",
        "executor_description": "Gets the permissions of a serving endpoint. Serving endpoints can inherit permissions from their root object.",
        "executor_category": "Servingendpoints\u2002",
        "executor_category_group": "Servingendpoints",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/serving-endpoints/{serving_endpoint_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "serving_endpoint_id",
                "value": "",
                "description": "The serving endpoint for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698837240614,
        "lastModifiedTime": 1698837240614,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119600,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateservingendpointpermissions",
        "executor_version": "v2",
        "executor_display_name": "Update serving endpoint permissions\u2002",
        "executor_description": "Updates the permissions on a serving endpoint. Serving endpoints can inherit permissions from their root object.",
        "executor_category": "Servingendpoints\u2002",
        "executor_category_group": "Servingendpoints",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/serving-endpoints/{serving_endpoint_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "serving_endpoint_id",
                "value": "",
                "description": "The serving endpoint for which to get or manage permissions."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_MANAGE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698837604107,
        "lastModifiedTime": 1698837604107,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_MANAGE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "NOT_FOUND\t",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED\t",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119613,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrievethelogsassociatedwithbuilding",
        "executor_version": "v2",
        "executor_display_name": "Retrieve the logs associated with building the model's environment for a given serving endpoint's served model.\u2002",
        "executor_description": "Retrieves the build logs associated with the provided served model.",
        "executor_category": "Servingendpoints\u2002",
        "executor_category_group": "Servingendpoints",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/serving-endpoints/{name}/served-models/{served_model_name}/build-logs",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "The name of the serving endpoint that the served model belongs to. This field is required."
            },
            {
                "key": "served_model_name",
                "value": "",
                "description": "The name of the served model that build logs will be retrieved for. This field is required."
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698838517133,
        "lastModifiedTime": 1698838517133,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "logs": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR\t",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119618,
        "executor_type": "THIRDPARTY",
        "executor_name": "gettokenpermissions",
        "executor_version": "v2",
        "executor_display_name": "Get token permissions",
        "executor_description": "Gets the permissions of all tokens. Tokens can inherit permissions from their root object.",
        "executor_category": "Tokenmanagement",
        "executor_category_group": "Tokenmanagement",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/authorization/tokens",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698838884177,
        "lastModifiedTime": 1698838884177,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_USE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119622,
        "executor_type": "THIRDPARTY",
        "executor_name": "settokenpermissions",
        "executor_version": "v2",
        "executor_display_name": "Set token permissions",
        "executor_description": "Sets permissions on all tokens. Tokens can inherit permissions from their root object.",
        "executor_category": "Tokenmanagement",
        "executor_category_group": "Tokenmanagement",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/authorization/tokens",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_USE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698839086116,
        "lastModifiedTime": 1698839086116,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_USE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE\t",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119636,
        "executor_type": "THIRDPARTY",
        "executor_name": "gettokeninfo",
        "executor_version": "v2",
        "executor_display_name": "Get token info",
        "executor_description": "Gets information about a token, specified by its ID.",
        "executor_category": "Tokenmanagement",
        "executor_category_group": "Tokenmanagement",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/token-management/tokens/{token_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "token_id",
                "value": "",
                "description": "The ID of the token to get."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698839898035,
        "lastModifiedTime": 1698839898035,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Token with specified Token ID was successfully returned.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "token_id": "5684c955822ac792a51ae2aeb80190f13457bab3e2e2934c133a08b38454816c",
                    "creation_time": 1580265020299,
                    "expiry_time": 1580265020299,
                    "comment": "This is for the ABC department automation scripts.",
                    "created_by_id": 202480738464078,
                    "created_by_username": "jsmith@example.com",
                    "owner_id": 202480738464078
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119628,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatetokenpermissions",
        "executor_version": "v2",
        "executor_display_name": "Update token permissions",
        "executor_description": "Updates the permissions on all tokens. Tokens can inherit permissions from their root object.",
        "executor_category": "Tokenmanagement",
        "executor_category_group": "Tokenmanagement",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/authorization/tokens",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "access_control_list": [
                    {
                        "user_name": "string",
                        "group_name": "string",
                        "service_principal_name": "string",
                        "permission_level": "CAN_USE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698839477959,
        "lastModifiedTime": 1698839477959,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "object_id": "string",
                    "object_type": "string",
                    "access_control_list": [
                        {
                            "user_name": "string",
                            "group_name": "string",
                            "service_principal_name": "string",
                            "display_name": "string",
                            "all_permissions": [
                                {
                                    "permission_level": "CAN_USE",
                                    "inherited": true,
                                    "inherited_from_object": [
                                        "string"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST, INVALID_PARAMETER_VALUE\t",
                "description": "BAD_REQUEST - Request is invalid. INVALID_PARAMETER_VALUE - Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119630,
        "executor_type": "THIRDPARTY",
        "executor_name": "gettokenpermissionlevels",
        "executor_version": "v2",
        "executor_display_name": "Get token permission levels",
        "executor_description": "Gets the permission levels that a user can have on an object.",
        "executor_category": "Tokenmanagement",
        "executor_category_group": "Tokenmanagement",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/permissions/authorization/tokens/permissionLevels",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698839613650,
        "lastModifiedTime": 1698839613650,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "permission_levels": [
                        {
                            "permission_level": "CAN_USE",
                            "description": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled. RESOURCE_DOES_NOT_EXIST - Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119633,
        "executor_type": "THIRDPARTY",
        "executor_name": "listalltokens",
        "executor_version": "v2",
        "executor_display_name": "List all tokens",
        "executor_description": "Lists all tokens associated with the specified workspace or user.",
        "executor_category": "Tokenmanagement",
        "executor_category_group": "Tokenmanagement",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/token-management/tokens",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "created_by_id",
                "value": "",
                "description": "User ID of the user that created the token.",
                "req": false
            },
            {
                "key": "created_by_username",
                "value": "",
                "description": "Username of the user that created the token.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698839775611,
        "lastModifiedTime": 1698839775611,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Tokens were successfully returned.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "token_infos": [
                        {
                            "token_id": "5684c955822ac792a51ae2aeb80190f13457bab3e2e2934c133a08b38454816c",
                            "creation_time": 1580265020299,
                            "expiry_time": 1580265020299,
                            "comment": "This is for the ABC department automation scripts.",
                            "created_by_id": 202480738464078,
                            "created_by_username": "jsmith@example.com",
                            "owner_id": 202480738464078
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119638,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaToken",
        "executor_version": "v2",
        "executor_display_name": "Delete a token",
        "executor_description": "Deletes a token, specified by its ID.",
        "executor_category": "Tokenmanagement",
        "executor_category_group": "Tokenmanagement",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/token-management/tokens/{token_id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "token_id",
                "value": "",
                "description": "The ID of the token to get."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698840099759,
        "lastModifiedTime": 1698840099759,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The token was successfully deleted.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "token_id": "5684c955822ac792a51ae2aeb80190f13457bab3e2e2934c133a08b38454816c",
                    "creation_time": 1580265020299,
                    "expiry_time": 1580265020299,
                    "comment": "This is for the ABC department automation scripts.",
                    "created_by_id": 202480738464078,
                    "created_by_username": "jsmith@example.com",
                    "owner_id": 202480738464078
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119599,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatepermissions",
        "executor_version": "v2",
        "executor_display_name": "Update permissions",
        "executor_description": "Updates the permissions for a data share in the metastore. The caller must be a metastore admin or an owner of the share.  For new recipient grants, the user must also be the owner of the recipients. recipient revocations do not require additional privileges.",
        "executor_category": "Shares",
        "executor_category_group": "Shares",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/shares/{name}/permissions",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "The name of the share."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "changes": [
                    {
                        "principal": "string",
                        "add": [
                            "READ_PRIVATE_FILES"
                        ],
                        "remove": [
                            "READ_PRIVATE_FILES"
                        ]
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698837574672,
        "lastModifiedTime": 1698837574672,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The share permissions were successfully updated.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119521,
        "executor_type": "THIRDPARTY",
        "executor_name": "listshares",
        "executor_version": "v2",
        "executor_display_name": "List shares",
        "executor_description": "Gets an array of data object shares from the metastore. The caller must be a metastore admin or the owner of the share. There is no guarantee of a specific ordering of the elements in the array.",
        "executor_category": "Shares",
        "executor_category_group": "Shares",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/shares",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698831642749,
        "lastModifiedTime": 1698831642749,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The shares list was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "shares": [
                        {
                            "name": "string",
                            "owner": "string",
                            "comment": "string",
                            "objects": [
                                {
                                    "name": "string",
                                    "comment": "string",
                                    "shared_as": "string",
                                    "history_data_sharing_status": "ENABLED",
                                    "partitions": [
                                        {
                                            "values": [
                                                {
                                                    "name": "string",
                                                    "value": "string",
                                                    "recipient_property_key": "string",
                                                    "op": "EQUAL"
                                                }
                                            ]
                                        }
                                    ],
                                    "cdf_enabled": true,
                                    "start_version": 0,
                                    "data_object_type": "string",
                                    "added_at": 0,
                                    "added_by": "string",
                                    "status": "ACTIVE"
                                }
                            ],
                            "created_at": 0,
                            "created_by": "string",
                            "updated_at": 0,
                            "updated_by": "string"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119529,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaShare",
        "executor_version": "v2",
        "executor_display_name": "Get a share",
        "executor_description": "Gets a data object share from the metastore. The caller must be a metastore admin or the owner of the share.",
        "executor_category": "Shares",
        "executor_category_group": "Shares",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/shares/{name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "The name of the share."
            }
        ],
        "queryParams": [
            {
                "key": "include_shared_data",
                "value": "",
                "description": "Query for data to include in the share.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698832166372,
        "lastModifiedTime": 1698832166372,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The share was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "owner": "string",
                    "comment": "string",
                    "objects": [
                        {
                            "name": "string",
                            "comment": "string",
                            "shared_as": "string",
                            "history_data_sharing_status": "ENABLED",
                            "partitions": [
                                {
                                    "values": [
                                        {
                                            "name": "string",
                                            "value": "string",
                                            "recipient_property_key": "string",
                                            "op": "EQUAL"
                                        }
                                    ]
                                }
                            ],
                            "cdf_enabled": true,
                            "start_version": 0,
                            "data_object_type": "string",
                            "added_at": 0,
                            "added_by": "string",
                            "status": "ACTIVE"
                        }
                    ],
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119539,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateaShare",
        "executor_version": "v2",
        "executor_display_name": "Update a share",
        "executor_description": "Updates the share with the changes and data objects in the request. The caller must be the owner of the share or a metastore admin.  When the caller is a metastore admin, only the owner field can be updated.  In the case that the share name is changed, updateShare requires that the caller is both the share owner and a metastore admin.  For each table that is added through this method, the share owner must also have SELECT privilege on the table. This privilege must be maintained indefinitely for recipients to be able to access the table. Typically, you should use a group as the share owner.  Table removals through update do not require additional privileges.",
        "executor_category": "Shares",
        "executor_category_group": "Shares",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/shares/{name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "The name of the share."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "owner": "string",
                "comment": "string",
                "updates": [
                    {
                        "action": "ADD",
                        "data_object": {
                            "name": "string",
                            "comment": "string",
                            "shared_as": "string",
                            "history_data_sharing_status": "ENABLED",
                            "partitions": [
                                {
                                    "values": [
                                        {
                                            "name": "string",
                                            "value": "string",
                                            "recipient_property_key": "string",
                                            "op": "EQUAL"
                                        }
                                    ]
                                }
                            ],
                            "cdf_enabled": true,
                            "start_version": 0,
                            "status": "ACTIVE"
                        }
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698832673747,
        "lastModifiedTime": 1698832673747,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The share was successfully updated.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "owner": "string",
                    "comment": "string",
                    "objects": [
                        {
                            "name": "string",
                            "comment": "string",
                            "shared_as": "string",
                            "history_data_sharing_status": "ENABLED",
                            "partitions": [
                                {
                                    "values": [
                                        {
                                            "name": "string",
                                            "value": "string",
                                            "recipient_property_key": "string",
                                            "op": "EQUAL"
                                        }
                                    ]
                                }
                            ],
                            "cdf_enabled": true,
                            "start_version": 0,
                            "data_object_type": "string",
                            "added_at": 0,
                            "added_by": "string",
                            "status": "ACTIVE"
                        }
                    ],
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119543,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaShare",
        "executor_version": "v2",
        "executor_display_name": "Delete a share",
        "executor_description": "Deletes a data object share from the metastore. The caller must be an owner of the share.",
        "executor_category": "Shares",
        "executor_category_group": "Shares",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/shares/{name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "The name of the share."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698832812593,
        "lastModifiedTime": 1698832812594,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The share was successfully deleted.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "owner": "string",
                    "comment": "string",
                    "objects": [
                        {
                            "name": "string",
                            "comment": "string",
                            "shared_as": "string",
                            "history_data_sharing_status": "ENABLED",
                            "partitions": [
                                {
                                    "values": [
                                        {
                                            "name": "string",
                                            "value": "string",
                                            "recipient_property_key": "string",
                                            "op": "EQUAL"
                                        }
                                    ]
                                }
                            ],
                            "cdf_enabled": true,
                            "start_version": 0,
                            "data_object_type": "string",
                            "added_at": 0,
                            "added_by": "string",
                            "status": "ACTIVE"
                        }
                    ],
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119597,
        "executor_type": "THIRDPARTY",
        "executor_name": "getpermissions",
        "executor_version": "v2",
        "executor_display_name": "Get permissions",
        "executor_description": "Gets the permissions for a data share from the metastore. The caller must be a metastore admin or the owner of the share.",
        "executor_category": "Shares",
        "executor_category_group": "Shares",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/shares/{name}/permissions",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "The name of the share."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698837414109,
        "lastModifiedTime": 1698837414109,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The share permissions list was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "privilege_assignments": [
                        {
                            "principal": "string",
                            "privileges": [
                                "READ_PRIVATE_FILES"
                            ]
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119526,
        "executor_type": "THIRDPARTY",
        "executor_name": "createashare",
        "executor_version": "v2",
        "executor_display_name": "Create a share",
        "executor_description": "Creates a new share for data objects. Data objects can be added after creation with update. The caller must be a metastore admin or have the CREATE_SHARE privilege on the metastore.",
        "executor_category": "Shares",
        "executor_category_group": "Shares",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/shares",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "comment": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698831950581,
        "lastModifiedTime": 1698831950581,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The new share was successfully created.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "owner": "string",
                    "comment": "string",
                    "objects": [
                        {
                            "name": "string",
                            "comment": "string",
                            "shared_as": "string",
                            "history_data_sharing_status": "ENABLED",
                            "partitions": [
                                {
                                    "values": [
                                        {
                                            "name": "string",
                                            "value": "string",
                                            "recipient_property_key": "string",
                                            "op": "EQUAL"
                                        }
                                    ]
                                }
                            ],
                            "cdf_enabled": true,
                            "start_version": 0,
                            "data_object_type": "string",
                            "added_at": 0,
                            "added_by": "string",
                            "status": "ACTIVE"
                        }
                    ],
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119371,
        "executor_type": "THIRDPARTY",
        "executor_name": "createastoragecredential",
        "executor_version": "v2",
        "executor_display_name": "Create a storage credential",
        "executor_description": "Creates a new storage credential.  The request object must contain a DatabricksGcpServiceAccount.  The caller must be a metastore admin or have the CREATE_STORAGE_CREDENTIAL privilege on the metastore.",
        "executor_category": "StorageCredentials",
        "executor_category_group": "StorageCredentials",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/storage-credentials",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "comment": "string",
                "read_only": true,
                "databricks_gcp_service_account": {},
                "skip_validation": "false"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698754759720,
        "lastModifiedTime": 1698754759720,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The new storage credential was successfully created.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "databricks_gcp_service_account": {
                        "email": "string",
                        "credential_id": "string"
                    },
                    "comment": "string",
                    "read_only": true,
                    "owner": "string",
                    "id": "string",
                    "metastore_id": "string",
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string",
                    "used_for_managed_storage": true
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119378,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateaCredentials",
        "executor_version": "v2",
        "executor_display_name": "Update a credential",
        "executor_description": "Updates a storage credential on the metastore.  The caller must be the owner of the storage credential or a metastore admin. If the caller is a metastore admin, only the owner field can be changed.",
        "executor_category": "StorageCredentials",
        "executor_category_group": "StorageCredentials",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/storage-credentials/{name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "Name of the storage credential."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "comment": "string",
                "read_only": true,
                "owner": "string",
                "databricks_gcp_service_account": {},
                "skip_validation": "false",
                "force": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698755928608,
        "lastModifiedTime": 1698755928608,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The storage credential was successfully updated.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "databricks_gcp_service_account": {
                        "email": "string",
                        "credential_id": "string"
                    },
                    "comment": "string",
                    "read_only": true,
                    "owner": "string",
                    "id": "string",
                    "metastore_id": "string",
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string",
                    "used_for_managed_storage": true
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119376,
        "executor_type": "THIRDPARTY",
        "executor_name": "getacredential",
        "executor_version": "v2",
        "executor_display_name": "Get a credential",
        "executor_description": "Gets a storage credential from the metastore. The caller must be a metastore admin, the owner of the storage credential, or have some permission on the storage credential.",
        "executor_category": "StorageCredentials",
        "executor_category_group": "StorageCredentials",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/storage-credentials/{name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "Name of the storage credential."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698755206600,
        "lastModifiedTime": 1698755206600,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The storage credential was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "databricks_gcp_service_account": {
                        "email": "string",
                        "credential_id": "string"
                    },
                    "comment": "string",
                    "read_only": true,
                    "owner": "string",
                    "id": "string",
                    "metastore_id": "string",
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string",
                    "used_for_managed_storage": true
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119381,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaCredentials",
        "executor_version": "v2",
        "executor_display_name": "Delete a credential",
        "executor_description": "Deletes a storage credential from the metastore. The caller must be an owner of the storage credential.",
        "executor_category": "StorageCredentials",
        "executor_category_group": "StorageCredentials",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/storage-credentials/{name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": "Name of the storage credential."
            }
        ],
        "queryParams": [
            {
                "key": "force",
                "value": "",
                "description": "Force deletion even if there are dependent external locations or external tables.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698756199093,
        "lastModifiedTime": 1698756199093,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The storage credential was successfully deleted.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119382,
        "executor_type": "THIRDPARTY",
        "executor_name": "validateastoragecredential",
        "executor_version": "v2",
        "executor_display_name": "Validate a storage credential",
        "executor_description": "Validates a storage credential. At least one of external_location_name and url need to be provided. If only one of them is provided, it will be used for validation. And if both are provided, the url will be used for validation, and external_location_name will be ignored when checking overlapping urls.  Either the storage_credential_name or the cloud-specific credential must be provided.  The caller must be a metastore admin or the storage credential owner or have the CREATE_EXTERNAL_LOCATION privilege on the metastore and the storage credential.",
        "executor_category": "StorageCredentials",
        "executor_category_group": "StorageCredentials",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/validate-storage-credentials",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "force",
                "value": "",
                "description": "Force deletion even if there are dependent external locations or external tables.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "storage_credential_name": {},
                "databricks_gcp_service_account": {},
                "external_location_name": "string",
                "url": "string",
                "read_only": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698756371420,
        "lastModifiedTime": 1698756371420,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The storage credential validation operation completed successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "isDir": true,
                    "results": [
                        {
                            "operation": "LIST",
                            "result": "PASS",
                            "message": "string"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119368,
        "executor_type": "THIRDPARTY",
        "executor_name": "listCredentials",
        "executor_version": "v2",
        "executor_display_name": "List credentials",
        "executor_description": "Gets an array of storage credentials (as StorageCredentialInfo objects). The array is limited to only those storage credentials the caller has permission to access. If the caller is a metastore admin, all storage credentials will be retrieved. There is no guarantee of a specific ordering of the elements in the array.",
        "executor_category": "StorageCredentials",
        "executor_category_group": "StorageCredentials",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/storage-credentials",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698754538617,
        "lastModifiedTime": 1698754538617,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The storage credentials list was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "storage_credentials": [
                        {
                            "name": "string",
                            "databricks_gcp_service_account": {
                                "email": "string",
                                "credential_id": "string"
                            },
                            "comment": "string",
                            "read_only": true,
                            "owner": "string",
                            "id": "string",
                            "metastore_id": "string",
                            "created_at": 0,
                            "created_by": "string",
                            "updated_at": 0,
                            "updated_by": "string",
                            "used_for_managed_storage": true
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119473,
        "executor_type": "THIRDPARTY",
        "executor_name": "uninstalllibraries",
        "executor_version": "v2",
        "executor_display_name": "Uninstall libraries\u2002",
        "executor_description": "Set libraries to be uninstalled on a cluster. The libraries won't be uninstalled until the cluster is restarted. Uninstalling libraries that are not installed on the cluster will have no impact but is not an error.",
        "executor_category": "ManagedLibraries\u2002",
        "executor_category_group": "ManagedLibraries\u2002",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/libraries/uninstall",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "cluster_id": "string",
                "libraries": [
                    {
                        "jar": "string",
                        "egg": "string",
                        "pypi": {
                            "package": "string",
                            "repo": "string"
                        },
                        "maven": {
                            "coordinates": "string",
                            "repo": "string",
                            "exclusions": [
                                "string"
                            ]
                        },
                        "cran": {
                            "package": "string",
                            "repo": "string"
                        },
                        "whl": "string"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698825357777,
        "lastModifiedTime": 1698825357778,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119470,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSTatuS",
        "executor_version": "v2",
        "executor_display_name": "Get status\u2002",
        "executor_description": "Get the status of libraries on a cluster. A status will be available for all libraries installed on this cluster via the API or the libraries UI as well as libraries set to be installed on all clusters via the libraries UI. The order of returned libraries will be as follows.",
        "executor_category": "ManagedLibraries\u2002",
        "executor_category_group": "ManagedLibraries\u2002",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/libraries/cluster-status",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "cluster_id",
                "value": "",
                "description": "Unique identifier of the cluster whose status should be retrieved.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698825195967,
        "lastModifiedTime": 1698825195967,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "cluster_id": "string",
                    "library_statuses": [
                        {
                            "library": {
                                "jar": "string",
                                "egg": "string",
                                "pypi": {
                                    "package": "string",
                                    "repo": "string"
                                },
                                "maven": {
                                    "coordinates": "string",
                                    "repo": "string",
                                    "exclusions": [
                                        "string"
                                    ]
                                },
                                "cran": {
                                    "package": "string",
                                    "repo": "string"
                                },
                                "whl": "string"
                            },
                            "status": "PENDING",
                            "messages": [
                                "string"
                            ],
                            "is_library_for_all_clusters": true
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119472,
        "executor_type": "THIRDPARTY",
        "executor_name": "addalibrary",
        "executor_version": "v2",
        "executor_display_name": "Add a library\u2002",
        "executor_description": "Add libraries to be installed on a cluster. The installation is asynchronous; it happens in the background after the completion of this request.",
        "executor_category": "ManagedLibraries\u2002",
        "executor_category_group": "ManagedLibraries\u2002",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/libraries/install",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "cluster_id": "string",
                "libraries": [
                    {
                        "jar": "string",
                        "egg": "string",
                        "pypi": {
                            "package": "string",
                            "repo": "string"
                        },
                        "maven": {
                            "coordinates": "string",
                            "repo": "string",
                            "exclusions": [
                                "string"
                            ]
                        },
                        "cran": {
                            "package": "string",
                            "repo": "string"
                        },
                        "whl": "string"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698825296761,
        "lastModifiedTime": 1698825296761,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119466,
        "executor_type": "THIRDPARTY",
        "executor_name": "getallstatuses",
        "executor_version": "v2",
        "executor_display_name": "Get all statuses\u2002",
        "executor_description": "Get the status of all libraries on all clusters. A status will be available for all libraries installed on this cluster via the API or the libraries UI as well as libraries set to be installed on all clusters via the libraries UI.",
        "executor_category": "ManagedLibraries\u2002",
        "executor_category_group": "ManagedLibraries\u2002",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/libraries/all-cluster-statuses",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698825027220,
        "lastModifiedTime": 1698825027220,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "statuses": [
                        {
                            "cluster_id": "string",
                            "library_statuses": [
                                {
                                    "library": {
                                        "jar": "string",
                                        "egg": "string",
                                        "pypi": {
                                            "package": "string",
                                            "repo": "string"
                                        },
                                        "maven": {
                                            "coordinates": "string",
                                            "repo": "string",
                                            "exclusions": [
                                                "string"
                                            ]
                                        },
                                        "cran": {
                                            "package": "string",
                                            "repo": "string"
                                        },
                                        "whl": "string"
                                    },
                                    "status": "PENDING",
                                    "messages": [
                                        "string"
                                    ],
                                    "is_library_for_all_clusters": true
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119497,
        "executor_type": "THIRDPARTY",
        "executor_name": "getashareactivationURL",
        "executor_version": "v2",
        "executor_display_name": "Get a share activation URL",
        "executor_description": "Gets an activation URL for a share.",
        "executor_category": "RecipientActivation",
        "executor_category_group": "RecipientActivation",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/public/data_sharing_activation_info/{activation_url}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "activation_url",
                "value": "",
                "description": "The one time activation url. It also accepts activation token."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698827114829,
        "lastModifiedTime": 1698827114829,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The activation URL fetch was successful.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "shareCredentialsVersion": 0,
                    "bearerToken": "string",
                    "endpoint": "string",
                    "expirationTime": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119492,
        "executor_type": "THIRDPARTY",
        "executor_name": "getanaccesstoken",
        "executor_version": "v2",
        "executor_display_name": "Get an access token",
        "executor_description": "Retrieve access token with an activation url. This is a public API without any authentication.",
        "executor_category": "RecipientActivation",
        "executor_category_group": "RecipientActivation",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/public/data_sharing_activation/{activation_url}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "activation_url",
                "value": "",
                "description": "The one time activation url. It also accepts activation token."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698826687324,
        "lastModifiedTime": 1698826687324,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The access token was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "shareCredentialsVersion": 0,
                    "bearerToken": "string",
                    "endpoint": "string",
                    "expirationTime": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119490,
        "executor_type": "THIRDPARTY",
        "executor_name": "getEffectivePermissions",
        "executor_version": "v2",
        "executor_display_name": "Get effective permissions",
        "executor_description": "Gets the effective permissions for a securable.",
        "executor_category": "Grants",
        "executor_category_group": "Grants",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/effective-permissions/{securable_type}/{full_name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "securable_type",
                "value": "",
                "description": "Enum: \"catalog\" \"schema\" \"table\" \"storage_credential\" \"external_location\" \"function\" \"share\" \"provider\" \"recipient\" \"metastore\" \"pipeline\" \"volume\" \"connection\" Type of securable."
            },
            {
                "key": "full_name",
                "value": "",
                "description": "Full name of securable."
            }
        ],
        "queryParams": [
            {
                "key": "principal",
                "value": "",
                "description": "If provided, only the effective permissions for the specified principal (user or group) are returned.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698826537125,
        "lastModifiedTime": 1698826537125,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The effective permissions list for securable was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "privilege_assignments": [
                        {
                            "principal": "string",
                            "privileges": [
                                {
                                    "privilege": "READ_PRIVATE_FILES",
                                    "inherited_from_type": "catalog",
                                    "inherited_from_name": "string"
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119489,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatePermissions",
        "executor_version": "v2",
        "executor_display_name": "Update permissions",
        "executor_description": "Updates the permissions for a securable.",
        "executor_category": "Grants",
        "executor_category_group": "Grants",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/permissions/{securable_type}/{full_name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "securable_type",
                "value": "",
                "description": "Enum: \"catalog\" \"schema\" \"table\" \"storage_credential\" \"external_location\" \"function\" \"share\" \"provider\" \"recipient\" \"metastore\" \"pipeline\" \"volume\" \"connection\" Type of securable."
            },
            {
                "key": "full_name",
                "value": "",
                "description": "Full name of securable."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "changes": [
                    {
                        "principal": "string",
                        "add": [
                            "READ_PRIVATE_FILES"
                        ],
                        "remove": [
                            "READ_PRIVATE_FILES"
                        ]
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698826429392,
        "lastModifiedTime": 1698826429392,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The permissions list for securable was successfully updated.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "privilege_assignments": [
                        {
                            "principal": "string",
                            "privileges": [
                                "READ_PRIVATE_FILES"
                            ]
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119487,
        "executor_type": "THIRDPARTY",
        "executor_name": "getPermissions",
        "executor_version": "v2",
        "executor_display_name": "Get permissions",
        "executor_description": "Gets the permissions for a securable.",
        "executor_category": "Grants",
        "executor_category_group": "Grants",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/permissions/{securable_type}/{full_name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "securable_type",
                "value": "",
                "description": "Enum: \"catalog\" \"schema\" \"table\" \"storage_credential\" \"external_location\" \"function\" \"share\" \"provider\" \"recipient\" \"metastore\" \"pipeline\" \"volume\" \"connection\" Type of securable."
            },
            {
                "key": "full_name",
                "value": "",
                "description": "Full name of securable."
            }
        ],
        "queryParams": [
            {
                "key": "principal",
                "value": "",
                "description": "If provided, only the permissions for the specified principal (user or group) are returned.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698826192046,
        "lastModifiedTime": 1698826192046,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The permissions list for securable was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "privilege_assignments": [
                        {
                            "principal": "string",
                            "privileges": [
                                "READ_PRIVATE_FILES"
                            ]
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119363,
        "executor_type": "THIRDPARTY",
        "executor_name": "listQueries",
        "executor_version": "v2",
        "executor_display_name": "List Queries",
        "executor_description": "List the history of queries through SQL warehouses.",
        "executor_category": "QueryHistory",
        "executor_category_group": "QueryHistory",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/sql/history/queries",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "filter_by",
                "value": "",
                "description": "A filter to limit query history results. This field is optional.",
                "req": false
            },
            {
                "key": "max_results",
                "value": "",
                "description": "<= 1000 Default: 100 Limit the number of results returned in one page. The default is 100.",
                "req": false
            },
            {
                "key": "page_token",
                "value": "",
                "description": "A token that can be used to get the next page of results.",
                "req": false
            },
            {
                "key": "include_metrics",
                "value": "",
                "description": "Whether to include metrics about query.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698754102775,
        "lastModifiedTime": 1698754102775,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "OK",
                "description": "Queries listed successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "next_page_token": "string",
                    "has_next_page": true,
                    "res": [
                        {
                            "query_id": "f996b47c-6672-4763-9668-d491a82099f5",
                            "status": "QUEUED",
                            "query_text": "SELECT * FROM customers;",
                            "query_start_time_ms": 1595357086200,
                            "execution_end_time_ms": 1595357086373,
                            "query_end_time_ms": 1595357087200,
                            "user_id": 1234567890123456,
                            "user_name": "user@example.com",
                            "spark_ui_url": "https://<databricks-instance>/sparkui/1234-567890-test123/driver-1234567890123456789/SQL/execution/?id=0",
                            "endpoint_id": "098765321fedcba",
                            "warehouse_id": "098765321fedcba",
                            "lookup_key": "CiQ3OGFkYmQ2Zi00ZGUwLTRlNTYtOTkxZC05Y2I5OTNlZTViYjcQ4N6r/dguGhBlM2VlYTVlOTExMjFkMzNjILPbh9OK6uoL",
                            "error_message": "Table or view not found: customers; line 1 pos 14;\n'GlobalLimit 1000\n+- 'LocalLimit 1000\n   +- 'Project [*]\n      +- 'UnresolvedRelation [sales]\n",
                            "rows_produced": 100,
                            "canSubscribeToLiveQuery": true,
                            "metrics": {
                                "total_time_ms": 0,
                                "read_bytes": 0,
                                "rows_produced_count": 0,
                                "compilation_time_ms": 0,
                                "execution_time_ms": 0,
                                "read_remote_bytes": 0,
                                "write_remote_bytes": 0,
                                "read_cache_bytes": 0,
                                "spill_to_disk_bytes": 0,
                                "task_total_time_ms": 0,
                                "read_files_count": 0,
                                "read_partitions_count": 0,
                                "photon_total_time_ms": 0,
                                "rows_read_count": 0,
                                "result_fetch_time_ms": 0,
                                "network_sent_bytes": 0,
                                "result_from_cache": true,
                                "pruned_bytes": 0,
                                "pruned_files_count": 0,
                                "provisioning_queue_start_timestamp": 0,
                                "overloading_queue_start_timestamp": 0,
                                "query_compilation_start_timestamp": 0,
                                "metadata_time_ms": 0,
                                "planning_time_ms": 0,
                                "query_execution_time_ms": 0,
                                "planning_phases": [
                                    {}
                                ]
                            },
                            "is_final": true,
                            "channel_used": {
                                "name": "CHANNEL_NAME_PREVIEW",
                                "dbsql_version": "string"
                            },
                            "duration": 0,
                            "executed_as_user_id": 0,
                            "executed_as_user_name": "string",
                            "plans_state": "IGNORED_SMALL_DURATION",
                            "statement_type": "OTHER"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INVALID_PARAMETER_VALUE",
                "description": "Supplied value for a parameter was invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "NOT_FOUND",
                "description": "Operation was performed on a resource that does not exist.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "REQUEST_LIMIT_EXCEEDED",
                "description": "Request is rejected due to throttling.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 499,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "CANCELLED",
                "description": "Operation was canceled by the caller.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 503,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "TEMPORARILY_UNAVAILABLE",
                "description": "Service is currently unavailable.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119421,
        "executor_type": "THIRDPARTY",
        "executor_name": "listtablesummaries",
        "executor_version": "v2",
        "executor_display_name": "List table summaries",
        "executor_description": "Gets an array of summaries for tables for a schema and catalog within the metastore. The table summaries returned are either:  summaries for all tables (within the current metastore and parent catalog and schema), when the user is a metastore admin, or: summaries for all tables and schemas (within the current metastore and parent catalog) for which the user has ownership or the SELECT privilege on the table and ownership or USE_SCHEMA privilege on the schema, provided that the user also has ownership or the USE_CATALOG privilege on the parent catalog. There is no guarantee of a specific ordering of the elements in the array.",
        "executor_category": "Tables",
        "executor_category_group": "Tables",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/table-summaries",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "catalog_name",
                "value": "",
                "description": "Name of parent catalog for tables of interest.",
                "req": false
            },
            {
                "key": "schema_name_pattern",
                "value": "",
                "description": "A sql LIKE pattern (% and _) for schema names. All schemas will be returned if not set or empty.",
                "req": false
            },
            {
                "key": "table_name_pattern",
                "value": "",
                "description": "A sql LIKE pattern (% and _) for table names. All tables will be returned if not set or empty.",
                "req": false
            },
            {
                "key": "max_results",
                "value": "",
                "description": "Maximum number of tables to return (page length). Defaults to 10000.",
                "req": false
            },
            {
                "key": "page_token",
                "value": "",
                "description": "Opaque token to send for the next page of results (pagination).",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698816790062,
        "lastModifiedTime": 1698816790062,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The table summaries list was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119425,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaTable",
        "executor_version": "v2",
        "executor_display_name": "Get a table",
        "executor_description": "Gets a table from the metastore for a specific catalog and schema. The caller must be a metastore admin, be the owner of the table and have the USE_CATALOG privilege on the parent catalog and the USE_SCHEMA privilege on the parent schema, or be the owner of the table and have the SELECT privilege on it as well.",
        "executor_category": "Tables",
        "executor_category_group": "Tables",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/tables/{full_name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": "Full name of the table."
            },
            {
                "key": "full_name",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "include_delta_metadata",
                "value": "",
                "description": "Whether delta metadata should be included in the response.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698817429699,
        "lastModifiedTime": 1698817429699,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The table was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "catalog_name": "string",
                    "schema_name": "string",
                    "table_type": "MANAGED",
                    "data_source_format": "DELTA",
                    "columns": [
                        {
                            "name": "string",
                            "type_text": "string",
                            "type_json": "string",
                            "type_name": "BOOLEAN",
                            "type_precision": 0,
                            "type_scale": 0,
                            "type_interval_type": "string",
                            "position": 0,
                            "comment": "string",
                            "nullable": "true",
                            "partition_index": 0,
                            "mask": {
                                "function_name": "string",
                                "using_column_names": [
                                    "string"
                                ]
                            }
                        }
                    ],
                    "storage_location": "string",
                    "view_definition": "string",
                    "view_dependencies": [
                        {
                            "table": {
                                "table_full_name": "string"
                            },
                            "function": {
                                "function_full_name": "string"
                            }
                        }
                    ],
                    "sql_path": "string",
                    "owner": "string",
                    "comment": "string",
                    "properties": {
                        "property1": "string",
                        "property2": "string"
                    },
                    "storage_credential_name": "string",
                    "table_constraints": {
                        "table_constraints": [
                            {
                                "primary_key_constraint": {
                                    "name": "string",
                                    "child_columns": [
                                        "string"
                                    ]
                                },
                                "foreign_key_constraint": {
                                    "name": "string",
                                    "child_columns": [
                                        "string"
                                    ],
                                    "parent_table": "string",
                                    "parent_columns": [
                                        "string"
                                    ]
                                },
                                "named_table_constraint": {
                                    "name": "string"
                                }
                            }
                        ]
                    },
                    "row_filter": {
                        "name": "string",
                        "input_column_names": [
                            "string"
                        ]
                    },
                    "metastore_id": "string",
                    "full_name": "string",
                    "data_access_configuration_id": "string",
                    "created_at": 0,
                    "created_by": "string",
                    "updated_at": 0,
                    "updated_by": "string",
                    "deleted_at": 0,
                    "table_id": "string",
                    "delta_runtime_properties_kvpairs": {
                        "delta_runtime_properties": {
                            "property1": "string",
                            "property2": "string"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119424,
        "executor_type": "THIRDPARTY",
        "executor_name": "listtables",
        "executor_version": "v2",
        "executor_display_name": "List tables",
        "executor_description": "Gets an array of all tables for the current metastore under the parent catalog and schema. The caller must be a metastore admin or an owner of (or have the SELECT privilege on) the table. For the latter case, the caller must also be the owner or have the USE_CATALOG privilege on the parent catalog and the USE_SCHEMA privilege on the parent schema. There is no guarantee of a specific ordering of the elements in the array.",
        "executor_category": "Tables",
        "executor_category_group": "Tables",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/tables",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "catalog_name",
                "value": "",
                "description": "Name of parent catalog for tables of interest.",
                "req": false
            },
            {
                "key": "schema_name",
                "value": "",
                "description": "Parent schema of tables.",
                "req": false
            },
            {
                "key": "max_results",
                "value": "",
                "description": "Maximum number of tables to return (page length). If not set, all accessible tables in the schema are returned. If set to:  greater than 0, page length is the minimum of this value and a server configured value. equal to 0, page length is set to a server configured value. lesser than 0, invalid parameter error.",
                "req": false
            },
            {
                "key": "page_token",
                "value": "",
                "description": "Opaque token to send for the next page of results (pagination).",
                "req": false
            },
            {
                "key": "include_delta_metadata",
                "value": "",
                "description": "Whether delta metadata should be included in the response.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698817219184,
        "lastModifiedTime": 1698817219184,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The tables list was successfully retrieved.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "tables": [
                        {
                            "name": "string",
                            "catalog_name": "string",
                            "schema_name": "string",
                            "table_type": "MANAGED",
                            "data_source_format": "DELTA",
                            "columns": [
                                {
                                    "name": "string",
                                    "type_text": "string",
                                    "type_json": "string",
                                    "type_name": "BOOLEAN",
                                    "type_precision": 0,
                                    "type_scale": 0,
                                    "type_interval_type": "string",
                                    "position": 0,
                                    "comment": "string",
                                    "nullable": "true",
                                    "partition_index": 0,
                                    "mask": {
                                        "function_name": "string",
                                        "using_column_names": [
                                            "string"
                                        ]
                                    }
                                }
                            ],
                            "storage_location": "string",
                            "view_definition": "string",
                            "view_dependencies": [
                                {
                                    "table": {
                                        "table_full_name": "string"
                                    },
                                    "function": {
                                        "function_full_name": "string"
                                    }
                                }
                            ],
                            "sql_path": "string",
                            "owner": "string",
                            "comment": "string",
                            "properties": {
                                "property1": "string",
                                "property2": "string"
                            },
                            "storage_credential_name": "string",
                            "table_constraints": {
                                "table_constraints": [
                                    {
                                        "primary_key_constraint": {
                                            "name": "string",
                                            "child_columns": [
                                                "string"
                                            ]
                                        },
                                        "foreign_key_constraint": {
                                            "name": "string",
                                            "child_columns": [
                                                "string"
                                            ],
                                            "parent_table": "string",
                                            "parent_columns": [
                                                "string"
                                            ]
                                        },
                                        "named_table_constraint": {
                                            "name": "string"
                                        }
                                    }
                                ]
                            },
                            "row_filter": {
                                "name": "string",
                                "input_column_names": [
                                    "string"
                                ]
                            },
                            "metastore_id": "string",
                            "full_name": "string",
                            "data_access_configuration_id": "string",
                            "created_at": 0,
                            "created_by": "string",
                            "updated_at": 0,
                            "updated_by": "string",
                            "deleted_at": 0,
                            "table_id": "string",
                            "delta_runtime_properties_kvpairs": {
                                "delta_runtime_properties": {
                                    "property1": "string",
                                    "property2": "string"
                                }
                            }
                        }
                    ],
                    "next_page_token": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119427,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteaTable",
        "executor_version": "v2",
        "executor_display_name": "Delete a table",
        "executor_description": "Deletes a table from the specified parent catalog and schema. The caller must be the owner of the parent catalog, have the USE_CATALOG privilege on the parent catalog and be the owner of the parent schema, or be the owner of the table and have the USE_CATALOG privilege on the parent catalog and the USE_SCHEMA privilege on the parent schema.",
        "executor_category": "Tables",
        "executor_category_group": "Tables",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/tables/{full_name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "full_name",
                "value": "",
                "description": "Full name of the table."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698818055118,
        "lastModifiedTime": 1698818580697,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "The table was successfully deleted.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119647,
        "executor_type": "THIRDPARTY",
        "executor_name": "enabledisablefeatures",
        "executor_version": "v2",
        "executor_display_name": "Enable/disable features",
        "executor_description": "Sets the configuration status for a workspace, including enabling or disabling it.",
        "executor_category": "WorkspaceConf",
        "executor_category_group": "WorkspaceConf",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/workspace-conf",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "property1": "string",
                "property2": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698840953498,
        "lastModifiedTime": 1698840953498,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED",
                "description": "If a given user/entity is trying to use a feature which has been disabled.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "PATCH",
                "message": "NO CONTENT",
                "description": "Enabling or disabling feature was successful.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119646,
        "executor_type": "THIRDPARTY",
        "executor_name": "checkconfigurationstatus",
        "executor_version": "v2",
        "executor_display_name": "Check configuration status",
        "executor_description": "Gets the configuration status for a workspace.",
        "executor_category": "WorkspaceConf",
        "executor_category_group": "WorkspaceConf",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/workspace-conf",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698840769829,
        "lastModifiedTime": 1698841046006,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "Status was returned successfully.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "property1": "string",
                    "property2": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "PERMISSION_DENIED",
                "description": "Caller does not have permission to execute the specified operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "FEATURE_DISABLED",
                "description": "If a given user/entity is trying to use a feature which has been disabled.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119625,
        "executor_type": "THIRDPARTY",
        "executor_name": "getaruleset",
        "executor_version": "v2",
        "executor_display_name": "Get a rule set\u2002",
        "executor_description": "Get a rule set by its name. A rule set is always attached to a resource and contains a list of access rules on the said resource. Currently only a default rule set for each resource is supported.",
        "executor_category": "AccountAccessControlProxy",
        "executor_category_group": "AccountAccessControlProxy",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/accounts/access-control/rule-sets",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "name",
                "value": "",
                "description": "The ruleset name associated with the request.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698839322486,
        "lastModifiedTime": 1698839322486,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Serving endpoint was queried successfully and returned predictions.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "grant_rules": [
                        {
                            "principals": [
                                "string"
                            ],
                            "role": "string"
                        }
                    ],
                    "etag": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119623,
        "executor_type": "THIRDPARTY",
        "executor_name": "getassignablerolesforaresource",
        "executor_version": "v2",
        "executor_display_name": "Get assignable roles for a resource\u2002",
        "executor_description": "Gets all the roles that can be granted on an account-level resource. A role is grantable if the rule set on the resource can contain an access rule of the role.",
        "executor_category": "AccountAccessControlProxy",
        "executor_category_group": "AccountAccessControlProxy",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/accounts/access-control/assignable-roles",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "resource",
                "value": "",
                "description": "The resource name for which assignable roles will be listed.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698839244051,
        "lastModifiedTime": 1698839244051,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Serving endpoint was queried successfully and returned predictions.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "roles": [
                        {
                            "name": "roles/servicePrincipal.manager"
                        },
                        {
                            "name": "roles/servicePrincipal.user"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119627,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatearuleset",
        "executor_version": "v2",
        "executor_display_name": "Update a rule set\u2002",
        "executor_description": "Replace the rules of a rule set. First, use a GET rule set request to read the current version of the rule set before modifying it. This pattern helps prevent conflicts between concurrent updates.  The rule set to update to.",
        "executor_category": "AccountAccessControlProxy",
        "executor_category_group": "AccountAccessControlProxy",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/accounts/access-control/rule-sets",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "string",
                "rule_set": {
                    "name": "string",
                    "grant_rules": [
                        {
                            "principals": [
                                "string"
                            ],
                            "role": "string"
                        }
                    ],
                    "etag": "string"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1698839428265,
        "lastModifiedTime": 1698839637724,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Serving endpoint was queried successfully and returned predictions.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "string",
                    "grant_rules": [
                        {
                            "principals": [
                                "string"
                            ],
                            "role": "string"
                        }
                    ],
                    "etag": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 119343,
        "executor_type": "THIRDPARTY",
        "executor_name": "getListOfSqlWarehouses",
        "executor_version": "v2",
        "executor_display_name": "Get a list of SQL warehouses",
        "executor_description": "Retrieves a full list of SQL warehouses available in this workspace. All fields that appear in this API response are enumerated for clarity. However, you need only a SQL warehouse's id to create new queries against it.",
        "executor_category": "DataSources\u2002",
        "executor_category_group": "DataSources\u2002",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/sql/data_sources",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698751438445,
        "lastModifiedTime": 1698751438445,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": "0c205e24-5db2-4940-adb1-fb13c7ce960b",
                        "name": "string",
                        "type": "string",
                        "warehouse_id": "string",
                        "syntax": "string",
                        "paused": 0,
                        "pause_reason": "string",
                        "supports_auto_limit": true,
                        "view_only": true
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "INTERNAL_ERROR",
                "description": "Internal error.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error_code": "Error code",
                    "message": "Human-readable error message that describes the cause of the error."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119432,
        "executor_type": "THIRDPARTY",
        "executor_name": "getsecurableworkspacebindings",
        "executor_version": "v2",
        "executor_display_name": "Get securable workspace bindings",
        "executor_description": "Gets workspace bindings of the securable. The caller must be a metastore admin or an owner of the securable.",
        "executor_category": "WorkspaceBindings",
        "executor_category_group": "WorkspaceBindings",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/bindings/{securable_type}/{securable_name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "securable_type",
                "value": "",
                "description": "The type of the securable."
            },
            {
                "key": "securable_name",
                "value": "",
                "description": "The name of the securable."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698819476430,
        "lastModifiedTime": 1698819476430,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "A list of workspace IDs that are bound to the securable.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "bindings": [
                        {
                            "workspace_id": 0,
                            "binding_type": "BINDING_TYPE_READ_WRITE"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119447,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatesecurableworkspacebindings",
        "executor_version": "v2",
        "executor_display_name": "Update securable workspace bindings",
        "executor_description": "Updates workspace bindings of the securable. The caller must be a metastore admin or an owner of the securable.",
        "executor_category": "WorkspaceBindings",
        "executor_category_group": "WorkspaceBindings",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PATCH",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/bindings/{securable_type}/{securable_name}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "securable_type",
                "value": "",
                "description": "The type of the securable."
            },
            {
                "key": "securable_name",
                "value": "",
                "description": "The name of the securable."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "add": [
                    {
                        "workspace_id": 0,
                        "binding_type": "BINDING_TYPE_READ_WRITE"
                    }
                ],
                "remove": [
                    {
                        "workspace_id": 0,
                        "binding_type": "BINDING_TYPE_READ_WRITE"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698822854555,
        "lastModifiedTime": 1698822854555,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "A list of workspace bindings that are bound to the securable.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "bindings": [
                        {
                            "workspace_id": 0,
                            "binding_type": "BINDING_TYPE_READ_WRITE"
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119631,
        "executor_type": "THIRDPARTY",
        "executor_name": "getcurrentuserinfo",
        "executor_version": "v2",
        "executor_display_name": "Get current user info\u2002",
        "executor_description": "Get details about the current method caller's identity.",
        "executor_category": "CurrentUser",
        "executor_category_group": "CurrentUser",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/preview/scim/v2/Me",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698839651439,
        "lastModifiedTime": 1698839651439,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Serving endpoint was queried successfully and returned predictions.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "UNAUTHORIZED",
                "description": "The request does not have valid authentication credentials for the operation.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "INTERNAL_SERVER_ERROR",
                "description": "Internal",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "BAD_REQUEST",
                "description": "Request is invalid.",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119444,
        "executor_type": "THIRDPARTY",
        "executor_name": "setAnArtifactAllowlist",
        "executor_version": "v2",
        "executor_display_name": "Set an artifact allowlist",
        "executor_description": "Get the artifact allowlist of a certain artifact type. The caller must be a metastore admin or have the MANAGE ALLOWLIST privilege on the metastore.",
        "executor_category": "ArtifactAllowlists",
        "executor_category_group": "ArtifactAllowlists",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/artifact-allowlists/{artifact_type}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "artifact_type",
                "value": "",
                "description": "Enum: \"INIT_SCRIPT\" \"LIBRARY_JAR\" \"LIBRARY_MAVEN\" The artifact type of the allowlist."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "artifact_matchers": [
                    {
                        "artifact": "string",
                        "match_type": "PREFIX_MATCH"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698822273575,
        "lastModifiedTime": 1698822273575,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": "The artifact allowlist of a certain artifact type was updated",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "artifact_matchers": [
                        {
                            "artifact": "string",
                            "match_type": "PREFIX_MATCH"
                        }
                    ],
                    "metastore_id": "string",
                    "created_by": "string",
                    "created_at": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119443,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAnArtifactAllowlist",
        "executor_version": "v2",
        "executor_display_name": "Get an artifact allowlist",
        "executor_description": "Get the artifact allowlist of a certain artifact type. The caller must be a metastore admin or have the MANAGE ALLOWLIST privilege on the metastore.",
        "executor_category": "ArtifactAllowlists",
        "executor_category_group": "ArtifactAllowlists",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.1/unity-catalog/artifact-allowlists/{artifact_type}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "artifact_type",
                "value": "",
                "description": "Enum: \"INIT_SCRIPT\" \"LIBRARY_JAR\" \"LIBRARY_MAVEN\" The artifact type of the allowlist."
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "bearer_token",
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698822153750,
        "lastModifiedTime": 1698822153750,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "artifact_matchers": [
                        {
                            "artifact": "string",
                            "match_type": "PREFIX_MATCH"
                        }
                    ],
                    "metastore_id": "string",
                    "created_by": "string",
                    "created_at": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119644,
        "executor_type": "THIRDPARTY",
        "executor_name": "listtokens",
        "executor_version": "v2",
        "executor_display_name": "List tokens\u2002",
        "executor_description": "Lists all the valid tokens for a user-workspace pair.",
        "executor_category": "Token",
        "executor_category_group": "Token",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/token/list",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698840508498,
        "lastModifiedTime": 1698840508498,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "token_infos": [
                        {
                            "token_id": "5684c955822ac792a51ae2aeb80190f13457bab3e2e2934c133a08b38454816c",
                            "creation_time": 1580265020299,
                            "expiry_time": 1580265020299,
                            "comment": "This is for the ABC department automation scripts.",
                            "created_by_id": 202480738464078,
                            "created_by_username": "jsmith@example.com",
                            "owner_id": 202480738464078
                        }
                    ]
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119640,
        "executor_type": "THIRDPARTY",
        "executor_name": "createausertoken",
        "executor_version": "v2",
        "executor_display_name": "Create a user token",
        "executor_description": "Creates and returns a token for a user. If this call is made through token authentication, it creates a token with the same client ID as the authenticated token. If the user's token quota is exceeded, this call returns an error QUOTA_EXCEEDED.",
        "executor_category": "Token",
        "executor_category_group": "Token",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/token/create",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "lifetime_seconds": 0,
                "comment": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698840289138,
        "lastModifiedTime": 1698840289138,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "token_value": "string",
                    "token_info": {
                        "token_id": "string",
                        "creation_time": 0,
                        "expiry_time": 0,
                        "comment": "string"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119643,
        "executor_type": "THIRDPARTY",
        "executor_name": "postRevokeToken",
        "executor_version": "v2",
        "executor_display_name": "Revoke token",
        "executor_description": "Revokes an access token.  If a token with the specified ID is not valid, this call returns an error RESOURCE_DOES_NOT_EXIST.",
        "executor_category": "Token",
        "executor_category_group": "Token",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/api/2.0/token/delete",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "token_id": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698840429647,
        "lastModifiedTime": 1698840429647,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 119621,
        "executor_type": "THIRDPARTY",
        "executor_name": "queryaservingendpointwithprovidedmodelinput",
        "executor_version": "v2",
        "executor_display_name": "Query a serving endpoint with provided model input.\u2002",
        "executor_description": "Query a serving endpoint with provided model input.\u2002",
        "executor_category": "Servingendpoints",
        "executor_category_group": "Servingendpoints",
        "service_provider": "databricksgcp",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://{DATABRICKS_HOST}/serving-endpoints/{name}/invocations",
        "dataroot": null,
        "pathParams": [
            {
                "key": "DATABRICKS_HOST",
                "value": "",
                "description": ""
            },
            {
                "key": "name",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "dataframe_split": {
                    "index": [
                        0,
                        1
                    ],
                    "columns": [
                        "sepal length (cm)",
                        "sepal width (cm)",
                        "petal length (cm)",
                        "petal width (cm)"
                    ],
                    "data": [
                        [
                            5.1,
                            3.5,
                            1.4,
                            0.2
                        ],
                        [
                            4.9,
                            3,
                            1.4,
                            0.2
                        ]
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1698839010885,
        "lastModifiedTime": 1698839010885,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Serving endpoint was queried successfully and returned predictions.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "predictions": [
                        {}
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    }
]