[
    {
        "id": 91169,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveuniquetaxIDs",
        "executor_version": "v1",
        "executor_display_name": "Retrieve unique tax IDs",
        "executor_description": "Retrieve a list of taxes using a search string (along with their respective rates, wage bases, credit limits, and more).",
        "executor_category": "Symmetrytaxenginewebapi",
        "executor_category_group": "Symmetrytaxenginewebapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://ste-staging.symmetry.com/ste-hosted/v2/taxIdList",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683056735963,
        "lastModifiedTime": 1683056735963,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "TaxIDListResponse": {
                        "taxItem": [
                            {
                                "wageBase": 0,
                                "stateAbbreviation": "FED",
                                "stateName": "Federal Tax",
                                "stateCode": "00",
                                "taxLimitPeriod": "None",
                                "isEmployerTax": false,
                                "creditLimit": 0,
                                "uniqueTaxID": "00-000-0000-FIT-000",
                                "credit": 0,
                                "isResident": true,
                                "taxEffectiveDate": "1900-01-01",
                                "taxInstallationDate": "1900-01-01",
                                "jurisdictionData": [],
                                "rate": 0,
                                "description": "Federal Income Tax",
                                "taxLimit": 0
                            }
                        ],
                        "errorStatus": {
                            "errorCode": 0,
                            "errorMessage": "No error"
                        },
                        "transactionStamp": {
                            "schemaVersion": "v2",
                            "calcDateTime": "2023-01-06T18:14:32Z",
                            "transactionType": "TaxIDList",
                            "totalTransactions": 1,
                            "failedTransactions": 0,
                            "steVersion": "2023-R1d"
                        }
                    }
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "https://ste-staging.symmetry.com/ste-hosted/v2/taxIdList",
                    "message": "The API key was not provided or is invalid",
                    "timestamp": "2023-01-06T17:34:16.998",
                    "status": 401
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "status code",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " Not Found response",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91166,
        "executor_type": "THIRDPARTY",
        "executor_name": "calculateagrossuppayment",
        "executor_version": "v1",
        "executor_display_name": "Calculate a gross-up payment",
        "executor_description": "Compute the gross wages required for desired net pay amount.",
        "executor_category": "Symmetrytaxenginewebapi",
        "executor_category_group": "Symmetrytaxenginewebapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://ste-staging.symmetry.com/ste-hosted/v2/grossUp",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683056132719,
        "lastModifiedTime": 1683056132719,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "GrossUpResponse": {
                        "targetNetPay": 1000,
                        "grossUpCalc": 1282.05,
                        "payCalc": {
                            "taxCalculation": [
                                {
                                    "subjectWagesYTD": 0,
                                    "subjectWages": 0,
                                    "description": "Federal Income Tax",
                                    "excessWagesYTD": 0,
                                    "subjectWagesQTD": 0,
                                    "grossSubjectWages": 0,
                                    "excessWagesCTD": 0,
                                    "rate": 0,
                                    "subjectWagesCTD": 0,
                                    "grossWages": 0,
                                    "isResident": true,
                                    "wageType": "Regular",
                                    "wageBase": 0,
                                    "locationCode": "00-000-0000",
                                    "excessWagesQTD": 0,
                                    "isUnemploymentTax": false,
                                    "taxAmount": 0,
                                    "uniqueTaxID": "00-000-0000-FIT-000"
                                },
                                {
                                    "subjectWagesYTD": 0,
                                    "subjectWages": 1282.05,
                                    "description": "Federal Income Tax",
                                    "excessWagesYTD": 0,
                                    "subjectWagesQTD": 0,
                                    "grossSubjectWages": 1282.05,
                                    "excessWagesCTD": 0,
                                    "rate": 0,
                                    "subjectWagesCTD": 0,
                                    "grossWages": 1282.05,
                                    "isResident": true,
                                    "wageType": "Supplemental",
                                    "wageBase": 0,
                                    "locationCode": "00-000-0000",
                                    "excessWagesQTD": 0,
                                    "isUnemploymentTax": false,
                                    "taxAmount": 282.05,
                                    "uniqueTaxID": "00-000-0000-FIT-000"
                                }
                            ],
                            "errorStatus": {
                                "errorCode": 0,
                                "errorMessage": "No Error"
                            }
                        },
                        "transactionStamp": {
                            "totalTransactions": 1,
                            "steVersion": "2023-R1d",
                            "transactionType": "GrossUp",
                            "schemaVersion": "v2",
                            "failedTransactions": 0,
                            "calcDateTime": "2023-01-06T18:30:28Z"
                        },
                        "errorStatus": {
                            "errorCode": 0,
                            "errorMessage": "No error"
                        }
                    }
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "https://ste-staging.symmetry.com/ste-hosted/v2/grossUp",
                    "message": "The API key was not provided or is invalid",
                    "timestamp": "2023-01-06T18:31:20.480",
                    "status": 401
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "status code",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " Not Found response",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91173,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveAPIschema",
        "executor_version": "v1",
        "executor_display_name": "Retrieve API schema",
        "executor_description": "Retrieve the schema required by the STE Web API.",
        "executor_category": "Symmetrytaxenginewebapi",
        "executor_category_group": "Symmetrytaxenginewebapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://ste-staging.symmetry.com/ste-hosted/v2/getSchema",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "type",
                "value": "",
                "description": "Whether to return the API schema in JSON or XML format. JSON is the preferred format.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683058271397,
        "lastModifiedTime": 1683058271397,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "https://ste.symmetry.com/ste-hosted/v2/getSchema",
                    "message": "The API key was not provided or is invalid",
                    "timestamp": "2023-01-06T18:33:25.732",
                    "status": 401
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " Not Found response",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91170,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveuniqueparametersforspecifictaxes",
        "executor_version": "v1",
        "executor_display_name": "Retrieve unique parameters for specific taxes",
        "executor_description": "Retrieve list of unique miscellanous parameters needed to compute specified taxes. Please note that this information is also returned by the /taxIdList and /setTaxList endpoints.",
        "executor_category": "Symmetrytaxenginewebapi",
        "executor_category_group": "Symmetrytaxenginewebapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://ste-staging.symmetry.com/ste-hosted/v1/jurisdictionData",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683056921104,
        "lastModifiedTime": 1683056921104,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "TaxIDListResponse": {
                        "taxItem": [
                            {
                                "wageBase": 0,
                                "stateAbbreviation": "FED",
                                "stateName": "Federal Tax",
                                "stateCode": "00",
                                "taxLimitPeriod": "None",
                                "isEmployerTax": false,
                                "creditLimit": 0,
                                "uniqueTaxID": "00-000-0000-FIT-000",
                                "credit": 0,
                                "isResident": true,
                                "taxEffectiveDate": "1900-01-01",
                                "taxInstallationDate": "1900-01-01",
                                "jurisdictionData": [],
                                "rate": 0,
                                "description": "Federal Income Tax",
                                "taxLimit": 0
                            }
                        ],
                        "errorStatus": {
                            "errorCode": 0,
                            "errorMessage": "No error"
                        },
                        "transactionStamp": {
                            "schemaVersion": "v2",
                            "calcDateTime": "2023-01-06T18:14:32Z",
                            "transactionType": "TaxIDList",
                            "totalTransactions": 1,
                            "failedTransactions": 0,
                            "steVersion": "2023-R1d"
                        }
                    }
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "JurisdictionDataResponse": {
                        "jurisdictionCollection": [
                            {
                                "jurisdictionData": [
                                    {
                                        "uniqueTaxID": "00-000-0000-FIT-000",
                                        "description": "Total Allowances",
                                        "parameterName": "TOTALALLOWANCES",
                                        "dataType": "Integer",
                                        "stateAbbreviation": "FED",
                                        "helpText": "The total number of allowances.",
                                        "regexType": "SingleValue",
                                        "certificateLineNo": "",
                                        "regex": "^([0-9]+)$",
                                        "defaultValue": "0",
                                        "regexDescription": "The total number of allowances.",
                                        "isOptional": true,
                                        "stateCode": "00"
                                    }
                                ]
                            }
                        ],
                        "errorStatus": {
                            "errorMessage": "No error",
                            "errorCode": 0
                        },
                        "transactionStamp": {
                            "transactionType": "JurisdictionData",
                            "steVersion": "2023-R1d",
                            "totalTransactions": 1,
                            "failedTransactions": 0,
                            "calcDateTime": "2023-01-06T17:36:13Z",
                            "schemaVersion": "v1"
                        }
                    }
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "status code",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " Not Found response",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91165,
        "executor_type": "THIRDPARTY",
        "executor_name": "computegrosstonettaxwithholding",
        "executor_version": "v1",
        "executor_display_name": "Compute gross-to-net tax withholding",
        "executor_description": "Compute payroll taxes based on an employee's gross wages, benefit contributions, and imputed income.",
        "executor_category": "Symmetrytaxenginewebapi",
        "executor_category_group": "Symmetrytaxenginewebapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://ste-staging.symmetry.com/ste-hosted/v1/payCalc",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683055929475,
        "lastModifiedTime": 1683055929475,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "https://ste-staging.symmetry.com/ste-hosted/v1/payCalc",
                    "message": "The API key was not provided or is invalid",
                    "timestamp": "2023-01-06T18:31:48.716",
                    "status": 401
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Unauthorized"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "status code",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " Not Found response",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91168,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrievepotentiallyapplicabletaxesforalocation",
        "executor_version": "v1",
        "executor_display_name": "Retrieve potentially applicable taxes for a location",
        "executor_description": "Determine potentially applicable taxes to be computed based on a submitted location code.",
        "executor_category": "Symmetrytaxenginewebapi",
        "executor_category_group": "Symmetrytaxenginewebapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://ste-staging.symmetry.com/ste-hosted/v2/setTaxList",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683056545107,
        "lastModifiedTime": 1683056545107,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "SetTaxListResponse": {
                        "transactionStamp": {
                            "totalTransactions": 1,
                            "calcDateTime": "2020-07-30T17:54:15Z",
                            "failedTransactions": 0,
                            "transactionType": "SetTaxList",
                            "schemaVersion": "v2",
                            "steVersion": "2020-R9"
                        },
                        "errorStatus": {
                            "errorMessage": "No error",
                            "errorCode": 0
                        },
                        "taxItem": [
                            {
                                "stateAbbreviation": "OH",
                                "taxLimit": 0,
                                "stateName": "Ohio",
                                "description": "Ohio State Unemployment Tax",
                                "taxLimitPeriod": "None",
                                "creditLimit": 0,
                                "isEmployerTax": true,
                                "taxInstallationDate": "2019-11-11",
                                "isResident": true,
                                "taxEffectiveDate": "2020-01-01",
                                "stateCode": "39",
                                "rate": 0,
                                "uniqueTaxID": "39-000-0000-ER_SUTA-000",
                                "wageBase": 9000,
                                "credit": 0
                            },
                            {
                                "stateAbbreviation": "OH",
                                "stateName": "Ohio",
                                "taxLimit": 0,
                                "taxLimitPeriod": "None",
                                "isEmployerTax": false,
                                "jurisdictionData": [
                                    {
                                        "parameterName": "TOTALALLOWANCES",
                                        "certificateLineNo": "Form IT 4, Line 4",
                                        "isOptional": false,
                                        "regexDescription": "The total number of allowances.",
                                        "dataType": "Integer",
                                        "defaultValue": "0",
                                        "description": "Total Allowances",
                                        "helpText": "The total number of allowances.",
                                        "taxEffectiveDate": "1900-01-01",
                                        "stateCode": "39",
                                        "regexType": "SingleValue",
                                        "uniqueTaxID": "39-000-0000-SIT-000",
                                        "regex": "^([0-9]+)$",
                                        "stateAbbreviation": "OH"
                                    }
                                ],
                                "creditLimit": 0,
                                "uniqueTaxID": "39-000-0000-SIT-000",
                                "description": "Ohio State Tax",
                                "taxEffectiveDate": "1900-01-01",
                                "taxInstallationDate": "1900-01-01",
                                "stateCode": "39",
                                "rate": 0,
                                "isResident": true,
                                "wageBase": 0,
                                "credit": 0
                            },
                            {
                                "isEmployerTax": false,
                                "taxLimitPeriod": "None",
                                "cityName": "Eastlake",
                                "taxInstallationDate": "1900-01-01",
                                "taxEffectiveDate": "1900-01-01",
                                "cityCode": "1064593",
                                "taxLimit": 0,
                                "creditLimit": 2,
                                "wageBase": 0,
                                "description": "Eastlake City Tax",
                                "stateAbbreviation": "OH",
                                "stateName": "Ohio",
                                "stateCode": "39",
                                "rate": 0.02,
                                "uniqueTaxID": "39-000-1064593-CITY-000",
                                "isResident": true,
                                "credit": 100
                            }
                        ]
                    }
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "https://ste-staging.symmetry.com/ste-hosted/v2/setTaxList",
                    "message": "The API key was not provided or is invalid",
                    "timestamp": "2023-01-06T17:34:01.348",
                    "status": 401
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "status code",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " Not Found response",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91167,
        "executor_type": "THIRDPARTY",
        "executor_name": "translateanaddresstoalocationcode",
        "executor_version": "v1",
        "executor_display_name": "Translate an address to a location code",
        "executor_description": "Determine a location code based on a submitted home or work address. Location codes are used by the Symmetry Tax Engine to identify which state, county, and jurisdiction boundaries contain a given address.",
        "executor_category": "Symmetrytaxenginewebapi",
        "executor_category_group": "Symmetrytaxenginewebapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://ste-staging.symmetry.com/ste-hosted/v1/locationCode",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683056324537,
        "lastModifiedTime": 1683056324537,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "LocationCodeResponse": {
                        "locationCodeInfo": {
                            "addressNormalized": "string",
                            "cityCode": "string",
                            "cityName": "string",
                            "countyCode": "string",
                            "countyName": "string",
                            "faultcode": "string",
                            "faultstring": "string",
                            "httpStatusCode": 200,
                            "isGeocoded": true,
                            "latitude": "string",
                            "longitude": "string",
                            "municipalityCode": "string",
                            "municipalityName": "string",
                            "psdCode": "string",
                            "psdRate": "string",
                            "schoolCode": "string",
                            "schoolName": "string",
                            "stateAbbreviation": "string",
                            "stateCode": "string",
                            "stateName": "string",
                            "transitDistrictCode": "string",
                            "transitDistrictName": "string",
                            "zipcode": "string"
                        },
                        "resultCodes": [
                            {
                                "resultCode": "string",
                                "resultMessage": "string"
                            }
                        ],
                        "errorStatus": {
                            "errorMessage": "No error",
                            "errorCode": 0
                        },
                        "transactionStamp": {
                            "transactionType": "LocationCode",
                            "failedTransactions": 0,
                            "schemaVersion": "v1",
                            "calcDateTime": "2023-01-06T18:20:05Z",
                            "steVersion": "2023-R1d",
                            "totalTransactions": 1
                        }
                    }
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "https://ste-staging.symmetry.com/ste-hosted/v1/locationCode",
                    "message": "The API key was not provided or is invalid",
                    "timestamp": "2023-01-06T17:27:58.145",
                    "status": 401
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "status code",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " Not Found response",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91172,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveaccountinformation",
        "executor_version": "v1",
        "executor_display_name": "Retrieve account information",
        "executor_description": "Returns account information and transaction count between two dates (passed as parameters in a GET request).",
        "executor_category": "Symmetrytaxenginewebapi",
        "executor_category_group": "Symmetrytaxenginewebapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://ste-staging.symmetry.com/ste-hosted/accountInfo",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "startDate",
                "value": "",
                "description": "The start date for collecting account info and transaction counts. If not set, defaults to the date of the first transaction. Should be in YYYY-MM-DD format.  2021-01-01",
                "req": false
            },
            {
                "key": "endDate",
                "value": "",
                "description": "The end date for collecting account info and transaction counts. If not set, defaults to today's date. Should be in YYYY-MM-DD format.  2021-12-31",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683057739250,
        "lastModifiedTime": 1683057739250,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "AccountInfoResponse": {
                        "productName": "STE : STE Hosted Service",
                        "customerName": "Example Company Inc",
                        "expirationDate": "2030-01-01T00:00:00Z",
                        "steCalculations": 123456,
                        "transactionStamp": {
                            "calcDateTime": "2020-01-01T00:00:00Z",
                            "steVersion": "2020-R1",
                            "schemaVersion": "v1",
                            "totalTransactions": 1,
                            "failedTransactions": 0,
                            "transactionType": "AccountInfo"
                        },
                        "errorStatus": {
                            "errorCode": 0,
                            "errorMessage": "No Error"
                        }
                    }
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "https://ste.symmetry.com/ste-hosted/accountInfo",
                    "message": "The API key was not provided or is invalid",
                    "timestamp": "2023-01-06T18:32:25.227",
                    "status": 401
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " Not Found response",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91171,
        "executor_type": "THIRDPARTY",
        "executor_name": "checktaxabilityofbenefitcontributions",
        "executor_version": "v1",
        "executor_display_name": "Check taxability of benefit contributions",
        "executor_description": "Retrieve the taxability status of different benefit contributions by employees and employers. This is purely informational and is not required to run before computing payroll calculations.",
        "executor_category": "Symmetrytaxenginewebapi",
        "executor_category_group": "Symmetrytaxenginewebapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://ste-staging.symmetry.com/ste-hosted/v1/benefitStatus",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683057466905,
        "lastModifiedTime": 1683057466905,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "BenefitStatusResponse": {
                        "benefitItem": [
                            {
                                "uniqueTaxID": "00-000-0000-FIT-000",
                                "is125Pretax": true,
                                "isHSAPretax": true,
                                "isFSAPretax": true,
                                "isFSADCPretax": true,
                                "is401KPretax": true,
                                "is403BPretax": true,
                                "is457Pretax": true,
                                "isRoth401KPretax": false,
                                "isRoth403BPretax": false,
                                "isRoth457Pretax": false,
                                "isSimpleIRAPretax": true,
                                "is125EmployerContribution": false,
                                "isFSAEmployerContribution": false,
                                "isFSADCEmployerContribution": false,
                                "isHSAEmployerContribution": false,
                                "is401KEmployerContribution": false,
                                "is403BEmployerContribution": false,
                                "is457EmployerContribution": false,
                                "isRoth401KEmployerContribution": false,
                                "isRoth403BEmployerContribution": false,
                                "isRoth457EmployerContribution": false,
                                "isSimpleIRAEmployerContribution": false
                            }
                        ],
                        "errorStatus": {
                            "errorMessage": "No error",
                            "errorCode": 0
                        },
                        "transactionStamp": {
                            "steVersion": "2023-R1d",
                            "schemaVersion": "v1",
                            "calcDateTime": "2023-01-06T18:10:32Z",
                            "transactionType": "BenefitStatus",
                            "failedTransactions": 0,
                            "totalTransactions": 1
                        }
                    }
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "https://ste-staging.symmetry.com/ste-hosted/v1/benefitStatus",
                    "message": "The API key was not provided or is invalid",
                    "timestamp": "2023-01-06T18:13:04.796",
                    "status": 401
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "status code",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " Not Found response",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91176,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveaccountinformationapi",
        "executor_version": "v1",
        "executor_display_name": "Retrieve account information",
        "executor_description": "Returns account information and transaction count between two dates (passed as a POST request).",
        "executor_category": "Symmetrytaxenginewebapi",
        "executor_category_group": "Symmetrytaxenginewebapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://ste-staging.symmetry.com/ste-hosted/v1/accountInfo",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683058701184,
        "lastModifiedTime": 1683058701184,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "AccountInfoResponse": {
                        "productName": "STE : STE Hosted Service",
                        "customerName": "Example Company Inc",
                        "expirationDate": "2030-01-01T00:00:00Z",
                        "steCalculations": 123456,
                        "transactionStamp": {
                            "calcDateTime": "2020-01-01T00:00:00Z",
                            "steVersion": "2020-R1",
                            "schemaVersion": "v1",
                            "totalTransactions": 1,
                            "failedTransactions": 0,
                            "transactionType": "AccountInfo"
                        },
                        "errorStatus": {
                            "errorCode": 0,
                            "errorMessage": "No Error"
                        }
                    }
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "https://ste-staging.symmetry.com/ste-hosted/v1/accountInfo",
                    "message": "The API key was not provided or is invalid",
                    "timestamp": "2023-01-06T18:32:52.527",
                    "status": 401
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " Not Found response",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91222,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveMinimumWageRatesbyUniqueID",
        "executor_version": "v1",
        "executor_display_name": "Retrieve Minimum Wage Rates by Unique ID",
        "executor_description": "Return minimum wage rates by minimum wage unique IDs.",
        "executor_category": "Symmetrypayrollpointapi",
        "executor_category_group": "Symmetrypayrollpointapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api-staging.symmetry.com/prp/v1/minimumwage/id",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "effectiveDate",
                "value": "",
                "description": "Return minimum wages rates for the specified effective date. Must be set in YYYY-MM-DD format. Required when updatedSince is not set; cannot be set when updatedSince is also set.  2023-01-01",
                "req": false
            },
            {
                "key": "updatedSince",
                "value": "",
                "description": "Return minimum wages rates that have changed since a given date. Must be set in YYYY-MM-DD format. The date of the request in YYYY-MM-DD format. Required when effectiveDate is not set; cannot be set when effectiveDate is also set.",
                "req": false
            },
            {
                "key": "mwUid",
                "value": "",
                "description": "The search string for minimum wage unique IDs. Use * in the search string as a wildcard for parts of the ID.  06-*",
                "req": false
            },
            {
                "key": "pageNumber",
                "value": "",
                "description": "Limit the returned results by setting pageNumber and pageSize. 0 indicates the first page.  0",
                "req": false
            },
            {
                "key": "pageSize",
                "value": "",
                "description": "Limit the returned results by setting pageNumber and pageSize. Set pageSize to -0 to return all results in a single API call.  10",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683063041979,
        "lastModifiedTime": 1683063041979,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "ratesPage": {
                        "content": [
                            {
                                "mw_uid": "06-3-000277483-REG-000-002",
                                "id": 1591,
                                "authority_id": 554,
                                "state_code": 6,
                                "state": "California",
                                "authority_code": 277483,
                                "authority": "Campbell",
                                "authority_type": "City",
                                "authority_type_code": 3,
                                "rate": "13.00",
                                "effective_date": "2020-01-01",
                                "major_type": "REG",
                                "industry_type": "",
                                "industry_type_code": 0,
                                "minor_type": "26 Employees Or More",
                                "minor_type_code": 2,
                                "details": "26 employees or more",
                                "note": "",
                                "updated": "2020-07-07 17:16:03"
                            }
                        ],
                        "pageable": {
                            "sort": {
                                "unsorted": true,
                                "sorted": false,
                                "empty": true
                            },
                            "offset": 0,
                            "pageNumber": 0,
                            "pageSize": 1,
                            "unpaged": false,
                            "paged": true
                        },
                        "last": false,
                        "totalPages": 2,
                        "totalElements": 2,
                        "sort": {
                            "unsorted": true,
                            "sorted": false,
                            "empty": true
                        },
                        "size": 1,
                        "number": 0,
                        "first": true,
                        "numberOfElements": 1,
                        "empty": false
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "timestamp": "2022-04-07T16:17:11.188+0000",
                    "status": 400,
                    "error": "Bad Request",
                    "message": "Required String parameter 'mwUid' is not present",
                    "path": "/prp/v1/minimumwage/id"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91231,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveAccountInformation",
        "executor_version": "v1",
        "executor_display_name": "Retrieve Account Information",
        "executor_description": "Return account information and usage data within a specified date range",
        "executor_category": "Symmetrypayrollpointapi",
        "executor_category_group": "Symmetrypayrollpointapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api-staging.symmetry.com/prp/v1/accountInfo",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "startDate",
                "value": "",
                "description": "The start date for collecting account info and transaction counts. If not set, defaults to the date of the first transaction. Should be in YYYY-MM-DD format.  2022-01-01",
                "req": false
            },
            {
                "key": "endDate",
                "value": "",
                "description": "The end date for collecting account info and transaction counts. If not set, defaults to today's date. Should be in YYYY-MM-DD format.  2022-12-31",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683064050762,
        "lastModifiedTime": 1683064050762,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91228,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveMinimumWageRatesbyLocation",
        "executor_version": "v1",
        "executor_display_name": "Retrieve Minimum Wage Rates by Location",
        "executor_description": "Return minimum wage rates based on an address.",
        "executor_category": "Symmetrypayrollpointapi",
        "executor_category_group": "Symmetrypayrollpointapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api-staging.symmetry.com/prp/v1/minimumwage/location",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "streetAddress",
                "value": "",
                "description": "1 The first line of the street address (civic number and street name). Required if latitude and longitude are not set.  14350 N 87th St",
                "req": false
            },
            {
                "key": "streetAddress",
                "value": "",
                "description": "2 The second line of the street address, if applicable (e.g., apartment, floor, unit number, or other address designation).  Ste 310",
                "req": false
            },
            {
                "key": "city",
                "value": "",
                "description": "The city of the physical address. Required if latitude and longitude are not set.  Scottsdale",
                "req": false
            },
            {
                "key": "state",
                "value": "",
                "description": "The state of the physical address. Can be the full state name or the two-letter state abbreviation. Required if latitude and longitude are not set.  AZ",
                "req": false
            },
            {
                "key": "zipCode",
                "value": "",
                "description": "The ZIP code of the address. Must be exactly 5 or exactly 9 digits. Required if latitude and longitude are not set.  85260",
                "req": false
            },
            {
                "key": "effectiveDate",
                "value": "",
                "description": "The effective date of the request in YYYY-MM-DD format.  2021-01-01",
                "req": false
            },
            {
                "key": "latitude",
                "value": "",
                "description": "The latitude of the location. Optional; if set, latitude and longitude will be used instead of the address.",
                "req": false
            },
            {
                "key": "longitude",
                "value": "",
                "description": "The longitude of the location. Optional; if set, latitude and longitude will be used instead of the address.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683063768855,
        "lastModifiedTime": 1683063768855,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91217,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveTaxes",
        "executor_version": "v1",
        "executor_display_name": "Retrieve Taxes",
        "executor_description": "Determine potentially applicable taxes for an employee based on their home and work address.",
        "executor_category": "Symmetrypayrollpointapi",
        "executor_category_group": "Symmetrypayrollpointapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api-staging.symmetry.com/prp/v1/taxes",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683062761085,
        "lastModifiedTime": 1683062761085,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "result": {
                        "homeResults": {
                            "inputGeoCoordinates": {
                                "longitude": 0,
                                "latitude": 0
                            },
                            "locationDetails": {
                                "taxJurisdictions": {
                                    "type": "FeatureCollection",
                                    "features": [
                                        {
                                            "type": "Feature",
                                            "properties": {
                                                "name": "Middlesex",
                                                "steCode": "023",
                                                "fipsCode": "023",
                                                "stateCode": "34",
                                                "steCodeType": "CNTY"
                                            }
                                        },
                                        {
                                            "type": "Feature",
                                            "properties": {
                                                "name": "New Jersey",
                                                "steCode": "34",
                                                "fipsCode": "34",
                                                "stateCode": "34",
                                                "steCodeType": "STATE"
                                            }
                                        }
                                    ]
                                },
                                "locationCode": "34-023-0004052284107435813"
                            },
                            "locationTaxes": [
                                "34-000-0000-ER_SDI-001",
                                "34-000-0000-ER_SUTA-000",
                                "34-000-0000-SUI-000",
                                "34-000-0000-SDI-000",
                                "34-000-0000-ER_SUTA_SC-048",
                                "34-000-0000-FLI-000",
                                "34-000-0000-SIT-000"
                            ],
                            "addressResults": {
                                "inputAddress": {
                                    "streetAddress1": "123 main st",
                                    "streetAddress2": "",
                                    "city": "Edison",
                                    "state": "NJ",
                                    "zipCode": "08837"
                                },
                                "normalizedAddress": {
                                    "streetAddress1": "123 Main St",
                                    "city": "Edison",
                                    "state": "NJ",
                                    "zipCode": "08837-2920"
                                },
                                "isVerified": true,
                                "addressResultMessages": {
                                    "GS06": {
                                        "shortDescription": "Geocoded to Interpolated Rooftop Level",
                                        "longDescription": "The record was geocoded down to the rooftop level using interpolation (educated estimations using street coordinates). The point may be in or close to the property boundaries."
                                    },
                                    "AS17": {
                                        "shortDescription": "No USPS Mail Delivery",
                                        "longDescription": "US Only. The address is classified as not receiving mail by the USPS. This may be deliverable by third party delivery companies."
                                    },
                                    "AS01": {
                                        "shortDescription": "Valid Address",
                                        "longDescription": "The address is valid and deliverable according to official postal agencies."
                                    }
                                },
                                "addressErrorMessages": {},
                                "isGeocoded": false,
                                "latitude": 40.522835,
                                "longitude": -74.358125,
                                "addressTypeCode": "S",
                                "addressTypeDescription": "Street"
                            }
                        },
                        "workResults": {
                            "workLocation1": {
                                "locationName": "Symmetry Work Address",
                                "inputGeoCoordinates": {
                                    "longitude": 0,
                                    "latitude": 0
                                },
                                "locationDetails": {
                                    "taxJurisdictions": {
                                        "type": "FeatureCollection",
                                        "features": [
                                            {
                                                "type": "Feature",
                                                "properties": {
                                                    "name": "Arizona",
                                                    "steCode": "04",
                                                    "fipsCode": "04",
                                                    "stateCode": "04",
                                                    "steCodeType": "STATE"
                                                }
                                            },
                                            {
                                                "type": "Feature",
                                                "properties": {
                                                    "name": "Maricopa",
                                                    "steCode": "013",
                                                    "fipsCode": "013",
                                                    "stateCode": "04",
                                                    "steCodeType": "CNTY"
                                                }
                                            },
                                            {
                                                "type": "Feature",
                                                "properties": {
                                                    "name": "Scottsdale",
                                                    "steCode": "11029",
                                                    "fipsCode": "65000",
                                                    "stateCode": "04",
                                                    "steCodeType": "CITY"
                                                }
                                            }
                                        ]
                                    },
                                    "locationCode": "04-013-11029"
                                },
                                "locationTaxes": [
                                    "04-000-0000-ER_SUTA-000",
                                    "04-000-0000-SIT-000"
                                ],
                                "addressResults": {
                                    "inputAddress": {
                                        "streetAddress1": "14350 87th st",
                                        "streetAddress2": "",
                                        "city": "Scottsdale",
                                        "state": "AZ",
                                        "zipCode": "85260"
                                    },
                                    "normalizedAddress": {
                                        "streetAddress1": "14350 N 87th St",
                                        "city": "Scottsdale",
                                        "state": "AZ",
                                        "zipCode": "85260-2652"
                                    },
                                    "isVerified": true,
                                    "addressResultMessages": {
                                        "GS05": {
                                            "shortDescription": "Geocoded to Rooftop Level",
                                            "longDescription": "The record was geocoded down to the rooftop level, meaning the point is within the property boundaries, usually the center."
                                        },
                                        "AS17": {
                                            "shortDescription": "No USPS Mail Delivery",
                                            "longDescription": "US Only. The address is classified as not receiving mail by the USPS. This may be deliverable by third party delivery companies."
                                        },
                                        "AS02": {
                                            "shortDescription": "Street Only Match",
                                            "longDescription": "The street address was verified but the suite/apartment number is missing or invalid."
                                        },
                                        "AC12": {
                                            "shortDescription": "Thoroughfare Directional Change",
                                            "longDescription": "The thoroughfare (street) pre-directional or post-directional was added or changed, such as from \"N\" to \"NW.\""
                                        }
                                    },
                                    "addressErrorMessages": {},
                                    "isGeocoded": true,
                                    "latitude": 33.615513,
                                    "longitude": -111.894828,
                                    "addressTypeCode": "H",
                                    "addressTypeDescription": "Highrise"
                                }
                            }
                        },
                        "payDate": "2022-04-07",
                        "taxResults": [
                            {
                                "uniqueTaxID": "34-000-0000-ER_SDI-001",
                                "description": "New Jersey Employer SDI",
                                "rate": 0.005,
                                "rateType": "RATE_PERCENT",
                                "wageBase": 39800,
                                "taxLimit": 199,
                                "taxLimitPeriod": "Annually",
                                "taxStartDate": "2022-01-01",
                                "credit": 0,
                                "creditLimit": 0,
                                "paid": false,
                                "stateWide": false,
                                "stateCode": "34",
                                "stateName": "New Jersey",
                                "employerTax": true,
                                "resident": true
                            },
                            {
                                "uniqueTaxID": "34-000-0000-ER_SUTA-000",
                                "description": "New Jersey State Unemployment Tax",
                                "rate": 0,
                                "rateType": "RATE_PERCENT_ASSIGNED",
                                "wageBase": 39800,
                                "taxLimit": 0,
                                "taxLimitPeriod": "None",
                                "taxStartDate": "2022-01-01",
                                "credit": 0,
                                "creditLimit": 0,
                                "paid": false,
                                "stateWide": true,
                                "stateCode": "34",
                                "stateName": "New Jersey",
                                "employerTax": true,
                                "resident": true
                            },
                            {
                                "uniqueTaxID": "04-000-0000-ER_SUTA-000",
                                "description": "Arizona State Unemployment Tax",
                                "rate": 0,
                                "rateType": "RATE_PERCENT_ASSIGNED",
                                "wageBase": 7000,
                                "taxLimit": 0,
                                "taxLimitPeriod": "None",
                                "taxStartDate": "2009-01-01",
                                "credit": 0,
                                "creditLimit": 0,
                                "paid": true,
                                "stateWide": true,
                                "stateCode": "04",
                                "stateName": "Arizona",
                                "employerTax": true,
                                "resident": false
                            },
                            {
                                "uniqueTaxID": "34-000-0000-SUI-000",
                                "description": "New Jersey SUI",
                                "rate": 0.00425,
                                "rateType": "RATE_PERCENT",
                                "wageBase": 39800,
                                "taxLimit": 169.15,
                                "taxLimitPeriod": "Annually",
                                "taxStartDate": "2022-01-01",
                                "credit": 0,
                                "creditLimit": 0,
                                "paid": false,
                                "stateWide": true,
                                "stateCode": "34",
                                "stateName": "New Jersey",
                                "employerTax": false,
                                "resident": true
                            },
                            {
                                "uniqueTaxID": "34-000-0000-SDI-000",
                                "description": "New Jersey SDI",
                                "rate": 0.0014,
                                "rateType": "RATE_PERCENT",
                                "wageBase": 151900,
                                "taxLimit": 212.66,
                                "taxLimitPeriod": "Annually",
                                "taxStartDate": "2022-01-01",
                                "credit": 0,
                                "creditLimit": 0,
                                "paid": false,
                                "stateWide": true,
                                "stateCode": "34",
                                "stateName": "New Jersey",
                                "employerTax": false,
                                "resident": true
                            },
                            {
                                "uniqueTaxID": "34-000-0000-ER_SUTA_SC-048",
                                "description": "NJ Work Force Development/Supplemental Work Force",
                                "rate": 0.001175,
                                "rateType": "RATE_PERCENT",
                                "wageBase": 39800,
                                "taxLimit": 46.77,
                                "taxLimitPeriod": "Annually",
                                "taxStartDate": "2022-01-01",
                                "credit": 0,
                                "creditLimit": 0,
                                "paid": false,
                                "stateWide": false,
                                "stateCode": "34",
                                "stateName": "New Jersey",
                                "employerTax": true,
                                "resident": true
                            },
                            {
                                "uniqueTaxID": "34-000-0000-FLI-000",
                                "description": "New Jersey Family Leave Insurance",
                                "rate": 0.0014,
                                "rateType": "RATE_PERCENT",
                                "wageBase": 151900,
                                "taxLimit": 212.66,
                                "taxLimitPeriod": "Annually",
                                "taxStartDate": "2022-01-01",
                                "credit": 0,
                                "creditLimit": 0,
                                "paid": false,
                                "stateWide": true,
                                "stateCode": "34",
                                "stateName": "New Jersey",
                                "employerTax": false,
                                "resident": true
                            },
                            {
                                "uniqueTaxID": "34-000-0000-SIT-000",
                                "description": "New Jersey State Tax",
                                "rate": 0,
                                "rateType": "RATE_GRADUATED",
                                "wageBase": 0,
                                "taxLimit": 0,
                                "taxLimitPeriod": "None",
                                "taxStartDate": "2016-01-01",
                                "credit": 0,
                                "creditLimit": 0,
                                "paid": true,
                                "stateWide": true,
                                "stateCode": "34",
                                "stateName": "New Jersey",
                                "employerTax": false,
                                "resident": true
                            },
                            {
                                "uniqueTaxID": "04-000-0000-SIT-000",
                                "description": "Arizona State Tax",
                                "rate": 0,
                                "rateType": "RATE_GRADUATED",
                                "wageBase": 0,
                                "taxLimit": 0,
                                "taxLimitPeriod": "None",
                                "taxStartDate": "1900-01-01",
                                "credit": 0,
                                "creditLimit": 0,
                                "paid": true,
                                "stateWide": true,
                                "stateCode": "04",
                                "stateName": "Arizona",
                                "employerTax": false,
                                "resident": false
                            }
                        ],
                        "minimumWage": [
                            {
                                "mwUid": "00-0-000000000-EXM-012-013",
                                "stateCode": 0,
                                "state": "Federal",
                                "authorityCode": 0,
                                "authority": "",
                                "authorityTypeCode": 0,
                                "authorityType": "Federal",
                                "rate": "27.63",
                                "effectiveDate": "2017-01-01",
                                "majorType": "EXM",
                                "industryTypeCode": 12,
                                "industryType": "Computer Professionals",
                                "minorTypeCode": 13,
                                "minorType": "Minimum Hourly Rate Of Pay Exemption From Overtime Amount",
                                "details": "Exempt computer employee",
                                "updated": "2020-07-07 17:16:03"
                            },
                            {
                                "mwUid": "00-0-000000000-REG-000-000",
                                "stateCode": 0,
                                "state": "Federal",
                                "authorityCode": 0,
                                "authority": "",
                                "authorityTypeCode": 0,
                                "authorityType": "Federal",
                                "rate": "7.25",
                                "effectiveDate": "2017-01-01",
                                "majorType": "REG",
                                "industryTypeCode": 0,
                                "industryType": "",
                                "minorTypeCode": 0,
                                "minorType": "",
                                "details": " ",
                                "updated": "2020-10-27 14:39:28"
                            },
                            {
                                "mwUid": "00-0-000000000-TIP-000-020",
                                "stateCode": 0,
                                "state": "Federal",
                                "authorityCode": 0,
                                "authority": "",
                                "authorityTypeCode": 0,
                                "authorityType": "Federal",
                                "rate": "2.13",
                                "effectiveDate": "2017-01-01",
                                "majorType": "TIP",
                                "industryTypeCode": 0,
                                "industryType": "",
                                "minorTypeCode": 20,
                                "minorType": "Minimum Tip Received",
                                "details": " ",
                                "updated": "2021-08-24 20:14:41"
                            },
                            {
                                "mwUid": "00-0-000000000-REG-000-100",
                                "stateCode": 0,
                                "state": "Federal",
                                "authorityCode": 0,
                                "authority": "",
                                "authorityTypeCode": 0,
                                "authorityType": "Federal",
                                "rate": "11.25",
                                "effectiveDate": "2022-01-01",
                                "majorType": "REG",
                                "industryTypeCode": 0,
                                "industryType": "",
                                "minorTypeCode": 100,
                                "minorType": "Federal Contractor - existing covered contracts",
                                "details": " Minimum wage federal contractors pay workers performing work on or in connection with existing covered contracts",
                                "updated": "2021-09-17 22:32:16"
                            },
                            {
                                "mwUid": "00-0-000000000-TIP-000-100",
                                "stateCode": 0,
                                "state": "Federal",
                                "authorityCode": 0,
                                "authority": "",
                                "authorityTypeCode": 0,
                                "authorityType": "Federal",
                                "rate": "7.90",
                                "effectiveDate": "2022-01-01",
                                "majorType": "TIP",
                                "industryTypeCode": 0,
                                "industryType": "",
                                "minorTypeCode": 100,
                                "minorType": "Federal Contractor - existing covered contracts",
                                "details": " Minimum wage federal contractors pay workers performing work on or in connection with existing covered contracts",
                                "updated": "2021-09-17 22:32:52"
                            },
                            {
                                "mwUid": "00-0-000000000-REG-000-101",
                                "stateCode": 0,
                                "state": "Federal",
                                "authorityCode": 0,
                                "authority": "",
                                "authorityTypeCode": 0,
                                "authorityType": "Federal",
                                "rate": "15.00",
                                "effectiveDate": "2022-01-30",
                                "majorType": "REG",
                                "industryTypeCode": 0,
                                "industryType": "",
                                "minorTypeCode": 101,
                                "minorType": "Federal Contractor - new, renewed, or extended covered contracts",
                                "details": " Minimum wage federal contractors pay workers performing work on or in connection with new, renewed, or extended covered contracts",
                                "updated": "2021-09-27 18:53:54"
                            },
                            {
                                "mwUid": "00-0-000000000-TIP-000-101",
                                "stateCode": 0,
                                "state": "Federal",
                                "authorityCode": 0,
                                "authority": "",
                                "authorityTypeCode": 0,
                                "authorityType": "Federal",
                                "rate": "10.50",
                                "effectiveDate": "2022-01-30",
                                "majorType": "TIP",
                                "industryTypeCode": 0,
                                "industryType": "",
                                "minorTypeCode": 101,
                                "minorType": "Federal Contractor - new, renewed, or extended covered contracts",
                                "details": " Minimum wage federal contractors pay workers performing work on or in connection with new, renewed, or extended covered contracts",
                                "updated": "2021-09-27 18:54:03"
                            },
                            {
                                "mwUid": "04-1-000000000-REG-000-000",
                                "stateCode": 4,
                                "state": "Arizona",
                                "authorityCode": 0,
                                "authority": "",
                                "authorityTypeCode": 1,
                                "authorityType": "State",
                                "rate": "12.80",
                                "effectiveDate": "2022-01-01",
                                "majorType": "REG",
                                "industryTypeCode": 0,
                                "industryType": "",
                                "minorTypeCode": 0,
                                "minorType": "",
                                "details": "",
                                "updated": "2021-09-17 15:05:32"
                            },
                            {
                                "mwUid": "04-1-000000000-TIP-000-000",
                                "stateCode": 4,
                                "state": "Arizona",
                                "authorityCode": 0,
                                "authority": "",
                                "authorityTypeCode": 1,
                                "authorityType": "State",
                                "rate": "9.80",
                                "effectiveDate": "2022-01-01",
                                "majorType": "TIP",
                                "industryTypeCode": 0,
                                "industryType": "",
                                "minorTypeCode": 0,
                                "minorType": "",
                                "details": "",
                                "updated": "2021-09-17 15:32:53"
                            }
                        ]
                    },
                    "transactionDetails": {
                        "timestamp": "2022-04-07T14:04:39.643",
                        "serviceVersion": "Address Service: 0.9.3, Address Data Build: 17401 (2022-03-15). Geo Data Build: 17260 (2021-10-15). ; Location service: 0.4.4. ; STE hosted: 1.92.46, STE: 2022-R5; Payroll Point service: 1.2.108",
                        "processedTransactions": 1,
                        "processingTime": 0.307
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "timestamp": "2021-08-16T15:08:07.965+0000",
                    "status": 400,
                    "error": "Bad Request",
                    "message": "Invalid request input data.",
                    "path": "/prp/v1/taxes"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91242,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveminimumWageRatesbyUniqueID",
        "executor_version": "v1",
        "executor_display_name": "Retrieve Minimum Wage Rates by Unique ID",
        "executor_description": "Return minimum wage rates by minimum wage unique IDs.",
        "executor_category": "Symmetryminimumwagefinderapi",
        "executor_category_group": "Symmetryminimumwagefinderapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api-staging.symmetry.com/mwf/v1/id",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "effectiveDate",
                "value": "",
                "description": "Return minimum wages rates for the specified effective date. Must be set in YYYY-MM-DD format. Required when updatedSince is not set; cannot be set when updatedSince is also set.  2023-01-01",
                "req": false
            },
            {
                "key": "updatedSince",
                "value": "",
                "description": "Return minimum wages rates that have changed since a given date. Must be set in YYYY-MM-DD format. The date of the request in YYYY-MM-DD format. Required when effectiveDate is not set; cannot be set when effectiveDate is also set.",
                "req": false
            },
            {
                "key": "mwUid",
                "value": "",
                "description": "The search string for minimum wage unique IDs. Use * in the search string as a wildcard for parts of the ID.  06-*",
                "req": false
            },
            {
                "key": "pageNumber",
                "value": "",
                "description": "Limit the returned results by setting pageNumber and pageSize. 0 indicates the first page.  0",
                "req": false
            },
            {
                "key": "pageSize",
                "value": "",
                "description": "Limit the returned results by setting pageNumber and pageSize. Set pageSize to -0 to return all results in a single API call.  10",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683064552002,
        "lastModifiedTime": 1683064552002,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "ratesPage": {
                        "content": [
                            {
                                "mwUid": "27-1-000000000-REG-000-000",
                                "stateCode": 27,
                                "state": "Minnesota",
                                "authorityCode": 0,
                                "authority": "",
                                "authorityTypeCode": 1,
                                "authorityType": "State",
                                "rate": "10.33",
                                "effectiveDate": "2022-01-01",
                                "majorType": "REG",
                                "industryTypeCode": 0,
                                "industryType": "",
                                "minorTypeCode": 0,
                                "minorType": "",
                                "details": "Large employer wage",
                                "updated": "2022-05-17 12:42:45"
                            },
                            {
                                "mwUid": "27-1-000000000-REG-000-019",
                                "stateCode": 27,
                                "state": "Minnesota",
                                "authorityCode": 0,
                                "authority": "",
                                "authorityTypeCode": 1,
                                "authorityType": "State",
                                "rate": "8.42",
                                "effectiveDate": "2022-01-01",
                                "majorType": "REG",
                                "industryTypeCode": 0,
                                "industryType": "",
                                "minorTypeCode": 19,
                                "minorType": "MN - EE age restriction",
                                "details": "youth wage under 18 years old",
                                "updated": "2022-05-19 15:29:31"
                            },
                            {
                                "mwUid": "27-1-000000000-REG-000-028",
                                "stateCode": 27,
                                "state": "Minnesota",
                                "authorityCode": 0,
                                "authority": "",
                                "authorityTypeCode": 1,
                                "authorityType": "State",
                                "rate": "8.42",
                                "effectiveDate": "2022-01-01",
                                "majorType": "REG",
                                "industryTypeCode": 0,
                                "industryType": "",
                                "minorTypeCode": 28,
                                "minorType": "MN - ER size restriction",
                                "details": "\tSmall employer wage",
                                "updated": "2021-08-23 16:51:10"
                            },
                            {
                                "mwUid": "27-1-000000000-REG-000-029",
                                "stateCode": 27,
                                "state": "Minnesota",
                                "authorityCode": 0,
                                "authority": "",
                                "authorityTypeCode": 1,
                                "authorityType": "State",
                                "rate": "8.42",
                                "effectiveDate": "2022-01-01",
                                "majorType": "REG",
                                "industryTypeCode": 0,
                                "industryType": "",
                                "minorTypeCode": 29,
                                "minorType": "MN - training time restriction",
                                "details": "90-day training wage (under 20 years of age)",
                                "updated": "2021-08-23 16:55:15"
                            }
                        ],
                        "pageable": {
                            "sort": {
                                "sorted": false,
                                "unsorted": true,
                                "empty": true
                            },
                            "pageNumber": 0,
                            "pageSize": 10,
                            "offset": 0,
                            "paged": true,
                            "unpaged": false
                        },
                        "totalElements": 4,
                        "last": true,
                        "totalPages": 1,
                        "sort": {
                            "sorted": false,
                            "unsorted": true,
                            "empty": true
                        },
                        "first": true,
                        "numberOfElements": 4,
                        "size": 10,
                        "number": 0,
                        "empty": false
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "timestamp": "2022-04-07T16:17:11.188+0000",
                    "status": 400,
                    "error": "Bad Request",
                    "message": "Required String parameter 'mwUid' is not present",
                    "path": "/prp/v1/minimumwage/id"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91244,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveminimumWageRatesbyLocation",
        "executor_version": "v1",
        "executor_display_name": "Retrieve Minimum Wage Rates by Location",
        "executor_description": "Return minimum wage rates based on an address.",
        "executor_category": "Symmetryminimumwagefinderapi",
        "executor_category_group": "Symmetryminimumwagefinderapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api-staging.symmetry.com/mwf/v1/location",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "streetAddress",
                "value": "",
                "description": "1The first line of the street address (civic number and street name). Required if latitude and longitude are not set.  14350 N 87th St",
                "req": false
            },
            {
                "key": "streetAddress",
                "value": "",
                "description": "2The second line of the street address, if applicable (e.g., apartment, floor, unit number, or other address designation).  Ste 310",
                "req": false
            },
            {
                "key": "city",
                "value": "",
                "description": "The city of the physical address. Required if latitude and longitude are not set.  Scottsdale",
                "req": false
            },
            {
                "key": "state",
                "value": "",
                "description": "The state of the physical address. Can be the full state name or the two-letter state abbreviation. Required if latitude and longitude are not set.  AZ",
                "req": false
            },
            {
                "key": "zipCode",
                "value": "",
                "description": "The ZIP code of the address. Must be exactly 5 or exactly 9 digits. Required if latitude and longitude are not set.  85260",
                "req": false
            },
            {
                "key": "effectiveDate",
                "value": "",
                "description": "The effective date of the request in YYYY-MM-DD format.  2022-08-04",
                "req": false
            },
            {
                "key": "latitude",
                "value": "",
                "description": "The latitude of the location. Optional; if set, latitude and longitude will be used instead of the address.",
                "req": false
            },
            {
                "key": "longitude",
                "value": "",
                "description": "The longitude of the location. Optional; if set, latitude and longitude will be used instead of the address.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683064838727,
        "lastModifiedTime": 1683064838727,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91201,
        "executor_type": "THIRDPARTY",
        "executor_name": "processesformquestionanswers",
        "executor_version": "v1",
        "executor_display_name": "Processes form question answers, employee data, and employer data to produce a pdf and tax parameters",
        "executor_description": "The fillPdf endpoint accepts a json object containing employee information, employer information, and the answers to the form questions. The endpoint validates and processes the data and returns a completed PDF in base 64 format along with the relevant tax parameters for the form. Validation is done using the regular expressions provided in the question sets and validation of question dependencies is performed. For more information, see fill pdf.",
        "executor_category": "Symmetrypayrollformsapi",
        "executor_category_group": "Symmetrypayrollformsapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api-staging.symmetry.com/spf/fillPdf",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683061787935,
        "lastModifiedTime": 1683061787935,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "QS1",
                    "questions": [
                        {
                            "id": "isNra",
                            "questionText": "Are you a nonresident alien?",
                            "notes": [
                                {
                                    "htmlType": "PARAGRAPH",
                                    "noteValue": "Selecting Yes will result in selecting a marital status of Single or Married filing separately regardless of actual marital status.  See Notice 1392 for more details."
                                },
                                {
                                    "htmlType": "PARAGRAPH",
                                    "noteValue": "Notice: Nonresident aliens may be exempt from wage withholding on part or all of their compensation for dependent personal services under an income tax treaty. If you are claiming a tax treaty withholding exemption, do not complete Form W-4.  Instead, complete Form 8233, Exemption from Withholding on Compensation for Independent (and Certain Dependent) Personal Services of a Nonresident Alien Individual, and give it to each withholding agent from whom amounts will be received."
                                }
                            ],
                            "validationRegex": "^(true|false)$",
                            "validationErrorMessage": "This value is required",
                            "htmlType": "INPUT",
                            "displayType": "RADIO",
                            "required": true,
                            "questionOptions": [
                                {
                                    "label": "Yes",
                                    "value": true
                                },
                                {
                                    "label": "No",
                                    "value": false
                                }
                            ]
                        }
                    ],
                    "breadcrumbTitle": "Nonresident Alien",
                    "navigation": {
                        "questionId": "isNra",
                        "navigationType": "VARIABLE",
                        "navigationMappings": {
                            "false": {
                                "nextQuestionSetId": "QS2",
                                "hasMoreQuestions": true
                            },
                            "true": {
                                "nextQuestionSetId": "QS8",
                                "hasMoreQuestions": true
                            }
                        }
                    }
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " Not Found response",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "uri=/fillPdf",
                    "status": "BadRequest",
                    "statusCode": 400,
                    "timestamp": "2020-01-01 12:00:00",
                    "errors": [
                        {
                            "field": "dependents",
                            "message": "Expected: ^[1-9]{1}[0-9]+|[0-9]{1}$"
                        }
                    ],
                    "errorCount": 1
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "string",
                    "status": "string",
                    "statusCode": 0,
                    "timestamp": "2023-05-02T18:25:45.935Z",
                    "errors": [
                        {
                            "field": "string",
                            "message": "string",
                            "rejectedValue": "string"
                        }
                    ],
                    "errorCount": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91192,
        "executor_type": "THIRDPARTY",
        "executor_name": "returnsalistofapplicableguidedflowsforagivenhome",
        "executor_version": "v1",
        "executor_display_name": "Returns a list of applicable guided flows for a given home",
        "executor_description": "The guided-flows endpoint receives one home address and one or more work address(es) representing the physical work location(s). It returns a list of applicable flows for the withholding scenario. Resulting flows are then used to filter the list of all applicable forms down to a list of required forms. Note that some states/scenarios do not require additional information to filter the applicable forms. For more information, see guided flows.",
        "executor_category": "Symmetrypayrollformsapi",
        "executor_category_group": "Symmetrypayrollformsapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api-staging.symmetry.com/spf/guided-flows",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683061101898,
        "lastModifiedTime": 1683061101898,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "flows": [
                        {
                            "id": "FEDERAL",
                            "locality": "FEDERAL",
                            "hasFlowQuestions": true,
                            "initialQuestionSetId": "QS1",
                            "localityFullName": "Federal"
                        },
                        {
                            "id": "AL_RESIDENT",
                            "locality": "AL",
                            "residencyStatus": "RESIDENT",
                            "hasFlowQuestions": true,
                            "initialQuestionSetId": "QS1",
                            "localityFullName": "Alabama"
                        }
                    ],
                    "locationData": [
                        {
                            "id": "home",
                            "inputAddress": {
                                "streetAddress1": "11 S Union St",
                                "city": "Montgomery",
                                "state": "AL",
                                "zipCode": "36130"
                            },
                            "normalizedAddress": {
                                "streetAddress1": "11 S Union St",
                                "city": "Montgomery",
                                "state": "AL",
                                "zipCode": "36130-2102"
                            },
                            "addressResultMessages": [
                                "The corrected address is valid. [AS01]",
                                "The record was coded to the street level (Zip+4 for US, full postal code for CA). [GS01]"
                            ],
                            "addressErrorMessages": [],
                            "latitude": "32.376634",
                            "longitude": "-86.299645",
                            "geocoded": false,
                            "verified": true
                        },
                        {
                            "id": "work1",
                            "inputAddress": {
                                "streetAddress1": "64 N Union St",
                                "city": "Montgomery",
                                "state": "AL",
                                "zipCode": "36130"
                            },
                            "normalizedAddress": {
                                "streetAddress1": "64 N Union St",
                                "city": "Montgomery",
                                "state": "AL",
                                "zipCode": "36130-3020"
                            },
                            "addressResultMessages": [
                                "The corrected address is valid. [AS01]",
                                "The record was coded to the street level (Zip+4 for US, full postal code for CA). [GS01]"
                            ],
                            "addressErrorMessages": [],
                            "latitude": "32.378229",
                            "longitude": "-86.299726",
                            "geocoded": false,
                            "verified": true
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " Not Found response",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "uri=/guided-flows",
                    "status": "Bad Request",
                    "statusCode": 400,
                    "timestamp": "2020-01-01 12:00:00",
                    "errors": [
                        {
                            "field": "workAddresses",
                            "message": "size must be between 1 and 10",
                            "rejectedValue": "[]"
                        }
                    ],
                    "errorCount": 1
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "string",
                    "status": "string",
                    "statusCode": 0,
                    "timestamp": "2023-05-02T18:25:45.935Z",
                    "errors": [
                        {
                            "field": "string",
                            "message": "string",
                            "rejectedValue": "string"
                        }
                    ],
                    "errorCount": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91211,
        "executor_type": "THIRDPARTY",
        "executor_name": "returnsinformationforaform",
        "executor_version": "v1",
        "executor_display_name": "Returns information for a form, such as fields required and tax parameter schemas",
        "executor_description": "The getPdf endpoint returns a blank and unflattened pdf for the requested form ID. It is returned as a byte stream with an Accept header value of application/pdf. See the getAllFormIds endpoint for the available form IDs. For more information, see get pdf.",
        "executor_category": "Symmetrypayrollformsapi",
        "executor_category_group": "Symmetrypayrollformsapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api-staging.symmetry.com/spf/fillPdf/{formId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "formId",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "formVersion",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "hasFederalValues",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683062284308,
        "lastModifiedTime": 1683062284308,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "AZ101",
                    "locality": "AZ",
                    "name": "A-4",
                    "title": "Employee's Arizona Withholding Election",
                    "formType": "Resident",
                    "initialQuestionSetId": "QS1",
                    "effectiveDate": "2021-01-01",
                    "formVersion": "2020.12.0",
                    "formFields": {
                        "formId": "AZ101",
                        "formVersion": "2020.12.0",
                        "employee": {
                            "firstName": "^[A-Za-z.\\'\\-\\, \\xC0-\\xD6\\xD8-\\xF6\\xF8-\\xFF]{1,}$",
                            "middleInitial": "^[A-Za-z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\xFF]{0,1}$",
                            "lastName": "^[A-Za-z.\\'\\-\\, \\xC0-\\xD6\\xD8-\\xF6\\xF8-\\xFF]{1,}$",
                            "socialSecurityNumber": "^([0-9]{3}-[0-9]{2}-[0-9]{4}|[0-9]{9})$",
                            "address": {
                                "streetAddress1": "^[A-Za-z0-9#,.&\\'\\- \\xC0-\\xD6\\xD8-\\xF6\\xF8-\\xFF]+$",
                                "streetAddress2": "^[A-Za-z0-9#,.&\\'\\- \\xC0-\\xD6\\xD8-\\xF6\\xF8-\\xFF]+$",
                                "city": "^[A-Za-z.,&\\'\\- \\xC0-\\xD6\\xD8-\\xF6\\xF8-\\xFF]+$",
                                "state": "^(AL|AK|AZ|AR|AS|CA|CO|CT|DE|DC|FM|FL|GA|GU|HI|ID|IL|IN|IA|KS|KY|LA|ME|MH|MD|MA|MI|MN|MS|MO|MT|NE|NV|NH|NJ|NM|NY|NC|ND|MP|OH|OK|OR|PW|PA|PR|RI|SC|SD|TN|TX|UT|VT|VA|VI|WA|WV|WI|WY)$",
                                "zipCode": "^[0-9]{5}$|^[0-9]{5}-[0-9]{4}$|^[0-9]{9}$"
                            }
                        },
                        "fields": {
                            "additionalStateWithholding": "^[+-]?[0-9]{1,3}(?:,?[0-9]{3})*(?:\\.[0-9]{2})?$",
                            "withholdingPercentage": "^(0|0.8|1.3|1.8|2.7|3.6|4.2|5.1)$"
                        },
                        "signForm": "PREVIEW"
                    },
                    "blankFormImages": [
                        "https://spfcdn.symmetry.com/images/AZ101/2020.12.0/az101_1.png"
                    ],
                    "taxParameters": [
                        {
                            "id": "AZ.percentState",
                            "valueType": "regex",
                            "regexOptions": "^(0|0.8|1.3|1.8|2.7|3.6|4.2|5.1)$",
                            "description": "Value represents the tax rate percentage that the employee has elected"
                        },
                        {
                            "id": "additionalStateWithholding",
                            "valueType": "dollarAmount",
                            "description": "Additional withholding dollar amount employee has a elected"
                        },
                        {
                            "id": "exemptFromStateWithholding",
                            "valueType": "boolean",
                            "description": "Exempt from state withholding tax"
                        },
                        {
                            "id": "mustFileWithState",
                            "valueType": "boolean",
                            "description": "Employer must file the form with the state"
                        },
                        {
                            "id": "employerIntervention",
                            "valueType": "boolean",
                            "description": "Additional employer processing required to complete the form"
                        },
                        {
                            "id": "employerInterventionReason",
                            "valueType": "regex",
                            "regexOptions": "^(null)$",
                            "description": "null - employerIntervention is null or false"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " Not Found response",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "string",
                    "status": "string",
                    "statusCode": 0,
                    "timestamp": "2023-05-02T18:25:45.935Z",
                    "errors": [
                        {
                            "field": "string",
                            "message": "string",
                            "rejectedValue": "string"
                        }
                    ],
                    "errorCount": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91196,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrievesaquestionsetforaformbyid",
        "executor_version": "v1",
        "executor_display_name": "Retrieves a question set for a form by id",
        "executor_description": "The formQuestionSet endpoint returns a question set for a given form. Each question set may contain one or more questions, validation regular expression, and navigation aids. For more information, see form question set.",
        "executor_category": "Symmetrypayrollformsapi",
        "executor_category_group": "Symmetrypayrollformsapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api-staging.symmetry.com/spf/formQuestionSet/{formId}/{questionSetId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "formId",
                "value": "",
                "description": ""
            },
            {
                "key": "questionSetId",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "formVersion",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "hasFederalValues",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683061564434,
        "lastModifiedTime": 1683061564434,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "QS1",
                    "questions": [
                        {
                            "id": "isNra",
                            "questionText": "Are you a nonresident alien?",
                            "notes": [
                                {
                                    "htmlType": "PARAGRAPH",
                                    "noteValue": "Selecting Yes will result in selecting a marital status of Single or Married filing separately regardless of actual marital status.  See Notice 1392 for more details."
                                },
                                {
                                    "htmlType": "PARAGRAPH",
                                    "noteValue": "Notice: Nonresident aliens may be exempt from wage withholding on part or all of their compensation for dependent personal services under an income tax treaty. If you are claiming a tax treaty withholding exemption, do not complete Form W-4.  Instead, complete Form 8233, Exemption from Withholding on Compensation for Independent (and Certain Dependent) Personal Services of a Nonresident Alien Individual, and give it to each withholding agent from whom amounts will be received."
                                }
                            ],
                            "validationRegex": "^(true|false)$",
                            "validationErrorMessage": "This value is required",
                            "htmlType": "INPUT",
                            "displayType": "RADIO",
                            "required": true,
                            "questionOptions": [
                                {
                                    "label": "Yes",
                                    "value": true
                                },
                                {
                                    "label": "No",
                                    "value": false
                                }
                            ]
                        }
                    ],
                    "breadcrumbTitle": "Nonresident Alien",
                    "navigation": {
                        "questionId": "isNra",
                        "navigationType": "VARIABLE",
                        "navigationMappings": {
                            "false": {
                                "nextQuestionSetId": "QS2",
                                "hasMoreQuestions": true
                            },
                            "true": {
                                "nextQuestionSetId": "QS8",
                                "hasMoreQuestions": true
                            }
                        }
                    }
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " Not Found response",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "uri=/spf/formQuestionSet/AL101/QS3",
                    "status": "Not Found",
                    "statusCode": 404,
                    "timestamp": "2020-01-01 12:00:00",
                    "errors": [
                        {
                            "message": "Question Set does not exist",
                            "rejectedValue": "QS3"
                        }
                    ],
                    "errorCount": 1
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "string",
                    "status": "string",
                    "statusCode": 0,
                    "timestamp": "2023-05-02T18:25:45.935Z",
                    "errors": [
                        {
                            "field": "string",
                            "message": "string",
                            "rejectedValue": "string"
                        }
                    ],
                    "errorCount": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91177,
        "executor_type": "THIRDPARTY",
        "executor_name": "returnsalistofallavailableformids",
        "executor_version": "v1",
        "executor_display_name": "Returns a list of all available form ids",
        "executor_description": "The getAllFormsIds endpoint is used to return a list of all form IDs currently supported by the Symmetry Payroll Forms API.",
        "executor_category": "Symmetrypayrollformsapi",
        "executor_category_group": "Symmetrypayrollformsapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api-staging.symmetry.com/spf/getAllFormIds",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683059223294,
        "lastModifiedTime": 1683059223294,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    "W4101",
                    "W4101SP",
                    "W6101",
                    "W8101",
                    "AL101",
                    "AL101SP",
                    "AL103",
                    "AR101",
                    "AR102",
                    "AR103",
                    "AR104",
                    "AR105",
                    "AZ101",
                    "AZ102",
                    "AZ103",
                    "AZ107",
                    "CA101",
                    "CA102",
                    "CO101",
                    "CO102",
                    "CT101",
                    "CT102",
                    "DC101",
                    "DC102",
                    "DE101",
                    "DE102",
                    "DE103",
                    "GA101",
                    "HI101",
                    "HI103",
                    "IA101",
                    "IA101SP",
                    "IA102",
                    "ID101",
                    "ID102",
                    "IL101",
                    "IL102",
                    "IN101",
                    "IN102",
                    "IN104",
                    "KS101",
                    "KS102",
                    "KY101",
                    "LA101",
                    "LA102",
                    "MA101",
                    "MA102",
                    "MD101",
                    "MD102",
                    "ME101",
                    "ME102",
                    "MI101",
                    "MI110",
                    "MI111",
                    "MI112",
                    "MI113",
                    "MI114",
                    "MI115",
                    "MI116",
                    "MI117",
                    "MI118",
                    "MI119",
                    "MI120",
                    "MI121",
                    "MI122",
                    "MI123",
                    "MI124",
                    "MI125",
                    "MI126",
                    "MI127",
                    "MI128",
                    "MI129",
                    "MI130",
                    "MI131",
                    "MI132",
                    "MN102",
                    "MN103",
                    "MO101",
                    "MO102",
                    "MO103",
                    "MS101",
                    "MT101",
                    "NC101",
                    "NC102",
                    "NC103",
                    "ND101",
                    "ND104",
                    "ND105",
                    "NE101",
                    "NE103",
                    "NJ101",
                    "NJ102",
                    "NM101",
                    "NM102",
                    "NY101",
                    "NY102",
                    "NY103",
                    "NY105",
                    "NY106",
                    "NY107",
                    "NY108",
                    "OH101",
                    "OH102",
                    "OH103",
                    "OH104",
                    "OK101",
                    "OK102",
                    "OR101",
                    "PA103",
                    "PA112",
                    "PA113",
                    "PA114",
                    "PR101",
                    "PR101SP",
                    "RI101",
                    "SC101",
                    "UT101",
                    "VA101",
                    "VA102",
                    "VT101",
                    "WI101",
                    "WI102",
                    "WI103",
                    "WI107",
                    "WV101",
                    "WV102",
                    "WV103"
                ]
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " Not Found response",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "string",
                    "status": "string",
                    "statusCode": 0,
                    "timestamp": "2023-05-02T18:25:45.935Z",
                    "errors": [
                        {
                            "field": "string",
                            "message": "string",
                            "rejectedValue": "string"
                        }
                    ],
                    "errorCount": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91185,
        "executor_type": "THIRDPARTY",
        "executor_name": "returnsalistoapplicableformsforagivenhomeworkaddressscenario",
        "executor_version": "v1",
        "executor_display_name": "Returns a list of applicable forms for a given home/work address scenario",
        "executor_description": "The forms endpoint returns a list of applicable forms for the withholding scenario and various details about the form. In addition this endpoint will return a location data object that will check to make sure home and work addresses are valid and can also normalize and geocode them. For more information, see forms.",
        "executor_category": "Symmetrypayrollformsapi",
        "executor_category_group": "Symmetrypayrollformsapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api-staging.symmetry.com/spf/forms",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683060754406,
        "lastModifiedTime": 1683060754406,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    "W4101",
                    "W4101SP",
                    "W6101",
                    "W8101",
                    "AL101",
                    "AL101SP",
                    "AL103",
                    "AR101",
                    "AR102",
                    "AR103",
                    "AR104",
                    "AR105",
                    "AZ101",
                    "AZ102",
                    "AZ103",
                    "AZ107",
                    "CA101",
                    "CA102",
                    "CO101",
                    "CO102",
                    "CT101",
                    "CT102",
                    "DC101",
                    "DC102",
                    "DE101",
                    "DE102",
                    "DE103",
                    "GA101",
                    "HI101",
                    "HI103",
                    "IA101",
                    "IA101SP",
                    "IA102",
                    "ID101",
                    "ID102",
                    "IL101",
                    "IL102",
                    "IN101",
                    "IN102",
                    "IN104",
                    "KS101",
                    "KS102",
                    "KY101",
                    "LA101",
                    "LA102",
                    "MA101",
                    "MA102",
                    "MD101",
                    "MD102",
                    "ME101",
                    "ME102",
                    "MI101",
                    "MI110",
                    "MI111",
                    "MI112",
                    "MI113",
                    "MI114",
                    "MI115",
                    "MI116",
                    "MI117",
                    "MI118",
                    "MI119",
                    "MI120",
                    "MI121",
                    "MI122",
                    "MI123",
                    "MI124",
                    "MI125",
                    "MI126",
                    "MI127",
                    "MI128",
                    "MI129",
                    "MI130",
                    "MI131",
                    "MI132",
                    "MN102",
                    "MN103",
                    "MO101",
                    "MO102",
                    "MO103",
                    "MS101",
                    "MT101",
                    "NC101",
                    "NC102",
                    "NC103",
                    "ND101",
                    "ND104",
                    "ND105",
                    "NE101",
                    "NE103",
                    "NJ101",
                    "NJ102",
                    "NM101",
                    "NM102",
                    "NY101",
                    "NY102",
                    "NY103",
                    "NY105",
                    "NY106",
                    "NY107",
                    "NY108",
                    "OH101",
                    "OH102",
                    "OH103",
                    "OH104",
                    "OK101",
                    "OK102",
                    "OR101",
                    "PA103",
                    "PA112",
                    "PA113",
                    "PA114",
                    "PR101",
                    "PR101SP",
                    "RI101",
                    "SC101",
                    "UT101",
                    "VA101",
                    "VA102",
                    "VT101",
                    "WI101",
                    "WI102",
                    "WI103",
                    "WI107",
                    "WV101",
                    "WV102",
                    "WV103"
                ]
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " Not Found response",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "uri=/forms",
                    "status": "Bad Request",
                    "statusCode": 400,
                    "timestamp": "2020-09-15 15:57:16",
                    "errors": [
                        {
                            "field": "workAddresses",
                            "message": "size must be between 1 and 10",
                            "rejectedValue": "[]"
                        }
                    ],
                    "errorCount": 1
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "string",
                    "status": "string",
                    "statusCode": 0,
                    "timestamp": "2023-05-02T18:25:45.935Z",
                    "errors": [
                        {
                            "field": "string",
                            "message": "string",
                            "rejectedValue": "string"
                        }
                    ],
                    "errorCount": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91193,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrievesaquestionsetforaflowbyid",
        "executor_version": "v1",
        "executor_display_name": "Retrieves a question set for a flow by id",
        "executor_description": "The flowQuestionSet endpoint returns a question set for a given flow. Flow question sets are used to filter the list of potentially applicable forms down to a list of required forms. Each question set may contain one or more questions, validation regular expressions, and navigation aids. For more information, see flow question set.",
        "executor_category": "Symmetrypayrollformsapi",
        "executor_category_group": "Symmetrypayrollformsapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api-staging.symmetry.com/spf/flowQuestionSet/{flowId}/{questionSetId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "flowId",
                "value": "",
                "description": ""
            },
            {
                "key": "questionSetId",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683061344757,
        "lastModifiedTime": 1683061344757,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "QS1",
                    "questions": [
                        {
                            "id": "isTerminatingMilitarySpouseExemption",
                            "questionText": "Do you currently have a military spouse exemption that you no longer qualify for OR no longer wish to claim?",
                            "validationErrorMessage": "Please select an option",
                            "htmlType": "INPUT",
                            "displayType": "RADIO",
                            "required": {
                                "whenRequired": "ALWAYS"
                            },
                            "questionOptions": [
                                {
                                    "label": "Yes",
                                    "value": true,
                                    "formsToComplete": [
                                        {
                                            "id": "AZ101",
                                            "name": "A-4",
                                            "title": "Employee's Arizona Withholding Election",
                                            "formVersion": "2020.12.0",
                                            "formLocality": "AZ",
                                            "initialQuestionSet": "QS1"
                                        },
                                        {
                                            "id": "AZ102",
                                            "name": "WEC",
                                            "title": "Employee Withholding Exemption Certificate",
                                            "formVersion": "2020.12.0",
                                            "formLocality": "AZ",
                                            "initialQuestionSet": "QS1"
                                        }
                                    ]
                                },
                                {
                                    "label": "No",
                                    "value": false
                                }
                            ],
                            "isCalculated": false
                        }
                    ],
                    "breadcrumbTitle": "Military Spouse Exemption",
                    "navigation": {
                        "navigationType": "VARIABLE",
                        "questionId": "isTerminatingMilitarySpouseExemption",
                        "navigationMappings": {
                            "false": {
                                "nextQuestionSetId": "QS2",
                                "hasMoreQuestions": true
                            },
                            "true": {
                                "hasMoreQuestions": false
                            }
                        }
                    }
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " Not Found response",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "uri=/spf/flowQuestionSet/FL_RESIDENT/QS3",
                    "status": "Not Found",
                    "statusCode": 404,
                    "timestamp": "2020-09-15 15:50:55",
                    "errors": [
                        {
                            "message": "Flow does not exist",
                            "rejectedValue": "FL_RESIDENT"
                        }
                    ],
                    "errorCount": 1
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "string",
                    "status": "string",
                    "statusCode": 0,
                    "timestamp": "2023-05-02T18:25:45.935Z",
                    "errors": [
                        {
                            "field": "string",
                            "message": "string",
                            "rejectedValue": "string"
                        }
                    ],
                    "errorCount": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91207,
        "executor_type": "THIRDPARTY",
        "executor_name": "returnsablankandunflattenedpdfbyid",
        "executor_version": "v1",
        "executor_display_name": "Returns a blank and unflattened pdf by id",
        "executor_description": "The getPdf endpoint returns a blank and unflattened pdf for the requested form ID. It is returned as a byte stream with an Accept header value of application/pdf. See the getAllFormIds endpoint for the available form IDs. For more information, see get pdf.",
        "executor_category": "Symmetrypayrollformsapi",
        "executor_category_group": "Symmetrypayrollformsapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api-staging.symmetry.com/spf/getPdf/{formId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "formId",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "formVersion",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683062135300,
        "lastModifiedTime": 1683062135301,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " Not Found response",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "uri=/spf/getPdf/AL102",
                    "status": "Not Found",
                    "statusCode": 404,
                    "timestamp": "2020-01-01 12:00:00",
                    "errors": [
                        {
                            "message": "Withholding form AL102 does not exist,expected values: [W4101,W4101SP,W6101,W8101,AL101,AL101SP,AL103,AR101,AR102,AR103,AR104,AR105,AZ101,AZ102,AZ103,AZ107,CA101,CA101SP,CO101,CO102,CT101,CT102,DC101,DC102,DE101,DE103,GA101,HI101,HI103,IA101,IA101SP,IA102,ID101,ID102,IL101,IL102,IN101,IN102,IN104,KS101,KS102,KY101,LA101,LA102,MA101,MA102,MD101,MD102,ME101,ME102,MI101,MI110,MI111,MI112,MI113,MI114,MI115,MI116,MI117,MI118,MI119,MI120,MI121,MI122,MI123,MI124,MI125,MI126,MI127,MI128,MI129,MI130,MI131,MI132,MN102,MN103,MO101,MO102,MO103,MS101,MT101,NC101,NC102,NC103,ND101,ND104,ND105,NE101,NE103,NJ101,NJ102,NM101,NM102,NY101,NY102,NY103,NY105,NY106,NY107,NY108,OH101,OH102,OH103,OH104,OK101,OK102,OR101,PA103,PA112,PA113,PA114,PR101,PR101SP,RI101,SC101,UT101,VA101,VA102,VT101,WI101,WI102,WI103,WI107,WV101,WV102,WV103]",
                            "rejectedValue": "AL102"
                        }
                    ],
                    "errorCount": 1
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "string",
                    "status": "string",
                    "statusCode": 0,
                    "timestamp": "2023-05-02T18:25:45.935Z",
                    "errors": [
                        {
                            "field": "string",
                            "message": "string",
                            "rejectedValue": "string"
                        }
                    ],
                    "errorCount": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91215,
        "executor_type": "THIRDPARTY",
        "executor_name": "docsconfig",
        "executor_version": "v1",
        "executor_display_name": "docs config",
        "executor_description": "docs config",
        "executor_category": "Symmetrypayrollformsapi",
        "executor_category_group": "Symmetrypayrollformsapi",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api-staging.symmetry.com/spf/docs/config",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683062479857,
        "lastModifiedTime": 1683062479857,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "AZ101",
                    "locality": "AZ",
                    "name": "A-4",
                    "title": "Employee's Arizona Withholding Election",
                    "formType": "Resident",
                    "initialQuestionSetId": "QS1",
                    "effectiveDate": "2021-01-01",
                    "formVersion": "2020.12.0",
                    "formFields": {
                        "formId": "AZ101",
                        "formVersion": "2020.12.0",
                        "employee": {
                            "firstName": "^[A-Za-z.\\'\\-\\, \\xC0-\\xD6\\xD8-\\xF6\\xF8-\\xFF]{1,}$",
                            "middleInitial": "^[A-Za-z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\xFF]{0,1}$",
                            "lastName": "^[A-Za-z.\\'\\-\\, \\xC0-\\xD6\\xD8-\\xF6\\xF8-\\xFF]{1,}$",
                            "socialSecurityNumber": "^([0-9]{3}-[0-9]{2}-[0-9]{4}|[0-9]{9})$",
                            "address": {
                                "streetAddress1": "^[A-Za-z0-9#,.&\\'\\- \\xC0-\\xD6\\xD8-\\xF6\\xF8-\\xFF]+$",
                                "streetAddress2": "^[A-Za-z0-9#,.&\\'\\- \\xC0-\\xD6\\xD8-\\xF6\\xF8-\\xFF]+$",
                                "city": "^[A-Za-z.,&\\'\\- \\xC0-\\xD6\\xD8-\\xF6\\xF8-\\xFF]+$",
                                "state": "^(AL|AK|AZ|AR|AS|CA|CO|CT|DE|DC|FM|FL|GA|GU|HI|ID|IL|IN|IA|KS|KY|LA|ME|MH|MD|MA|MI|MN|MS|MO|MT|NE|NV|NH|NJ|NM|NY|NC|ND|MP|OH|OK|OR|PW|PA|PR|RI|SC|SD|TN|TX|UT|VT|VA|VI|WA|WV|WI|WY)$",
                                "zipCode": "^[0-9]{5}$|^[0-9]{5}-[0-9]{4}$|^[0-9]{9}$"
                            }
                        },
                        "fields": {
                            "additionalStateWithholding": "^[+-]?[0-9]{1,3}(?:,?[0-9]{3})*(?:\\.[0-9]{2})?$",
                            "withholdingPercentage": "^(0|0.8|1.3|1.8|2.7|3.6|4.2|5.1)$"
                        },
                        "signForm": "PREVIEW"
                    },
                    "blankFormImages": [
                        "https://spfcdn.symmetry.com/images/AZ101/2020.12.0/az101_1.png"
                    ],
                    "taxParameters": [
                        {
                            "id": "AZ.percentState",
                            "valueType": "regex",
                            "regexOptions": "^(0|0.8|1.3|1.8|2.7|3.6|4.2|5.1)$",
                            "description": "Value represents the tax rate percentage that the employee has elected"
                        },
                        {
                            "id": "additionalStateWithholding",
                            "valueType": "dollarAmount",
                            "description": "Additional withholding dollar amount employee has a elected"
                        },
                        {
                            "id": "exemptFromStateWithholding",
                            "valueType": "boolean",
                            "description": "Exempt from state withholding tax"
                        },
                        {
                            "id": "mustFileWithState",
                            "valueType": "boolean",
                            "description": "Employer must file the form with the state"
                        },
                        {
                            "id": "employerIntervention",
                            "valueType": "boolean",
                            "description": "Additional employer processing required to complete the form"
                        },
                        {
                            "id": "employerInterventionReason",
                            "valueType": "regex",
                            "regexOptions": "^(null)$",
                            "description": "null - employerIntervention is null or false"
                        }
                    ]
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " Not Found response",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " bad request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "path": "string",
                    "status": "string",
                    "statusCode": 0,
                    "timestamp": "2023-05-02T18:25:45.935Z",
                    "errors": [
                        {
                            "field": "string",
                            "message": "string",
                            "rejectedValue": "string"
                        }
                    ],
                    "errorCount": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 91164,
        "executor_type": "THIRDPARTY",
        "executor_name": "apiAuthentication",
        "executor_version": "v1",
        "executor_display_name": "API Authentication",
        "executor_description": "Authorize login to the Payroll Point API, Minimum Wage Finder API, and Symmetry Payroll Forms API. Provides an access token that is valid for 24 hours.",
        "executor_category": "APIAuthentication",
        "executor_category_group": "APIAuthentication",
        "service_provider": "symmetrysoftware",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api-staging.symmetry.com/authentication/login",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1683055032188,
        "lastModifiedTime": 1683055032189,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "accessToken": "yoUrTokEnISh3re!"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": " unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Unauthorized"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    }
]