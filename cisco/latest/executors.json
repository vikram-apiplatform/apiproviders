[
    {
        "id": 125403,
        "executor_type": "THIRDPARTY",
        "executor_name": "getRoles",
        "executor_version": "v7",
        "executor_display_name": "List roles",
        "executor_description": "Retrieves a list of defined roles visible to the current user.",
        "executor_category": "Roles",
        "executor_category_group": "Roles",
        "service_provider": "cisco",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.thousandeyes.com/v7/roles",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "aid",
                "value": "",
                "description": "A unique identifier associated with your account group. You can retrieve your AccountGroupId from the /account-groups endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710316862895,
        "lastModifiedTime": 1710316862895,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Request validation failed. There are invalid or missing fields",
                    "status": 400,
                    "detail": "Your request object contains invalid fields.",
                    "instance": "/v7",
                    "errors": [
                        {
                            "code": "AM-5432",
                            "field": "firstName",
                            "message": "firstName cannot have fancy characters"
                        },
                        {
                            "code": "DASH-5622",
                            "field": "password",
                            "message": "Password cannot be blank"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "invalid_token",
                    "error_description": "Invalid access token"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Insufficient permissions to query endpoint",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "URI Resource Not Found",
                    "status": 404,
                    "detail": "Details explaining if the 404 error is related to an invalid URI or a wrong ID",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Exhausted rate limit for the organization",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Internal server error",
                    "status": 500,
                    "detail": "Optional detail about the internal error message.",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "roles": [
                        {
                            "name": "Organization Admin",
                            "roleId": "35",
                            "isBuiltin": true,
                            "hasManagementPermissions": true
                        }
                    ],
                    "_links": {
                        "self": {
                            "href": "https://api.thousandeyes.com/v7/link/to/resource/id",
                            "templated": true,
                            "type": "string",
                            "deprecation": "string",
                            "name": "string",
                            "profile": "string",
                            "title": "string",
                            "hreflang": "string"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125405,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteRole",
        "executor_version": "v7",
        "executor_display_name": "Delete role",
        "executor_description": "Deletes a role using its ID. The user needs appropriate permissions to successfully call this endpoint.",
        "executor_category": "Roles",
        "executor_category_group": "Roles",
        "service_provider": "cisco",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.thousandeyes.com/v7/roles/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "The ID of the desired role."
            }
        ],
        "queryParams": [
            {
                "key": "aid",
                "value": "",
                "description": "A unique identifier associated with your account group. You can retrieve your AccountGroupId from the /account-groups endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710317195423,
        "lastModifiedTime": 1710317195423,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Request validation failed. There are invalid or missing fields",
                    "status": 400,
                    "detail": "Your request object contains invalid fields.",
                    "instance": "/v7",
                    "errors": [
                        {
                            "code": "AM-5432",
                            "field": "firstName",
                            "message": "firstName cannot have fancy characters"
                        },
                        {
                            "code": "DASH-5622",
                            "field": "password",
                            "message": "Password cannot be blank"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "invalid_token",
                    "error_description": "Invalid access token"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Insufficient permissions to query endpoint",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "URI Resource Not Found",
                    "status": 404,
                    "detail": "Details explaining if the 404 error is related to an invalid URI or a wrong ID",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Exhausted rate limit for the organization",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Internal server error",
                    "status": 500,
                    "detail": "Optional detail about the internal error message.",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "No content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125404,
        "executor_type": "THIRDPARTY",
        "executor_name": "createRole",
        "executor_version": "v7",
        "executor_display_name": "Create role",
        "executor_description": "Creates a new role.",
        "executor_category": "Roles",
        "executor_category_group": "Roles",
        "service_provider": "cisco",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.thousandeyes.com/v7/roles",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "aid",
                "value": "",
                "description": "A unique identifier associated with your account group. You can retrieve your AccountGroupId from the /account-groups endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "Organization Admin",
                "permissions": [
                    "56",
                    "315"
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1710316999798,
        "lastModifiedTime": 1710317208627,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Request validation failed. There are invalid or missing fields",
                    "status": 400,
                    "detail": "Your request object contains invalid fields.",
                    "instance": "/v7",
                    "errors": [
                        {
                            "code": "AM-5432",
                            "field": "firstName",
                            "message": "firstName cannot have fancy characters"
                        },
                        {
                            "code": "DASH-5622",
                            "field": "password",
                            "message": "Password cannot be blank"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "invalid_token",
                    "error_description": "Invalid access token"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Insufficient permissions to query endpoint",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "URI Resource Not Found",
                    "status": 404,
                    "detail": "Details explaining if the 404 error is related to an invalid URI or a wrong ID",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Exhausted rate limit for the organization",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Internal server error",
                    "status": 500,
                    "detail": "Optional detail about the internal error message.",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "Organization Admin",
                    "roleId": "35",
                    "isBuiltin": true,
                    "permissions": [
                        {
                            "label": "View reports",
                            "permissionId": 1,
                            "isManagementPermission": true,
                            "permission": "REPORT_READ"
                        },
                        {
                            "label": "View snapshots",
                            "permissionId": 51,
                            "isManagementPermission": false,
                            "permission": "REPORT_SNAPSHOTS_READ"
                        }
                    ],
                    "_links": {
                        "self": {
                            "href": "https://api.thousandeyes.com/v7/link/to/resource/id",
                            "templated": true,
                            "type": "string",
                            "deprecation": "string",
                            "name": "string",
                            "profile": "string",
                            "title": "string",
                            "hreflang": "string"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": {
            "showBodyParamDescription": false,
            "bodyParamDescription": []
        },
        "vid": null,
        "nid": null
    },
    {
        "id": 125406,
        "executor_type": "THIRDPARTY",
        "executor_name": "getRole",
        "executor_version": "v7",
        "executor_display_name": "Retrieve role",
        "executor_description": "Returns detailed information about a role using its ID.",
        "executor_category": "Roles",
        "executor_category_group": "Roles",
        "service_provider": "cisco",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.thousandeyes.com/v7/roles/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "The ID of the desired role."
            }
        ],
        "queryParams": [
            {
                "key": "aid",
                "value": "",
                "description": "A unique identifier associated with your account group. You can retrieve your AccountGroupId from the /account-groups endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710317334093,
        "lastModifiedTime": 1710317334093,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Request validation failed. There are invalid or missing fields",
                    "status": 400,
                    "detail": "Your request object contains invalid fields.",
                    "instance": "/v7",
                    "errors": [
                        {
                            "code": "AM-5432",
                            "field": "firstName",
                            "message": "firstName cannot have fancy characters"
                        },
                        {
                            "code": "DASH-5622",
                            "field": "password",
                            "message": "Password cannot be blank"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "invalid_token",
                    "error_description": "Invalid access token"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Insufficient permissions to query endpoint",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "URI Resource Not Found",
                    "status": 404,
                    "detail": "Details explaining if the 404 error is related to an invalid URI or a wrong ID",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Exhausted rate limit for the organization",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Internal server error",
                    "status": 500,
                    "detail": "Optional detail about the internal error message.",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "Organization Admin",
                    "roleId": "35",
                    "isBuiltin": true,
                    "permissions": [
                        {
                            "label": "View reports",
                            "permissionId": 1,
                            "isManagementPermission": true,
                            "permission": "REPORT_READ"
                        },
                        {
                            "label": "View snapshots",
                            "permissionId": 51,
                            "isManagementPermission": false,
                            "permission": "REPORT_SNAPSHOTS_READ"
                        }
                    ],
                    "_links": {
                        "self": {
                            "href": "https://api.thousandeyes.com/v7/link/to/resource/id",
                            "templated": true,
                            "type": "string",
                            "deprecation": "string",
                            "name": "string",
                            "profile": "string",
                            "title": "string",
                            "hreflang": "string"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125407,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateRole",
        "executor_version": "v7",
        "executor_display_name": "Update role",
        "executor_description": "Updates a user-defined role using its ID.  When updating a role, the following applies:  The full list of permissions must be sent, This endpoint does not support delta-based grant or revoking of permissions. Permission definitions and details can be obtained from the Permissions endpoint.",
        "executor_category": "Roles",
        "executor_category_group": "Roles",
        "service_provider": "cisco",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.thousandeyes.com/v7/roles/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "The ID of the desired role."
            }
        ],
        "queryParams": [
            {
                "key": "aid",
                "value": "",
                "description": "A unique identifier associated with your account group. You can retrieve your AccountGroupId from the /account-groups endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "Organization Admin",
                "permissions": [
                    "56",
                    "315"
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710318228184,
        "lastModifiedTime": 1710318228184,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Request validation failed. There are invalid or missing fields",
                    "status": 400,
                    "detail": "Your request object contains invalid fields.",
                    "instance": "/v7",
                    "errors": [
                        {
                            "code": "AM-5432",
                            "field": "firstName",
                            "message": "firstName cannot have fancy characters"
                        },
                        {
                            "code": "DASH-5622",
                            "field": "password",
                            "message": "Password cannot be blank"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "invalid_token",
                    "error_description": "Invalid access token"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Insufficient permissions to query endpoint",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "URI Resource Not Found",
                    "status": 404,
                    "detail": "Details explaining if the 404 error is related to an invalid URI or a wrong ID",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Exhausted rate limit for the organization",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Internal server error",
                    "status": 500,
                    "detail": "Optional detail about the internal error message.",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "Organization Admin",
                    "roleId": "35",
                    "isBuiltin": true,
                    "permissions": [
                        {
                            "label": "View reports",
                            "permissionId": 1,
                            "isManagementPermission": true,
                            "permission": "REPORT_READ"
                        },
                        {
                            "label": "View snapshots",
                            "permissionId": 51,
                            "isManagementPermission": false,
                            "permission": "REPORT_SNAPSHOTS_READ"
                        }
                    ],
                    "_links": {
                        "self": {
                            "href": "https://api.thousandeyes.com/v7/link/to/resource/id",
                            "templated": true,
                            "type": "string",
                            "deprecation": "string",
                            "name": "string",
                            "profile": "string",
                            "title": "string",
                            "hreflang": "string"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125409,
        "executor_type": "THIRDPARTY",
        "executor_name": "getUserEvents",
        "executor_version": "v7",
        "executor_display_name": "List activity log events",
        "executor_description": "Returns a list of activity log events in the current account group.  If useAllPermittedAids=true query parameter is passed and the user has permission View activity log for all users in account group the logs returned include events across all the account groups they belong to.  For more information about changing the account group context, see Account Context.",
        "executor_category": "UserEvents",
        "executor_category_group": "UserEvents",
        "service_provider": "cisco",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.thousandeyes.com/v7/audit-user-events",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "aid",
                "value": "",
                "description": "A unique identifier associated with your account group. You can retrieve your AccountGroupId from the /account-groups endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response.",
                "req": false
            },
            {
                "key": "useAllPermittedAids",
                "value": "",
                "description": "Set to true to load data from all accounts the user has access to.",
                "req": false
            },
            {
                "key": "window",
                "value": "",
                "description": "A dynamic time interval up to the current time of the request. Specify the interval as a number followed by an optional type: s for seconds (default if no type is specified), m for minutes, h for hours, d for days, and w for weeks. For a precise date range, use startDate and endDate.",
                "req": false
            },
            {
                "key": "startDate",
                "value": "",
                "description": "Use with the endDate parameter. Include the complete time (hours, minutes, and seconds) in UTC time zone, following the ISO 8601 date-time format. See the example for reference. Please note that this parameter can't be used with window.",
                "req": false
            },
            {
                "key": "endDate",
                "value": "",
                "description": "Defaults to current time the request is made. Use with the startDate parameter. Include the complete time (hours, minutes, and seconds) in UTC time zone, following the ISO 8601 date-time format. See the example for reference. Please note that this parameter can't be used with window.",
                "req": false
            },
            {
                "key": "cursor",
                "value": "",
                "description": "(Optional) Opaque cursor used for pagination. Clients should use next value from _links instead of this parameter.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710319003297,
        "lastModifiedTime": 1710319003297,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Request validation failed. There are invalid or missing fields",
                    "status": 400,
                    "detail": "Your request object contains invalid fields.",
                    "instance": "/v7",
                    "errors": [
                        {
                            "code": "AM-5432",
                            "field": "firstName",
                            "message": "firstName cannot have fancy characters"
                        },
                        {
                            "code": "DASH-5622",
                            "field": "password",
                            "message": "Password cannot be blank"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "invalid_token",
                    "error_description": "Invalid access token"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Insufficient permissions to query endpoint",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "URI Resource Not Found",
                    "status": 404,
                    "detail": "Details explaining if the 404 error is related to an invalid URI or a wrong ID",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Exhausted rate limit for the organization",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Internal server error",
                    "status": 500,
                    "detail": "Optional detail about the internal error message.",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "startDate": "2022-07-17T22:00:54Z",
                    "endDate": "2022-07-18T22:00:54Z",
                    "auditEvents": [
                        {
                            "accountGroupName": "API Sandbox",
                            "aid": "1234",
                            "date": "2020-07-17T21:54:54Z",
                            "event": "Report created.",
                            "ipAddress": "99.128.0.0/11",
                            "uid": "1234",
                            "user": "API Sandbox User (noreply@thousandeyes.com)",
                            "resources": [
                                {
                                    "name": "My New report",
                                    "type": "reportTitle"
                                },
                                {
                                    "name": "Other Report",
                                    "type": "testName"
                                }
                            ]
                        },
                        {
                            "accountGroupName": "API Sandbox",
                            "aid": "1234",
                            "date": "2020-07-17T22:00:54Z",
                            "event": "Login failed.",
                            "ipAddress": "99.128.0.0/11",
                            "uid": "1234",
                            "user": "API Sandbox User (noreply@thousandeyes.com)"
                        }
                    ],
                    "_links": {
                        "previous": {
                            "href": "https://api.thousandeyes.com/v7/link/to/resource/id",
                            "templated": true,
                            "type": "string",
                            "deprecation": "string",
                            "name": "string",
                            "profile": "string",
                            "title": "string",
                            "hreflang": "string"
                        },
                        "next": {
                            "href": "https://api.thousandeyes.com/v7/link/to/resource/id",
                            "templated": true,
                            "type": "string",
                            "deprecation": "string",
                            "name": "string",
                            "profile": "string",
                            "title": "string",
                            "hreflang": "string"
                        },
                        "self": {
                            "href": "https://api.thousandeyes.com/v7/link/to/resource/id",
                            "templated": true,
                            "type": "string",
                            "deprecation": "string",
                            "name": "string",
                            "profile": "string",
                            "title": "string",
                            "hreflang": "string"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125396,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAccountGroup",
        "executor_version": "v7",
        "executor_display_name": "Retrieve account group",
        "executor_description": "Retrieves detailed information about an account group using its ID. This operation requires the View all account groups settings permission.",
        "executor_category": "AccountGroups",
        "executor_category_group": "AccountGroups",
        "service_provider": "cisco",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.thousandeyes.com/v7/account-groups/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "Identifier for the account group."
            }
        ],
        "queryParams": [
            {
                "key": "expand",
                "value": "",
                "description": "Optional parameter that specifies whether or not account group related resources should be expanded. By default, no expansion takes place if the query parameter is not passed. For example, to expand the users resource, pass the ?expand=user query.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710314745560,
        "lastModifiedTime": 1710314745560,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Request validation failed. There are invalid or missing fields",
                    "status": 400,
                    "detail": "Your request object contains invalid fields.",
                    "instance": "/v7",
                    "errors": [
                        {
                            "code": "AM-5432",
                            "field": "firstName",
                            "message": "firstName cannot have fancy characters"
                        },
                        {
                            "code": "DASH-5622",
                            "field": "password",
                            "message": "Password cannot be blank"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "invalid_token",
                    "error_description": "Invalid access token"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Insufficient permissions to query endpoint",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "URI Resource Not Found",
                    "status": 404,
                    "detail": "Details explaining if the 404 error is related to an invalid URI or a wrong ID",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Exhausted rate limit for the organization",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Internal server error",
                    "status": 500,
                    "detail": "Optional detail about the internal error message.",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "aid": "1234",
                    "accountGroupName": "Account A",
                    "isCurrentAccountGroup": true,
                    "isDefaultAccountGroup": true,
                    "organizationName": "string",
                    "users": [
                        {
                            "name": "User X",
                            "email": "userx@thousandeyes.com",
                            "uid": "235",
                            "lastLogin": "2022-07-17T22:00:54Z",
                            "dateRegistered": "2022-07-17T22:00:54Z",
                            "roles": [
                                {
                                    "name": "Organization Admin",
                                    "roleId": "35",
                                    "isBuiltin": true,
                                    "hasManagementPermissions": true
                                }
                            ]
                        }
                    ],
                    "agents": [
                        {
                            "agentType": "enterprise-cluster",
                            "ipAddresses": [
                                "99.139.65.220",
                                "9bbd:8a0a:a257:5876:288b:6cb2:3f36:64ce"
                            ],
                            "publicIpAddresses": [
                                "192.168.1.78",
                                "f9b2:3a21:f25c:d300:03f4:586d:f8d6:4e1c"
                            ],
                            "network": "AT&T Services, Inc. (AS 7018)",
                            "agentId": "281474976710706",
                            "agentName": "thousandeyes-stg-va-254",
                            "location": "San Francisco Bay Area",
                            "countryId": "US",
                            "enabled": true,
                            "prefix": "99.128.0.0/11",
                            "verifySslCertificates": true,
                            "clusterMembers": [
                                {
                                    "ipAddresses": [
                                        "99.139.65.220",
                                        "9bbd:8a0a:a257:5876:288b:6cb2:3f36:64ce"
                                    ],
                                    "publicIpAddresses": [
                                        "192.168.1.78",
                                        "f9b2:3a21:f25c:d300:03f4:586d:f8d6:4e1c"
                                    ],
                                    "network": "AT&T Services, Inc. (AS 7018)",
                                    "memberId": "10",
                                    "name": "Cluster member name",
                                    "errorDetails": [
                                        {
                                            "code": "agent-version-outdated",
                                            "description": "Agent Version 0.1.1 (latest: 1.0.0)"
                                        }
                                    ],
                                    "lastSeen": "2022-07-17T22:00:54Z",
                                    "agentState": "online",
                                    "targetForTests": "1.1.1.1",
                                    "utilization": 25
                                }
                            ],
                            "utilization": 25,
                            "accountGroups": [
                                {
                                    "aid": "1234",
                                    "accountGroupName": "Account A"
                                }
                            ],
                            "ipv6Policy": "force-ipv4",
                            "errorDetails": [
                                {
                                    "code": "agent-version-outdated",
                                    "description": "Agent Version 0.1.1 (latest: 1.0.0)"
                                }
                            ],
                            "hostname": "thousandeyes.com",
                            "lastSeen": "2022-07-17T22:00:54Z",
                            "agentState": "online",
                            "keepBrowserCache": true,
                            "createdDate": "2022-07-17T22:00:54Z",
                            "targetForTests": "1.1.1.1",
                            "localResolutionPrefixes": [
                                "10.2.3.3/24"
                            ],
                            "interfaceIpMappings": [
                                {
                                    "interfaceName": "wlp4s0",
                                    "ipAddresses": [
                                        "73.252.207.219",
                                        "2601:646:300:3ae0::b977"
                                    ]
                                }
                            ]
                        }
                    ],
                    "_links": {
                        "self": {
                            "href": "https://api.thousandeyes.com/v7/link/to/resource/id",
                            "templated": true,
                            "type": "string",
                            "deprecation": "string",
                            "name": "string",
                            "profile": "string",
                            "title": "string",
                            "hreflang": "string"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125393,
        "executor_type": "THIRDPARTY",
        "executor_name": "listaccountgroups",
        "executor_version": "v7",
        "executor_display_name": "List account groups",
        "executor_description": "Retrieves a list of account groups available to the current user.",
        "executor_category": "AccountGroups",
        "executor_category_group": "AccountGroups",
        "service_provider": "cisco",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.thousandeyes.com/v7/account-groups",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "aid",
                "value": "",
                "description": "A unique identifier associated with your account group. You can retrieve your AccountGroupId from the /account-groups endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710313715986,
        "lastModifiedTime": 1710313715986,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "accountGroups": [
                        {
                            "aid": "1234",
                            "accountGroupName": "Account A",
                            "isCurrentAccountGroup": true,
                            "isDefaultAccountGroup": true,
                            "organizationName": "string"
                        }
                    ],
                    "_links": {
                        "self": {
                            "href": "https://api.thousandeyes.com/v7/link/to/resource/id",
                            "templated": true,
                            "type": "string",
                            "deprecation": "string",
                            "name": "string",
                            "profile": "string",
                            "title": "string",
                            "hreflang": "string"
                        }
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Request validation failed. There are invalid or missing fields",
                    "status": 400,
                    "detail": "Your request object contains invalid fields.",
                    "instance": "/v7",
                    "errors": [
                        {
                            "code": "AM-5432",
                            "field": "firstName",
                            "message": "firstName cannot have fancy characters"
                        },
                        {
                            "code": "DASH-5622",
                            "field": "password",
                            "message": "Password cannot be blank"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "invalid_token",
                    "error_description": "Invalid access token"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Insufficient permissions to query endpoint",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "URI Resource Not Found",
                    "status": 404,
                    "detail": "Details explaining if the 404 error is related to an invalid URI or a wrong ID",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Exhausted rate limit for the organization",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Internal server error",
                    "status": 500,
                    "detail": "Optional detail about the internal error message.",
                    "instance": "/v7"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125394,
        "executor_type": "THIRDPARTY",
        "executor_name": "createaccountgroup",
        "executor_version": "v7",
        "executor_display_name": "Create account group",
        "executor_description": "Creates a new account group. This operation requires the Edit all account groups permission.",
        "executor_category": "AccountGroups",
        "executor_category_group": "AccountGroups",
        "service_provider": "cisco",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.thousandeyes.com/v7/account-groups",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "expand",
                "value": "",
                "description": "Optional parameter that specifies whether or not account group related resources should be expanded. By default, no expansion takes place if the query parameter is not passed. For example, to expand the users resource, pass the ?expand=user query.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "accountGroupName": "My testing account group",
                "agents": [
                    "105",
                    "719"
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710314134505,
        "lastModifiedTime": 1710314134505,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Request validation failed. There are invalid or missing fields",
                    "status": 400,
                    "detail": "Your request object contains invalid fields.",
                    "instance": "/v7",
                    "errors": [
                        {
                            "code": "AM-5432",
                            "field": "firstName",
                            "message": "firstName cannot have fancy characters"
                        },
                        {
                            "code": "DASH-5622",
                            "field": "password",
                            "message": "Password cannot be blank"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "invalid_token",
                    "error_description": "Invalid access token"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Insufficient permissions to query endpoint",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "URI Resource Not Found",
                    "status": 404,
                    "detail": "Details explaining if the 404 error is related to an invalid URI or a wrong ID",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Exhausted rate limit for the organization",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Internal server error",
                    "status": 500,
                    "detail": "Optional detail about the internal error message.",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "aid": "1234",
                    "accountGroupName": "Account A",
                    "isCurrentAccountGroup": true,
                    "isDefaultAccountGroup": true,
                    "organizationName": "string",
                    "users": [
                        {
                            "name": "User X",
                            "email": "userx@thousandeyes.com",
                            "uid": "235",
                            "lastLogin": "2022-07-17T22:00:54Z",
                            "dateRegistered": "2022-07-17T22:00:54Z",
                            "roles": [
                                {
                                    "name": "Organization Admin",
                                    "roleId": "35",
                                    "isBuiltin": true,
                                    "hasManagementPermissions": true
                                }
                            ]
                        }
                    ],
                    "_links": {
                        "self": {
                            "href": "https://api.thousandeyes.com/v7/link/to/resource/id",
                            "templated": true,
                            "type": "string",
                            "deprecation": "string",
                            "name": "string",
                            "profile": "string",
                            "title": "string",
                            "hreflang": "string"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125395,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteAccountGroup",
        "executor_version": "v7",
        "executor_display_name": "Delete account group",
        "executor_description": "Deletes an account group using its ID. This operation requires the following permissions:  Assign management permissions Delete account Edit all account groups",
        "executor_category": "AccountGroups",
        "executor_category_group": "AccountGroups",
        "service_provider": "cisco",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.thousandeyes.com/v7/account-groups/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "Identifier for the account group."
            }
        ],
        "queryParams": [
            {
                "key": "expand",
                "value": "",
                "description": "Optional parameter that specifies whether or not account group related resources should be expanded. By default, no expansion takes place if the query parameter is not passed. For example, to expand the users resource, pass the ?expand=user query.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710314364476,
        "lastModifiedTime": 1710314364476,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Request validation failed. There are invalid or missing fields",
                    "status": 400,
                    "detail": "Your request object contains invalid fields.",
                    "instance": "/v7",
                    "errors": [
                        {
                            "code": "AM-5432",
                            "field": "firstName",
                            "message": "firstName cannot have fancy characters"
                        },
                        {
                            "code": "DASH-5622",
                            "field": "password",
                            "message": "Password cannot be blank"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "invalid_token",
                    "error_description": "Invalid access token"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Insufficient permissions to query endpoint",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "URI Resource Not Found",
                    "status": 404,
                    "detail": "Details explaining if the 404 error is related to an invalid URI or a wrong ID",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Exhausted rate limit for the organization",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Internal server error",
                    "status": 500,
                    "detail": "Optional detail about the internal error message.",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "No content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125397,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateAccountGroup",
        "executor_version": "v7",
        "executor_display_name": "Update account group",
        "executor_description": "Updates an account group using its ID. You can modify the account group\u2019s name or the list of agents assigned to the account group.",
        "executor_category": "AccountGroups",
        "executor_category_group": "AccountGroups",
        "service_provider": "cisco",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.thousandeyes.com/v7/account-groups/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "Identifier for the account group."
            }
        ],
        "queryParams": [
            {
                "key": "expand",
                "value": "",
                "description": "Optional parameter that specifies whether or not account group related resources should be expanded. By default, no expansion takes place if the query parameter is not passed. For example, to expand the users resource, pass the ?expand=user query.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "accountGroupName": "My testing account group",
                "agents": [
                    "105",
                    "719"
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710314944248,
        "lastModifiedTime": 1710314944248,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Request validation failed. There are invalid or missing fields",
                    "status": 400,
                    "detail": "Your request object contains invalid fields.",
                    "instance": "/v7",
                    "errors": [
                        {
                            "code": "AM-5432",
                            "field": "firstName",
                            "message": "firstName cannot have fancy characters"
                        },
                        {
                            "code": "DASH-5622",
                            "field": "password",
                            "message": "Password cannot be blank"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "invalid_token",
                    "error_description": "Invalid access token"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Insufficient permissions to query endpoint",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "URI Resource Not Found",
                    "status": 404,
                    "detail": "Details explaining if the 404 error is related to an invalid URI or a wrong ID",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Exhausted rate limit for the organization",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Internal server error",
                    "status": 500,
                    "detail": "Optional detail about the internal error message.",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "aid": "1234",
                    "accountGroupName": "Account A",
                    "isCurrentAccountGroup": true,
                    "isDefaultAccountGroup": true,
                    "organizationName": "string",
                    "users": [
                        {
                            "name": "User X",
                            "email": "userx@thousandeyes.com",
                            "uid": "235",
                            "lastLogin": "2022-07-17T22:00:54Z",
                            "dateRegistered": "2022-07-17T22:00:54Z",
                            "roles": [
                                {
                                    "name": "Organization Admin",
                                    "roleId": "35",
                                    "isBuiltin": true,
                                    "hasManagementPermissions": true
                                }
                            ]
                        }
                    ],
                    "agents": [
                        {
                            "agentType": "enterprise-cluster",
                            "ipAddresses": [
                                "99.139.65.220",
                                "9bbd:8a0a:a257:5876:288b:6cb2:3f36:64ce"
                            ],
                            "publicIpAddresses": [
                                "192.168.1.78",
                                "f9b2:3a21:f25c:d300:03f4:586d:f8d6:4e1c"
                            ],
                            "network": "AT&T Services, Inc. (AS 7018)",
                            "agentId": "281474976710706",
                            "agentName": "thousandeyes-stg-va-254",
                            "location": "San Francisco Bay Area",
                            "countryId": "US",
                            "enabled": true,
                            "prefix": "99.128.0.0/11",
                            "verifySslCertificates": true,
                            "clusterMembers": [
                                {
                                    "ipAddresses": [
                                        "99.139.65.220",
                                        "9bbd:8a0a:a257:5876:288b:6cb2:3f36:64ce"
                                    ],
                                    "publicIpAddresses": [
                                        "192.168.1.78",
                                        "f9b2:3a21:f25c:d300:03f4:586d:f8d6:4e1c"
                                    ],
                                    "network": "AT&T Services, Inc. (AS 7018)",
                                    "memberId": "10",
                                    "name": "Cluster member name",
                                    "errorDetails": [
                                        {
                                            "code": "agent-version-outdated",
                                            "description": "Agent Version 0.1.1 (latest: 1.0.0)"
                                        }
                                    ],
                                    "lastSeen": "2022-07-17T22:00:54Z",
                                    "agentState": "online",
                                    "targetForTests": "1.1.1.1",
                                    "utilization": 25
                                }
                            ],
                            "utilization": 25,
                            "accountGroups": [
                                {
                                    "aid": "1234",
                                    "accountGroupName": "Account A"
                                }
                            ],
                            "ipv6Policy": "force-ipv4",
                            "errorDetails": [
                                {
                                    "code": "agent-version-outdated",
                                    "description": "Agent Version 0.1.1 (latest: 1.0.0)"
                                }
                            ],
                            "hostname": "thousandeyes.com",
                            "lastSeen": "2022-07-17T22:00:54Z",
                            "agentState": "online",
                            "keepBrowserCache": true,
                            "createdDate": "2022-07-17T22:00:54Z",
                            "targetForTests": "1.1.1.1",
                            "localResolutionPrefixes": [
                                "10.2.3.3/24"
                            ],
                            "interfaceIpMappings": [
                                {
                                    "interfaceName": "wlp4s0",
                                    "ipAddresses": [
                                        "73.252.207.219",
                                        "2601:646:300:3ae0::b977"
                                    ]
                                }
                            ]
                        }
                    ],
                    "_links": {
                        "self": {
                            "href": "https://api.thousandeyes.com/v7/link/to/resource/id",
                            "templated": true,
                            "type": "string",
                            "deprecation": "string",
                            "name": "string",
                            "profile": "string",
                            "title": "string",
                            "hreflang": "string"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125398,
        "executor_type": "THIRDPARTY",
        "executor_name": "getUsers",
        "executor_version": "v7",
        "executor_display_name": "List Users",
        "executor_description": "Retrieves a list of users in the organization the account group ID belongs to. This operation requires the API Access and View all users permissions. See Account Context for more information on changing the account group context.",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "cisco",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.thousandeyes.com/v7/users",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "aid",
                "value": "",
                "description": "A unique identifier associated with your account group. You can retrieve your AccountGroupId from the /account-groups endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710315383435,
        "lastModifiedTime": 1710315383435,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Request validation failed. There are invalid or missing fields",
                    "status": 400,
                    "detail": "Your request object contains invalid fields.",
                    "instance": "/v7",
                    "errors": [
                        {
                            "code": "AM-5432",
                            "field": "firstName",
                            "message": "firstName cannot have fancy characters"
                        },
                        {
                            "code": "DASH-5622",
                            "field": "password",
                            "message": "Password cannot be blank"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "invalid_token",
                    "error_description": "Invalid access token"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Insufficient permissions to query endpoint",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "URI Resource Not Found",
                    "status": 404,
                    "detail": "Details explaining if the 404 error is related to an invalid URI or a wrong ID",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Exhausted rate limit for the organization",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Internal server error",
                    "status": 500,
                    "detail": "Optional detail about the internal error message.",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "users": [
                        {
                            "name": "User X",
                            "email": "userx@thousandeyes.com",
                            "uid": "245",
                            "dateRegistered": "2020-07-17T22:00:54Z",
                            "loginAccountGroup": {
                                "aid": "1234",
                                "accountGroupName": "Account A"
                            },
                            "lastLogin": "2022-07-17T22:00:54Z"
                        }
                    ],
                    "_links": {
                        "self": {
                            "href": "https://api.thousandeyes.com/v7/link/to/resource/id",
                            "templated": true,
                            "type": "string",
                            "deprecation": "string",
                            "name": "string",
                            "profile": "string",
                            "title": "string",
                            "hreflang": "string"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125400,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteUser",
        "executor_version": "v7",
        "executor_display_name": "Delete user",
        "executor_description": "Deletes a user using the user ID. This endpoint requires the Edit users in all account groups or Edit users permission.",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "cisco",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.thousandeyes.com/v7/users/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "Identifier for the user."
            }
        ],
        "queryParams": [
            {
                "key": "aid",
                "value": "",
                "description": "A unique identifier associated with your account group. You can retrieve your AccountGroupId from the /account-groups endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710316069898,
        "lastModifiedTime": 1710316069898,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Request validation failed. There are invalid or missing fields",
                    "status": 400,
                    "detail": "Your request object contains invalid fields.",
                    "instance": "/v7",
                    "errors": [
                        {
                            "code": "AM-5432",
                            "field": "firstName",
                            "message": "firstName cannot have fancy characters"
                        },
                        {
                            "code": "DASH-5622",
                            "field": "password",
                            "message": "Password cannot be blank"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "invalid_token",
                    "error_description": "Invalid access token"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Insufficient permissions to query endpoint",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "URI Resource Not Found",
                    "status": 404,
                    "detail": "Details explaining if the 404 error is related to an invalid URI or a wrong ID",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Exhausted rate limit for the organization",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Internal server error",
                    "status": 500,
                    "detail": "Optional detail about the internal error message.",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": "No content",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125401,
        "executor_type": "THIRDPARTY",
        "executor_name": "getUser",
        "executor_version": "v7",
        "executor_display_name": "Retrieve user",
        "executor_description": "Retrieves detailed information about a user. This operation requires the API Access and View All Users permissions.",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "cisco",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.thousandeyes.com/v7/users/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "Identifier for the user."
            }
        ],
        "queryParams": [
            {
                "key": "aid",
                "value": "",
                "description": "A unique identifier associated with your account group. You can retrieve your AccountGroupId from the /account-groups endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710316297128,
        "lastModifiedTime": 1710316297128,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Request validation failed. There are invalid or missing fields",
                    "status": 400,
                    "detail": "Your request object contains invalid fields.",
                    "instance": "/v7",
                    "errors": [
                        {
                            "code": "AM-5432",
                            "field": "firstName",
                            "message": "firstName cannot have fancy characters"
                        },
                        {
                            "code": "DASH-5622",
                            "field": "password",
                            "message": "Password cannot be blank"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "invalid_token",
                    "error_description": "Invalid access token"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Insufficient permissions to query endpoint",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "URI Resource Not Found",
                    "status": 404,
                    "detail": "Details explaining if the 404 error is related to an invalid URI or a wrong ID",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Exhausted rate limit for the organization",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Internal server error",
                    "status": 500,
                    "detail": "Optional detail about the internal error message.",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "User X",
                    "email": "userx@thousandeyes.com",
                    "uid": "245",
                    "dateRegistered": "2020-07-17T22:00:54Z",
                    "loginAccountGroup": {
                        "aid": "1234",
                        "accountGroupName": "Account A"
                    },
                    "lastLogin": "2022-07-17T22:00:54Z",
                    "accountGroupRoles": [
                        {
                            "accountGroup": {
                                "aid": "1234",
                                "accountGroupName": "Account A"
                            },
                            "roles": [
                                {
                                    "name": "Organization Admin",
                                    "roleId": "35",
                                    "isBuiltin": true,
                                    "hasManagementPermissions": true
                                }
                            ]
                        }
                    ],
                    "allAccountGroupRoles": [
                        {
                            "name": "Organization Admin",
                            "roleId": "35",
                            "isBuiltin": true,
                            "hasManagementPermissions": true
                        }
                    ],
                    "_links": {
                        "self": {
                            "href": "https://api.thousandeyes.com/v7/link/to/resource/id",
                            "templated": true,
                            "type": "string",
                            "deprecation": "string",
                            "name": "string",
                            "profile": "string",
                            "title": "string",
                            "hreflang": "string"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125402,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateUser",
        "executor_version": "v7",
        "executor_display_name": "Update user",
        "executor_description": "Updates a user using the user ID. You can update the user name, email address, account group assignments, or roles. This endpoint requires the Edit users in all account groups or Edit users permission.  When updating a user, the following applies:  When updating a user's email address, the user must confirm the username change before they can subsequently log in or perform API operations. Any update that includes accountGroupRoles is a replace-based update and not a delta-based update.",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "cisco",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.thousandeyes.com/v7/users/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "Identifier for the user."
            }
        ],
        "queryParams": [
            {
                "key": "aid",
                "value": "",
                "description": "A unique identifier associated with your account group. You can retrieve your AccountGroupId from the /account-groups endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "User X",
                "email": "userx@thousandeyes.com",
                "loginAccountGroupId": "691",
                "accountGroupRoles": [
                    {
                        "accountGroupId": "315",
                        "roleIds": [
                            "57",
                            "1140"
                        ]
                    }
                ],
                "allAccountGroupRoleIds": [
                    "57",
                    "1140"
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710316584102,
        "lastModifiedTime": 1710316584102,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Request validation failed. There are invalid or missing fields",
                    "status": 400,
                    "detail": "Your request object contains invalid fields.",
                    "instance": "/v7",
                    "errors": [
                        {
                            "code": "AM-5432",
                            "field": "firstName",
                            "message": "firstName cannot have fancy characters"
                        },
                        {
                            "code": "DASH-5622",
                            "field": "password",
                            "message": "Password cannot be blank"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "invalid_token",
                    "error_description": "Invalid access token"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Insufficient permissions to query endpoint",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "URI Resource Not Found",
                    "status": 404,
                    "detail": "Details explaining if the 404 error is related to an invalid URI or a wrong ID",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Exhausted rate limit for the organization",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Internal server error",
                    "status": 500,
                    "detail": "Optional detail about the internal error message.",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "User X",
                    "email": "userx@thousandeyes.com",
                    "uid": "245",
                    "dateRegistered": "2020-07-17T22:00:54Z",
                    "loginAccountGroup": {
                        "aid": "1234",
                        "accountGroupName": "Account A"
                    },
                    "lastLogin": "2022-07-17T22:00:54Z",
                    "accountGroupRoles": [
                        {
                            "accountGroup": {
                                "aid": "1234",
                                "accountGroupName": "Account A"
                            },
                            "roles": [
                                {
                                    "name": "Organization Admin",
                                    "roleId": "35",
                                    "isBuiltin": true,
                                    "hasManagementPermissions": true
                                }
                            ]
                        }
                    ],
                    "allAccountGroupRoles": [
                        {
                            "name": "Organization Admin",
                            "roleId": "35",
                            "isBuiltin": true,
                            "hasManagementPermissions": true
                        }
                    ],
                    "_links": {
                        "self": {
                            "href": "https://api.thousandeyes.com/v7/link/to/resource/id",
                            "templated": true,
                            "type": "string",
                            "deprecation": "string",
                            "name": "string",
                            "profile": "string",
                            "title": "string",
                            "hreflang": "string"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125399,
        "executor_type": "THIRDPARTY",
        "executor_name": "createUser",
        "executor_version": "v7",
        "executor_display_name": "Create user",
        "executor_description": "Creates a new user.  The following applies when creating a user:  If the user is already a member of another ThousandEyes customer organization, the user must set their own login account group. Any update that includes accountGroupRoles is a replace-based update and not a delta-based update.",
        "executor_category": "Users",
        "executor_category_group": "Users",
        "service_provider": "cisco",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.thousandeyes.com/v7/users",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "aid",
                "value": "",
                "description": "A unique identifier associated with your account group. You can retrieve your AccountGroupId from the /account-groups endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "name": "User X",
                "email": "userx@thousandeyes.com",
                "loginAccountGroupId": "691",
                "accountGroupRoles": [
                    {
                        "accountGroupId": "315",
                        "roleIds": [
                            "57",
                            "1140"
                        ]
                    }
                ],
                "allAccountGroupRoleIds": [
                    "57",
                    "1140"
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710315815136,
        "lastModifiedTime": 1710315815136,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Request validation failed. There are invalid or missing fields",
                    "status": 400,
                    "detail": "Your request object contains invalid fields.",
                    "instance": "/v7",
                    "errors": [
                        {
                            "code": "AM-5432",
                            "field": "firstName",
                            "message": "firstName cannot have fancy characters"
                        },
                        {
                            "code": "DASH-5622",
                            "field": "password",
                            "message": "Password cannot be blank"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "invalid_token",
                    "error_description": "Invalid access token"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Insufficient permissions to query endpoint",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "URI Resource Not Found",
                    "status": 404,
                    "detail": "Details explaining if the 404 error is related to an invalid URI or a wrong ID",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Exhausted rate limit for the organization",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Internal server error",
                    "status": 500,
                    "detail": "Optional detail about the internal error message.",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "name": "User X",
                    "email": "userx@thousandeyes.com",
                    "uid": "245",
                    "dateRegistered": "2020-07-17T22:00:54Z",
                    "loginAccountGroup": {
                        "aid": "1234",
                        "accountGroupName": "Account A"
                    },
                    "accountGroupRoles": [
                        {
                            "accountGroup": {
                                "aid": "1234",
                                "accountGroupName": "Account A"
                            },
                            "roles": [
                                {
                                    "name": "Organization Admin",
                                    "roleId": "35",
                                    "isBuiltin": true,
                                    "hasManagementPermissions": true
                                }
                            ]
                        }
                    ],
                    "allAccountGroupRoles": [
                        {
                            "name": "Organization Admin",
                            "roleId": "35",
                            "isBuiltin": true,
                            "hasManagementPermissions": true
                        }
                    ],
                    "_links": {
                        "self": {
                            "href": "https://api.thousandeyes.com/v7/link/to/resource/id",
                            "templated": true,
                            "type": "string",
                            "deprecation": "string",
                            "name": "string",
                            "profile": "string",
                            "title": "string",
                            "hreflang": "string"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 125408,
        "executor_type": "THIRDPARTY",
        "executor_name": "getPermissions",
        "executor_version": "v7",
        "executor_display_name": "List assignable permissions",
        "executor_description": "Users must be in a role assigned management permissions to access this endpoint. Users without management permissions who attempt to access this endpoint receive an HTTP/403 response code.",
        "executor_category": "Permissions",
        "executor_category_group": "Permissions",
        "service_provider": "cisco",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.thousandeyes.com/v7/permissions",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "aid",
                "value": "",
                "description": "A unique identifier associated with your account group. You can retrieve your AccountGroupId from the /account-groups endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1710318513085,
        "lastModifiedTime": 1710318513085,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Bad Request",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Request validation failed. There are invalid or missing fields",
                    "status": 400,
                    "detail": "Your request object contains invalid fields.",
                    "instance": "/v7",
                    "errors": [
                        {
                            "code": "AM-5432",
                            "field": "firstName",
                            "message": "firstName cannot have fancy characters"
                        },
                        {
                            "code": "DASH-5622",
                            "field": "password",
                            "message": "Password cannot be blank"
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "invalid_token",
                    "error_description": "Invalid access token"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Insufficient permissions to query endpoint",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "URI Resource Not Found",
                    "status": 404,
                    "detail": "Details explaining if the 404 error is related to an invalid URI or a wrong ID",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 429,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Exhausted rate limit for the organization",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "title": "string",
                    "status": 0,
                    "detail": "string",
                    "instance": "string"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal server error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "about:blank",
                    "title": "Internal server error",
                    "status": 500,
                    "detail": "Optional detail about the internal error message.",
                    "instance": "/v7"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "permissions": [
                        {
                            "label": "View reports",
                            "permissionId": 1,
                            "isManagementPermission": true,
                            "permission": "REPORT_READ"
                        },
                        {
                            "label": "View snapshots",
                            "permissionId": 51,
                            "isManagementPermission": false,
                            "permission": "REPORT_SNAPSHOTS_READ"
                        }
                    ],
                    "_links": {
                        "self": {
                            "href": "https://api.thousandeyes.com/v7/link/to/resource/id",
                            "templated": true,
                            "type": "string",
                            "deprecation": "string",
                            "name": "string",
                            "profile": "string",
                            "title": "string",
                            "hreflang": "string"
                        }
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    }
]