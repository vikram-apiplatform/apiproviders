[
    {
        "id": 96181,
        "executor_type": "THIRDPARTY",
        "executor_name": "getBoundarybyID",
        "executor_version": "v1",
        "executor_display_name": "Get Boundary by ID",
        "executor_description": "Get boundary information in GeoJSON format. Useful for showing coverage areas for a specific service, organization or network.",
        "executor_category": "HealthcareServicesFHIRAPI",
        "executor_category_group": "HealthcareServicesFHIRAPI",
        "service_provider": "caredove",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://apifhir-sand.caredove.com /cd-media/boundary-geojson/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [],
        "authModel": {
            "authType": "basic_authentication",
            "authAttributes": {
                "username": "",
                "password": ""
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685751729195,
        "lastModifiedTime": 1685751729195,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 96177,
        "executor_type": "THIRDPARTY",
        "executor_name": "getHealthcareServicebySearchParameters",
        "executor_version": "v1",
        "executor_display_name": "Get Healthcare Service by Search Parameters",
        "executor_description": "Get Service Requests by Parameter",
        "executor_category": "HealthcareServicesFHIRAPI",
        "executor_category_group": "HealthcareServicesFHIRAPI",
        "service_provider": "caredove",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://apifhir-sand.caredove.com /HealthcareService",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "count",
                "value": "",
                "description": "Max number of Service Requests returned. To implement pagination, use the _count parameter jointly with the start parameter, for example, _count=10 and start=0 will retrieve the first page of results, and, _count=10 and start=10 will retrieve the second page of results.",
                "req": false
            },
            {
                "key": "lastUpdated",
                "value": "",
                "description": "The last updated date for a Service Request. When searching by this property, prefix the date (yyyy-mm-dd format) with relational operators such as eq, lt, le, gt, and ge.",
                "req": false
            },
            {
                "key": "start",
                "value": "",
                "description": "The starting result index for the next set of Service Requests. To implement pagination, use the _count parameter jointly with the start parameter, for example, _count=10 and start=0 will retrieve the first page of results, and, _count=10 and start=10 will retrieve the second page of results.",
                "req": false
            },
            {
                "key": "id",
                "value": "",
                "description": "ID for a Service Request in Caredove.",
                "req": false
            },
            {
                "key": "include",
                "value": "",
                "description": "ther resources to be included related to the Service Request. ServiceRequest:requester is represented in the results bundle as a FHIR PractitionerRole resource.",
                "req": false
            },
            {
                "key": "servicetype",
                "value": "",
                "description": "Healthcare Service category code to filter results by, for example, meals-on-wheels, adult-day-program, care-coordination, driving-assessment, foot-care, friendly-visiting, group-dining, etc.  Example: meals-on-wheels",
                "req": false
            },
            {
                "key": "network",
                "value": "",
                "description": "Network ID for a network in Caredove.",
                "req": false
            },
            {
                "key": "organization",
                "value": "",
                "description": "Organization ID for a Healthcare Service Provider in Caredove.",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "basic_authentication",
            "authAttributes": {
                "username": "",
                "password": ""
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685751525811,
        "lastModifiedTime": 1685751525811,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 96188,
        "executor_type": "THIRDPARTY",
        "executor_name": "addServiceRequestcaredove",
        "executor_version": "v1",
        "executor_display_name": "Add Service Request",
        "executor_description": "Add Service Request",
        "executor_category": "ServiceRequestWebhooks",
        "executor_category_group": "ServiceRequestWebhooks",
        "service_provider": "caredove",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://apifhir-sand.caredove.com /MessageHeader/$process-message",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "basic_authentication",
            "authAttributes": {
                "username": "",
                "password": ""
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685752332636,
        "lastModifiedTime": 1685752332636,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 96186,
        "executor_type": "THIRDPARTY",
        "executor_name": "getServiceRequestsbyParametercaredove",
        "executor_version": "v1",
        "executor_display_name": "Get BounGet Service Requests by ParameterGet Service Requests by Parameterdary by ID",
        "executor_description": "Get Service Requests by Parameter",
        "executor_category": "ServiceRequestWebhooks",
        "executor_category_group": "ServiceRequestWebhooks",
        "service_provider": "caredove",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://apifhir-sand.caredove.com /ServiceRequest",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "count",
                "value": "",
                "description": "Max number of Service Requests returned. To implement pagination, use the _count parameter jointly with the start parameter, for example, _count=10 and start=0 will retrieve the first page of results, and, _count=10 and start=10 will retrieve the second page of results.",
                "req": false
            },
            {
                "key": "hasTaskbasedonbusinessstatus",
                "value": "",
                "description": "Reverse chaining",
                "req": false
            },
            {
                "key": "lastUpdated",
                "value": "",
                "description": "The last updated date for a Service Request. When searching by this property, prefix the date (yyyy-mm-dd format) with relational operators such as eq, lt, le, gt, and ge.  Example: _lastUpdated=ge2022-08-17",
                "req": false
            },
            {
                "key": "revinclude",
                "value": "",
                "description": "Use the _revinclude parameter to include resources that reference the Service Request ID in the response bundle.",
                "req": false
            },
            {
                "key": "start",
                "value": "",
                "description": "The starting result index for the next set of Service Requests. To implement pagination, use the _count parameter jointly with the start parameter, for example, _count=10 and start=0 will retrieve the first page of results, and, _count=10 and start=10 will retrieve the second page of results.",
                "req": false
            },
            {
                "key": "status",
                "value": "",
                "description": "The status of a Service Request  Allowed values: active completed Example: active",
                "req": false
            },
            {
                "key": "id",
                "value": "",
                "description": "ID for a Service Request in Caredove.  Example: 9868496243",
                "req": false
            },
            {
                "key": "include",
                "value": "",
                "description": "Other resources to be included related to the Service Request. ServiceRequest:requester is represented in the results bundle as a FHIR PractitionerRole resource.  Allowed values: * ServiceRequest:patient ServiceRequest:requester Example: ServiceRequest:patient",
                "req": false
            }
        ],
        "headers": [],
        "authModel": {
            "authType": "basic_authentication",
            "authAttributes": {
                "username": "",
                "password": ""
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1685752229180,
        "lastModifiedTime": 1685752229180,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Unauthorized",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "resourceType": "OperationOutcome",
                    "issue": [
                        {
                            "severity": "fatal",
                            "code": "login",
                            "diagnostics": "Authentication credentials are required"
                        }
                    ]
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Internal Server Error",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    }
]