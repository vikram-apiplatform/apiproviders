[
    {
        "id": 112179,
        "executor_type": "THIRDPARTY",
        "executor_name": "loginUsingUserkey",
        "executor_version": "v1",
        "executor_display_name": "Login Using Userkey",
        "executor_description": "User can use this api for login into the system using user key, which has been sent to the user in mail, whenever user have purchase any tickets or user has been added as a admin/staff in specified event. There is no requirement of username and password. User can use this user key only for once.",
        "executor_category": "Signup/Login",
        "executor_category_group": "Signup/Login",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/u/loginUserByUserKey/{userKey}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "userKey",
                "value": "",
                "description": "User key is an encrypted key which may help in auto login to the system.This is widely used as part of sending email as part of event url and also send out in text messages."
            }
        ],
        "queryParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Pass event url for which event user get's a user key in mail.",
                "req": false
            },
            {
                "key": "wayToLogin",
                "value": "",
                "description": "The way user get login. ex: MAGIC_LINK",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692596443871,
        "lastModifiedTime": 1692596443871,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "access_token": "string",
                    "expires_in": "string",
                    "redirectUrl": "string",
                    "showExhibitorMenu": true,
                    "userId": 0,
                    "userRole": "string",
                    "whiteLabelURL": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112177,
        "executor_type": "THIRDPARTY",
        "executor_name": "loginUsingToken",
        "executor_version": "v1",
        "executor_display_name": "Login Using Token",
        "executor_description": "User can use this api for login into system using token which is sent to the user in registered email as a access link, whenever new user added as a speaker/exhibitor-admin/lead-retriever in specific event. It will return access token details and user details in the response.",
        "executor_category": "Signup/Login",
        "executor_category_group": "Signup/Login",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/u/login/token/{token}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "token",
                "value": "",
                "description": "Token is auto generated string which generated after the user login. This will be used for calling other apis in system."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692596343385,
        "lastModifiedTime": 1692596343385,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "accessToken": {
                        "access_token": "string",
                        "expires_in": "string",
                        "redirectUrl": "string",
                        "showExhibitorMenu": true,
                        "userId": 0,
                        "userRole": "string",
                        "whiteLabelURL": "string"
                    },
                    "userInfoDto": {
                        "countryCode": "US",
                        "email": "string",
                        "eventId": 0,
                        "firstName": "string",
                        "lastName": "string",
                        "marketingOptIn": false,
                        "phonenumber": 0,
                        "role": [
                            "string"
                        ],
                        "userId": 0,
                        "userProfilePhoto": "string"
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112173,
        "executor_type": "THIRDPARTY",
        "executor_name": "loginSignupUsingFacebookAtAdminSide",
        "executor_version": "v1",
        "executor_display_name": "Login/Signup Using Facebook at Admin Side",
        "executor_description": "User can use this api for login/signup into the system as a admin role.  We need to pass token here, which is generated after successful login into the Facebook account with the other details.  So if user account is already available than it will simply login into the system, if user is not registered in the system, than it will create new user into the system and automatically login into the system.",
        "executor_category": "Signup/Login",
        "executor_category_group": "Signup/Login",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/u/login/facebook/admin",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "accessToken": "string",
                "phoneNumber": 0,
                "countryCode": "string",
                "mergeAccount": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692595596456,
        "lastModifiedTime": 1692595596456,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "access_token": "string",
                    "expires_in": "string",
                    "redirectUrl": "string",
                    "showExhibitorMenu": true,
                    "userId": 0,
                    "userRole": "string",
                    "whiteLabelURL": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112171,
        "executor_type": "THIRDPARTY",
        "executor_name": "signupWhitelabel",
        "executor_version": "v1",
        "executor_display_name": "Signup Whitelabel",
        "executor_description": "When user wants to register as a whitelabel admin this API is useful. User have to pass email and password (match with the defined password criteria) for registration with whitelabelurl in which user wants to register. Access token which is return from this api response will be pass in further request for user authentication.",
        "executor_category": "Signup/Login",
        "executor_category_group": "Signup/Login",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/u/signup/whiteLabel/{whiteLabelURL}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "whiteLabelURL",
                "value": "",
                "description": "White label url is a unique url which is managed and provided by white label admin. You can have multiple events within same white label url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "email": "string",
                "password": "string",
                "firstName": "name",
                "lastName": "string",
                "fbUserId": "string",
                "socialSignUp": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692595314723,
        "lastModifiedTime": 1692595314723,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "access_token": "string",
                    "expires_in": "string",
                    "redirectUrl": "string",
                    "showExhibitorMenu": true,
                    "userId": 0,
                    "userRole": "string",
                    "whiteLabelURL": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112180,
        "executor_type": "THIRDPARTY",
        "executor_name": "loginbyWhiteLabelUser",
        "executor_version": "v1",
        "executor_display_name": "Login by White Label User",
        "executor_description": "User can use this api for login as a white label user with specific white label url. For this, user have to pass the email id as username and password which is already registered in the system. After successful login it returns data in JSON format which are useful in further request. Access token which is return from this api response will be pass in further request for user authentication.",
        "executor_category": "Signup/Login",
        "executor_category_group": "Signup/Login",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/u/login/whiteLabel/{whiteLabelURL}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "whiteLabelURL",
                "value": "",
                "description": "White label url is a unique url which is managed and provided by white label admin.You can have multiple events within same white label url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692596512407,
        "lastModifiedTime": 1692596512407,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "access_token": "string",
                    "expires_in": "string",
                    "redirectUrl": "string",
                    "showExhibitorMenu": true,
                    "userId": 0,
                    "userRole": "string",
                    "whiteLabelURL": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112175,
        "executor_type": "THIRDPARTY",
        "executor_name": "loginSignupUsingFacebookAtPortalSide",
        "executor_version": "v1",
        "executor_display_name": "Login/Signup Using Facebook at Portal Side",
        "executor_description": "User can use this api for login/signup into the system as a admin role.  We need to pass token here, which is generated after successful login into the Facebook account with the other details.  So if user account is already available than it will simply login into the system, if user is not registered in the system, than it will create new user into the system and automatically login into the system.",
        "executor_category": "Signup/Login",
        "executor_category_group": "Signup/Login",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/u/login/facebook/{eventurl}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "accessToken": "string",
                "phoneNumber": 0,
                "countryCode": "string",
                "mergeAccount": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692595673926,
        "lastModifiedTime": 1692595673926,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "access_token": "string",
                    "expires_in": "string",
                    "redirectUrl": "string",
                    "showExhibitorMenu": true,
                    "userId": 0,
                    "userRole": "string",
                    "whiteLabelURL": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112169,
        "executor_type": "THIRDPARTY",
        "executor_name": "signupAdmin",
        "executor_version": "v1",
        "executor_display_name": "Signup Admin",
        "executor_description": "You can call this API to have a user registered to the Accelevents (Admin Console) platform. It's necessary to provide the user's first name, email and password (following the regular password requirements) for the registration to be successful. This API will, then, return an Access Token which will be used in further requests for user authentication.",
        "executor_category": "Signup/Login",
        "executor_category_group": "Signup/Login",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/u/signup/admin",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "email": "string",
                "password": "string",
                "firstName": "name",
                "lastName": "string",
                "fbUserId": "string",
                "socialSignUp": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692595087047,
        "lastModifiedTime": 1692595087047,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "access_token": "string",
                    "expires_in": "string",
                    "redirectUrl": "string",
                    "showExhibitorMenu": true,
                    "userId": 0,
                    "userRole": "string",
                    "whiteLabelURL": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112182,
        "executor_type": "THIRDPARTY",
        "executor_name": "loginbyAdmin",
        "executor_version": "v1",
        "executor_display_name": "Login by Admin",
        "executor_description": "User can use this api for login as a admin/super-admin role from host side. For this, user have to pass the email id as username and password which is already registered in the system. After successful login it returns data in JSON format which are useful in further request. Access token which is return from this api response will be pass in further request for user authentication.",
        "executor_category": "Signup/Login",
        "executor_category_group": "Signup/Login",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/u/login",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "username": "string",
                "password": "string",
                "rememberme": true,
                "currentDomain": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692596686912,
        "lastModifiedTime": 1692596686912,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "access_token": "string",
                    "expires_in": "string",
                    "redirectUrl": "string",
                    "showExhibitorMenu": true,
                    "userId": 0,
                    "userRole": "string",
                    "whiteLabelURL": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112170,
        "executor_type": "THIRDPARTY",
        "executor_name": "virtualEventHub",
        "executor_version": "v1",
        "executor_display_name": "Virtual Event Hub (Portal) Signup/Login",
        "executor_description": "This API is used for signing up or logging in the user into the Virtual Event Hub ('Portal' being its technical name). If the email provided is already registered, the user will be logged in. Otherwise, it'll create a new user with the provided email address and automatically log the user into the Virtual Event Hub. It's necessary to provide the user's first name, email, phone number, country code and password (following the regular password requirements) for the registration to be successful.",
        "executor_category": "Signup/Login",
        "executor_category_group": "Signup/Login",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/u/loginSignUp/{eventurl}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "skipPassword",
                "value": "",
                "description": "You can skip the password verification check with this flag. Default it didn't skip the verification.",
                "req": false
            }
        ],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": null,
            "authAttributes": {}
        },
        "requestBody": {
            "value": {
                "email": "string",
                "phoneNumber": 0,
                "countryCode": "string",
                "password": "string",
                "firstName": "string",
                "lastName": "string",
                "mergeAccount": false,
                "facebookUserId": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692595218240,
        "lastModifiedTime": 1692595218240,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "access_token": "string",
                    "expires_in": "string",
                    "redirectUrl": "string",
                    "showExhibitorMenu": true,
                    "userId": 0,
                    "userRole": "string",
                    "whiteLabelURL": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112190,
        "executor_type": "THIRDPARTY",
        "executor_name": "enableModulesForEvent",
        "executor_version": "v1",
        "executor_display_name": "Enable Modules For Event",
        "executor_description": "This API is used to enable/disable any module of the event. They can enable/disable modules like Auction, Raffle, Fund a Need, Donation, etc.  Query Parameters auctionEnabled - Pass true if you want to activate auction, or false for deactivating. causeEnabled - Pass true if you want to activate fund a need, or false for deactivating. ticketingEnabled- Pass true if you want to activate ticketing, or false for deactivating. raffleEnabled - Pass true if you want to activate raffle, or false for deactivating. textToGiveEnabled-Pass true if you want to activate text to give, or false for deactivating. donationEnabled- Pass true if you want to activate donation, or false for deactivating.",
        "executor_category": "EventCreation",
        "executor_category_group": "EventCreation",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/enableModules",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "auctionEnabled",
                "value": "",
                "description": "Pass true if want to active auction else false for deactive.",
                "req": false
            },
            {
                "key": "causeEnabled",
                "value": "",
                "description": "Pass true if want to active fund a need else false for deactive.",
                "req": false
            },
            {
                "key": "raffleEnabled",
                "value": "",
                "description": "Pass true if want to active raffle else false for deactive.",
                "req": false
            },
            {
                "key": "ticketingEnabled",
                "value": "",
                "description": "Pass true if want to active ticketing else false for deactive.",
                "req": false
            },
            {
                "key": "textToGiveEnabled",
                "value": "",
                "description": "Pass true if want to active text to give else false for deactive.",
                "req": false
            },
            {
                "key": "donationEnabled",
                "value": "",
                "description": "Pass true if want to active donation else false for deactive.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692597272351,
        "lastModifiedTime": 1692597272351,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Success"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112187,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateEventFormat",
        "executor_version": "v1",
        "executor_display_name": "Update Event Format",
        "executor_description": "This API is used to update the event's format. You can set the event format to Virtual, Hybrid, or In-Person.",
        "executor_category": "EventCreation",
        "executor_category_group": "EventCreation",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/eventFormat",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "eventFormat",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692597080316,
        "lastModifiedTime": 1692597080316,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Success"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112183,
        "executor_type": "THIRDPARTY",
        "executor_name": "createNewEvent",
        "executor_version": "v1",
        "executor_display_name": "Create New Event",
        "executor_description": "You can call this API in order to create any new event. You can pass organizerpageUrl if you wish to create an event under that organizer. You can pass whitelabelUrl if you wish to create an event under that White Label.",
        "executor_category": "EventCreation",
        "executor_category_group": "EventCreation",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/u/create/newevent",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "whiteLabelUrl",
                "value": "",
                "description": "URL of White Label.",
                "req": false
            },
            {
                "key": "organizerPageUrl",
                "value": "",
                "description": " Url of an organizer page.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692596823459,
        "lastModifiedTime": 1692596823459,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Successfully created new event"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112184,
        "executor_type": "THIRDPARTY",
        "executor_name": "checkIfUserIsAdminInOtherEvent",
        "executor_version": "v1",
        "executor_display_name": "Check if User is Admin in Other Event",
        "executor_description": "This API is used to check whether the user is an admin in other events (except for their recent event) or not. This API will return a Boolean value of true or false.",
        "executor_category": "EventCreation",
        "executor_category_group": "EventCreation",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/isUserAdminInAnyEvent",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692596988364,
        "lastModifiedTime": 1692596988365,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": true
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112192,
        "executor_type": "THIRDPARTY",
        "executor_name": "duplicateEvent",
        "executor_version": "v1",
        "executor_display_name": "Duplicate Event",
        "executor_description": "This API is used to create duplicate existing events. You will need to select which details to copy from the current event. The data available for copying are the following: Duplicate Event Staff & Admins, Duplicate Tickets & Add-Ons, Duplicate Sessions, Duplicate Sponsors, Duplicate Speakers, Duplicate Exhibitors, Duplicate Exhibitors Admins & Staff. If you duplicate speakers and exhibitor admins & staff, you will also have the option to send them the email invitation.",
        "executor_category": "EventCreation",
        "executor_category_group": "EventCreation",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/duplicate/{eventUrl}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event URL is a unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event URL."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692597496025,
        "lastModifiedTime": 1692597496025,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Duplicate event created successfully."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4030201",
                    "developerMessage": "Not Event Host"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Event Not Found",
                    "errorCode": "4040200",
                    "developerMessage": "No Event could be found"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112223,
        "executor_type": "THIRDPARTY",
        "executor_name": "getUpcomingScheduledMeetings",
        "executor_version": "v1",
        "executor_display_name": "Get upcoming scheduled meetings",
        "executor_description": "This API will return alk upcoming meeting schedules for logged-in users based on passed equivalent timezone.  API accepts eventUrl to get the upcoming meetings within the event. The response will be in pagination as well.",
        "executor_category": "MeetingScheduleAPI",
        "executor_category_group": "MeetingScheduleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/people/schedule/upcoming",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Size will returns number of records when call api default will returns 10 records.",
                "req": false
            },
            {
                "key": "equivalentTimezone",
                "value": "",
                "description": "Get records meetingStartTime & meetingEndTime in timezone based on the equivalentTimezone.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692601967993,
        "lastModifiedTime": 1692601967993,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 2,
                    "recordsFiltered": 2,
                    "data": [
                        {
                            "id": 1539,
                            "eventId": 938,
                            "attendeeId": "8557",
                            "receiver": {
                                "firstName": "vishwa",
                                "lastName": "patel",
                                "profilePic": "fa3b385b-2032-42e3-b79e-4b74247a122d",
                                "userId": 8557,
                                "title": "",
                                "company": ""
                            },
                            "meetingStartTime": "2021/12/24 09:20",
                            "meetingEndTime": "2021/12/24 09:40",
                            "status": "CREATED",
                            "note": "test",
                            "senderUserId": 76,
                            "reschedule": false
                        },
                        {
                            "id": 1538,
                            "eventId": 938,
                            "attendeeId": "247",
                            "receiver": {
                                "firstName": "Anurag",
                                "lastName": "Sharma",
                                "profilePic": null,
                                "userId": 247,
                                "title": "",
                                "company": ""
                            },
                            "meetingStartTime": "2021/12/22 16:40",
                            "meetingEndTime": "2021/12/22 17:00",
                            "status": "CREATED",
                            "note": "",
                            "senderUserId": 76,
                            "reschedule": false
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112209,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllCreatedMeetingScheduleOfAttendee",
        "executor_version": "v1",
        "executor_display_name": "Get all created meeting schedule of attendee",
        "executor_description": "Get all created meeting schedule of login attendee. We need to pass eventUrl in param for get particular event's created meeting. We are also using pagination for get records. To get record in particular timeZone then need to pass equivalentTimezone in param.",
        "executor_category": "MeetingScheduleAPI",
        "executor_category_group": "MeetingScheduleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/people/schedule/created",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Size will returns number of records when call api default will returns 10 records.",
                "req": false
            },
            {
                "key": "equivalentTimezone",
                "value": "",
                "description": "Get records meetingStartTime & meetingEndTime in timezone based on the equivalentTimezone.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692600189343,
        "lastModifiedTime": 1692600189343,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 3,
                    "recordsFiltered": 3,
                    "data": [
                        {
                            "id": 591,
                            "eventId": 40,
                            "attendeeId": "315",
                            "receiver": {
                                "firstName": "Sachin",
                                "lastName": "S1",
                                "profilePic": null,
                                "userId": 315
                            },
                            "meetingStartTime": "2021/09/16 08:40",
                            "meetingEndTime": "2021/09/16 09:00",
                            "status": "CREATED"
                        },
                        {
                            "id": 592,
                            "eventId": 40,
                            "attendeeId": "7548",
                            "receiver": {
                                "firstName": "Sachin",
                                "lastName": "S29",
                                "profilePic": null,
                                "userId": 7548
                            },
                            "meetingStartTime": "2021/09/15 18:20",
                            "meetingEndTime": "2021/09/15 18:40",
                            "status": "CREATED"
                        },
                        {
                            "id": 45,
                            "eventId": 40,
                            "attendeeId": "315",
                            "receiver": {
                                "firstName": "Sachin",
                                "lastName": "S1",
                                "profilePic": null,
                                "userId": 315
                            },
                            "meetingStartTime": "2021/05/31 20:10",
                            "meetingEndTime": "2021/05/31 20:30",
                            "status": "CREATED"
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112217,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateAttendeeMeetingSchedule",
        "executor_version": "v1",
        "executor_display_name": "Update Attendee Meeting Schedule",
        "executor_description": "Attendee can update the meeting schedule which is already created by them.",
        "executor_category": "MeetingScheduleAPI",
        "executor_category_group": "MeetingScheduleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/people/{id}/schedule/{scheduleId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Id is unique identifier for attendee."
            },
            {
                "key": "scheduleId",
                "value": "",
                "description": "Schedule Id is the unique id of meeting schedule."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "endTime": "string",
                "startTime": "string",
                "equivalentTimeZone": "string",
                "note": "string",
                "exhibitorId": 0,
                "origin": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692601263055,
        "lastModifiedTime": 1692601263055,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112221,
        "executor_type": "THIRDPARTY",
        "executor_name": "cancelMeetingSchedule",
        "executor_version": "v1",
        "executor_display_name": "Cancel meeting schedule",
        "executor_description": "This API will help to cancel meeting schedule by attendee. When meeting cancel by the attendee we are change the meeting status to cancel.",
        "executor_category": "MeetingScheduleAPI",
        "executor_category_group": "MeetingScheduleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/people/schedule/{id}/cancel",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Id is unique identifier for meeting schedule."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692601748846,
        "lastModifiedTime": 1692601748846,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112211,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllRejectedMeetingScheduleOfAttendee",
        "executor_version": "v1",
        "executor_display_name": "Get all rejected meeting schedule of attendee",
        "executor_description": "Get all rejected meeting schedule of login attendee. We need to pass eventUrl in param for get particular event's rejected meeting. We are also using pagination for get records. To get record in particular timeZone then need to pass equivalentTimezone in param.",
        "executor_category": "MeetingScheduleAPI",
        "executor_category_group": "MeetingScheduleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/people/schedule/rejected",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Size will returns number of records when call api default will returns 10 records.",
                "req": false
            },
            {
                "key": "equivalentTimezone",
                "value": "",
                "description": "Get records meetingStartTime & meetingEndTime in timezone based on the equivalentTimezone.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692600358435,
        "lastModifiedTime": 1692600358435,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 2,
                    "recordsFiltered": 2,
                    "data": [
                        {
                            "id": 601,
                            "eventId": 40,
                            "attendeeId": "31",
                            "receiver": {
                                "firstName": "Sachin",
                                "lastName": "S",
                                "profilePic": "2ec265ab-898c-4cec-9f6e-26b963a5e0b1",
                                "userId": 31
                            },
                            "meetingStartTime": "2021/09/19 10:00",
                            "meetingEndTime": "2021/09/19 10:20",
                            "status": "DECLINED",
                            "rejectedBy": 315
                        },
                        {
                            "id": 598,
                            "eventId": 40,
                            "attendeeId": "31",
                            "receiver": {
                                "firstName": "Sachin",
                                "lastName": "S",
                                "profilePic": "2ec265ab-898c-4cec-9f6e-26b963a5e0b1",
                                "userId": 31
                            },
                            "meetingStartTime": "2021/09/16 17:00",
                            "meetingEndTime": "2021/09/16 17:20",
                            "status": "DECLINED",
                            "rejectedBy": 315
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112220,
        "executor_type": "THIRDPARTY",
        "executor_name": "acceptRejectedMeetingSchedule",
        "executor_version": "v1",
        "executor_display_name": "Accept rejected meeting schedule",
        "executor_description": "This API will help to accept meeting requested which is send by the another attendee which already rejected and send again. When meeting accept by the attendee we are change the meeting status to booked.",
        "executor_category": "MeetingScheduleAPI",
        "executor_category_group": "MeetingScheduleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/people/schedule/{id}/accept/rejectedMeeting",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Id is unique identifier for meeting schedule."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692601496266,
        "lastModifiedTime": 1692601496266,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112222,
        "executor_type": "THIRDPARTY",
        "executor_name": "rejectRequestedMeetingSchedule",
        "executor_version": "v1",
        "executor_display_name": "Reject requested meeting schedule",
        "executor_description": "This API will help to reject meeting request which is send by the another attendee. When meeting reject by the attendee we are change the meeting status to declined. Update table with rejected attendee id.",
        "executor_category": "MeetingScheduleAPI",
        "executor_category_group": "MeetingScheduleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/people/schedule/{id}/reject",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Id is unique identifier for meeting schedule."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692601827115,
        "lastModifiedTime": 1692601827115,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112199,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllBookedMeetingScheduleofAttendee",
        "executor_version": "v1",
        "executor_display_name": "Get all booked meeting schedule of attendee",
        "executor_description": "Get all booked meeting schedule of login attendee. We need to pass eventUrl in param to get particular event's booked meeting. We are also using pagination for get records. To get record in particular timeZone then need to pass equivalentTimezone in param.",
        "executor_category": "MeetingScheduleAPI",
        "executor_category_group": "MeetingScheduleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/people/schedule/booked",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Size will returns number of records when call api default will returns 10 records.",
                "req": false
            },
            {
                "key": "equivalentTimezone",
                "value": "",
                "description": "Get records meetingStartTime & meetingEndTime in timezone based on the equivalentTimezone.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692598204800,
        "lastModifiedTime": 1692598204800,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 2,
                    "recordsFiltered": 2,
                    "data": [
                        {
                            "id": 600,
                            "eventId": 40,
                            "attendeeId": "315",
                            "receiver": {
                                "firstName": "Sachin",
                                "lastName": "S1",
                                "profilePic": null,
                                "userId": 315
                            },
                            "meetingStartTime": "2021/09/19 08:20",
                            "meetingEndTime": "2021/09/19 08:40",
                            "status": "BOOKED"
                        },
                        {
                            "id": 599,
                            "eventId": 40,
                            "attendeeId": "315",
                            "receiver": {
                                "firstName": "Sachin",
                                "lastName": "S1",
                                "profilePic": null,
                                "userId": 315
                            },
                            "meetingStartTime": "2021/09/19 08:00",
                            "meetingEndTime": "2021/09/19 08:20",
                            "status": "BOOKED",
                            "rejectedBy": 315
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112225,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllMeetingSchedule",
        "executor_version": "v1",
        "executor_display_name": "Get All Meeting Schedule",
        "executor_description": "This API will return all meeting schedules for logged-in users based on passed equivalent timezone.  API accepts eventUrl to get all meetings within the event. The response will be in pagination as well.",
        "executor_category": "MeetingScheduleAPI",
        "executor_category_group": "MeetingScheduleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/people/schedule/all",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Size will returns number of records when call api default will returns 10 records.",
                "req": false
            },
            {
                "key": "equivalentTimezone",
                "value": "",
                "description": "Get records meetingStartTime & meetingEndTime in timezone based on the equivalentTimezone.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692602053718,
        "lastModifiedTime": 1692602053718,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 2,
                    "recordsFiltered": 2,
                    "data": [
                        {
                            "id": 1539,
                            "eventId": 938,
                            "attendeeId": "8557",
                            "receiver": {
                                "firstName": "vishwa",
                                "lastName": "patel",
                                "profilePic": "fa3b385b-2032-42e3-b79e-4b74247a122d",
                                "userId": 8557,
                                "title": "",
                                "company": ""
                            },
                            "meetingStartTime": "2021/12/24 09:20",
                            "meetingEndTime": "2021/12/24 09:40",
                            "status": "CREATED",
                            "note": "test",
                            "senderUserId": 76,
                            "reschedule": false
                        },
                        {
                            "id": 1538,
                            "eventId": 938,
                            "attendeeId": "247",
                            "receiver": {
                                "firstName": "Anurag",
                                "lastName": "Sharma",
                                "profilePic": null,
                                "userId": 247,
                                "title": "",
                                "company": ""
                            },
                            "meetingStartTime": "2021/12/22 16:40",
                            "meetingEndTime": "2021/12/22 17:00",
                            "status": "CREATED",
                            "note": "",
                            "senderUserId": 76,
                            "reschedule": false
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112219,
        "executor_type": "THIRDPARTY",
        "executor_name": "acceptRequestedMeetingSchedule",
        "executor_version": "v1",
        "executor_display_name": "Accept requested meeting schedule",
        "executor_description": "This API will help to accept meeting request which is send by the another attendee. When meeting accept by the attendee we are change the meeting status to booked.",
        "executor_category": "MeetingScheduleAPI",
        "executor_category_group": "MeetingScheduleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/people/schedule/{id}/accept",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Id is unique identifier for meeting schedule."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692601425572,
        "lastModifiedTime": 1692601425572,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112216,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAttendeeBookedScheduleByAttendeeId",
        "executor_version": "v1",
        "executor_display_name": "Get Attendee booked schedule by attendee id",
        "executor_description": "This API help to return which slot is already booked by attendee. We need to pass attendee id in path param for get booked slots.",
        "executor_category": "MeetingScheduleAPI",
        "executor_category_group": "MeetingScheduleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/people/{id}/schedule/bookedSlot",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Id is unique identifier for attendee."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "endTime": "string",
                "startTime": "string",
                "equivalentTimeZone": "string",
                "note": "string",
                "exhibitorId": 0,
                "origin": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692601176493,
        "lastModifiedTime": 1692601176493,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112218,
        "executor_type": "THIRDPARTY",
        "executor_name": "createAttendeeMeetingSchedule",
        "executor_version": "v1",
        "executor_display_name": "Create Attendee Meeting Schedule",
        "executor_description": "Attendee can create the meeting schedule using available slot. During create meeting If any meeting schedule already created between that time then we can not allowed to create meeting.",
        "executor_category": "MeetingScheduleAPI",
        "executor_category_group": "MeetingScheduleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/people/{id}/schedule/create",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Id is unique identifier for attendee."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "endTime": "string",
                "startTime": "string",
                "equivalentTimeZone": "string",
                "note": "string",
                "exhibitorId": 0,
                "origin": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692601350876,
        "lastModifiedTime": 1692601350876,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112214,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAvailableSlotForBookingMeetingbyAttendeeId",
        "executor_version": "v1",
        "executor_display_name": "Get available slot for booking meeting by attendee id",
        "executor_description": "This API help to which slot is available for book meeting schedule. We need to pass attendee id in path param for get available slots. This API only returns available slots for pass attendee id as per set availability rules of that attendee.",
        "executor_category": "MeetingScheduleAPI",
        "executor_category_group": "MeetingScheduleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/people/{id}/schedule/availableSlot",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Id is unique identifier for attendee."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "endTime": "string",
                "startTime": "string",
                "equivalentTimeZone": "string",
                "note": "string",
                "exhibitorId": 0,
                "origin": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692601057018,
        "lastModifiedTime": 1692601057018,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112260,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateOrganizer",
        "executor_version": "v1",
        "executor_display_name": "Update Organizer",
        "executor_description": "This API is used to Update organizer details. This API can be access by event admin and super admin.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/u/organizer/{Id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "Id",
                "value": "",
                "description": "this id is unique identifier for your organizer."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "organizerId": 0,
                "name": "string",
                "organizerPageURL": "string",
                "organizerDescription": "string",
                "allowSocialSharing": true,
                "contactEmailAddress": "string",
                "billingType": "string",
                "website": "string",
                "chargebeeCustomerId": "string",
                "planId": 0,
                "chargebeePlanName": "string",
                "facebookLink": "string",
                "linkedInLink": "string",
                "twitterLink": "string",
                "showTrayIntegration": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1692603757713,
        "lastModifiedTime": 1692603881932,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "string",
                    "message": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112255,
        "executor_type": "THIRDPARTY",
        "executor_name": "organizerDetails",
        "executor_version": "v1",
        "executor_display_name": "Organizer Details",
        "executor_description": "This API is used to get organizer details associated with the specified event.  It will return data like organizerId, organizerPageURL, planEndDate, renewalDate, allowSocialSharing, chargebeeCustomerId, chargebeePlanName, subscriptionId and many more.  To call this API, the user has to pass query parameters with API URLs like organizer_Url and authentication key to authenticate the user.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/organizer/{organizer_Url}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "organizer_Url",
                "value": "",
                "description": "organizer Url is unique identifier for your event."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692603575749,
        "lastModifiedTime": 1692603575749,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "allowSocialSharing": false,
                    "backgroundColor": "string",
                    "chargebeeCustomerId": "string",
                    "chargebeePlanName": "string",
                    "contactEmailAddress": "string",
                    "countOfWhiteLabelEvents": 0,
                    "facebookLink": "string",
                    "linkedInLink": "string",
                    "logoImage": "string",
                    "name": "string",
                    "organizerChargeInfoDtos": [
                        {
                            "availableQuantity": 0,
                            "chargeConfig": {
                                "amount": 0,
                                "chargeDisplayName": "string",
                                "chargeId": "string",
                                "id": 0,
                                "recordStatus": "CANCEL"
                            },
                            "organizerId": 0,
                            "totalQuantity": 0
                        }
                    ],
                    "organizerDescription": "string",
                    "organizerId": 0,
                    "organizerPageURL": "string",
                    "planEndDate": "string",
                    "planId": 0,
                    "renewalDate": "string",
                    "showTrayIntegration": false,
                    "soldTicketCountForWhiteLabel": 0,
                    "subscriptionId": "string",
                    "textColor": "string",
                    "totalTicketCountForWhiteLabel": 0,
                    "twitterLink": "string",
                    "website": "string",
                    "whiteLabelId": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112332,
        "executor_type": "THIRDPARTY",
        "executor_name": "saveOrganizerTeamMember",
        "executor_version": "v1",
        "executor_display_name": "Save organizer team member",
        "executor_description": "This API is used to add new team members to the organizer.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/o/{orgId}/team",
        "dataroot": null,
        "pathParams": [
            {
                "key": "orgId",
                "value": "",
                "description": "This is organizer unique identifier"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "firstName": "string",
                "lastName": "string",
                "email": "string",
                "photo": "by default system will add default logo.",
                "role": "string",
                "billingContact": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692610578648,
        "lastModifiedTime": 1692610578648,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "firstName": "test",
                    "lastName": "test",
                    "email": "test@test.com",
                    "billingContact": false,
                    "photo": "8fafc1ae-5444-4689-a668-91b9f87094b2",
                    "role": "admin",
                    "id": 2535,
                    "type": null
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Cannot Activate Legacy Plan After 2021",
                    "errorCode": "4060536",
                    "developerMessage": "Cannot Activate Legacy Plan After 2021"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112284,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteAnOrganizerTeamMember",
        "executor_version": "v1",
        "executor_display_name": "Delete an organizer team member",
        "executor_description": "This API is used to delete a team member under the organizer page. Only the organizer owner and superadmins are authorized to delete team members on the organizer page. An organizer owner can only be deleted by a superadmin given that after deleting there is still a remaining organizer owner in the team member list.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/o/{orgId}/team/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "orgId",
                "value": "",
                "description": "Unique identifier of an organizer"
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique identifier of a team member."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692605613391,
        "lastModifiedTime": 1692605613391,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Team member deleted successfully"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized for edit organizer page",
                    "errorCode": "4060086",
                    "developerMessage": "Not authorized for edit organizer page"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112285,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTrayIntegrationsDetailsForWhitelabel",
        "executor_version": "v1",
        "executor_display_name": "Get tray integrations details for Whitelabel",
        "executor_description": "This API is used to get a list of integration details for the Whitelabel URL.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/whitelabel/{whitelabelURL}/trayIntegration/integrationDetails",
        "dataroot": null,
        "pathParams": [
            {
                "key": "whitelabelURL",
                "value": "",
                "description": "Whitelabel URL for whitelabel account."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692605712527,
        "lastModifiedTime": 1692605712527,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "apiKey": "ab390fe2-efb2-4ba3-9952-43c38cbab475",
                        "enable": true,
                        "type": "TRAY_IO",
                        "ticketType": null,
                        "apiUserDetails": null
                    }
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112292,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTrayIntegrationsDetailsForOrganizer",
        "executor_version": "v1",
        "executor_display_name": "Get tray integrations details for organizer",
        "executor_description": "This API is used to get a list of integration details.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/organizer/{organizerURL}/trayIntegration/integrationDetails",
        "dataroot": null,
        "pathParams": [
            {
                "key": "organizerURL",
                "value": "",
                "description": "Organizer page URL."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692605790302,
        "lastModifiedTime": 1692605790302,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "apiKey": "e9d6b1a0-98ab-44d1-9c67-5d4e88054814",
                        "enable": true,
                        "type": "TRAY_IO",
                        "ticketType": null,
                        "apiUserDetails": null
                    }
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112336,
        "executor_type": "THIRDPARTY",
        "executor_name": "changeTheEventPlan",
        "executor_version": "v1",
        "executor_display_name": "Change the event plan",
        "executor_description": "This API is used to change the plan of an event. This will only allow changing to available plans. This will also update the plan name to the intercome for the company. This will also update the AE fee percentage and AE fee configuration as per the associated plan. The system will only allow changing the plan if the event is not published yet. This feature is not applicable for in-person events.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/subscription/organizers/{organizerId}/event/{eventId}/objectType/{objectType}/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "organizerId",
                "value": "",
                "description": "Unique identifier of an organizer."
            },
            {
                "key": "eventId",
                "value": "",
                "description": "Unique identifier of an event."
            },
            {
                "key": "objectType",
                "value": "",
                "description": "For Starter, Professional plan association value should be CHARGE, for other plan vales should be PLAN."
            },
            {
                "key": "id",
                "value": "",
                "description": "This parameter value can be plan id for object type Plan and charge id for object Type Charge."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692611449310,
        "lastModifiedTime": 1692611449310,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Subscription Created Successfully."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Cannot Activate Legacy Plan After 2021",
                    "errorCode": "4060536",
                    "developerMessage": "Cannot Activate Legacy Plan After 2021"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4030201",
                    "developerMessage": "Not Event Host"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Organizer Not Found",
                    "errorCode": "4040600",
                    "developerMessage": "No Organizer could be found"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112273,
        "executor_type": "THIRDPARTY",
        "executor_name": "addEmbedWidgetSettings",
        "executor_version": "v1",
        "executor_display_name": "Add embed widget settings",
        "executor_description": "This API is used to insert the embed widget settings for the event and organizer page.  For the organizer page, only a calendar widget can be embedded into your website so people can pick an event date and register right from your site.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/widgets/settings",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "calender": {
                    "activeDaysBackgroundColor": "string",
                    "activeDaysTextBackgroundColor": "string",
                    "activeDaysTextColor": "string",
                    "buttonColor": "string",
                    "buttonText": "string",
                    "buttontextColor": "string",
                    "textColor": "string"
                },
                "id": "string",
                "type": "EVENT",
                "organizerPage": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692604378487,
        "lastModifiedTime": 1692604378487,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Add embed widget settings successfully"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Json Format is not valid.",
                    "errorCode": "4060036",
                    "developerMessage": "Json Format is not valid."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112295,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllSolutionsThatAreAvailableAndLiveInTrayioforWhitelabel",
        "executor_version": "v1",
        "executor_display_name": "Get all solutions that are available and live in tray.io for Whitelabel",
        "executor_description": "This API is used to show a list of solution details such as title, description, instance id. It will show whether the solution is enabled or not and if the account is connected or not. It will also give custom parameters for the logo of each solution.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/whitelabel/{whitelabelURL}/trayIntegration/solutions",
        "dataroot": null,
        "pathParams": [
            {
                "key": "whitelabelURL",
                "value": "",
                "description": "Whitelabel URL of an enterprise account."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692606174311,
        "lastModifiedTime": 1692606174311,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": "a2be5ba6-ad25-48ae-9802-084da83dc279",
                        "title": "HubSpot",
                        "connected": false,
                        "enabled": false,
                        "description": "",
                        "instanceId": null,
                        "customFields": [
                            {
                                "key": "logo",
                                "value": "https://cdn.worldvectorlogo.com/logos/hubspot-1.svg"
                            }
                        ],
                        "reconfigurationRequired": false
                    },
                    {
                        "id": "11b781e3-4028-4152-a91c-41c959cd307f",
                        "title": "Salesforce",
                        "connected": false,
                        "enabled": false,
                        "description": "",
                        "instanceId": null,
                        "customFields": [
                            {
                                "key": "logo",
                                "value": "https://cdn.worldvectorlogo.com/logos/salesforce-2.svg"
                            }
                        ],
                        "reconfigurationRequired": false
                    },
                    {
                        "id": "7f7a19e9-21f1-400b-9af6-6fdad444f388",
                        "title": "Marketo",
                        "connected": false,
                        "enabled": false,
                        "description": "",
                        "instanceId": null,
                        "customFields": [
                            {
                                "key": "logo",
                                "value": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRyPnH7O1H63TsYNZ2AtNnnw5rOxbpur7NlDnysO2yUrnLcqoVdob3klmEe14L8QGkd7vA&usqp=CAU"
                            }
                        ],
                        "reconfigurationRequired": false
                    }
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112297,
        "executor_type": "THIRDPARTY",
        "executor_name": "mapSubscriptionToAnWhitelabelUrl",
        "executor_version": "v1",
        "executor_display_name": "Map subscription to an Whitelabel URL",
        "executor_description": "This API is used to associate or upgrade a plan to a Whitelabel account. When this API gets called, the application will create a monthly overage subscription in Chargebee if it's not created yet. Along with this, the application also updates the plan name to the intercome for the company. This API will add billing contacts to Chargebee if not added yet. After associating the plan, the system will upgrade the plan of the events under the Whitelabel account that are not published yet. This API will update the AE fee percentage and the AE fee configuration as per the associated plan.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/chargebee/whiteLabel/{whiteLabelURL}/subscription/overage",
        "dataroot": null,
        "pathParams": [
            {
                "key": "whiteLabelURL",
                "value": "",
                "description": "Whitelabel URL of enterprise account."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "chargebeeCustomerId": "string",
                "invoiceId": "string",
                "subscriptionId": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692606472050,
        "lastModifiedTime": 1692606472050,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Subscription Created Successfully."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Super Admin;",
                    "errorCode": "4030203",
                    "developerMessage": "Not Super Admin;"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "No plan configuration found",
                    "errorCode": "4044104",
                    "developerMessage": "No plan configuration found"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Cannot Activate Legacy Plan After 2021",
                    "errorCode": "4060536",
                    "developerMessage": "Cannot Activate Legacy Plan After 2021"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112258,
        "executor_type": "THIRDPARTY",
        "executor_name": "newOrganizer",
        "executor_version": "v1",
        "executor_display_name": "New Organizer",
        "executor_description": "This API is used to create a new organizer. This API can be accessible by super admin, event admins.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/o/organizer/{organizerName}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "organizerName",
                "value": "",
                "description": "organizerName field is used to name your organizer."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692603646752,
        "lastModifiedTime": 1692603646752,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "organizerId": 0,
                    "name": "string",
                    "organizerPageURL": "string",
                    "allowSocialSharing": true
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112266,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTotalNumberofAttendeesforEvent",
        "executor_version": "v1",
        "executor_display_name": "Get Total Number of Attendees for Event",
        "executor_description": "This API is used to get all the organizers created by the given email. It will return list of organizer details for each organizer created by the user under a specific email.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/people/getAttendeeCount",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692604011645,
        "lastModifiedTime": 1692604011645,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": 20
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112338,
        "executor_type": "THIRDPARTY",
        "executor_name": "getEmailNotificationSettingsForTheEvent",
        "executor_version": "v1",
        "executor_display_name": "Get email notification settings for the event",
        "executor_description": "This API is used to get the email notification settings for event admins and staff.  This contains notifications on emails received by users after purchasing from the event page, weekly sales reports, and attendee questions.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/notification/event/{eventurl}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event URL."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692611652131,
        "lastModifiedTime": 1692611652131,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "buyItNow": {
                        "moduleEnable": false,
                        "text": "Alerts when buy it now items are purchased",
                        "enabled": true
                    },
                    "ticketing": {
                        "moduleEnable": true,
                        "text": "Order confirmations from my attendees",
                        "enabled": true
                    },
                    "weeklySales": {
                        "moduleEnable": true,
                        "text": "Weekly Sales Report",
                        "enabled": false
                    },
                    "participantQuestions": {
                        "moduleEnable": true,
                        "text": "Questions from attendees",
                        "enabled": true
                    }
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Staff detail not found",
                    "errorCode": "4040002",
                    "developerMessage": "Staff detail not found"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112264,
        "executor_type": "THIRDPARTY",
        "executor_name": "listOrganizersByEmail",
        "executor_version": "v1",
        "executor_display_name": "List organizers by email",
        "executor_description": "This API is used to get all the organizers created by the given email. It will return list of organizer details for each organizer created by the user under a specific email.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/o/organizers/{userEmail}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "userEmail",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692603925357,
        "lastModifiedTime": 1692603925357,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "organizerId": 0,
                        "name": "string",
                        "organizerPageURL": "string",
                        "allowSocialSharing": true
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112270,
        "executor_type": "THIRDPARTY",
        "executor_name": "getListofOrganizersCreatedByTheLoggedInUser",
        "executor_version": "v1",
        "executor_display_name": "Get a list of organizers created by the logged-in user",
        "executor_description": "This API is used to get a list of all organizers created by the logged-in event admin, including organizer details.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/organizers",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692604225421,
        "lastModifiedTime": 1692604225421,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "organizerId": 48,
                        "name": "org",
                        "organizerPageURL": "org",
                        "contactEmailAddress": "garvi.s@brilworks.com",
                        "planId": 9,
                        "chargebeePlanName": "SingleEventUnit",
                        "chargebeeCustomerId": "AzZm1lSXliQjy1BTG",
                        "subscriptionId": "AzyuAjScZZF713ec7",
                        "showTrayIntegration": true,
                        "allowSocialSharing": true
                    },
                    {
                        "organizerId": 103,
                        "name": "TestDEV-10077Org1",
                        "organizerPageURL": "TestDEV10077Org1",
                        "contactEmailAddress": "rajesh.j@brilworks.com",
                        "planId": 8,
                        "chargebeePlanName": "Scale",
                        "chargebeeCustomerId": "16BjmNSXMG9m21yvl",
                        "subscriptionId": "AzyuAjScZZ0c43eNm",
                        "showTrayIntegration": true,
                        "allowSocialSharing": true
                    },
                    {
                        "organizerId": 106,
                        "name": "DEV-10018-Org1",
                        "organizerPageURL": "DEV10018Org1",
                        "contactEmailAddress": "rajesh.j@brilworks.com",
                        "planId": 9,
                        "chargebeePlanName": "SingleEventUnit",
                        "chargebeeCustomerId": "AzZlxxSXNEOmRJ16",
                        "subscriptionId": "16BjqxScZZKS93bOW",
                        "showTrayIntegration": true,
                        "allowSocialSharing": true
                    },
                    {
                        "organizerId": 120,
                        "name": "DEV-10018_17MayOrg1",
                        "organizerPageURL": "DEV1001817MayOrg1",
                        "contactEmailAddress": "rajesh.j@brilworks.com",
                        "planId": 8,
                        "chargebeePlanName": "Scale",
                        "chargebeeCustomerId": "AzZlzJSXdrfe91SOI",
                        "subscriptionId": "AzZlpeScZa7bb1qrl",
                        "showTrayIntegration": true,
                        "allowSocialSharing": true
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112275,
        "executor_type": "THIRDPARTY",
        "executor_name": "uploadImage",
        "executor_version": "v1",
        "executor_display_name": "Upload image",
        "executor_description": "This API is used to upload an image under 2 MB in size. This will return an image URL when the image is successfully uploaded.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/event/upload/image",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "file": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692604539691,
        "lastModifiedTime": 1692604539691,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "1301f0b1-676f-45f1-b5d0-5d060220ac3c_AttendeesList9698e9acf92.csv"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Json Format is not valid.",
                    "errorCode": "4060036",
                    "developerMessage": "Json Format is not valid."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112276,
        "executor_type": "THIRDPARTY",
        "executor_name": "getOrganizerLogo",
        "executor_version": "v1",
        "executor_display_name": "Get organizer logo",
        "executor_description": "This API will return the organizer logo. If the logo is successfully uploaded, it will return the organizer logo. If the logo does not successfully upload, it will return the Aceelevent logo.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/organizer/{organizer_URL}/logo",
        "dataroot": null,
        "pathParams": [
            {
                "key": "organizer_URL",
                "value": "",
                "description": "Organizer page URL"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692604644448,
        "lastModifiedTime": 1692604644448,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "default_ae_images/Smooth_AE_Icon_700x350.png"
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Organizer Not Found",
                    "errorCode": "4040600",
                    "developerMessage": "No Organizer could be found"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112333,
        "executor_type": "THIRDPARTY",
        "executor_name": "getOrganizerTeamMembers",
        "executor_version": "v1",
        "executor_display_name": "Get organizer team members",
        "executor_description": "This API is used to get a list of team members under the organization. This will not return users deleted from the application.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/o/{orgId}/team",
        "dataroot": null,
        "pathParams": [
            {
                "key": "orgId",
                "value": "",
                "description": "This is organizer unique identifier."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692610678359,
        "lastModifiedTime": 1692610678359,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "firstName": "Rajesh",
                        "lastName": "Jethva",
                        "email": "rajesh.j@brilworks.com",
                        "billingContact": true,
                        "photo": null,
                        "role": "owner",
                        "id": 2529,
                        "type": null
                    },
                    {
                        "firstName": "test",
                        "lastName": "test",
                        "email": "test@test.com",
                        "billingContact": false,
                        "photo": "8fafc1ae-5444-4689-a668-91b9f87094b2",
                        "role": "admin",
                        "id": 2535,
                        "type": null
                    },
                    {
                        "firstName": "test",
                        "lastName": "test",
                        "email": "test+10Dec1@gmail.com",
                        "billingContact": true,
                        "photo": null,
                        "role": "owner",
                        "id": 2536,
                        "type": null
                    }
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Cannot Activate Legacy Plan After 2021",
                    "errorCode": "4060536",
                    "developerMessage": "Cannot Activate Legacy Plan After 2021"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112337,
        "executor_type": "THIRDPARTY",
        "executor_name": "saveTheEmailNotificationSettingsForTheEvent",
        "executor_version": "v1",
        "executor_display_name": "Save the email notification settings for the event",
        "executor_description": "This API is used to save email notification settings for the event. Emails will be sent based on the saved settings.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/u/notification/event/{eventurl}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event URL."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "notificationDetail": {
                    "buyItNowEnable": true,
                    "ticketingEnable": true,
                    "participantQuestions": true,
                    "weeklySalesReportEnable": true
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692611562921,
        "lastModifiedTime": 1692611562921,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "buyItNow": {
                        "moduleEnable": false,
                        "text": "Alerts when buy it now items are purchased",
                        "enabled": true
                    },
                    "ticketing": {
                        "moduleEnable": true,
                        "text": "Order confirmations from my attendees",
                        "enabled": true
                    },
                    "weeklySales": {
                        "moduleEnable": true,
                        "text": "Weekly Sales Report",
                        "enabled": false
                    },
                    "participantQuestions": {
                        "moduleEnable": true,
                        "text": "Questions from attendees",
                        "enabled": true
                    }
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Organizer Not Found",
                    "errorCode": "4040600",
                    "developerMessage": "No Organizer could be found"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112340,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadTheDataOfUsersWhoUnsubscribedFromEmailNotificationsForaNonWhitelabelEvent",
        "executor_version": "v1",
        "executor_display_name": "Download the data of users who unsubscribed from email notifications for a Non-Whitelabel event",
        "executor_description": "This API is used to download the data of users who unsubscribed from email notifications for a Whitelabel event",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/unsubscribedUsers/{orgId}/{eventId}/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "orgId",
                "value": "",
                "description": "Unique identifier of an organizer."
            },
            {
                "key": "eventId",
                "value": "",
                "description": "Unique identifier of an event."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692611923533,
        "lastModifiedTime": 1692611923533,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Success"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "There are no unsubscribed users for this event",
                    "errorCode": "4060519",
                    "developerMessage": "There are no unsubscribed users for this evente"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "This white label event does not exist",
                    "errorCode": "4040201",
                    "developerMessage": "This white label event does not exist"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112277,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTheTeamMembersForOrganizerEvent",
        "executor_version": "v1",
        "executor_display_name": "Get the team members for organizer event",
        "executor_description": "This API is used to get the list of event admins to show as team members in the organizer portal. This will display the user details and role.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/organizer/{organizerId}/event/{eventId}/staffs",
        "dataroot": null,
        "pathParams": [
            {
                "key": "organizerId",
                "value": "",
                "description": "Unique identifier of organizer page URL"
            },
            {
                "key": "eventId",
                "value": "",
                "description": "Unique identifier of an event."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692604744511,
        "lastModifiedTime": 1692604744511,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "firstName": "Rajesh",
                        "lastName": "Jethva",
                        "email": "rajesh.j@brilworks.com",
                        "billingContact": true,
                        "photo": null,
                        "role": "owner",
                        "id": 467,
                        "type": "ORGANIZER"
                    }
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112283,
        "executor_type": "THIRDPARTY",
        "executor_name": "sendAnInvitationToOrganizerTeamMember",
        "executor_version": "v1",
        "executor_display_name": "Send an invitation to organizer team member",
        "executor_description": "This API is used to send an invitation email to a team member of the organizer.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/o/{orgId}/team/{id}/resendInvite",
        "dataroot": null,
        "pathParams": [
            {
                "key": "orgId",
                "value": "",
                "description": "Unique identifier of an organizer"
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique identifier of a team member."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692605485825,
        "lastModifiedTime": 1692605485825,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Invitation sent"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized for edit organizer page",
                    "errorCode": "4060086",
                    "developerMessage": "Not authorized for edit organizer page"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112294,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllSolutionsThatAreAvailableAndLiveInTrayioForAnOrganizer",
        "executor_version": "v1",
        "executor_display_name": "Get all solutions that are available and live in tray.io for an organizer",
        "executor_description": "This API is used to show a list of solution details such as title, description, instance id. It will show whether the solution is enabled or not and if the account is connected or not. It will also give custom parameters for the logo of each solution.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/organizer/{organizerURL}/trayIntegration/solutions",
        "dataroot": null,
        "pathParams": [
            {
                "key": "organizerURL",
                "value": "",
                "description": "Organizer page URL."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692606064678,
        "lastModifiedTime": 1692606064678,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": "a2be5ba6-ad25-48ae-9802-084da83dc279",
                        "title": "HubSpot",
                        "connected": false,
                        "enabled": false,
                        "description": "",
                        "instanceId": null,
                        "customFields": [
                            {
                                "key": "logo",
                                "value": "https://cdn.worldvectorlogo.com/logos/hubspot-1.svg"
                            }
                        ],
                        "reconfigurationRequired": false
                    },
                    {
                        "id": "11b781e3-4028-4152-a91c-41c959cd307f",
                        "title": "Salesforce",
                        "connected": false,
                        "enabled": false,
                        "description": "",
                        "instanceId": null,
                        "customFields": [
                            {
                                "key": "logo",
                                "value": "https://cdn.worldvectorlogo.com/logos/salesforce-2.svg"
                            }
                        ],
                        "reconfigurationRequired": false
                    },
                    {
                        "id": "7f7a19e9-21f1-400b-9af6-6fdad444f388",
                        "title": "Marketo",
                        "connected": false,
                        "enabled": false,
                        "description": "",
                        "instanceId": "6e735d39-bbb3-4fc8-9c0e-9895ef826ab6",
                        "customFields": [
                            {
                                "key": "logo",
                                "value": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRyPnH7O1H63TsYNZ2AtNnnw5rOxbpur7NlDnysO2yUrnLcqoVdob3klmEe14L8QGkd7vA&usqp=CAU"
                            }
                        ],
                        "reconfigurationRequired": false
                    }
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112334,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateTheOrganizerTeamMember",
        "executor_version": "v1",
        "executor_display_name": "Update the organizer team member",
        "executor_description": "This API is used to update the new team members in the organizer portal. A team member marked as a billing contact will automatically be the owner of the organizer profile. Note that owners cannot be removed from the team members list and cannot be removed as a billing contact. This API also updates the billing contact in Chargebee as per the updated value.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/o/{orgId}/team/{id}/billingContact/{mark}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "orgId",
                "value": "",
                "description": "This is organizer unique identifier"
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique identifier of a team member."
            },
            {
                "key": "mark",
                "value": "",
                "description": "It contains details like whether a member is billing contact or not."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692610823914,
        "lastModifiedTime": 1692610823914,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Team member added in billing contacts"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Cannot Activate Legacy Plan After 2021",
                    "errorCode": "4060536",
                    "developerMessage": "Cannot Activate Legacy Plan After 2021"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Organizer Not Found",
                    "errorCode": "4040600",
                    "developerMessage": "No Organizer could be found"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112274,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTheOrganizerUsagesReport",
        "executor_version": "v1",
        "executor_display_name": "Get the organizer usages report",
        "executor_description": "This API is used to get the list of items shown on the billing summary based on the organizer's usage. This will return details like plan purchase, paid ticket fees, fundraisers module activation, attendee upload charge, attendee overages, and fundraiser usage details.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/organizer/{organizerId}/billing/summery",
        "dataroot": null,
        "pathParams": [
            {
                "key": "organizerId",
                "value": "",
                "description": "Unique identifier of organizer."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692604461808,
        "lastModifiedTime": 1692604461808,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "billingDay": "25",
                    "remainingAttendeesDays": 500,
                    "usagesDetailsDtos": [
                        {
                            "date": 1640425807000,
                            "description": "Attendee Day Credits",
                            "count": 500
                        },
                        {
                            "date": 1640425747000,
                            "description": "Professional Platform License",
                            "count": 1
                        },
                        {
                            "date": 1640425271000,
                            "description": "Fund A Need Charge",
                            "eventName": "testfundaneed",
                            "count": 1
                        }
                    ],
                    "currentBalance": 0
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Json Format is not valid.",
                    "errorCode": "4060036",
                    "developerMessage": "Json Format is not valid."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112330,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadAttendeesOverageUsagesCSVforOrganizer",
        "executor_version": "v1",
        "executor_display_name": "Download attendees overage usages CSV for organizer",
        "executor_description": "This API is used to download a CSV file containing event-wise attendees' overage usages, free credits, and the plan associated with the event.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/organizer/{organizerId}/overage",
        "dataroot": null,
        "pathParams": [
            {
                "key": "organizerId",
                "value": "",
                "description": "Unique identifier of an organizer"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692610363292,
        "lastModifiedTime": 1692610363292,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Subscription Created Successfully."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Cannot Activate Legacy Plan After 2021",
                    "errorCode": "4060536",
                    "developerMessage": "Cannot Activate Legacy Plan After 2021"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112335,
        "executor_type": "THIRDPARTY",
        "executor_name": "hideTheEventFromOrganizerProfilePage",
        "executor_version": "v1",
        "executor_display_name": "Hide the event from organizer profile page",
        "executor_description": "This API is used to hide an event from the organizer profile page.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/u/{eventUrl}/{isVisibleOnOrganizerProfile}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event URL"
            },
            {
                "key": "isVisibleOnOrganizerProfile",
                "value": "",
                "description": "Pass false to hide event from organizer profile page."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692610950203,
        "lastModifiedTime": 1692610950203,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Success"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Cannot Activate Legacy Plan After 2021",
                    "errorCode": "4060536",
                    "developerMessage": "Cannot Activate Legacy Plan After 2021"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112339,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadTheDataOfUsersWhoUnsubscribedFromEmailNotificationsForWhitelabelEvent",
        "executor_version": "v1",
        "executor_display_name": "Download the data of users who unsubscribed from email notifications for a Whitelabel event",
        "executor_description": "This API is used to download the data of users who unsubscribed from email notifications.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/whiteLabelURL/{whiteLabelURL}/unsubscribedUsers/{eventId}/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "whiteLabelURL",
                "value": "",
                "description": "Unique identifier of an white label account."
            },
            {
                "key": "eventId",
                "value": "",
                "description": "Unique identifier of an event."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692611806295,
        "lastModifiedTime": 1692611806295,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Success"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "There are no unsubscribed users for this event",
                    "errorCode": "4060519",
                    "developerMessage": "There are no unsubscribed users for this evente"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "This white label event does not exist",
                    "errorCode": "4040201",
                    "developerMessage": "This white label event does not exist"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112268,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTheOrganizerEventListWithTicketTypes",
        "executor_version": "v1",
        "executor_display_name": "Get the organizer event list with ticket types",
        "executor_description": "This API is used to get a list of events created under the organizer profile. The path parameter needs to pass these two values:  organizer_URL is the organizer page URL where the list of events will come from past_event is a boolean parameter used to specify whether you want to fetch past events or active & upcoming events. True for the past events and false for active & upcoming events. isFromOrganizerProfilePage is used to fetch only those events which are not hidden on the organizer profile page.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/organizer/{organizer_URL}/{past_event}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "organizer_URL",
                "value": "",
                "description": "Unique identifier of Organizer"
            },
            {
                "key": "past_event",
                "value": "",
                "description": "Want to fetch past event or active event, to get past event pass true for active event pass false."
            }
        ],
        "queryParams": [
            {
                "key": "isFromOrganizerProfilePage",
                "value": "",
                "description": "Pass true, to fetch only those events which are not hidden to show on organizer profile page.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692604130389,
        "lastModifiedTime": 1692604130389,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "eventId": 8372,
                        "minTicketPrice": 0,
                        "maxTicketPrice": 0,
                        "name": "0a5a307c37d",
                        "eventURL": "0a5a307c37d",
                        "eventEndDate": 1642347000000,
                        "eventLogo": "default_ae_images/Smooth_AE_Icon_700x350.png",
                        "eventLocation": null,
                        "eventStartDate": 1642336200000,
                        "equivalentTimezone": "Asia/Calcutta",
                        "currency": "$",
                        "saleStartDate": null,
                        "eventDescription": "<h2 style=\"text-align:center\"><strong>Description</strong></h2><p style=\"text-align:center\">Tell your participants about your event!</p><p style=\"text-align:center;\">You can just click here and start typing.</p><p style=\"text-align:center;\"><strong>Or</strong></p><p style=\"text-align:center;\">Highlight text to format it.</p>",
                        "ticketingTypeList": [
                            {
                                "typeId": 10943,
                                "name": "Free Admission",
                                "price": 0,
                                "fee": 0,
                                "endDate": 1642347000000,
                                "startDate": 1639733175000,
                                "bundleType": null,
                                "ticketsPerTable": 0,
                                "remaniningTickets": 100,
                                "maxTickerPerBuyer": 0,
                                "minTickerPerBuyer": 0,
                                "ticketTypeDescription": null,
                                "enableTicketDescription": false,
                                "passFeesToBuyer": false,
                                "position": 0,
                                "ticketType": "FREE",
                                "categoryColor": null,
                                "totalSoldTickets": 0,
                                "categoryId": null,
                                "dataType": null
                            }
                        ],
                        "eventCapacityReach": null,
                        "totalAeRevenue": null,
                        "eventStatus": "PREVIEW",
                        "totalSoldTickets": 0,
                        "planConfigNames": "Free",
                        "hideEventFromOrganizer": false,
                        "recurringEvent": false
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112331,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadAttendeesOverageUsagesCSVforWhitelabel",
        "executor_version": "v1",
        "executor_display_name": "Download attendees overage usages CSV for whitelabel",
        "executor_description": "This API is used to download a CSV file containing event-wise attendees' overage usages, free credits, and the plan associated with the event.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/whiteLabelURL/{whiteLabelURL}/listOverages",
        "dataroot": null,
        "pathParams": [
            {
                "key": "whiteLabelURL",
                "value": "",
                "description": "Whitelabel URL of an enterprise account"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692610465153,
        "lastModifiedTime": 1692610465153,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Subscription Created Successfully."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Cannot Activate Legacy Plan After 2021",
                    "errorCode": "4060536",
                    "developerMessage": "Cannot Activate Legacy Plan After 2021"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112296,
        "executor_type": "THIRDPARTY",
        "executor_name": "mapSubscriptionToAnOrganizer",
        "executor_version": "v1",
        "executor_display_name": "Map subscription to an organizer",
        "executor_description": "This API is used to associate or upgrade a plan to an organizer. When this API gets called, the application will create a monthly overage subscription in Chargebee if it's not created yet. Along with this, the application also updates the plan name to the intercome for the company. If the passed invoice has a charge and has already been used to add a plan quantity, then that will be ignored and it will not add an unwanted plan quantity. If the Invoice has charges of starter or professional plan then that plan quantity will be added to the organizer. If the invoice will have a charge for DES (Dedicated Event Support) then that also gets added to the application for reference.",
        "executor_category": "HostOrganizer",
        "executor_category_group": "HostOrganizer",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/chargebee/{organizerId}/subscription/overage",
        "dataroot": null,
        "pathParams": [
            {
                "key": "organizerId",
                "value": "",
                "description": "Unique identifier of an organizer."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "chargebeeCustomerId": "string",
                "invoiceId": "string",
                "subscriptionId": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692606332920,
        "lastModifiedTime": 1692606332920,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Subscription Created Successfully."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Super Admin;",
                    "errorCode": "4030203",
                    "developerMessage": "Not Super Admin;"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "No plan configuration found",
                    "errorCode": "4044104",
                    "developerMessage": "No plan configuration found"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Cannot Activate Legacy Plan After 2021",
                    "errorCode": "4060536",
                    "developerMessage": "Cannot Activate Legacy Plan After 2021"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112353,
        "executor_type": "THIRDPARTY",
        "executor_name": "checkPhoneNumberIsValidOrNot",
        "executor_version": "v1",
        "executor_display_name": "Check Phone Number is Valid or Not",
        "executor_description": "This API used to check phone number is valid or not associated with the specified event. This API can be access by event admin and super admin. It will return true or false. To call this API, user have to pass query param with API URL like phoneNumber and authentication key to authenticate user.",
        "executor_category": "HostAddAttendees",
        "executor_category_group": "HostAddAttendees",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/validate/phoneNumber/{phoneNumber}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "phoneNumber",
                "value": "",
                "description": "pass phone number must be required."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692613426851,
        "lastModifiedTime": 1692613426851,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": true
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112355,
        "executor_type": "THIRDPARTY",
        "executor_name": "ticketModuleDisplayPurchaseTicket",
        "executor_version": "v1",
        "executor_display_name": "Ticket Module Display Purchase Ticket",
        "executor_description": "This API is used to make payment in the last step of ticket purchase by staff. After purchase of a ticket is confirmed, an order confirmation email is sent to the buyers.",
        "executor_category": "HostAddAttendees",
        "executor_category_group": "HostAddAttendees",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/staff/tickets/payment/order/{orderid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here is the demo event url."
            },
            {
                "key": "orderid",
                "value": "",
                "description": "is the order id of your ticket"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "purchaser": {
                    "attributes": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ],
                    "questions": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ],
                    "nestedQuestions": [
                        {
                            "id": "string",
                            "name": "string",
                            "parentQueId": "string",
                            "type": "string",
                            "value": "string"
                        }
                    ]
                },
                "addOnAttributes": {
                    "attributes": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ],
                    "questions": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ],
                    "nestedQuestions": [
                        {
                            "id": "string",
                            "name": "string",
                            "parentQueId": "string",
                            "type": "string",
                            "value": "string"
                        }
                    ]
                },
                "holder": [
                    {
                        "attributes": [
                            {
                                "key": "string",
                                "value": "string"
                            }
                        ],
                        "questions": [
                            {
                                "key": "string",
                                "value": "string"
                            }
                        ],
                        "tickettypeid": 0,
                        "tableid": 0,
                        "nestedQuestions": [
                            {
                                "id": "string",
                                "name": "string",
                                "parentQueId": "string",
                                "type": "string",
                                "value": "string"
                            }
                        ]
                    }
                ],
                "hasholderattributes": true,
                "tokenOrIntentId": "string",
                "disclaimer": "string",
                "clientDate": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692613681475,
        "lastModifiedTime": 1692613681475,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "eventTicketId": "14917",
                        "email": "Mitul.s@brilworks.com",
                        "attendeeId": "76"
                    }
                ]
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112354,
        "executor_type": "THIRDPARTY",
        "executor_name": "ticketModuleGetDynamicFormData",
        "executor_version": "v1",
        "executor_display_name": "Ticket Module Get Dynamic Form Data",
        "executor_description": "This API is used to get ticket module dynamic form data for holders and buyers. It is used by super admins and admins while adding an attendee to the event.",
        "executor_category": "HostAddAttendees",
        "executor_category_group": "HostAddAttendees",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/staff/ticketing/order/{orderid}/formattributes",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is the unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here is the demo event url."
            },
            {
                "key": "orderid",
                "value": "",
                "description": "It is order id of of ticket buyer."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692613531466,
        "lastModifiedTime": 1692613531466,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "customDisclaimer": "string",
                    "discountCoupon": false,
                    "processingFeesToPurchaser": false,
                    "purchaserDetail": {
                        "countryCode": "US",
                        "email": "string",
                        "eventId": 0,
                        "firstName": "string",
                        "languageCode": "string",
                        "lastName": "string",
                        "marketingOptIn": false,
                        "phonenumber": 0,
                        "role": [
                            "string"
                        ],
                        "userId": 0,
                        "userProfilePhoto": "string"
                    },
                    "ticketAttribute": {
                        "addOnsQuestions": {
                            "attributes": [
                                {
                                    "defaultValue": "string",
                                    "eventTicketTypeId": "string",
                                    "mandatory": false,
                                    "name": "string",
                                    "position": 0,
                                    "type": "string",
                                    "value": "string"
                                }
                            ],
                            "nestedQue": [
                                {
                                    "defaultValue": "string",
                                    "eventTicketTypeId": "string",
                                    "id": 0,
                                    "mandatory": false,
                                    "name": "string",
                                    "parentQueId": 0,
                                    "position": 0,
                                    "selectedAnsId": 0,
                                    "type": "string",
                                    "value": "string"
                                }
                            ]
                        },
                        "attendees": [
                            {
                                "attributes": [
                                    {
                                        "defaultValue": "string",
                                        "eventTicketTypeId": "string",
                                        "mandatory": false,
                                        "name": "string",
                                        "position": 0,
                                        "type": "string",
                                        "value": "string"
                                    }
                                ],
                                "header": "string",
                                "nestedQuestion": [
                                    {
                                        "defaultValue": "string",
                                        "eventTicketTypeId": "string",
                                        "id": 0,
                                        "mandatory": false,
                                        "name": "string",
                                        "parentQueId": 0,
                                        "position": 0,
                                        "selectedAnsId": 0,
                                        "type": "string",
                                        "value": "string"
                                    }
                                ],
                                "questions": [
                                    {
                                        "defaultValue": "string",
                                        "eventTicketTypeId": "string",
                                        "mandatory": false,
                                        "name": "string",
                                        "position": 0,
                                        "type": "string",
                                        "value": "string"
                                    }
                                ],
                                "tableId": 0,
                                "tickettypeid": 0
                            }
                        ],
                        "buyerInformationFields": {
                            "attributes": [
                                {
                                    "defaultValue": "string",
                                    "eventTicketTypeId": "string",
                                    "mandatory": false,
                                    "name": "string",
                                    "position": 0,
                                    "type": "string",
                                    "value": "string"
                                }
                            ],
                            "nestedQue": [
                                {
                                    "defaultValue": "string",
                                    "eventTicketTypeId": "string",
                                    "id": 0,
                                    "mandatory": false,
                                    "name": "string",
                                    "parentQueId": 0,
                                    "position": 0,
                                    "selectedAnsId": 0,
                                    "type": "string",
                                    "value": "string"
                                }
                            ]
                        },
                        "buyerQuestions": [
                            {
                                "defaultValue": "string",
                                "eventTicketTypeId": "string",
                                "mandatory": false,
                                "name": "string",
                                "position": 0,
                                "type": "string",
                                "value": "string"
                            }
                        ],
                        "couponCode": "string",
                        "discountAmount": 0,
                        "hasAddOnAttributes": false,
                        "hasHolderAttributes": false,
                        "onlyDonationTicket": true,
                        "orderData": [
                            {
                                "avgTotalFee": 0,
                                "dataType": "TICKET",
                                "id": 0,
                                "numberofticket": 0,
                                "price": 0,
                                "priceWithFee": 0,
                                "ticketType": "FREE",
                                "ticketTypeDescription": "string",
                                "ticketTypeName": "string",
                                "vatFee": 0
                            }
                        ],
                        "orderId": 0,
                        "remainingSeconds": 0,
                        "showCellPhoneField": false,
                        "totalPrice": 0
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112356,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllAvailableTicketing",
        "executor_version": "v1",
        "executor_display_name": "Get All Available Ticketing",
        "executor_description": "This API is used to get all available ticketing details associated with the specified event. This API can be accessed by event admins and super admins. It will return event data like availableTimeZone, currencySymbol, ticketingFee, seatingChartKey, eventVenueType, eventStartDate and many more. To call this API, user will have to pass an authentication key to authenticate the user.",
        "executor_category": "HostAddAttendees",
        "executor_category_group": "HostAddAttendees",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/getTicketingWithoutTicketingTypes",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692613777332,
        "lastModifiedTime": 1692613777332,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "availableTimeZone": [
                        {
                            "displayOffset": "string",
                            "equivalentTimezone": "string",
                            "name": "string"
                        }
                    ],
                    "currencySymbol": "string",
                    "equivalentTimezone": "string",
                    "eventAddress": "string",
                    "eventEndDate": "string",
                    "eventFormat": "VIRTUAL",
                    "eventIsActive": false,
                    "eventKey": "string",
                    "eventStartDate": "string",
                    "eventVenueType": "string",
                    "latitude": "string",
                    "longitude": "string",
                    "preEventAccessMinutes": 0,
                    "seatingChartKey": "string",
                    "ticketingFee": [
                        {
                            "addon": true,
                            "aeFeeFlat": 0,
                            "aeFeePercentage": 0,
                            "creditCardProcessingFlat": 0,
                            "creditCardProcessingPercentage": 0,
                            "fromThreshold": 0,
                            "inPerson": true,
                            "operator": "string",
                            "toThreshold": 0,
                            "wlFeeFlat": 0,
                            "wlFeePercentage": 0
                        }
                    ],
                    "timezoneId": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112362,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateOrderTickets",
        "executor_version": "v1",
        "executor_display_name": "Update Order Tickets",
        "executor_description": "This API used to update order tickets associated with the specified event. This API can be access by event admin and super admin. It will return only orderId. To call this API, user have to pass query param with API URL like eventurl, orderId, staff ticketing order details and authentication key to authenticate user.",
        "executor_category": "HostAddAttendees",
        "executor_category_group": "HostAddAttendees",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/staff/ticketing/order/{orderid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "orderid",
                "value": "",
                "description": "Update order tickets pass the orderid."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "staffTicketingOrderDto": {
                    "paymentType": "string",
                    "note": "string",
                    "utmTrackSourceDto": {
                        "utmSource": "string",
                        "utmMedium": "string",
                        "utmCampaign": "string",
                        "utmTerm": "string",
                        "utmContent": "string"
                    },
                    "ticketingOrderRequestDto": {
                        "ticketings": [
                            {
                                "ticketTypeId": 0,
                                "numberOfTicket": 0,
                                "price": 0,
                                "seatNumbers": [
                                    "string"
                                ],
                                "seatNumbersDisplay": [
                                    "string"
                                ],
                                "tableNumber": "string"
                            }
                        ],
                        "clientDate": "string"
                    }
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692614831407,
        "lastModifiedTime": 1692614831407,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "orderId": 0
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112363,
        "executor_type": "THIRDPARTY",
        "executor_name": "createSetupIntent",
        "executor_version": "v1",
        "executor_display_name": "Create SetupIntent",
        "executor_description": "This API used to create setupIntent associated with the specified event. This API can be access by event admin and super admin. It will return data like paymentIntentClientSecret, requiresAction and paymentIntentId. To call this API, user have to pass query param with API URL like eventurl, paymentIntentBase details and authentication key to authenticate user.",
        "executor_category": "HostAddAttendees",
        "executor_category_group": "HostAddAttendees",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/settings/setUpIntent/event/{eventUrl}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "paymentIntentBaseDTO": {
                    "paymentMethodId": "string",
                    "newCard": true
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692614925311,
        "lastModifiedTime": 1692614925311,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "paymentIntentClientSecret": "string",
                    "paymentIntentId": "string",
                    "requiresAction": true
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112360,
        "executor_type": "THIRDPARTY",
        "executor_name": "checkAttendeeCsvHaveCorrectRecords",
        "executor_version": "v1",
        "executor_display_name": "Check Attendee CSV have Correct Records",
        "executor_description": "This API used to check attendee CSV have correct records associated with the specified event. This API can be access by event admin and super admin. It will return event data like allowToUpload, amount and last4. To call this API, user have to pass query param with API URL like eventurl, multiPartFile and authentication key to authenticate user.",
        "executor_category": "HostAddAttendees",
        "executor_category_group": "HostAddAttendees",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/staff/checkAttendeeCSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "multiPartFile",
                "value": "",
                "description": "A representation of an uploaded file received in a multipart request.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692614658464,
        "lastModifiedTime": 1692614658464,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "allowToUpload": true,
                    "amount": 2,
                    "last4": null
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112361,
        "executor_type": "THIRDPARTY",
        "executor_name": "orderTickets",
        "executor_version": "v1",
        "executor_display_name": "Order Tickets",
        "executor_description": "This API used to create order tickets associated with the specified event. This API can be access by event admin and super admin. It will return only orderId. To call this API, user have to pass query param with API URL like eventurl, staff ticketing order details and authentication key to authenticate user.",
        "executor_category": "HostAddAttendees",
        "executor_category_group": "HostAddAttendees",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/staff/ticketing/order",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "staffTicketingOrderDto": {
                    "paymentType": "string",
                    "note": "string",
                    "utmTrackSourceDto": {
                        "utmSource": "string",
                        "utmMedium": "string",
                        "utmCampaign": "string",
                        "utmTerm": "string",
                        "utmContent": "string"
                    },
                    "ticketingOrderRequestDto": {
                        "ticketings": [
                            {
                                "ticketTypeId": 0,
                                "numberOfTicket": 0,
                                "price": 0,
                                "seatNumbers": [
                                    "string"
                                ],
                                "seatNumbersDisplay": [
                                    "string"
                                ],
                                "tableNumber": "string"
                            }
                        ],
                        "clientDate": "string"
                    }
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692614742172,
        "lastModifiedTime": 1692614742172,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "orderId": 0
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112357,
        "executor_type": "THIRDPARTY",
        "executor_name": "showActivateButtononHostSidebar",
        "executor_version": "v1",
        "executor_display_name": "Show Activate Button on Host Sidebar",
        "executor_description": "This API used to show activate button on host sidebar associated with the specified event. This API can be access by event admin and super admin. It will return event data like showActivateButton, redirectURL, openCreditCardPopup, openTicketingPopup and popupMessage. To call this API, user have to pass an authentication key to authenticate the user. This API used at event host side to show activate button details.",
        "executor_category": "HostAddAttendees",
        "executor_category_group": "HostAddAttendees",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/settings/showActiveButton",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692613862491,
        "lastModifiedTime": 1692613862491,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "showActivateButton": true,
                    "redirectURL": "/host/settings/account",
                    "openCreditCardPopup": false,
                    "openTicketingPopup": false,
                    "popupMessage": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112359,
        "executor_type": "THIRDPARTY",
        "executor_name": "ticketModuleDisplayPageSetting",
        "executor_version": "v1",
        "executor_display_name": "Ticket module display page setting",
        "executor_description": "This API is used to show the ticket module display page settings associated with the specified event. This API can be accessed by event admin and super admin. It will return event data like address, event format, ticket types, startDate, endDate, eventListingStatus, show ticket price, and many more. To call this API, the user has to pass eventurl as a query param, access code, recurringEventId, and authentication key to authenticate the user.",
        "executor_category": "HostAddAttendees",
        "executor_category_group": "HostAddAttendees",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/displayTicketing/settings",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "accessCode",
                "value": "",
                "description": "Pass access code for ticketing data.",
                "req": false
            },
            {
                "key": "recurringEventId",
                "value": "",
                "description": "User pass in person event id.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692614220719,
        "lastModifiedTime": 1692614220719,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "startDate": 1634128200000,
                    "endDate": 1634139000000,
                    "address": null,
                    "eventListingStatus": "PREVIEW",
                    "eventFormat": "VIRTUAL",
                    "showRegistrationButton": true,
                    "preEventAccessMinutes": 30,
                    "showEnterEventButton": false,
                    "eventVenueStatus": "ONLINE_VIRTUAL_EVENT",
                    "showTicketPrice": true,
                    "ticketTypes": [
                        {
                            "typeId": 7220,
                            "name": "Free Admission",
                            "price": 0,
                            "fee": 0,
                            "endDate": 1634139000000,
                            "startDate": 1631522333000,
                            "bundleType": "INDIVIDUAL_TICKET",
                            "ticketsPerTable": 0,
                            "remaniningTickets": 94,
                            "maxTickerPerBuyer": 10,
                            "minTickerPerBuyer": 0,
                            "ticketTypeDescription": null,
                            "enableTicketDescription": false,
                            "passFeesToBuyer": true,
                            "position": 0,
                            "ticketType": "FREE",
                            "categoryColor": null,
                            "totalSoldTickets": 6,
                            "categoryId": null,
                            "dataType": "TICKET"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112369,
        "executor_type": "THIRDPARTY",
        "executor_name": "saveWaitListSettings",
        "executor_version": "v1",
        "executor_display_name": "Save wait list settings",
        "executor_description": "This API is used to save waitlist settings.",
        "executor_category": "HostManageWaitlist",
        "executor_category_group": "HostManageWaitlist",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/waitlist/setting",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "waitListSettingsDto": {
                    "timeToRespondInDays": 0,
                    "timeToRespondInHours": 0,
                    "timeToRespondInMinutes": 0,
                    "waitListTicketReleaseMessage": "string",
                    "maxWaitListSize": 0,
                    "maxWaitListSizeReached": true,
                    "remainingTickets": 0,
                    "manualReleaseTickets": true
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692615811351,
        "lastModifiedTime": 1692615811351,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112377,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteWaitList",
        "executor_version": "v1",
        "executor_display_name": "Delete Wait List",
        "executor_description": "This API is used to delete the waitlist.  This API can be accessed by event admins and super admins.  To call this API, the user has to pass path parameters with waitListId and authentication key to authenticate the user.",
        "executor_category": "HostManageWaitlist",
        "executor_category_group": "HostManageWaitlist",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/waitlist/{waitListId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here is the demo event url."
            },
            {
                "key": "waitListId",
                "value": "",
                "description": "It contains wait list id which is unique."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692616476745,
        "lastModifiedTime": 1692616476745,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Item Deleted Successfully.",
                    "type": "Success"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4030201",
                    "developerMessage": "Not Event Host"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Event Not Found",
                    "errorCode": "4040200",
                    "developerMessage": "No Event could be found"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112370,
        "executor_type": "THIRDPARTY",
        "executor_name": "waitList",
        "executor_version": "v1",
        "executor_display_name": "Wait List",
        "executor_description": "This API is used to get all wait lists.",
        "executor_category": "HostManageWaitlist",
        "executor_category_group": "HostManageWaitlist",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/waitlist",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692615890142,
        "lastModifiedTime": 1692615890142,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "waitListId": 0,
                        "timeAddedToList": "2021-06-28T13:56:19.354Z",
                        "timeTicketsBecameAvailable": "2021-06-28T13:56:19.354Z",
                        "status": "TICKET_PURCHASED"
                    }
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112368,
        "executor_type": "THIRDPARTY",
        "executor_name": "getWaitListSettings",
        "executor_version": "v1",
        "executor_display_name": "Get wait list settings",
        "executor_description": "This API used to get wait list settings associated with the specified event. This API can be access by event admin and super admin. It will return wait list details like manualReleaseTickets, remainingTickets, timeToRespondInHours, waitListEnabled, waitListTicketReleaseMessage and many more. To call this API, user have to pass path and query param with API URL like eventurl, recurringEventId and authentication key to authenticate user.",
        "executor_category": "HostManageWaitlist",
        "executor_category_group": "HostManageWaitlist",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/waitlist/setting",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "This is recurring Event id.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692615700008,
        "lastModifiedTime": 1692615700008,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "manualReleaseTickets": false,
                    "maxWaitListSize": 0,
                    "maxWaitListSizeReached": false,
                    "phoneNumberRequired": false,
                    "remainingTickets": 0,
                    "timeToRespondInDays": 0,
                    "timeToRespondInHours": 0,
                    "timeToRespondInMinutes": 0,
                    "waitListEnabled": false,
                    "waitListTicketReleaseMessage": "string",
                    "waitListTrigger": 0
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112381,
        "executor_type": "THIRDPARTY",
        "executor_name": "waitListExpiration",
        "executor_version": "v1",
        "executor_display_name": "Wait List Expiration",
        "executor_description": "This API is used to check the wait list expiration limit or how long an individual has to claim their ticket once released to them.",
        "executor_category": "HostManageWaitlist",
        "executor_category_group": "HostManageWaitlist",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/waitlist/checkWaitListExpiration",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692616664353,
        "lastModifiedTime": 1692616664353,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Success",
                    "type": "Success"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112372,
        "executor_type": "THIRDPARTY",
        "executor_name": "addToWaitList",
        "executor_version": "v1",
        "executor_display_name": "Add to Wait List",
        "executor_description": "This API used to add to wait list associated with the specified event. This API can be access by event admin and super admin. It will return response like type and message To call this API, user have to pass query param with API URL like wait list details and authentication key to authenticate user.",
        "executor_category": "HostManageWaitlist",
        "executor_category_group": "HostManageWaitlist",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/waitlist",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "waitListDto": {
                    "numberOfTickets": 0,
                    "firstName": "string",
                    "lastName": "string",
                    "email": "string",
                    "phoneNumber": 0,
                    "countryCode": "string",
                    "waitListId": 0,
                    "timeAddedToList": "2023-08-21",
                    "timeTicketsBecameAvailable": "2023-08-21",
                    "status": "WAITING"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692616230420,
        "lastModifiedTime": 1692616230420,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112374,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateWaitList",
        "executor_version": "v1",
        "executor_display_name": "Update Wait List",
        "executor_description": "This API is used to update the waitlist.  This API can be accessed by event admins and super admins.  To call this API, the user has to pass path parameters with waitListId , eventURl , WaitListUpdateDto, and authentication key to authenticate the user.",
        "executor_category": "HostManageWaitlist",
        "executor_category_group": "HostManageWaitlist",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/waitlist/{waitListId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here is the demo event url."
            },
            {
                "key": "waitListId",
                "value": "",
                "description": "It contains wait list id which is unique."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "waitListDto": {
                    "numberOfTickets": 0,
                    "firstName": "string",
                    "lastName": "string",
                    "email": "string",
                    "phoneNumber": 0,
                    "countryCode": "string",
                    "waitListId": 0,
                    "timeAddedToList": "2023-08-21",
                    "timeTicketsBecameAvailable": "2023-08-21",
                    "status": "WAITING"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692616370570,
        "lastModifiedTime": 1692616370570,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "You will be notified if more tickets become available.",
                    "type": "Success"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4030201",
                    "developerMessage": "Not Event Host"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Event Not Found",
                    "errorCode": "4040200",
                    "developerMessage": "No Event could be found"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112487,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadContactCsv",
        "executor_version": "v1",
        "executor_display_name": "Download Contact CSV",
        "executor_description": "This API used to download contact CSV. This API can be used by admin and super admin to download contact's CSV details. We need to pass an authorization token here, which is generated after successful login into account with the other details. This API used at host side to download contact's CSV details.",
        "executor_category": "HostEngageAPI",
        "executor_category_group": "HostEngageAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/contact/download/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692686284007,
        "lastModifiedTime": 1692686284007,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112486,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteAllContact",
        "executor_version": "v1",
        "executor_display_name": "Delete All Contact",
        "executor_description": "This API used to delete all contact. This API can be access by admin and super admin. list of contact id needs to be deleted as body params. To call this API, user have to pass an authentication key to authenticate the user. This API used at event host side to delete all contact.",
        "executor_category": "HostEngageAPI",
        "executor_category_group": "HostEngageAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/contact/all",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "deleteAll",
                "value": "",
                "description": "true if you want to delete all the contacts",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "contactIds": [
                    0
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692686209372,
        "lastModifiedTime": 1692686209372,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Contacts Deleted."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112488,
        "executor_type": "THIRDPARTY",
        "executor_name": "updatecontact",
        "executor_version": "v1",
        "executor_display_name": "Update Contact",
        "executor_description": "This API Used to update contact details by event. This API can be used by admin and super admin to update contact. User can use this api to update contact details related to it like firstName, lastName, email, countryCode, phoneNumber and many other. User have to pass the ContactDto as body params, for which user they want contact details.",
        "executor_category": "HostEngageAPI",
        "executor_category_group": "HostEngageAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/contact/update",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "ContactDto": {
                    "firstName": "string",
                    "lastName": "string",
                    "email": "string",
                    "countryCode": "string",
                    "phoneNumber": 0,
                    "countryCodeFromString": "string",
                    "error": "string",
                    "ticketBaseContactDto": {
                        "orderNumber": 0,
                        "ticketNumber": 0,
                        "ticketTypeName": "string",
                        "autoAssignedSeqNumber": 0
                    },
                    "id": 0,
                    "unSubscribed": true,
                    "phoneNumberCSV": "string"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692686372101,
        "lastModifiedTime": 1692686372101,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112490,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateAttendeeConnectionConfigurationDetails",
        "executor_version": "v1",
        "executor_display_name": "Update Attendee Connection Configuration Details",
        "executor_description": "This API Used to update attendee connection configuration details. This API can be used by admin and super admin to update attendee connection configuration details.It will update data like First Name,Last Name, Email, Title, Company, Pronouns and many more. User have to pass the event URL, for which event they want attendee connection configuration details. Need to pass an authorization token here, which is generated after successful login into account with the other details. This API used at event host side to update attendee connection configuration details.",
        "executor_category": "HostEngageAPI",
        "executor_category_group": "HostEngageAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/connection/setting",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "attendeeConnectionConfigDTOList": {
                    "name": "string",
                    "value": "string",
                    "isEnable": true
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692686546908,
        "lastModifiedTime": 1692686546908,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Success"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112483,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllContacts",
        "executor_version": "v1",
        "executor_display_name": "Get All Contacts",
        "executor_description": "This API Used to get all Contacts details associated with the specified event. API used at host side event admin and super admin can access this API. It will return data like firstName, lastName, email, phoneNumber and other details. To call this API, user have to pass query param with API URL like searchString, page, size and authentication key to authenticate user.",
        "executor_category": "HostEngageAPI",
        "executor_category_group": "HostEngageAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/contact",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "searchString",
                "value": "",
                "description": "Get filter contact records according to search value passing in request",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Size will returns number of records when call api default will returns 10 records",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692685866813,
        "lastModifiedTime": 1692685866813,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 2,
                    "recordsFiltered": 2,
                    "data": [
                        {
                            "firstName": "firstname22",
                            "lastName": "lastname22",
                            "email": "test2@gmail.com",
                            "ticketBaseContactDto": null,
                            "id": 222,
                            "countryCode": "IN",
                            "phoneNumber": 9725098016,
                            "phoneNumberCSV": null,
                            "error": null,
                            "unSubscribed": false,
                            "countryCodeFromString": "IN"
                        },
                        {
                            "firstName": "firstname",
                            "lastName": "Lastname",
                            "email": "test@gmail.com",
                            "ticketBaseContactDto": null,
                            "id": 221,
                            "countryCode": "IN",
                            "phoneNumber": 9725098017,
                            "phoneNumberCSV": null,
                            "error": null,
                            "unSubscribed": false,
                            "countryCodeFromString": "IN"
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112484,
        "executor_type": "THIRDPARTY",
        "executor_name": "contactDelete",
        "executor_version": "v1",
        "executor_display_name": "Delete Contact",
        "executor_description": "This API used to delete contact. This API can be access by admin and super admin. User have to pass the contact ID as path variable, for which contact they want to delete contact. To call this API, user have to pass an authentication key to authenticate the user. This API used at event host side to delete contact.",
        "executor_category": "HostEngageAPI",
        "executor_category_group": "HostEngageAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/contact/{contactId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "contactId",
                "value": "",
                "description": "For getting particular contact need to pass event contact id for getting particular contact."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692686012253,
        "lastModifiedTime": 1692686012253,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Contact Deleted."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112485,
        "executor_type": "THIRDPARTY",
        "executor_name": "addContact",
        "executor_version": "v1",
        "executor_display_name": "Add Contact",
        "executor_description": "This API used to delete contact. This API can be access by admin and super admin. User have to pass the contact ID as path variable, for which contact they want to delete contact. To call this API, user have to pass an authentication key to authenticate the user. This API used at event host side to delete contact.",
        "executor_category": "HostEngageAPI",
        "executor_category_group": "HostEngageAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/contact/add",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "firstName": "string",
                "lastName": "string",
                "email": "string",
                "countryCode": "string",
                "phoneNumber": 0,
                "countryCodeFromString": "string",
                "error": "string",
                "ticketBaseContactDto": {
                    "orderNumber": 0,
                    "ticketNumber": 0,
                    "ticketTypeName": "string",
                    "autoAssignedSeqNumber": 0
                },
                "id": 0,
                "unSubscribed": true,
                "phoneNumberCSV": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692686100286,
        "lastModifiedTime": 1692686100286,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Contact Saved."
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112489,
        "executor_type": "THIRDPARTY",
        "executor_name": "uploadContact",
        "executor_version": "v1",
        "executor_display_name": "Upload Contact",
        "executor_description": "This API Used to update contact details by event. This API can be used by admin and super admin to update contact. User can use this api to update contact details related to it like firstName, lastName, email, countryCode, phoneNumber and many other. User have to pass the ContactDto as body params, for which user they want contact details.",
        "executor_category": "HostEngageAPI",
        "executor_category_group": "HostEngageAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/contact/upload/contacts",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "contactsFile",
                "value": "",
                "description": "A representation of an uploaded file received in a multipart request.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692686457720,
        "lastModifiedTime": 1692686457720,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "firstName": "first11",
                        "lastName": "",
                        "email": "abc@gmail.com",
                        "ticketBaseContactDto": null,
                        "id": 0,
                        "countryCode": null,
                        "phoneNumber": 9998934455,
                        "phoneNumberCSV": "9998934455",
                        "error": "Last name must be not null OR Last name must be less than 50 characters.",
                        "unSubscribed": false,
                        "countryCodeFromString": "US"
                    },
                    {
                        "firstName": "first22",
                        "lastName": "lastname22",
                        "email": "bzala0011&gmail.com",
                        "ticketBaseContactDto": null,
                        "id": 0,
                        "countryCode": null,
                        "phoneNumber": 9998986377,
                        "phoneNumberCSV": "9998986377",
                        "error": "This is not valid email address.",
                        "unSubscribed": false,
                        "countryCodeFromString": "US"
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112502,
        "executor_type": "THIRDPARTY",
        "executor_name": "createEmailTemplate",
        "executor_version": "v1",
        "executor_display_name": "Create Email Template",
        "executor_description": "A user can use this API to create a email template for an event. This API can be access by event admin and super admin. For creating new email template, need to pass request body param for message Contact Details. User have to pass their authentication key for user authentication. This API used at host side to create new email template.",
        "executor_category": "HostMessageContactsAPI",
        "executor_category_group": "HostMessageContactsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/contact/message",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "messageToContactDto": {
                    "id": 0,
                    "subjectLine": "string",
                    "dateSentOrSchedule": "string",
                    "encodedTemplateId": "string",
                    "messageJson": "string",
                    "notificationIcon": "string",
                    "replyToEmail": "string",
                    "scheduledAT": "string",
                    "sendTo": "string",
                    "sentToCount": 0,
                    "status": "string",
                    "targetAudienceType": "All",
                    "ticketTypeIds": "string",
                    "type": "string"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692690905370,
        "lastModifiedTime": 1692690905370,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "messageBody": "hjsdkhksdjnvsdjkncv\nsdvsdmvksdv\nvsv",
                    "messageJson": "hjsdkhksdjnvsdjkncv\nsdvsdmvksdv\nvsv",
                    "subjectLine": "Motivational",
                    "sendTo": "ALL_CONTACTS",
                    "replyToEmail": "bharat.z@brilworks.com",
                    "scheduledAT": "09/19/2021 13:01",
                    "type": "NOTIFICATION",
                    "targetAudienceType": "All",
                    "ticketTypeIds": "7277"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112501,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllEmailTemplate",
        "executor_version": "v1",
        "executor_display_name": "Get All Email Template",
        "executor_description": "This API Used to get all email template associated with the specified event. API used at host side event admin and super admin can access this API. It will return data like dateSentOrSchedule, encodedTemplateId, messageJson, replyToEmail, subjectLine, ticketTypeIds and other details. To call this API, user have to pass query param with API URL like searchString, isNotification and authentication key to authenticate user.",
        "executor_category": "HostMessageContactsAPI",
        "executor_category_group": "HostMessageContactsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/contact/message",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "searchString",
                "value": "",
                "description": "Get filter email template records according to search value passing in request.",
                "req": false
            },
            {
                "key": "isNotification",
                "value": "",
                "description": "It's passed value is true then set NOTIFICATION type otherwise EMAIL.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": null,
        "registeredAsIs": true,
        "creationTime": 1692690731386,
        "lastModifiedTime": 1692690806180,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": 536,
                        "subjectLine": "Session1",
                        "scheduledAT": null,
                        "sendTo": "ALL_CONTACTS",
                        "messageJson": "helllo",
                        "dateSentOrSchedule": "09/17/2021 15:26:22",
                        "sentToCount": 0,
                        "status": "SENT",
                        "replyToEmail": "bharat.z@brilworks.com",
                        "type": "NOTIFICATION",
                        "encodedTemplateId": "AvtpqJSmT9fPWH_OnYJ0Sg",
                        "ticketTypeIds": "7277",
                        "targetAudienceType": "All",
                        "notificationIcon": null
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112507,
        "executor_type": "THIRDPARTY",
        "executor_name": "sendEmailTemplate",
        "executor_version": "v1",
        "executor_display_name": "Send Email Template",
        "executor_description": "A user can use this API to send a email template for an event. This API can be access by event admin and super admin. To call this API, user have to pass query param with API like templateId, emailRecipients, ticketingTypeId, fetchHiddenTicketsOnly, dataType, recurringEventId and authentication key to authenticate user. This API used at host side to send email template.",
        "executor_category": "HostMessageContactsAPI",
        "executor_category_group": "HostMessageContactsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/contact/message/sendEmail/{templateId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "templateId",
                "value": "",
                "description": "Email template id must be required."
            }
        ],
        "queryParams": [
            {
                "key": "emailRecipients",
                "value": "",
                "description": "email recipients must be either of ALL_CONTACTS, ALL_TICKER_HOLDER_AND_BUYERS, ALL_AUCTION_PARTICIPANTS, ALL_AUCTION_WINNERS, ALL_RAFFLE_WINNERS, ALL_FUND_A_NEED_PLEDGERS, ALL_TEXT_TO_GIVE_DONORS, BY_TICKET_TYPE_VIA, ALL_SPEAKERS, ALL_EXHIBITORS, CHECKED_IN, NOT_CHECKED_IN and ALL_RAFFLE_PARTICIPANTS.",
                "req": false
            },
            {
                "key": "ticketingTypeId",
                "value": "",
                "description": "Ticket Type Id to send mail if EMAIL_RECIPIENTS is BY_TICKET_TYPE_VIA",
                "req": false
            },
            {
                "key": "fetchHiddenTicketsOnly",
                "value": "",
                "description": "Default value for a boolean is false in fetchHiddenTicketsOnly.",
                "req": false
            },
            {
                "key": "dataType",
                "value": "",
                "description": "There are two type of datatype like TICKET and ADDON . Default value for a datatype is Ticket.",
                "req": false
            },
            {
                "key": "recurringEventId",
                "value": "",
                "description": "Pass recurring event id",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692691985725,
        "lastModifiedTime": 1692691985725,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Email has been successfully sent."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112508,
        "executor_type": "THIRDPARTY",
        "executor_name": "sendTestEmail",
        "executor_version": "v1",
        "executor_display_name": "Send Test Email",
        "executor_description": "A user can use this API to send a test email for an event. This API can be access by event admin and super admin. To call this API, user have to pass query param with API like encodedTemplateId, email and authentication key to authenticate user. This API used at host side to send test email.",
        "executor_category": "HostMessageContactsAPI",
        "executor_category_group": "HostMessageContactsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/contact/message/sendTestEmail/{encodedTemplateId}/email/{email}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "encodedTemplateId",
                "value": "",
                "description": "Encoded email template Id required."
            },
            {
                "key": "email",
                "value": "",
                "description": "Send test email address required."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692692092257,
        "lastModifiedTime": 1692692092257,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Test email sent successfully"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112506,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateemailTemplate",
        "executor_version": "v1",
        "executor_display_name": "Update Email Template",
        "executor_description": "This API Used to update email template details by event. This API can be used by admin and super admin to update email template details. User can use this api to update email template details related to it like replyToEmail, scheduledAT, sendTo, subjectLine and many other. User have to pass the message details as body params. This API used at event host side to update email template details.",
        "executor_category": "HostMessageContactsAPI",
        "executor_category_group": "HostMessageContactsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/contact/message",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "messageToContactDto": {
                    "id": 0,
                    "subjectLine": "string",
                    "dateSentOrSchedule": "string",
                    "encodedTemplateId": "string",
                    "messageJson": "string",
                    "notificationIcon": "string",
                    "replyToEmail": "string",
                    "scheduledAT": "string",
                    "sendTo": "string",
                    "sentToCount": 0,
                    "status": "string",
                    "targetAudienceType": "All",
                    "ticketTypeIds": "string",
                    "type": "string"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692691796549,
        "lastModifiedTime": 1692691796549,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112510,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllSentEmails",
        "executor_version": "v1",
        "executor_display_name": "Get All Sent Emails",
        "executor_description": "This API Used to get all sent emails detail associated with the specified event. API used at host side event admin and super admin can access this API. It will return data like status, dateSentOrSchedule, encodedTemplateId, messageJson, replyToEmail, subjectLine, ticketTypeIds and other details. To call this API, user have to pass query param with API URL like searchString, isNotification and authentication key to authenticate user.",
        "executor_category": "HostMessageContactsAPI",
        "executor_category_group": "HostMessageContactsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/contact/message/sent",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "searchString",
                "value": "",
                "description": "Get filter email template records according to search value passing in request.",
                "req": false
            },
            {
                "key": "isNotification",
                "value": "",
                "description": "It's passed value is false then return EMAIL type message otherwise NOTIFICATION.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692692207046,
        "lastModifiedTime": 1692692207046,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": 558,
                        "subjectLine": "Hi.....",
                        "scheduledAT": null,
                        "sendTo": "ALL_CONTACTS",
                        "messageJson": "{\"counters\":{\"u_column\":2,\"u_row\":2,\"u_content_heading\":1},\"body\":{\"rows\":[{\"cells\":[1],\"columns\":[{\"contents\":[{\"type\":\"heading\",\"values\":{\"containerPadding\":\"10px\",\"headingType\":\"h1\",\"fontFamily\":{\"label\":\"Arial\",\"value\":\"arial,helvetica,sans-serif\"},\"fontSize\":\"22px\",\"textAlign\":\"left\",\"lineHeight\":\"140%\",\"linkStyle\":{\"inherit\":true,\"linkColor\":\"#0000ee\",\"linkHoverColor\":\"#0000ee\",\"linkUnderline\":true,\"linkHoverUnderline\":true},\"hideDesktop\":false,\"_meta\":{\"htmlID\":\"u_content_heading_1\",\"htmlClassNames\":\"u_content_heading\"},\"selectable\":true,\"draggable\":true,\"duplicatable\":true,\"deletable\":true,\"hideable\":true,\"text\":\"Hi every one.\"}}],\"values\":{\"backgroundColor\":\"\",\"padding\":\"0px\",\"border\":{},\"_meta\":{\"htmlID\":\"u_column_2\",\"htmlClassNames\":\"u_column\"}}}],\"values\":{\"displayCondition\":null,\"columns\":false,\"backgroundColor\":\"\",\"columnsBackgroundColor\":\"\",\"backgroundImage\":{\"url\":\"\",\"fullWidth\":true,\"repeat\":false,\"center\":true,\"cover\":false},\"padding\":\"0px\",\"hideDesktop\":false,\"_meta\":{\"htmlID\":\"u_row_2\",\"htmlClassNames\":\"u_row\"},\"selectable\":true,\"draggable\":true,\"duplicatable\":true,\"deletable\":true,\"hideable\":true}}],\"values\":{\"textColor\":\"#000000\",\"backgroundColor\":\"#e7e7e7\",\"backgroundImage\":{\"url\":\"\",\"fullWidth\":true,\"repeat\":false,\"center\":true,\"cover\":false},\"contentWidth\":\"500px\",\"contentAlign\":\"center\",\"fontFamily\":{\"label\":\"Arial\",\"value\":\"arial,helvetica,sans-serif\"},\"preheaderText\":\"\",\"linkStyle\":{\"body\":true,\"linkColor\":\"#0000ee\",\"linkHoverColor\":\"#0000ee\",\"linkUnderline\":true,\"linkHoverUnderline\":true},\"_meta\":{\"htmlID\":\"u_body\",\"htmlClassNames\":\"u_body\"}}},\"schemaVersion\":6}",
                        "dateSentOrSchedule": "09/20/2021 12:30:47",
                        "sentToCount": 1,
                        "status": "SENT",
                        "replyToEmail": "bharat.z@brilworks.com",
                        "type": "EMAIL",
                        "encodedTemplateId": "ar7CB7tQe08lA1m_vZyAeQ",
                        "ticketTypeIds": "",
                        "targetAudienceType": "All",
                        "notificationIcon": null
                    },
                    {
                        "id": 615,
                        "subjectLine": "SecondEmiail",
                        "scheduledAT": "09/01/2021 01:59:00",
                        "sendTo": "ALL_CONTACTS",
                        "messageJson": "{\"counters\":{\"u_column\":1,\"u_row\":1},\"body\":{\"rows\":[{\"cells\":[1],\"columns\":[{\"contents\":[],\"values\":{\"_meta\":{\"htmlID\":\"u_column_1\",\"htmlClassNames\":\"u_column\"}}}],\"values\":{\"displayCondition\":null,\"columns\":false,\"backgroundColor\":\"\",\"columnsBackgroundColor\":\"\",\"backgroundImage\":{\"url\":\"\",\"fullWidth\":true,\"repeat\":false,\"center\":true,\"cover\":false},\"padding\":\"0px\",\"hideDesktop\":false,\"_meta\":{\"htmlID\":\"u_row_1\",\"htmlClassNames\":\"u_row\"},\"selectable\":true,\"draggable\":true,\"duplicatable\":true,\"deletable\":true,\"hideable\":true}}],\"values\":{\"textColor\":\"#000000\",\"backgroundColor\":\"#e7e7e7\",\"backgroundImage\":{\"url\":\"\",\"fullWidth\":true,\"repeat\":false,\"center\":true,\"cover\":false},\"contentWidth\":\"500px\",\"contentAlign\":\"center\",\"fontFamily\":{\"label\":\"Arial\",\"value\":\"arial,helvetica,sans-serif\"},\"preheaderText\":\"\",\"linkStyle\":{\"body\":true,\"linkColor\":\"#0000ee\",\"linkHoverColor\":\"#0000ee\",\"linkUnderline\":true,\"linkHoverUnderline\":true},\"_meta\":{\"htmlID\":\"u_body\",\"htmlClassNames\":\"u_body\"}}},\"schemaVersion\":6}",
                        "dateSentOrSchedule": "09/20/2021 13:23:59",
                        "sentToCount": 3,
                        "status": "SENT",
                        "replyToEmail": "bzala011@gmail.com",
                        "type": "EMAIL",
                        "encodedTemplateId": "dbqmOPLxLanmNehzRJ2b4w",
                        "ticketTypeIds": "",
                        "targetAudienceType": "All",
                        "notificationIcon": null
                    },
                    {
                        "id": 620,
                        "subjectLine": "sss",
                        "scheduledAT": null,
                        "sendTo": "ALL_CONTACTS",
                        "messageJson": "{\"counters\":{\"u_column\":1,\"u_row\":1},\"body\":{\"rows\":[{\"cells\":[1],\"columns\":[{\"contents\":[],\"values\":{\"_meta\":{\"htmlID\":\"u_column_1\",\"htmlClassNames\":\"u_column\"}}}],\"values\":{\"displayCondition\":null,\"columns\":false,\"backgroundColor\":\"\",\"columnsBackgroundColor\":\"\",\"backgroundImage\":{\"url\":\"\",\"fullWidth\":true,\"repeat\":false,\"center\":true,\"cover\":false},\"padding\":\"0px\",\"hideDesktop\":false,\"_meta\":{\"htmlID\":\"u_row_1\",\"htmlClassNames\":\"u_row\"},\"selectable\":true,\"draggable\":true,\"duplicatable\":true,\"deletable\":true,\"hideable\":true}}],\"values\":{\"textColor\":\"#000000\",\"backgroundColor\":\"#e7e7e7\",\"backgroundImage\":{\"url\":\"\",\"fullWidth\":true,\"repeat\":false,\"center\":true,\"cover\":false},\"contentWidth\":\"500px\",\"contentAlign\":\"center\",\"fontFamily\":{\"label\":\"Arial\",\"value\":\"arial,helvetica,sans-serif\"},\"preheaderText\":\"\",\"linkStyle\":{\"body\":true,\"linkColor\":\"#0000ee\",\"linkHoverColor\":\"#0000ee\",\"linkUnderline\":true,\"linkHoverUnderline\":true},\"_meta\":{\"htmlID\":\"u_body\",\"htmlClassNames\":\"u_body\"}}},\"schemaVersion\":6}",
                        "dateSentOrSchedule": "09/20/2021 15:37:42",
                        "sentToCount": 3,
                        "status": "SENT",
                        "replyToEmail": "bharat.z@brilworks.com",
                        "type": "EMAIL",
                        "encodedTemplateId": "I-LGx5uQZkC8XrvKrh6ngA",
                        "ticketTypeIds": "",
                        "targetAudienceType": "All",
                        "notificationIcon": null
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112503,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteemailTemplate",
        "executor_version": "v1",
        "executor_display_name": "Delete Email Template",
        "executor_description": "This API used to delete email template. This API can be access by admin and super admin. User have to pass the email template ID as path variable, for which email template they want to delete template. To call this API, user have to pass an authentication key to authenticate the user. This API used at event host side to delete email template.",
        "executor_category": "HostMessageContactsAPI",
        "executor_category_group": "HostMessageContactsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/contact/message/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "For getting particular email template need to pass email template id for getting particular template."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692691003502,
        "lastModifiedTime": 1692691003502,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Template Deleted."
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112504,
        "executor_type": "THIRDPARTY",
        "executor_name": "getRecipientCount",
        "executor_version": "v1",
        "executor_display_name": "Get Recipient Count",
        "executor_description": "This API used to get recipient count associated with the specified event. API used at host side event admin and super admin can access this API. It will return total number of recipient. To call this API, user have to pass query param with API like emailRecipients, ticketingTypeId, fetchHiddenTicketsOnly, dataType, recurringEventId and authentication key to authenticate user.",
        "executor_category": "HostMessageContactsAPI",
        "executor_category_group": "HostMessageContactsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/contact/message/recipientCount",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "emailRecipients",
                "value": "",
                "description": "email recipients must be either of ALL_CONTACTS, ALL_TICKER_HOLDER_AND_BUYERS, ALL_AUCTION_PARTICIPANTS, ALL_AUCTION_WINNERS, ALL_RAFFLE_WINNERS, ALL_FUND_A_NEED_PLEDGERS, ALL_TEXT_TO_GIVE_DONORS, BY_TICKET_TYPE_VIA, ALL_SPEAKERS, ALL_EXHIBITORS, CHECKED_IN, NOT_CHECKED_IN and ALL_RAFFLE_PARTICIPANTS.",
                "req": false
            },
            {
                "key": "ticketingTypeId",
                "value": "",
                "description": "Ticket Type Id to send mail if EMAIL_RECIPIENTS is BY_TICKET_TYPE_VIA",
                "req": false
            },
            {
                "key": "fetchHiddenTicketsOnly",
                "value": "",
                "description": "Default value for a boolean is false in fetchHiddenTicketsOnly.",
                "req": false
            },
            {
                "key": "dataType",
                "value": "",
                "description": "There are two type of datatype like TICKET and ADDON . Default value for a datatype is Ticket.",
                "req": false
            },
            {
                "key": "recurringEventId",
                "value": "",
                "description": "Pass recurring event id",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692691152333,
        "lastModifiedTime": 1692691152333,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112552,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateBeeFreeTemplate",
        "executor_version": "v1",
        "executor_display_name": "Update BeeFreeTemplate",
        "executor_description": "This API is used to Update BeeFreeTemplate. API is used as host side event admin and super admin can access this API. It will return response data like type, message etc. To call this API, user will have to pass path param with API URL like beeFreeTemplateId, request param like beeFreeTemplateDto and authentication key to authenticate user.",
        "executor_category": "HostRegistrationOrderConfirmation",
        "executor_category_group": "HostRegistrationOrderConfirmation",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing{eventUrl}//beeFreeTemplate/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "This field contains id of beefree template to update"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "beeFreeTemplateDto": {
                    "beeFreeId": 0,
                    "beeFreeJson": "string",
                    "beeFreeHtml": "string",
                    "emailType": "EMAIL_INVITATIONS"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692698698692,
        "lastModifiedTime": 1692698698692,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The request could not be understood by the server due to malformed syntax.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112540,
        "executor_type": "THIRDPARTY",
        "executor_name": "setOrderConfirmationEmail",
        "executor_version": "v1",
        "executor_display_name": "Set order confirmation email",
        "executor_description": "This API is used to set the order confirmation email. API is used at host side event admin and super admin can access this API. It will return data like enabledOrderConfirmationEmail. To call this API, user will have to pass request param with API URL like enableOrderConfirmationDto and authentication key to authenticate user.",
        "executor_category": "HostRegistrationOrderConfirmation",
        "executor_category_group": "HostRegistrationOrderConfirmation",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/setOrderConfirmationEmail",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "enableOrderConfirmationDto": {
                    "isEnabledOrderConfirmationEmail": true
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692697532608,
        "lastModifiedTime": 1692697532608,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "enabledOrderConfirmationEmail": true
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The request could not be understood by the server due to malformed syntax.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112550,
        "executor_type": "THIRDPARTY",
        "executor_name": "getBeeFreeTemplate",
        "executor_version": "v1",
        "executor_display_name": "Get BeeFree Template",
        "executor_description": "This API is used to get BeeFree Template. API used at host side event admin and super admin can access this API. It will return data like beeFreeHtml, beeFreeId, beeFreeJson, emailType.  To call this API, the user will have to pass an authentication key to authenticate the user and the name of emailType for which we want to get details for the BeeFree template. (Ex. of email type: REMINDER, ORDER_CONFIRMATION)",
        "executor_category": "HostRegistrationOrderConfirmation",
        "executor_category_group": "HostRegistrationOrderConfirmation",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/beeFreeTemplate/{emailType}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "emailType",
                "value": "",
                "description": "it is contains name of email type for which we want to get details for beefree template"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692698425770,
        "lastModifiedTime": 1692698425770,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "beeFreeHtml": "string",
                    "beeFreeId": 0,
                    "beeFreeJson": "string",
                    "emailType": "EMAIL_INVITATIONS"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The request could not be understood by the server due to malformed syntax.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112534,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTicketingEmailData",
        "executor_version": "v1",
        "executor_display_name": "Get ticketing email data",
        "executor_description": "This API is used to get ticketing email data. API is used as host side event admin and super admin can access this API. It will return data like emailHeader, list of User details, defaultReplyToEmail.",
        "executor_category": "HostRegistrationOrderConfirmation",
        "executor_category_group": "HostRegistrationOrderConfirmation",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/email",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692697160262,
        "lastModifiedTime": 1692697160262,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "defaultReplyToEmail": "string",
                    "emailHeader": "string",
                    "eventStaff": [
                        {
                            "countryCode": "US",
                            "email": "string",
                            "firstName": "string",
                            "languageCode": "string",
                            "lastName": "string",
                            "marketingOptIn": false,
                            "phonenumber": 0,
                            "userId": 0,
                            "userProfilePhoto": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The request could not be understood by the server due to malformed syntax.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112537,
        "executor_type": "THIRDPARTY",
        "executor_name": "setAccessOfBeeFreeTemplate",
        "executor_version": "v1",
        "executor_display_name": "Set Access Of BeeFree Template",
        "executor_description": "This API is used to set access of the BeeFree Template. API is used as host side event admin and super admin can access this API. It will return data like boolean values for access to the BeeFree template.  To call this API, the user has to pass path param with API URL like allowToAccess and authentication key to authenticate user and the name of email type for which allow accessing of befree template.",
        "executor_category": "HostRegistrationOrderConfirmation",
        "executor_category_group": "HostRegistrationOrderConfirmation",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/setAccessOfBeeFreeTemplate/{emailType}/{allowToAccess}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "emailType",
                "value": "",
                "description": "it is contains name of email type for which allow to access of befree template."
            },
            {
                "key": "allowToAccess",
                "value": "",
                "description": "This field contains boolean value for access of befree template"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692697344439,
        "lastModifiedTime": 1692697344439,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": true
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The request could not be understood by the server due to malformed syntax.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112545,
        "executor_type": "THIRDPARTY",
        "executor_name": "getScheduledResendEventTicketEmailDetails",
        "executor_version": "v1",
        "executor_display_name": "Get Scheduled Resend Event Ticket email details",
        "executor_description": "This API is used to get scheduled Resend Event Ticket email details. API is used as host side event admin and super admin can access this API. It will return data like checkInVerificationFlag, id, recurringEvent, resendTicketOrderText, resendTicketStatus, resendTicketSubject, resendTime etc. To call this API, user will have to pass path param with API URL like resendEmailId and authentication key to authenticate user.",
        "executor_category": "HostRegistrationOrderConfirmation",
        "executor_category_group": "HostRegistrationOrderConfirmation",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/resendEventEmail/{resendEmailId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "resendEmailId",
                "value": "",
                "description": "This field contains resend event ticket email id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692698041586,
        "lastModifiedTime": 1692698041586,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "checkInVerificationFlag": false,
                    "id": 0,
                    "recurringEvent": true,
                    "resendTicketOrderText": "string",
                    "resendTicketStatus": "string",
                    "resendTicketSubject": "string",
                    "resendTime": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The request could not be understood by the server due to malformed syntax.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112551,
        "executor_type": "THIRDPARTY",
        "executor_name": "saveBeeFreeTemplate",
        "executor_version": "v1",
        "executor_display_name": "Save BeeFreeTemplate",
        "executor_description": "This API is used to Save BeeFreeTemplate. API is used as host side event admin and super admin can access this API. It will return a response data like type, message etc. To call this API, user will have to pass request param with API like beeFreeTemplateDto and authentication key to authenticate user.",
        "executor_category": "HostRegistrationOrderConfirmation",
        "executor_category_group": "HostRegistrationOrderConfirmation",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/beeFreeTemplate",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "beeFreeTemplateDto": {
                    "beeFreeId": 0,
                    "beeFreeJson": "string",
                    "beeFreeHtml": "string",
                    "emailType": "EMAIL_INVITATIONS"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692698526132,
        "lastModifiedTime": 1692698526132,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The request could not be understood by the server due to malformed syntax.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112535,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTheOrderConfirmationEmailStatus",
        "executor_version": "v1",
        "executor_display_name": "Get the order confirmation email status",
        "executor_description": "This API is used to get the order confirmation email status. API is used as host side event admin and super admin can access this API. It will return data like isEnabledOrderConfirmationEmail.",
        "executor_category": "HostRegistrationOrderConfirmation",
        "executor_category_group": "HostRegistrationOrderConfirmation",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/isEnabledOrderConfirmationEmail",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692697228253,
        "lastModifiedTime": 1692697228253,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "enabledOrderConfirmationEmail": true
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The request could not be understood by the server due to malformed syntax.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112541,
        "executor_type": "THIRDPARTY",
        "executor_name": "sendtestEmail",
        "executor_version": "v1",
        "executor_display_name": "Send test email",
        "executor_description": "This API is used to send a test email. API is used as host side event admin and super admin can access this API. It will return response data like type, message etc. To call this API, user have to pass path param with API URL like email and authentication key to authenticate user.",
        "executor_category": "HostRegistrationOrderConfirmation",
        "executor_category_group": "HostRegistrationOrderConfirmation",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/ticketingTestEmail/email/{email}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "email",
                "value": "",
                "description": "This field contains email id to send test email"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692697632791,
        "lastModifiedTime": 1692697632791,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The request could not be understood by the server due to malformed syntax.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112543,
        "executor_type": "THIRDPARTY",
        "executor_name": "scheduleResendEventTicketEmail",
        "executor_version": "v1",
        "executor_display_name": "Schedule Resend Event Ticket email",
        "executor_description": "This API is used to Schedule the Resend Event Ticket email. API is used as host side event admin and super admin can access this API. It will return data like checkInVerificationFlag, id, recurringEvent, resendTicketOrderText, resendTicketStatus, resendTicketSubject, resendTime etc. To call this API, user will have to pass request param with API like resendEventEmailBodyDto and authentication key to authenticate user.",
        "executor_category": "HostRegistrationOrderConfirmation",
        "executor_category_group": "HostRegistrationOrderConfirmation",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/resendEventEmail",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "resendEventEmailBodyDto": {
                    "resendTicketOrderText": "string",
                    "resendTicketSubject": "string",
                    "checkInVerificationFlag": true
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692697807784,
        "lastModifiedTime": 1692697807784,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "checkInVerificationFlag": false,
                    "id": 0,
                    "recurringEvent": true,
                    "resendTicketOrderText": "string",
                    "resendTicketStatus": "string",
                    "resendTicketSubject": "string",
                    "resendTime": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The request could not be understood by the server due to malformed syntax.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112546,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateScheduledEventTicketEmailDetails",
        "executor_version": "v1",
        "executor_display_name": "Update scheduled Event Ticket email details",
        "executor_description": "This API is used to Update scheduled Event Ticket email details. API is used as host side event admin and super admin can access this API. It will return data like checkInVerificationFlag, id, recurringEvent, resendTicketOrderText, resendTicketStatus, resendTicketSubject, resendTime etc. To call this API, user will have to pass path param with API URL like resendEmailId, request param like resendEventEmailDto and authentication key to authenticate user.",
        "executor_category": "HostRegistrationOrderConfirmation",
        "executor_category_group": "HostRegistrationOrderConfirmation",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/resendEventEmail/{resendEmailId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "resendEmailId",
                "value": "",
                "description": "This field contains resend event ticket email id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "resendEventEmailDto": {
                    "resendTicketOrderText": "string",
                    "resendTicketSubject": "string",
                    "checkInVerificationFlag": true
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692698149932,
        "lastModifiedTime": 1692698149932,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "checkInVerificationFlag": false,
                    "id": 0,
                    "recurringEvent": true,
                    "resendTicketOrderText": "string",
                    "resendTicketStatus": "string",
                    "resendTicketSubject": "string",
                    "resendTime": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The request could not be understood by the server due to malformed syntax.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112538,
        "executor_type": "THIRDPARTY",
        "executor_name": "saveTicketingEmailData",
        "executor_version": "v1",
        "executor_display_name": "Save ticketing email data",
        "executor_description": "This API is used to save ticketing email data. API is used as host side event admin and super admin can access this API. It will return response data like type, message etc. To call this API, user have to pass request param with API URL like emailDto and authentication key to authenticate user.",
        "executor_category": "HostRegistrationOrderConfirmation",
        "executor_category_group": "HostRegistrationOrderConfirmation",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/email",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "emailDto": {
                    "emailHeader": "string",
                    "eventStaff": [
                        {
                            "countryCode": "US(1)",
                            "phonenumber": 0,
                            "email": "string",
                            "firstName": "string",
                            "lastName": "string",
                            "marketingOptIn": true,
                            "userProfilePhoto": "string",
                            "userId": "string",
                            "languageCode": "string"
                        }
                    ],
                    "defaultReplyToEmail": "string"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692697431445,
        "lastModifiedTime": 1692697431445,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The request could not be understood by the server due to malformed syntax.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112548,
        "executor_type": "THIRDPARTY",
        "executor_name": "sendResendTestEmail",
        "executor_version": "v1",
        "executor_display_name": "Send resend test email",
        "executor_description": "This API is used to Send resend test email. API is used as host side event admin and super admin can access this API. It will return a response pf data like type, message etc. To call this API, user will have to pass path params with API URL like email, resendTicketEmailId and authentication key to authenticate user.",
        "executor_category": "HostRegistrationOrderConfirmation",
        "executor_category_group": "HostRegistrationOrderConfirmation",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/resend/{resendTicketEmailId}/ticketingTestEmail/email/{email}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "resendTicketEmailId",
                "value": "",
                "description": "This field contains resend event ticket email id"
            },
            {
                "key": "email",
                "value": "",
                "description": "This field contains email id for send resend test email"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692698343416,
        "lastModifiedTime": 1692698343416,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The request could not be understood by the server due to malformed syntax.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112532,
        "executor_type": "THIRDPARTY",
        "executor_name": "getListOfScheduledResendEventEmailDetails",
        "executor_version": "v1",
        "executor_display_name": "Get list of scheduled Resend Event email details",
        "executor_description": "This API is used to get a list of scheduled Resend Event email details. API is used as host side event admin and super admin can access this API. It will return data like isRecurringEvent, scheduled, resendEmailHoursBeforeEvent, resend Event Email Data List .",
        "executor_category": "HostRegistrationOrderConfirmation",
        "executor_category_group": "HostRegistrationOrderConfirmation",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/resendEventEmail/list",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692697020600,
        "lastModifiedTime": 1692697020600,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "list": [
                        {
                            "eventStartTime": "string",
                            "id": 0,
                            "resendTicketSubject": "string",
                            "resendTime": "string",
                            "status": "string"
                        }
                    ],
                    "recurringEvent": true,
                    "resendEmailHoursBeforeEvent": 0,
                    "scheduled": false
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The request could not be understood by the server due to malformed syntax.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112533,
        "executor_type": "THIRDPARTY",
        "executor_name": "accessOfBeeFreeTemplate",
        "executor_version": "v1",
        "executor_display_name": "Access Of BeeFree Template",
        "executor_description": "This API is used to access the BeeFree Template. API is used on the host side. Event admin and super admin can access this API. It will return a Boolean value for access of email type BeeFree template.",
        "executor_category": "HostRegistrationOrderConfirmation",
        "executor_category_group": "HostRegistrationOrderConfirmation",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/isAccessOfBeeFreeTemplate",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692697088334,
        "lastModifiedTime": 1692697088334,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "accessBeeFreeOrderConfirmationTemplate": false,
                    "accessBeeFreeReminderTemplate": true
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The request could not be understood by the server due to malformed syntax.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112542,
        "executor_type": "THIRDPARTY",
        "executor_name": "checkIsLimitReachedForScheduleResendEventTicketEmail",
        "executor_version": "v1",
        "executor_display_name": "Check is limit reached for schedule Resend Event Ticket email",
        "executor_description": "This API is used to send a test email. API is used as host side event admin and super admin can access this API. It will return response data like type, message etc. To call this API, user have to pass path param with API URL like email and authentication key to authenticate user.",
        "executor_category": "HostRegistrationOrderConfirmation",
        "executor_category_group": "HostRegistrationOrderConfirmation",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/resendEventEmail/isEmailScheduleLimitReached",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692697718978,
        "lastModifiedTime": 1692697718978,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": true
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The request could not be understood by the server due to malformed syntax.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112547,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateAlreadyScheduledEventTicketEmailDetails",
        "executor_version": "v1",
        "executor_display_name": "Update already scheduled Event Ticket email details",
        "executor_description": "This API is used to Update already scheduled Event Ticket email details. API is used as host side event admin and super admin can access this API. It will return data like checkInVerificationFlag, id, recurringEvent, resendTicketOrderText, resendTicketStatus, resendTicketSubject, resendTime etc. To call this API, user will have to pass path param with API URL like resendEmailId, request param like resendEventEmailDto and authentication key to authenticate user.",
        "executor_category": "HostRegistrationOrderConfirmation",
        "executor_category_group": "HostRegistrationOrderConfirmation",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/resendEventEmail/schedule/{resendEmailId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "resendEmailId",
                "value": "",
                "description": "This field contains resend event ticket email id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "resendEventEmailDto": {
                    "resendTicketOrderText": "string",
                    "resendTicketSubject": "string",
                    "checkInVerificationFlag": true
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692698243816,
        "lastModifiedTime": 1692698243816,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "checkInVerificationFlag": false,
                    "id": 0,
                    "recurringEvent": true,
                    "resendTicketOrderText": "string",
                    "resendTicketStatus": "string",
                    "resendTicketSubject": "string",
                    "resendTime": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The request could not be understood by the server due to malformed syntax.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112555,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateTrackingLink",
        "executor_version": "v1",
        "executor_display_name": "Update Tracking Link",
        "executor_description": "This API is used to update tracking link details associated with the specified event. This API can be accessed by an event admin and super admin. To call this API, user will have to pass query param with API URL like id, linkUrl and authentication key to authenticate user.",
        "executor_category": "HostRegistrationTrackingLink",
        "executor_category_group": "HostRegistrationTrackingLink",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/updateTrackingUrl/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "User pass the update tracking link details by id."
            }
        ],
        "queryParams": [
            {
                "key": "linkUrl",
                "value": "",
                "description": "User pass the name of update tracking link.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692699151129,
        "lastModifiedTime": 1692699151129,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112553,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllTrackingLink",
        "executor_version": "v1",
        "executor_display_name": "Get All Tracking Link",
        "executor_description": "This API is used to Update BeeFreeTemplate. API is used as host side event admin and super admin can access this API. It will return response data like type, message etc. To call this API, user will have to pass path param with API URL like beeFreeTemplateId, request param like beeFreeTemplateDto and authentication key to authenticate user.",
        "executor_category": "HostRegistrationTrackingLink",
        "executor_category_group": "HostRegistrationTrackingLink",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/getAllTrackingLinkInfo",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "search",
                "value": "",
                "description": "User pass the tracking link url related data search.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692698959970,
        "lastModifiedTime": 1692698959970,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": 0,
                        "linkUrl": "string",
                        "sales": 0,
                        "ticketsSold": 0,
                        "visitCount": 0
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112554,
        "executor_type": "THIRDPARTY",
        "executor_name": "createTrackingLink",
        "executor_version": "v1",
        "executor_display_name": "Create Tracking Link",
        "executor_description": "This API is used to create tracking link details associated with the specified event. This API can be access by an event admin and super admin. It will return a tracking link url. To call this API, user will have to pass query param with API URL like linkUrl and authentication key to authenticate user.",
        "executor_category": "HostRegistrationTrackingLink",
        "executor_category_group": "HostRegistrationTrackingLink",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/createTrackingLink/{linkUrl}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "linkUrl",
                "value": "",
                "description": "User pass the name of tracking link url for creating."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692699044737,
        "lastModifiedTime": 1692699044737,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "TrackingLink"
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112556,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteTrackingLink",
        "executor_version": "v1",
        "executor_display_name": "Delete Tracking Link",
        "executor_description": "This API is used to delete tracking link details associated with the specified event. This API can be accessed by an event admin and super admin. To call this API, user will have to pass query param with API URL like id and authentication key to authenticate user.",
        "executor_category": "HostRegistrationTrackingLink",
        "executor_category_group": "HostRegistrationTrackingLink",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/deleteTrackingUrl/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "User pass the delete tracking link details by id."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692699249560,
        "lastModifiedTime": 1692699249560,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112572,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadExpoStaffDetailsCsv",
        "executor_version": "v1",
        "executor_display_name": "Download Expo Staff Details CSV",
        "executor_description": "This API is used to download Exbhitor name along with his staff details",
        "executor_category": "ExhibitorControllerAPI",
        "executor_category_group": "ExhibitorControllerAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/exhibitor/download/expoStaffDetails/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692700850346,
        "lastModifiedTime": 1692700850346,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Exhibitor\",\"Staff\"\n\"Test Expo1\",\"Mitul Soni : Mitul.s@brilworks.com \"\n\"test2415\",\"\"\n\"test expo3\",\"\"\n\"aas\",\"\"\n\"Test Exp\",\"Mitul Soni : Mitul.s@brilworks.com \"\n"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112566,
        "executor_type": "THIRDPARTY",
        "executor_name": "addExhibitorHostDetails",
        "executor_version": "v1",
        "executor_display_name": "Add Exhibitor Host Details",
        "executor_description": "This API is used to create an exhibitor from the Host side of an event.",
        "executor_category": "ExhibitorControllerAPI",
        "executor_category_group": "ExhibitorControllerAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/exhibitor",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "id": 0,
                "staffUserIds": "string",
                "exhibitorName": "string",
                "leadRetrieversAllowed": false,
                "seeAllLeads": false,
                "maxLeadRetrievers": 0,
                "linkToSite": "string",
                "videoURL": "string",
                "logo": "string",
                "SocialLinkKeyValueDto": {
                    "key": "string",
                    "value": "string"
                },
                "exhibitorDescription": "string",
                "offer": "string",
                "offerLink": "string",
                "position": 0,
                "Exhibitor_Link_clicks": 0,
                "liveStreamUrl": "string",
                "proAccount": true,
                "companyDetails": "string",
                "boothSize": "SMALL",
                "preferredExhibitor": false,
                "autoGenerateLead": false,
                "includeInExhibitorCarousel": false,
                "scanByQRCode": false,
                "categoryIdList": [
                    0
                ],
                "categoryName": "string",
                "documentKeyValue": [
                    {
                        "key": "string",
                        "value": "string"
                    }
                ],
                "documentKeyPosition": [
                    {
                        "documentId": 0,
                        "documentPosition": 0,
                        "key": "string",
                        "value": "string"
                    }
                ],
                "eventURL": "string",
                "eventId": 0,
                "externalLiveStreamingEnabled": false,
                "exhibitorFieldsInJson": {
                    "": "string",
                    "tabList": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ],
                    "requestMeeting": {
                        "label": "string",
                        "hide": true,
                        "buttonColor": "string",
                        "buttonTextColor": "string",
                        "confirmationMessage": "string",
                        "requestMeetingURL": "string"
                    },
                    "companyRepresentativeTitle": "string"
                },
                "addLinksInJson": [
                    {
                        "key": "string",
                        "value": "string"
                    }
                ],
                "documentIds": [
                    0
                ],
                "streamProvider": "NULL",
                "chatEnabled": true,
                "acceleventsStreamingEnabled": true,
                "meetingPassword": "string",
                "showStatusIndicator": true,
                "showDownloadLeadBtn": true,
                "countBoothVisitorAsLead": true,
                "carouselLogoSliderDelaySeconds": 0,
                "shortDescription": "string",
                "expoCardImage": "string",
                "colorConfig": {
                    "shortDescriptionColor": "string",
                    "nameColor": "string",
                    "categoryColor": "string"
                },
                "isMeetingEntryExitNotificationOn": true,
                "isRequireApprovalBeforeAttendeesCanJoin": true,
                "expoBannerImage": "string",
                "visitedTime": "2023-08-22",
                "pollEnabled": true,
                "quesAndAnsEnabled": true,
                "isQnAPrivate": true,
                "featured": true,
                "categoryPositionJson": [
                    {
                        "key": 0,
                        "value": 0
                    }
                ],
                "showBoothName": true,
                "currency": "AUD",
                "currencySymbol": "string",
                "createSponsor": true,
                "gamification": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692700198930,
        "lastModifiedTime": 1692700198930,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": 2025,
                    "staffUserIds": "76",
                    "exhibitorName": "Test Exp",
                    "leadRetrieversAllowed": true,
                    "seeAllLeads": true,
                    "maxLeadRetrievers": 0,
                    "linkToSite": null,
                    "videoURL": null,
                    "logo": null,
                    "socialLinks": [
                        {
                            "key": "facebook",
                            "value": ""
                        },
                        {
                            "key": "twitter",
                            "value": ""
                        },
                        {
                            "key": "instagram",
                            "value": ""
                        },
                        {
                            "key": "linkedIn",
                            "value": ""
                        }
                    ],
                    "exhibitorDescription": null,
                    "offer": null,
                    "offerLink": null,
                    "position": 1000,
                    "exhibitorLinkClicks": null,
                    "liveStreamUrl": "9720254474",
                    "proAccount": false,
                    "companyDetails": null,
                    "boothSize": "SMALL",
                    "preferredExhibitor": false,
                    "autoGenerateLead": true,
                    "includeInExhibitorCarousel": true,
                    "scanByQRCode": false,
                    "categoryIdList": [
                        265,
                        266,
                        267
                    ],
                    "categoryName": "Item 3",
                    "documentKeyValue": [
                        {
                            "key": "715243ba-cf87-4741-82f0-8975ba12bb7d_sample.pdf",
                            "value": "sample.pdf"
                        }
                    ],
                    "documentKeyPosition": [
                        {
                            "documentId": 403,
                            "documentPosition": 1000,
                            "key": "715243ba-cf87-4741-82f0-8975ba12bb7d_sample.pdf",
                            "value": "sample.pdf"
                        }
                    ],
                    "eventURL": "test12358new",
                    "eventId": 3604,
                    "externalLiveStreamingEnabled": true,
                    "exhibitorFieldsInJson": {
                        "tabList": [
                            {
                                "key": "LIVE",
                                "value": "Live"
                            },
                            {
                                "key": "VIDEO",
                                "value": "Video"
                            },
                            {
                                "key": "COMPANY_DETAILS",
                                "value": "Company Details"
                            },
                            {
                                "key": "OFFER",
                                "value": "Offer"
                            },
                            {
                                "key": "PRODUCTS",
                                "value": "Products"
                            }
                        ],
                        "requestMeeting": {
                            "label": "Request More Information",
                            "hide": false,
                            "buttonColor": "",
                            "buttonTextColor": "",
                            "confirmationMessage": "Your request has been received. We will be in touch!",
                            "requestMeetingURL": ""
                        },
                        "companyRepresentativeTitle": "Company Representatives"
                    },
                    "addLinksInJson": [
                        {
                            "key": "test",
                            "value": "https://docs.google.com/spreadsheets/d/1mRtAHDfdgiCAAxYX-chD5_3SAPU4aDNr9AdBzB0e9vU/edit#gid=0"
                        }
                    ],
                    "documentIds": [
                        403
                    ],
                    "streamProvider": "ACCELEVENTS",
                    "chatEnabled": true,
                    "acceleventsStreamingEnabled": true,
                    "meetingPassword": "M0NnRXhiQ1NBRFdpNmlkRFVObXI0UT09",
                    "showStatusIndicator": true,
                    "showDownloadLeadBtn": true,
                    "countBoothVisitorAsLead": true,
                    "carouselLogoSliderDelaySeconds": 5,
                    "shortDescription": null,
                    "expoCardImage": null,
                    "colorConfig": {
                        "shortDescriptionColor": "#0000FF",
                        "nameColor": "#0000FF",
                        "categoryColor": "#ca2323,#ca2323,#724f4f,#ca2323,#724f4f,#000000,#ca2323,#724f4f,#000000,#ca2323,#724f4f,#000000,#ca2323,#724f4f,#000000,#ca2323,#724f4f,#000000,#ca2323,#724f4f,#000000"
                    },
                    "expoBannerImage": null,
                    "visitedTime": 1632226988164,
                    "pollEnabled": true,
                    "quesAndAnsEnabled": true,
                    "featured": false,
                    "categoryPositionJson": {
                        "265": [
                            {
                                "key": 2025,
                                "value": 2000
                            }
                        ],
                        "266": [
                            {
                                "key": 2025,
                                "value": 2000
                            }
                        ],
                        "267": [
                            {
                                "key": 2025,
                                "value": 1000
                            }
                        ]
                    },
                    "showBoothName": true,
                    "currency": "USD",
                    "currencySymbol": "$",
                    "createSponsor": false,
                    "gamification": false,
                    "meetingEntryExitNotificationOn": true,
                    "requireApprovalBeforeAttendeesCanJoin": true,
                    "qnAPrivate": true
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112567,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteExhibitorHostDetails",
        "executor_version": "v1",
        "executor_display_name": "Delete Exhibitor Host Details",
        "executor_description": "This API is used to delete exhibitor host details by exhibitor id.",
        "executor_category": "ExhibitorControllerAPI",
        "executor_category_group": "ExhibitorControllerAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/exhibitor/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "it is unique id of exhibitor of your event"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692700275807,
        "lastModifiedTime": 1692700275807,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Exhibitor host details deleted."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112568,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateExhibitorPosition",
        "executor_version": "v1",
        "executor_display_name": "Update Exhibitor Position",
        "executor_description": "This API is used to update the exhibitor position on the host page",
        "executor_category": "ExhibitorControllerAPI",
        "executor_category_group": "ExhibitorControllerAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/exhibitor/{id}/topExhibitor/{topExhibitorId}/topBottomExhibitor/{topBottomExhibitorId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "id of exhibitor that change to position"
            },
            {
                "key": "topExhibitorId",
                "value": "",
                "description": "top position exhibitor id"
            },
            {
                "key": "topBottomExhibitorId",
                "value": "",
                "description": "top bottom position exhibitor id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692700556119,
        "lastModifiedTime": 1692700556119,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Exhibitor position changed successfully ..."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112570,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteExhibitorDocumentPosition",
        "executor_version": "v1",
        "executor_display_name": "Delete Exhibitor Document position",
        "executor_description": "This API is used to delete document from the exhibitor by document id",
        "executor_category": "ExhibitorControllerAPI",
        "executor_category_group": "ExhibitorControllerAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/exhibitor/document/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "it is id of documents to be deleted"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692700671083,
        "lastModifiedTime": 1692700671083,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Exhibitor Document deleted successfully ..."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112573,
        "executor_type": "THIRDPARTY",
        "executor_name": "uploadExhibitorCsvFile",
        "executor_version": "v1",
        "executor_display_name": "Upload Exhibitor CSV File",
        "executor_description": "This API is used to upload exbhitor CSV files to create exhibitor",
        "executor_category": "ExhibitorControllerAPI",
        "executor_category_group": "ExhibitorControllerAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/events/{eventUrl}/upload/exhibitor/parse/csv",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "exhibitorFile": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692700936597,
        "lastModifiedTime": 1692700936597,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "validExhibitors": [
                        {
                            "exhibitorName": "exhibitorNew3"
                        },
                        {
                            "exhibitorName": "exhibitorNew2"
                        },
                        {
                            "exhibitorName": "exhibitorNew1"
                        }
                    ],
                    "invalidExhibitors": []
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112571,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateExhibitorDocumenPosition",
        "executor_version": "v1",
        "executor_display_name": "Update Exhibitor Document position",
        "executor_description": "This API is used to update document position in the exhibitor",
        "executor_category": "ExhibitorControllerAPI",
        "executor_category_group": "ExhibitorControllerAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/exhibitor/document//{id}/topExhibitorDocument/{topExhibitorDocumentId}/topBottomExhibitorDocument/{topBottomExhibitorDocumentId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "it is id of document that have to change position"
            },
            {
                "key": "topExhibitorDocumentId",
                "value": "",
                "description": "it is id of top position document"
            },
            {
                "key": "topBottomExhibitorDocumentId",
                "value": "",
                "description": "It's id of top and bottom position document"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692700765890,
        "lastModifiedTime": 1692700765890,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Exhibitor Document position changed successfully ..."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112588,
        "executor_type": "THIRDPARTY",
        "executor_name": "getExhibitorSettings",
        "executor_version": "v1",
        "executor_display_name": "Get Exhibitor Settings",
        "executor_description": "This API is used to get exhibitor settings information for a particular exhibitor on host page",
        "executor_category": "ExhibitorSettingAPI",
        "executor_category_group": "ExhibitorSettingAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/settings/expo/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "it is id of exhibitor for which we get setting"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692702131614,
        "lastModifiedTime": 1692702131614,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "exhibitorId": 888,
                    "allowForHolder": false,
                    "overridePerExhibitor": false,
                    "expoSettingsDetails": [
                        {
                            "typeId": "TICKET_HOLDER",
                            "key": "27734",
                            "enable": true,
                            "title": null,
                            "description": null,
                            "value": "Email"
                        },
                        {
                            "typeId": "TICKET_HOLDER",
                            "key": "27735",
                            "enable": false,
                            "title": null,
                            "description": null,
                            "value": "Cell Phone"
                        },
                        {
                            "typeId": "TICKET_HOLDER",
                            "key": "84916",
                            "enable": false,
                            "title": null,
                            "description": null,
                            "value": "Test123"
                        },
                        {
                            "typeId": "PROFILE_QUESTIONS",
                            "key": "FIRST_NAME",
                            "enable": true,
                            "title": null,
                            "description": null,
                            "value": "First Name"
                        },
                        {
                            "typeId": "PROFILE_QUESTIONS",
                            "key": "LAST_NAME",
                            "enable": true,
                            "title": null,
                            "description": null,
                            "value": "Last Name"
                        },
                        {
                            "typeId": "PROFILE_QUESTIONS",
                            "key": "TITLE",
                            "enable": false,
                            "title": null,
                            "description": null,
                            "value": "Title"
                        },
                        {
                            "typeId": "PROFILE_QUESTIONS",
                            "key": "VIDEO_INTRO",
                            "enable": false,
                            "title": null,
                            "description": null,
                            "value": "Video intro"
                        },
                        {
                            "typeId": "PROFILE_QUESTIONS",
                            "key": "COMPANY",
                            "enable": false,
                            "title": null,
                            "description": null,
                            "value": "Company"
                        },
                        {
                            "typeId": "PROFILE_QUESTIONS",
                            "key": "ACCEPT_MEETING_REQUESTS",
                            "enable": false,
                            "title": null,
                            "description": null,
                            "value": "Accept Meeting Requests"
                        },
                        {
                            "typeId": "PROFILE_QUESTIONS",
                            "key": "ACCEPT_DIRECT_MESSAGES",
                            "enable": false,
                            "title": null,
                            "description": null,
                            "value": "Accept Direct Messages"
                        },
                        {
                            "typeId": "PROFILE_QUESTIONS",
                            "key": "ABOUT_ME",
                            "enable": false,
                            "title": null,
                            "description": null,
                            "value": "About me"
                        },
                        {
                            "typeId": "PROFILE_QUESTIONS",
                            "key": "WANTS_TO_LEARN",
                            "enable": false,
                            "title": null,
                            "description": null,
                            "value": "Wants to learn"
                        },
                        {
                            "typeId": "PROFILE_QUESTIONS",
                            "key": "KNOWS",
                            "enable": false,
                            "title": null,
                            "description": null,
                            "value": "Knows"
                        },
                        {
                            "typeId": "PROFILE_QUESTIONS",
                            "key": "WANTS_TO_MEET",
                            "enable": false,
                            "title": null,
                            "description": null,
                            "value": "Wants to meet"
                        }
                    ],
                    "customizeExhibitorInviteEmail": null,
                    "exhibitorInviteEmailDisabled": false,
                    "expoPageStreamInfo": {
                        "type": null,
                        "streamUrl": null,
                        "streamKey": null,
                        "title": null,
                        "description": null,
                        "liveStreamId": null,
                        "streamProvider": null,
                        "rtmpUrl": null,
                        "streamStatus": false
                    },
                    "allowContactInfoFlagForAttendees": false,
                    "expoLiveStream": false
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112590,
        "executor_type": "THIRDPARTY",
        "executor_name": "enableDisableExpoSettings",
        "executor_version": "v1",
        "executor_display_name": "Enable Disable Expo Settings",
        "executor_description": "This API is used to enable or disable type attributes of exhibitors from the host side",
        "executor_category": "ExhibitorSettingAPI",
        "executor_category_group": "ExhibitorSettingAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/settings/expo/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "it is id of exhibitor for which we get setting"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692702205709,
        "lastModifiedTime": 1692702205709,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112591,
        "executor_type": "THIRDPARTY",
        "executor_name": "sendAllExhibitorInviteEmails",
        "executor_version": "v1",
        "executor_display_name": "Send All Exhibitor Invite Emails",
        "executor_description": "This API is sent to invite emails to all staff members of all exhibitors",
        "executor_category": "ExhibitorSettingAPI",
        "executor_category_group": "ExhibitorSettingAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/settings/expo/sendAllExhibitorInviteEmail",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692702304299,
        "lastModifiedTime": 1692702304299,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Email has been successfully sent."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112720,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllRepresentativesbyExhibitorId",
        "executor_version": "v1",
        "executor_display_name": "Get All representatives by exhibitorId",
        "executor_description": "This API is used to Get all company representatives by exhibitorId, Company representatives is exhibitor admins",
        "executor_category": "ExpoAPI",
        "executor_category_group": "ExpoAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{id}/exhibitor/{exhibitorId}/companyRepresentatives",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "This is Unique event id of your event"
            },
            {
                "key": "exhibitorId",
                "value": "",
                "description": "This is unique exhibitor id of your exhibitor"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692777518661,
        "lastModifiedTime": 1692777518661,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "userId": 76,
                        "name": "Mitul Soni",
                        "image": null,
                        "title": "",
                        "allowToBookMeeting": true,
                        "allowDirectMessages": true,
                        "available": false
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112722,
        "executor_type": "THIRDPARTY",
        "executor_name": "logExpoLeaveData",
        "executor_version": "v1",
        "executor_display_name": "Log Expo leave data",
        "executor_description": "This API is used to notify admin and staff of exhibitor when attendee leaves expo.",
        "executor_category": "ExpoAPI",
        "executor_category_group": "ExpoAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/event/{id}/exhibitor/{exhibitorId}/logLeaveData",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "This is Unique event id of your event"
            },
            {
                "key": "exhibitorId",
                "value": "",
                "description": "This is unique exhibitor id of your exhibitor"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692777692933,
        "lastModifiedTime": 1692777692933,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112724,
        "executor_type": "THIRDPARTY",
        "executor_name": "joinExhibitorMeeting",
        "executor_version": "v1",
        "executor_display_name": "join exhibitor meeting",
        "executor_description": "This API is used to provide information about meetings, attendees, and ids of admin, speaker, and moderator of admin.",
        "executor_category": "ExpoAPI",
        "executor_category_group": "ExpoAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/exhibitor/event/{eventUrl}/exhibitor/{id}/join",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "This field is unique event Url of your event"
            },
            {
                "key": "id",
                "value": "",
                "description": "This field contain unique exhibitor id of your event"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692777870966,
        "lastModifiedTime": 1692777870966,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "capacity": 0,
                    "chatEnabled": false,
                    "pollEnabled": false,
                    "quesAndAnsEnabled": false,
                    "hideSessionFromAttendees": false,
                    "meeting": "{\"MeetingId\":\"2d8d6fe1-a082-4165-8d59-dcb33fd40706\",\"MediaPlacement\":{\"AudioHostUrl\":\"870870c7b6fbac14a1347631f356cf02.k.m2.ue1.app.chime.aws:3478\",\"AudioFallbackUrl\":\"wss://haxrp.m2.ue1.app.chime.aws:443/calls/2d8d6fe1-a082-4165-8d59-dcb33fd40706\",\"ScreenDataUrl\":\"wss://bitpw.m2.ue1.app.chime.aws:443/v2/screen/2d8d6fe1-a082-4165-8d59-dcb33fd40706\",\"ScreenSharingUrl\":\"wss://bitpw.m2.ue1.app.chime.aws:443/v2/screen/2d8d6fe1-a082-4165-8d59-dcb33fd40706\",\"ScreenViewingUrl\":\"wss://bitpw.m2.ue1.app.chime.aws:443/ws/connect?passcode=null&viewer_uuid=null&X-BitHub-Call-Id=2d8d6fe1-a082-4165-8d59-dcb33fd40706\",\"SignalingUrl\":\"wss://signal.m2.ue1.app.chime.aws/control/2d8d6fe1-a082-4165-8d59-dcb33fd40706\",\"TurnControlUrl\":\"https://ccp.cp.ue1.app.chime.aws/v2/turn_sessions\"},\"MediaRegion\":\"us-east-1\"}",
                    "attendee": "{\"ExternalUserId\":\"Mitul Soni_76\",\"AttendeeId\":\"e53d9615-45f1-b2ea-fb86-96c18845ed7d\",\"JoinToken\":\"ZTUzZDk2MTUtNDVmMS1iMmVhLWZiODYtOTZjMTg4NDVlZDdkOjBiZTkxYjA1LTNjOTYtNDcyYS04MDYxLWViNGU1YmVkM2U2MA\"}",
                    "eventAdmins": [
                        76
                    ],
                    "speakersOrModeratorsUserIds": [
                        76
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112728,
        "executor_type": "THIRDPARTY",
        "executor_name": "saveLogClickDocumentData",
        "executor_version": "v1",
        "executor_display_name": "Save Log Click document data",
        "executor_description": "This API is used to store exhibitor documents link and name of document of event exhibitor.",
        "executor_category": "ExpoAPI",
        "executor_category_group": "ExpoAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/event/{id}/exhibitor/{exhibitorId}/document",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "This is Unique event id of your event"
            },
            {
                "key": "exhibitorId",
                "value": "",
                "description": "This is unique exhibitor id of your exhibitor"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "documentLink": "string",
                "documentName": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692778124470,
        "lastModifiedTime": 1692778124470,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": 1
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112719,
        "executor_type": "THIRDPARTY",
        "executor_name": "exhibitorCategoriesListWithExhibitorCountForDisplayPage",
        "executor_version": "v1",
        "executor_display_name": "Exhibitor categories list with exhibitor count for display page",
        "executor_description": "This API is used to get a list of the exhibitor categories along with a count for each exhibitor category.",
        "executor_category": "ExpoAPI",
        "executor_category_group": "ExpoAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{id}/exhibitor/categories/exhibitorCountDetails",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "Unique event id of your event"
            }
        ],
        "queryParams": [
            {
                "key": "searchString",
                "value": "",
                "description": "Name of exhibitor for search",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Total number of records you want to fetch",
                "req": false
            },
            {
                "key": "isFromExhibitorSearch",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692777421333,
        "lastModifiedTime": 1692777421333,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 2,
                    "recordsFiltered": 2,
                    "data": [
                        {
                            "id": 265,
                            "name": "Item 1",
                            "position": 1000,
                            "categoryColor": "#ca2323",
                            "exhibitorCount": 0
                        },
                        {
                            "id": 266,
                            "name": "Item 2",
                            "position": 2000,
                            "categoryColor": "#724f4f",
                            "exhibitorCount": 0
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112725,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllCompanyRepresentativesByExhibitorId",
        "executor_version": "v1",
        "executor_display_name": "Get all company representatives by exhibitorId",
        "executor_description": "This API is used to get company representatives by exhibitor id. Company representatives are exhibitor admins",
        "executor_category": "ExpoAPI",
        "executor_category_group": "ExpoAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/cache/events/{eventUrl}/exhibitor/{exhibitorId}/companyRepresentatives",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "exhibitorId",
                "value": "",
                "description": "exhibitor id of your event"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692777957348,
        "lastModifiedTime": 1692777957348,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "userId": 76,
                        "name": "Mitul Soni",
                        "image": null,
                        "title": "",
                        "allowToBookMeeting": true,
                        "allowDirectMessages": true,
                        "available": false
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112729,
        "executor_type": "THIRDPARTY",
        "executor_name": "getExhibitorbyExhibitorId",
        "executor_version": "v1",
        "executor_display_name": "Get Exhibitor by Exhibitor id",
        "executor_description": "This API is used to get all exhibitor details from exhibitor id and event Url. we get details of the exhibitor is describe In response",
        "executor_category": "ExpoAPI",
        "executor_category_group": "ExpoAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/exhibitor/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "This is the Unique exhibitor id of exhibitor"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692778210411,
        "lastModifiedTime": 1692778210411,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": 2025,
                    "staffUserIds": "76",
                    "exhibitorName": "Test Exp",
                    "leadRetrieversAllowed": true,
                    "seeAllLeads": true,
                    "maxLeadRetrievers": 0,
                    "linkToSite": null,
                    "videoURL": null,
                    "logo": null,
                    "socialLinks": [
                        {
                            "key": "facebook",
                            "value": ""
                        },
                        {
                            "key": "twitter",
                            "value": ""
                        },
                        {
                            "key": "instagram",
                            "value": ""
                        },
                        {
                            "key": "linkedIn",
                            "value": ""
                        }
                    ],
                    "exhibitorDescription": null,
                    "offer": null,
                    "offerLink": null,
                    "position": 1000,
                    "exhibitorLinkClicks": null,
                    "liveStreamUrl": "9720254474",
                    "proAccount": false,
                    "companyDetails": null,
                    "boothSize": "SMALL",
                    "preferredExhibitor": false,
                    "autoGenerateLead": true,
                    "includeInExhibitorCarousel": true,
                    "scanByQRCode": false,
                    "categoryIdList": [
                        265,
                        266,
                        267
                    ],
                    "categoryName": "Item 3",
                    "documentKeyValue": [
                        {
                            "key": "715243ba-cf87-4741-82f0-8975ba12bb7d_sample.pdf",
                            "value": "sample.pdf"
                        }
                    ],
                    "documentKeyPosition": [
                        {
                            "documentId": 403,
                            "documentPosition": 1000,
                            "key": "715243ba-cf87-4741-82f0-8975ba12bb7d_sample.pdf",
                            "value": "sample.pdf"
                        }
                    ],
                    "eventURL": "test12358new",
                    "eventId": 3604,
                    "externalLiveStreamingEnabled": true,
                    "exhibitorFieldsInJson": {
                        "tabList": [
                            {
                                "key": "LIVE",
                                "value": "Live"
                            },
                            {
                                "key": "VIDEO",
                                "value": "Video"
                            },
                            {
                                "key": "COMPANY_DETAILS",
                                "value": "Company Details"
                            },
                            {
                                "key": "OFFER",
                                "value": "Offer"
                            },
                            {
                                "key": "PRODUCTS",
                                "value": "Products"
                            }
                        ],
                        "requestMeeting": {
                            "label": "Request More Information",
                            "hide": false,
                            "buttonColor": "",
                            "buttonTextColor": "",
                            "confirmationMessage": "Your request has been received. We will be in touch!",
                            "requestMeetingURL": ""
                        },
                        "companyRepresentativeTitle": "Company Representatives"
                    },
                    "addLinksInJson": [
                        {
                            "key": "test",
                            "value": "https://docs.google.com/spreadsheets/d/1mRtAHDfdgiCAAxYX-chD5_3SAPU4aDNr9AdBzB0e9vU/edit#gid=0"
                        }
                    ],
                    "documentIds": [
                        403
                    ],
                    "streamProvider": "ACCELEVENTS",
                    "chatEnabled": true,
                    "acceleventsStreamingEnabled": true,
                    "meetingPassword": "M0NnRXhiQ1NBRFdpNmlkRFVObXI0UT09",
                    "showStatusIndicator": true,
                    "showDownloadLeadBtn": true,
                    "countBoothVisitorAsLead": true,
                    "carouselLogoSliderDelaySeconds": 5,
                    "shortDescription": null,
                    "expoCardImage": null,
                    "colorConfig": {
                        "shortDescriptionColor": "#0000FF",
                        "nameColor": "#0000FF",
                        "categoryColor": "#ca2323,#ca2323,#724f4f,#ca2323,#724f4f,#000000,#ca2323,#724f4f,#000000,#ca2323,#724f4f,#000000,#ca2323,#724f4f,#000000,#ca2323,#724f4f,#000000,#ca2323,#724f4f,#000000"
                    },
                    "expoBannerImage": null,
                    "visitedTime": 1632226988164,
                    "pollEnabled": true,
                    "quesAndAnsEnabled": true,
                    "featured": false,
                    "categoryPositionJson": {
                        "265": [
                            {
                                "key": 2025,
                                "value": 2000
                            }
                        ],
                        "266": [
                            {
                                "key": 2025,
                                "value": 2000
                            }
                        ],
                        "267": [
                            {
                                "key": 2025,
                                "value": 1000
                            }
                        ]
                    },
                    "showBoothName": true,
                    "currency": "USD",
                    "currencySymbol": "$",
                    "createSponsor": false,
                    "gamification": false,
                    "meetingEntryExitNotificationOn": true,
                    "requireApprovalBeforeAttendeesCanJoin": true,
                    "qnAPrivate": true
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112723,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllAttendeeDetails",
        "executor_version": "v1",
        "executor_display_name": "Get All Attendee Details",
        "executor_description": "This API will return all attendee details from a list of user-id.",
        "executor_category": "ExpoAPI",
        "executor_category_group": "ExpoAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/people/getAttendeesDetails",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "userIds",
                "value": "",
                "description": "it contains list of attendees userId for whom we want get details",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692777793353,
        "lastModifiedTime": 1692777793353,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": "247",
                        "userId": 247,
                        "firstName": null,
                        "lastName": null,
                        "pronouns": "",
                        "photo": null,
                        "coverPhoto": null,
                        "acceptDirectMessages": true,
                        "acceptMeetingRequests": "EVERY_ONE",
                        "showContactInfo": true,
                        "company": "",
                        "title": "",
                        "timezoneId": "India Time",
                        "equivalentTimezone": null,
                        "status": "REQUESTED",
                        "rejectedBy": null,
                        "eventId": 5536,
                        "videoIntro": null,
                        "extraInfo": null,
                        "interests": null,
                        "availabilityDuration": 20,
                        "request": true,
                        "instagram": "https://www.instagram.com/username",
                        "facebook": "https://www.facebook.com/profile.php?id=1234567890",
                        "twitter": "https://www.twitter.com/username",
                        "linkedIn": "https://www.linkedin.com/in/username",
                        "availabilityStartTime": null,
                        "availabilityEndTime": null,
                        "availabilityTimezoneId": "Asia/Calcutta",
                        "showProfile": true,
                        "rules": [],
                        "meetingAvailabilitySetted": true,
                        "emailNotification": true,
                        "allowCallsAndVideosFromNotConnectedAttendees": false,
                        "exposeProfileToOtherUser": true,
                        "user": 247
                    },
                    {
                        "id": "152",
                        "userId": 152,
                        "firstName": null,
                        "lastName": null,
                        "pronouns": "",
                        "photo": null,
                        "coverPhoto": null,
                        "acceptDirectMessages": true,
                        "acceptMeetingRequests": "EVERY_ONE",
                        "showContactInfo": true,
                        "company": "",
                        "title": "",
                        "timezoneId": "India Time",
                        "equivalentTimezone": null,
                        "status": null,
                        "rejectedBy": null,
                        "eventId": 869,
                        "videoIntro": null,
                        "extraInfo": null,
                        "interests": null,
                        "availabilityDuration": 20,
                        "request": false,
                        "instagram": "",
                        "facebook": "",
                        "twitter": "",
                        "linkedIn": "",
                        "availabilityStartTime": null,
                        "availabilityEndTime": null,
                        "availabilityTimezoneId": "Asia/Calcutta",
                        "showProfile": true,
                        "rules": [],
                        "meetingAvailabilitySetted": true,
                        "emailNotification": true,
                        "allowCallsAndVideosFromNotConnectedAttendees": false,
                        "exposeProfileToOtherUser": true,
                        "user": 152
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112731,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateExhibitor",
        "executor_version": "v1",
        "executor_display_name": "Update Exhibitor by Admin",
        "executor_description": "This API is used to update exhibitor details. Update Exhibitor by EXHIBITOR_ADMIN and by Event Host. Event Host can only update the number of max lead retrievers and set lead retrievers allowed",
        "executor_category": "ExpoAPI",
        "executor_category_group": "ExpoAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/exhibitor/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "this is unique event Url of your event"
            },
            {
                "key": "id",
                "value": "",
                "description": "This is the Unique exhibitor id of exhibitor"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "id": 0,
                "staffUserIds": "string",
                "exhibitorName": "string",
                "leadRetrieversAllowed": false,
                "seeAllLeads": false,
                "maxLeadRetrievers": 0,
                "linkToSite": "string",
                "videoURL": "string",
                "logo": "string",
                "SocialLinkKeyValueDto": {
                    "key": "string",
                    "value": "string"
                },
                "exhibitorDescription": "string",
                "offer": "string",
                "offerLink": "string",
                "position": 0,
                "Exhibitor_Link_clicks": 0,
                "liveStreamUrl": "string",
                "proAccount": true,
                "companyDetails": "string",
                "boothSize": "SMALL",
                "preferredExhibitor": false,
                "autoGenerateLead": false,
                "includeInExhibitorCarousel": false,
                "scanByQRCode": false,
                "categoryIdList": [
                    0
                ],
                "categoryName": "string",
                "documentKeyValue": [
                    {
                        "key": "string",
                        "value": "string"
                    }
                ],
                "documentKeyPosition": [
                    {
                        "documentId": 0,
                        "documentPosition": 0,
                        "key": "string",
                        "value": "string"
                    }
                ],
                "eventURL": "string",
                "eventId": 0,
                "externalLiveStreamingEnabled": false,
                "exhibitorFieldsInJson": {
                    "": "string",
                    "tabList": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ],
                    "requestMeeting": {
                        "label": "string",
                        "hide": true,
                        "buttonColor": "string",
                        "buttonTextColor": "string",
                        "confirmationMessage": "string",
                        "requestMeetingURL": "string"
                    },
                    "companyRepresentativeTitle": "string"
                },
                "addLinksInJson": [
                    {
                        "key": "string",
                        "value": "string"
                    }
                ],
                "documentIds": [
                    0
                ],
                "streamProvider": "NULL",
                "chatEnabled": true,
                "acceleventsStreamingEnabled": true,
                "meetingPassword": "string",
                "showStatusIndicator": true,
                "showDownloadLeadBtn": true,
                "countBoothVisitorAsLead": true,
                "carouselLogoSliderDelaySeconds": 0,
                "shortDescription": "string",
                "expoCardImage": "string",
                "colorConfig": {
                    "shortDescriptionColor": "string",
                    "nameColor": "string",
                    "categoryColor": "string"
                },
                "isMeetingEntryExitNotificationOn": true,
                "isRequireApprovalBeforeAttendeesCanJoin": true,
                "expoBannerImage": "string",
                "visitedTime": "2023-08-22",
                "pollEnabled": true,
                "quesAndAnsEnabled": true,
                "isQnAPrivate": true,
                "featured": true,
                "categoryPositionJson": [
                    {
                        "key": 0,
                        "value": 0
                    }
                ],
                "showBoothName": true,
                "currency": "AUD",
                "currencySymbol": "string",
                "createSponsor": true,
                "gamification": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692778398723,
        "lastModifiedTime": 1692778398723,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112730,
        "executor_type": "THIRDPARTY",
        "executor_name": "documentDownloadbyExhibitorId",
        "executor_version": "v1",
        "executor_display_name": "Document download by exhibitor id",
        "executor_description": "This API is used to download document exhibitor uploaded by Document name. user clicks on the document then the document of that name will be download",
        "executor_category": "ExpoAPI",
        "executor_category_group": "ExpoAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{id}/exhibitor/{exhibitorId}/document/{documentName}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "This is Unique event id of your event"
            },
            {
                "key": "exhibitorId",
                "value": "",
                "description": "This is unique exhibitor id of your exhibitor"
            },
            {
                "key": "documentName",
                "value": "",
                "description": "this is name of document that we have to download"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692778296538,
        "lastModifiedTime": 1692778296538,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112726,
        "executor_type": "THIRDPARTY",
        "executor_name": "checkIsMeetingStarted",
        "executor_version": "v1",
        "executor_display_name": "Check is meeting started",
        "executor_description": "This API is used to check chime meeting is started by the exhibitor is or not",
        "executor_category": "ExpoAPI",
        "executor_category_group": "ExpoAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{id}/exhibitor/{exhibitorId}/isMeetingStarted",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "This is Unique event id of your event"
            },
            {
                "key": "exhibitorId",
                "value": "",
                "description": "This is unique exhibitor id of your exhibitor"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692778040037,
        "lastModifiedTime": 1692778040037,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": false
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112733,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllExhibitorlogoDetailsForPortalSideByEventUrl",
        "executor_version": "v1",
        "executor_display_name": "Get All Exhibitor logo details for Portal side by eventUrl",
        "executor_description": "This API is used to get exhibitors logos,expo card related details on the Portal side",
        "executor_category": "ExpoAPI",
        "executor_category_group": "ExpoAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/exhibitor/logo",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "This is unique event Url of your event"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692778488690,
        "lastModifiedTime": 1692778488690,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "carouselLogoSliderDelaySeconds": 5,
                        "logo": null,
                        "expoCardImage": null,
                        "id": 2185
                    },
                    {
                        "carouselLogoSliderDelaySeconds": 12,
                        "logo": null,
                        "expoCardImage": null,
                        "id": 2135
                    },
                    {
                        "carouselLogoSliderDelaySeconds": 5,
                        "logo": null,
                        "expoCardImage": null,
                        "id": 2024
                    },
                    {
                        "carouselLogoSliderDelaySeconds": 5,
                        "logo": null,
                        "expoCardImage": null,
                        "id": 2025
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112734,
        "executor_type": "THIRDPARTY",
        "executor_name": "getExhibitorInfobyEventUrl",
        "executor_version": "v1",
        "executor_display_name": "Get Exhibitor Info by Event Url",
        "executor_description": "This API will return all the exhibitor information within the exhibitor booth.",
        "executor_category": "MyBoothLeadsAPI",
        "executor_category_group": "MyBoothLeadsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/exhibitor/event/{eventUrl}/myExhibitors",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692778578925,
        "lastModifiedTime": 1692778578925,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": 2135,
                        "name": "test expo3",
                        "chatEnabled": true,
                        "showDownloadLeadBtn": true,
                        "streamProvider": null,
                        "acceleventsStreamingEnabled": false,
                        "currencySymbol": "$",
                        "firstNameEnabled": true,
                        "lastNameEnabled": true,
                        "emailEnabled": true,
                        "companyEnabled": false,
                        "phoneNumberEnabled": false,
                        "leadRetriever": false
                    },
                    {
                        "id": 2024,
                        "name": "Test Expo1",
                        "chatEnabled": true,
                        "showDownloadLeadBtn": true,
                        "streamProvider": null,
                        "acceleventsStreamingEnabled": true,
                        "currencySymbol": "$",
                        "firstNameEnabled": true,
                        "lastNameEnabled": true,
                        "emailEnabled": true,
                        "companyEnabled": false,
                        "phoneNumberEnabled": false,
                        "leadRetriever": false
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112736,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllLeadOwners",
        "executor_version": "v1",
        "executor_display_name": "Get All Lead Owners",
        "executor_description": "This API is used to get names and ids all lead owners of exhibitors",
        "executor_category": "MyBoothLeadsAPI",
        "executor_category_group": "MyBoothLeadsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/exhibitor/{id}/leadOwners",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "it is the Unique id of the exhibitor."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692778963508,
        "lastModifiedTime": 1692778963508,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "ownerStaffId": 5603,
                        "ownerName": "Mitul Soni"
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112740,
        "executor_type": "THIRDPARTY",
        "executor_name": "getExpoMultiLanguageByLanguageCodeAndExpoID",
        "executor_version": "v1",
        "executor_display_name": "Get Expo MultiLanguage By Language Code And ExpoID",
        "executor_description": "This API used to Get Expo MultiLanguage By Language Code And ExpoID of the specified event. To call this API, user have to pass path param with API URL like eventUrl, languageCode, id and authentication key to authenticate user.",
        "executor_category": "MyBoothLeadsAPI",
        "executor_category_group": "MyBoothLeadsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/exhibitor/{id}/expoMultiLanguageLabel/language/{languageCode}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo."
            },
            {
                "key": "id",
                "value": "",
                "description": "This field contains language code for getting expo multi language"
            },
            {
                "key": "languageCode",
                "value": "",
                "description": "This field contains exhibitor id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692779302028,
        "lastModifiedTime": 1692779302028,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "customLabel": "string",
                        "defaultlabel": "string",
                        "expoId": 0,
                        "label": "string",
                        "labelType": "EXPO"
                    }
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden"
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112745,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadLeadCsv",
        "executor_version": "v1",
        "executor_display_name": "Download Lead CSV",
        "executor_description": "This API used to Download Lead CSV of the specified event. To call this API, user have to pass path param with API URL like eventUrl, id and authentication key to authenticate user.",
        "executor_category": "MyBoothLeadsAPI",
        "executor_category_group": "MyBoothLeadsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/exhibitor/{id}/lead/download/lead/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo."
            },
            {
                "key": "id",
                "value": "",
                "description": "This field contains exhibitor id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692779778322,
        "lastModifiedTime": 1692779778322,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "ok"
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112746,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateLeadDetails",
        "executor_version": "v1",
        "executor_display_name": "Update Lead Details",
        "executor_description": "This API used to Update Lead Details of the specified event. To call this API, user have to pass path param with API URL like eventUrl, id, leadId and request body params like leadDetail and authentication key to authenticate user.",
        "executor_category": "MyBoothLeadsAPI",
        "executor_category_group": "MyBoothLeadsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/exhibitor/{id}/lead/{leadId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo."
            },
            {
                "key": "id",
                "value": "",
                "description": "This field contains exhibitor id"
            },
            {
                "key": "leadId",
                "value": "",
                "description": "This field contains lead id to update lead details"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "leadDetail": {
                    "leadId": 0,
                    "retrieverUserId": 0,
                    "createdOn": "2023-08-22",
                    "scan": true,
                    "rating": "string",
                    "note": "string",
                    "owner": "string",
                    "ownerStaffId": "string",
                    "leadData": {
                        "eventTicketId": 0,
                        "holderFirstName": "string",
                        "holderLastName": "string",
                        "holderEmail": "string",
                        "holderCountryCode": "string",
                        "holderPhoneNumber": 0,
                        "title": "string",
                        "company": "string"
                    },
                    "source": "string",
                    "userActivity": [
                        {
                            "firstName": "string",
                            "lastName": "string",
                            "createdAt": "2023-08-22",
                            "visited": "string",
                            "documentName": "string",
                            "documentLink": "string"
                        }
                    ],
                    "attendeeId": "string",
                    "location": "string",
                    "trackingData": [
                        {
                            "eventId": 0,
                            "userId": 0,
                            "expoId": 0,
                            "sessionId": 0,
                            "area": "string",
                            "gameType": "string",
                            "timeInBooth": 0,
                            "documentDownloads": [
                                "string"
                            ],
                            "linkClicked": [
                                "string"
                            ],
                            "videoPlayed": true,
                            "chat": true,
                            "date": "2023-08-22",
                            "totalPoints": 0,
                            "totalVisit": 0,
                            "challengeId": 0,
                            "joinMeeting": [
                                "string"
                            ],
                            "productView": [
                                "string"
                            ],
                            "videoDuration": 0,
                            "ticketTypeIds": [
                                0
                            ],
                            "matchUsers": [
                                0
                            ],
                            "connectedUsers": [
                                0
                            ],
                            "visitToTheBooth": true,
                            "requestMeeting": true,
                            "videoPointsSet": true,
                            "recordingVideoPointsSet": true,
                            "timeInBoothPointsSet": true,
                            "ticketPurchase": true,
                            "eventCheckIn": true,
                            "matchPoints": 0,
                            "connectionPoints": 0
                        }
                    ],
                    "additionalInteractions": [
                        "string"
                    ],
                    "acceptDirectMessages": true
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692779924422,
        "lastModifiedTime": 1692779924422,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112741,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllLeadDetails",
        "executor_version": "v1",
        "executor_display_name": "Get All Lead Details",
        "executor_description": "This API used to Get All Lead Details of the specified event. To call this API, user have to pass path param with API URL like eventUrl, id and query params like searchString, page, size and authentication key to authenticate user.",
        "executor_category": "MyBoothLeadsAPI",
        "executor_category_group": "MyBoothLeadsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/exhibitor/{id}/lead",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo."
            },
            {
                "key": "id",
                "value": "",
                "description": "This field contains exhibitor id"
            }
        ],
        "queryParams": [
            {
                "key": "searchString",
                "value": "",
                "description": "Get filter ticketing orders according to search value passing in request.",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Size will returns number of records when call api default will returns 10 records",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692779411495,
        "lastModifiedTime": 1692779411495,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 9,
                    "recordsFiltered": 9,
                    "data": [
                        {
                            "leadId": 73,
                            "retrieverUserId": 4977,
                            "createdOn": 1634645227000,
                            "scan": false,
                            "rating": "Unrated",
                            "note": "VISIT",
                            "owner": null,
                            "ownerStaffId": null,
                            "leadData": {
                                "eventTicketId": 16351,
                                "holderFirstName": "demo",
                                "holderLastName": "demo11",
                                "holderEmail": "demoupdateddd@gmail.com",
                                "holderCountryCode": null,
                                "holderPhoneNumber": 0,
                                "title": "",
                                "company": ""
                            },
                            "source": "VISIT",
                            "userActivity": [],
                            "attendeeId": "4977",
                            "location": "Gurugram, India",
                            "trackingData": null,
                            "additionalInteractions": [
                                "CTA Button"
                            ],
                            "acceptDirectMessages": true
                        },
                        {
                            "leadId": 69,
                            "retrieverUserId": 4967,
                            "createdOn": 1634618156000,
                            "scan": false,
                            "rating": "Unrated",
                            "note": "VISIT",
                            "owner": null,
                            "ownerStaffId": null,
                            "leadData": {
                                "eventTicketId": 16349,
                                "holderFirstName": "ui",
                                "holderLastName": "ui1",
                                "holderEmail": "uiuiui123done@gmail.com",
                                "holderCountryCode": null,
                                "holderPhoneNumber": 0,
                                "title": "",
                                "company": ""
                            },
                            "source": "VISIT",
                            "userActivity": [],
                            "attendeeId": "4967",
                            "location": "Gurugram, India",
                            "trackingData": null,
                            "additionalInteractions": [
                                "CTA Button"
                            ],
                            "acceptDirectMessages": true
                        },
                        {
                            "leadId": 68,
                            "retrieverUserId": 1207,
                            "createdOn": 1634618077000,
                            "scan": false,
                            "rating": "Warm",
                            "note": "dff",
                            "owner": null,
                            "ownerStaffId": null,
                            "leadData": {
                                "eventTicketId": 0,
                                "holderFirstName": "mmj",
                                "holderLastName": "mm",
                                "holderEmail": "mm@gmail.com",
                                "holderCountryCode": "in",
                                "holderPhoneNumber": 9632588741,
                                "title": null,
                                "company": null
                            },
                            "source": null,
                            "userActivity": [],
                            "attendeeId": null,
                            "location": "",
                            "trackingData": null,
                            "additionalInteractions": [],
                            "acceptDirectMessages": false
                        },
                        {
                            "leadId": 59,
                            "retrieverUserId": 4963,
                            "createdOn": 1634562490000,
                            "scan": false,
                            "rating": "Unrated",
                            "note": "VISIT",
                            "owner": null,
                            "ownerStaffId": null,
                            "leadData": {
                                "eventTicketId": 16345,
                                "holderFirstName": "m1",
                                "holderLastName": "m2",
                                "holderEmail": "m@gmail.com",
                                "holderCountryCode": null,
                                "holderPhoneNumber": 0,
                                "title": "",
                                "company": ""
                            },
                            "source": "VISIT",
                            "userActivity": [],
                            "attendeeId": "4963",
                            "location": "Gurugram, India",
                            "trackingData": null,
                            "additionalInteractions": [
                                "CTA Button"
                            ],
                            "acceptDirectMessages": true
                        },
                        {
                            "leadId": 57,
                            "retrieverUserId": 4962,
                            "createdOn": 1634559859000,
                            "scan": false,
                            "rating": "Unrated",
                            "note": "VISIT",
                            "owner": null,
                            "ownerStaffId": null,
                            "leadData": {
                                "eventTicketId": 16344,
                                "holderFirstName": "11",
                                "holderLastName": "22",
                                "holderEmail": "uy@gmail.com",
                                "holderCountryCode": null,
                                "holderPhoneNumber": 0,
                                "title": "",
                                "company": ""
                            },
                            "source": "VISIT",
                            "userActivity": [],
                            "attendeeId": "4962",
                            "location": "Gurugram, India",
                            "trackingData": null,
                            "additionalInteractions": [
                                "CTA Button"
                            ],
                            "acceptDirectMessages": true
                        },
                        {
                            "leadId": 55,
                            "retrieverUserId": 4961,
                            "createdOn": 1634559600000,
                            "scan": false,
                            "rating": "Unrated",
                            "note": "VISIT",
                            "owner": null,
                            "ownerStaffId": null,
                            "leadData": {
                                "eventTicketId": 16342,
                                "holderFirstName": "oop",
                                "holderLastName": "oopp",
                                "holderEmail": "op@gmail.com",
                                "holderCountryCode": null,
                                "holderPhoneNumber": 0,
                                "title": "",
                                "company": ""
                            },
                            "source": "VISIT",
                            "userActivity": [],
                            "attendeeId": "4961",
                            "location": "Gurugram, India",
                            "trackingData": null,
                            "additionalInteractions": [
                                "CTA Button"
                            ],
                            "acceptDirectMessages": true
                        },
                        {
                            "leadId": 53,
                            "retrieverUserId": 4959,
                            "createdOn": 1634559407000,
                            "scan": false,
                            "rating": "Unrated",
                            "note": "VISIT",
                            "owner": null,
                            "ownerStaffId": null,
                            "leadData": {
                                "eventTicketId": 16341,
                                "holderFirstName": "l",
                                "holderLastName": "l",
                                "holderEmail": "l1@gmail.com",
                                "holderCountryCode": null,
                                "holderPhoneNumber": 0,
                                "title": "jp",
                                "company": "NSD"
                            },
                            "source": "VISIT",
                            "userActivity": [],
                            "attendeeId": "4959",
                            "location": "Gurugram, India",
                            "trackingData": null,
                            "additionalInteractions": [
                                "CTA Button"
                            ],
                            "acceptDirectMessages": true
                        },
                        {
                            "leadId": 52,
                            "retrieverUserId": null,
                            "createdOn": 1634555816000,
                            "scan": false,
                            "rating": "Warm",
                            "note": "",
                            "owner": null,
                            "ownerStaffId": null,
                            "leadData": {
                                "eventTicketId": 0,
                                "holderFirstName": "hh",
                                "holderLastName": "h",
                                "holderEmail": "h@gmail.com",
                                "holderCountryCode": "in",
                                "holderPhoneNumber": 9876543210,
                                "title": null,
                                "company": null
                            },
                            "source": null,
                            "userActivity": [],
                            "attendeeId": null,
                            "location": "",
                            "trackingData": null,
                            "additionalInteractions": [],
                            "acceptDirectMessages": false
                        },
                        {
                            "leadId": 51,
                            "retrieverUserId": 4958,
                            "createdOn": 1634555042000,
                            "scan": false,
                            "rating": "Hot",
                            "note": "Notes",
                            "owner": null,
                            "ownerStaffId": null,
                            "leadData": {
                                "eventTicketId": 0,
                                "holderFirstName": "bharat",
                                "holderLastName": "zala",
                                "holderEmail": "bharat.z@brilworks.com",
                                "holderCountryCode": "in",
                                "holderPhoneNumber": 9999898637,
                                "title": "dr",
                                "company": "NEE"
                            },
                            "source": null,
                            "userActivity": [],
                            "attendeeId": "4958",
                            "location": "",
                            "trackingData": null,
                            "additionalInteractions": [],
                            "acceptDirectMessages": true
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden"
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112742,
        "executor_type": "THIRDPARTY",
        "executor_name": "addLeadDetails",
        "executor_version": "v1",
        "executor_display_name": "Add Lead Details",
        "executor_description": "This API used to Add Lead Details of the specified event. To call this API, user have to pass path param with API URL like eventUrl, id and request body params like leadDetail and authentication key to authenticate user.",
        "executor_category": "MyBoothLeadsAPI",
        "executor_category_group": "MyBoothLeadsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/exhibitor/{id}/lead",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo."
            },
            {
                "key": "id",
                "value": "",
                "description": "This field contains exhibitor id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "leadDetail": {
                    "leadId": 0,
                    "retrieverUserId": 0,
                    "createdOn": "2023-08-22",
                    "scan": true,
                    "rating": "string",
                    "note": "string",
                    "owner": "string",
                    "ownerStaffId": "string",
                    "leadData": {
                        "eventTicketId": 0,
                        "holderFirstName": "string",
                        "holderLastName": "string",
                        "holderEmail": "string",
                        "holderCountryCode": "string",
                        "holderPhoneNumber": 0,
                        "title": "string",
                        "company": "string"
                    },
                    "source": "string",
                    "userActivity": [
                        {
                            "firstName": "string",
                            "lastName": "string",
                            "createdAt": "2023-08-22",
                            "visited": "string",
                            "documentName": "string",
                            "documentLink": "string"
                        }
                    ],
                    "attendeeId": "string",
                    "location": "string",
                    "trackingData": [
                        {
                            "eventId": 0,
                            "userId": 0,
                            "expoId": 0,
                            "sessionId": 0,
                            "area": "string",
                            "gameType": "string",
                            "timeInBooth": 0,
                            "documentDownloads": [
                                "string"
                            ],
                            "linkClicked": [
                                "string"
                            ],
                            "videoPlayed": true,
                            "chat": true,
                            "date": "2023-08-22",
                            "totalPoints": 0,
                            "totalVisit": 0,
                            "challengeId": 0,
                            "joinMeeting": [
                                "string"
                            ],
                            "productView": [
                                "string"
                            ],
                            "videoDuration": 0,
                            "ticketTypeIds": [
                                0
                            ],
                            "matchUsers": [
                                0
                            ],
                            "connectedUsers": [
                                0
                            ],
                            "visitToTheBooth": true,
                            "requestMeeting": true,
                            "videoPointsSet": true,
                            "recordingVideoPointsSet": true,
                            "timeInBoothPointsSet": true,
                            "ticketPurchase": true,
                            "eventCheckIn": true,
                            "matchPoints": 0,
                            "connectionPoints": 0
                        }
                    ],
                    "additionalInteractions": [
                        "string"
                    ],
                    "acceptDirectMessages": true
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692779509670,
        "lastModifiedTime": 1692779509670,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden"
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112743,
        "executor_type": "THIRDPARTY",
        "executor_name": "createLeadUsingSource",
        "executor_version": "v1",
        "executor_display_name": "Create lead using source",
        "executor_description": "this API is used to create leads using sources like visit, auto-generated, document download. when a user performs certain action according to it used to create a lead. when user visit boot,download document,visit link that time this API is used",
        "executor_category": "MyBoothLeadsAPI",
        "executor_category_group": "MyBoothLeadsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{id}/exhibitor/{exhibitorId}/leadSource/{source}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "This is Unique event id of your event"
            },
            {
                "key": "exhibitorId",
                "value": "",
                "description": "This is unique exhibitor id of your exhibitor"
            },
            {
                "key": "source",
                "value": "",
                "description": "This field is used to set from where lead is generated like visit,auto generate,download document"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692779644396,
        "lastModifiedTime": 1692779644396,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "ok"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112747,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteLeadDetails",
        "executor_version": "v1",
        "executor_display_name": "Delete Lead Details",
        "executor_description": "This API used to Delete Lead Details of the specified event. To call this API, user have to pass path param with API URL like eventUrl, id, leadId and authentication key to authenticate user.",
        "executor_category": "MyBoothLeadsAPI",
        "executor_category_group": "MyBoothLeadsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/exhibitor/{id}/lead/{leadId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo."
            },
            {
                "key": "id",
                "value": "",
                "description": "This field contains exhibitor id"
            },
            {
                "key": "leadId",
                "value": "",
                "description": "This field contains lead id to update lead details"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692780004014,
        "lastModifiedTime": 1692780004014,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found."
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "No Content"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112739,
        "executor_type": "THIRDPARTY",
        "executor_name": "createleadbyLoggedInUser",
        "executor_version": "v1",
        "executor_display_name": "Create lead by logged-in user",
        "executor_description": "This API used to Create lead by logged-in user with the specified event. To call this API, user have to pass path param with API URL like exhibitorId, eventUrl, query params like isRequestedDemo, staffId and authentication key to authenticate user.",
        "executor_category": "MyBoothLeadsAPI",
        "executor_category_group": "MyBoothLeadsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/event/{id}/exhibitor/{exhibitorId}/generate-auto-lead",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "This field contains event id"
            },
            {
                "key": "exhibitorId",
                "value": "",
                "description": "This field contains exhibitor id"
            }
        ],
        "queryParams": [
            {
                "key": "isRequestedDemo",
                "value": "",
                "description": "This field contains boolean value for whether lead has request demo",
                "req": false
            },
            {
                "key": "staffId",
                "value": "",
                "description": "This field contains staff id",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692779183478,
        "lastModifiedTime": 1692779183478,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "string"
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Created"
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden"
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112910,
        "executor_type": "THIRDPARTY",
        "executor_name": "uploadDocumentForSession",
        "executor_version": "v1",
        "executor_display_name": "Upload document for session",
        "executor_description": "Using this API, Speaker users can add documents for the particular session. These documents will be accessible for all attendees. . You need to send eventurl and id as path parameters. Also, you have to send a documents object containing document id & document name as key-value pairs. For how to get document id please refer ...  This API can be used by an authenticated user only, and the user has to be the speaker of that session.",
        "executor_category": "DisplayAgendaAndSpeaker",
        "executor_category_group": "DisplayAgendaAndSpeaker",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/session/{id}/uploadDocuments",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Session ID is unique identifier for your session."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "documents": {
                    "key": "string",
                    "value": "string"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692857102898,
        "lastModifiedTime": 1692857102898,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "key": "1ff796be-a738-4ba4-a7f8-77ab7f004ce8_D0151038902545815742808643SCHEDULESC.pdf",
                        "value": "D0151038902545815742808643SCHEDULESC.pdf"
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112907,
        "executor_type": "THIRDPARTY",
        "executor_name": "joinSession",
        "executor_version": "v1",
        "executor_display_name": "Join Session",
        "executor_description": "This API will allow attendees to join a workshop (internal using chime) session, and it will return meeting details like meeting, attendee, speakersOrModeratorsUserIds, eventAdmins in response.  Need to send eventurl and id (Session ID) as path parameters.",
        "executor_category": "DisplayAgendaAndSpeaker",
        "executor_category_group": "DisplayAgendaAndSpeaker",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/session/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "For getting particular session need to pass event session id for join particular session"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692856874581,
        "lastModifiedTime": 1692856874581,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": 957,
                        "eventId": 40,
                        "sponsorName": "Duplicate sponsor test",
                        "sponsorLogo": "48b1aeb6-0233-4069-8683-570e8cfb42d0",
                        "sponsorSize": "SMALL",
                        "sponsorUrl": "www.google.com",
                        "position": 4000,
                        "includeInLobbyCarousel": true,
                        "carouselLogoSliderDelaySeconds": 5,
                        "shortDescription": "This is for duplicate sponsor.",
                        "sponsorCardImage": "07139909-2a34-4b9a-9c64-b60fb0dd841d",
                        "colorConfig": {
                            "shortDescriptionColor": "#ffffff",
                            "nameColor": "#0000FF",
                            "categoryColor": null
                        },
                        "cardTag": null,
                        "exhibitorId": 1161
                    },
                    {
                        "id": 941,
                        "eventId": 40,
                        "sponsorName": "yahoo",
                        "sponsorLogo": "1c3fe76f-4c34-470f-8726-d6ebcd232c73",
                        "sponsorSize": "MEDIUM",
                        "sponsorUrl": null,
                        "position": 3000,
                        "includeInLobbyCarousel": true,
                        "carouselLogoSliderDelaySeconds": 5,
                        "shortDescription": null,
                        "sponsorCardImage": null,
                        "colorConfig": {
                            "shortDescriptionColor": "#0000FF",
                            "nameColor": "#000000",
                            "categoryColor": null
                        },
                        "cardTag": "TAG",
                        "exhibitorId": null
                    },
                    {
                        "id": 940,
                        "eventId": 40,
                        "sponsorName": "facebook 1",
                        "sponsorLogo": "c81c4fb1-c927-46a8-930a-bb33984dc068",
                        "sponsorSize": "SMALL",
                        "sponsorUrl": null,
                        "position": 2000,
                        "includeInLobbyCarousel": true,
                        "carouselLogoSliderDelaySeconds": 5,
                        "shortDescription": null,
                        "sponsorCardImage": null,
                        "colorConfig": {
                            "shortDescriptionColor": "#0000FF",
                            "nameColor": "#0000FF",
                            "categoryColor": null
                        },
                        "cardTag": null,
                        "exhibitorId": null
                    },
                    {
                        "id": 939,
                        "eventId": 40,
                        "sponsorName": "facebook",
                        "sponsorLogo": null,
                        "sponsorSize": "SMALL",
                        "sponsorUrl": null,
                        "position": 1000,
                        "includeInLobbyCarousel": true,
                        "carouselLogoSliderDelaySeconds": 5,
                        "shortDescription": null,
                        "sponsorCardImage": null,
                        "colorConfig": {
                            "shortDescriptionColor": "#0000FF",
                            "nameColor": "#0000FF",
                            "categoryColor": null
                        },
                        "cardTag": null,
                        "exhibitorId": null
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112908,
        "executor_type": "THIRDPARTY",
        "executor_name": "getDefaultPlaybackForSessionStreamingRecording",
        "executor_version": "v1",
        "executor_display_name": "Get default playback for session streaming/recording",
        "executor_description": "Get default playback details for the session associated with the event.  Using this API you can get playback details like playBackId, assetId, playBackRestrictionToken, thumbnailRestrictionToken, duration for streaming/recording any session.  To call this API, you need to pass eventurl and id as path parameters.",
        "executor_category": "DisplayAgendaAndSpeaker",
        "executor_category_group": "DisplayAgendaAndSpeaker",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/session/{id}/default-playback",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": ""
            },
            {
                "key": "id",
                "value": "",
                "description": "For default playback for perticular session need to pass event session id of event for default playback for session"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692856986763,
        "lastModifiedTime": 1692856986763,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "assetId": "vPkpx2cuJlOazlCf022VUqqZC00DsHg7ckTGGAPrhrBA00",
                    "createdAt": "2021-06-28T13:59:48.142Z",
                    "createdBy": 121,
                    "defaultPlayback": true,
                    "duration": 10.143467,
                    "fileName": "high.mp4",
                    "id": "high.mp4",
                    "playBackId": "jAf8hjf4D01SSXB3JVSUbpXPSs9T01emOkowI95HdBtOM",
                    "playBackRestrictionToken": "eyJraWQiOiJNSEJvMXhaR09PUGlHUTJ4Y3AwMjFOOXNVVnkzcTVURFBnNUN3Sk1McTAyQlUiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0Y1poNTAxcFVyUFRyT013NDZHMDJhb1h0V2xrSzI0RHB1Snh2QTAwWVltbDAySSIsImF1ZCI6InQiLCJwbGF5YmFja19yZXN0cmljdGlvbl9pZCI6IjZrT3RTY1lxTzAyYUxuY2ZLckl6NWJadVUwMXdzeEJYOUQzZnZlNnpwWElHYyIsImV4cCI6MTg1OTE4NzEyMX0.oQ3qR59N4vpM4gpl1FoMaIC9gmo7W4Ij-H6NpC7ol-khS1N0CHgzzcqe8jlS1xgKwgsKj0yuu92Cf6vbsPv15m5GnXTrtKFeUlCShYUrjf9n2GStvpflgJRowA9-CoEObQ8KsyZykwCmsR4poIqZP1QFu9MAQDuzFjKbo6Q8yvcFW5uC-5r9bbWPDWxAtRXNZZjU51WzgZV_Xr-v9g4HCkksmAYl9vLyHpcD95Ded4UF1jmPqnYvAwOnTvPYcnx2_S6fKxcy7rfOBer8kRkg7Zsv6kyOr5P0EDlVTc9cC5vzUhT3JKeY7J_F0J1qFApRPwRWg99x_EsNNvTlHPnxIg",
                    "signed": true,
                    "thumbnailRestrictionToken": "eyJraWQiOiJNSEJvMXhaR09PUGlHUTJ4Y3AwMjFOOXNVVnkzcTVURFBnNUN3Sk1McTAyQlUiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0Y1poNTAxcFVyUFRyT013NDZHMDJhb1h0V2xrSzI0RHB1Snh2QTAwWVltbDAySSIsImF1ZCI6InQiLCJwbGF5YmFja19yZXN0cmljdGlvbl9pZCI6IjZrT3RTY1lxTzAyYUxuY2ZLckl6NWJadVUwMXdzeEJYOUQzZnZlNnpwWElHYyIsImV4cCI6MTg1OTE4NzEyMX0.oQ3qR59N4vpM4gpl1FoMaIC9gmo7W4Ij-H6NpC7ol-khS1N0CHgzzcqe8jlS1xgKwgsKj0yuu92Cf6vbsPv15m5GnXTrtKFeUlCShYUrjf9n2GStvpflgJRowA9-CoEObQ8KsyZykwCmsR4poIqZP1QFu9MAQDuzFjKbo6Q8yvcFW5uC-5r9bbWPDWxAtRXNZZjU51WzgZV_Xr-v9g4HCkksmAYl9vLyHpcD95Ded4UF1jmPqnYvAwOnTvPYcnx2_S6fKxcy7rfOBer8kRkg7Zsv6kyOr5P0EDlVTc9cC5vzUhT3JKeY7J_F0J1qFApRPwRWg99x_EsNNvTlHPnxIg"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112913,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllSpeakersSession",
        "executor_version": "v1",
        "executor_display_name": "Get all speakers session",
        "executor_description": "Using this API, you can get all sessions list in which you are added as a speaker.  You have to pass an eventurl as path parameters, for pagination & filter support you can send page, expand, past, size, and searchString as query parameters.",
        "executor_category": "DisplayAgendaAndSpeaker",
        "executor_category_group": "DisplayAgendaAndSpeaker",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/session/myTalks",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "expand",
                "value": "",
                "description": "Expands Get Records accordingly we are passing in request param in expand value as comma separated like : TAG,TRACK,SPEAKER,currentUserRegisteredEventTicketId",
                "req": false
            },
            {
                "key": "past",
                "value": "",
                "description": "If past is null, i.e not passed, it will pull all sessions, past=true, should pull past session, past=false, should pull upcoming sessions.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Size will returns number of records when call api default will returns 10 records.",
                "req": false
            },
            {
                "key": "searchString",
                "value": "",
                "description": "Get filter session records according to search value passing in request.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692857380393,
        "lastModifiedTime": 1692857380393,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 1,
                    "recordsFiltered": 1,
                    "data": [
                        {
                            "sessionId": 11920,
                            "title": "tesing for API",
                            "startTime": "2021/12/27 15:09",
                            "endTime": "2021/12/27 16:09",
                            "location": null,
                            "description": null,
                            "capacity": 0,
                            "status": "VISIBLE",
                            "format": "WORKSHOP",
                            "speakerList": [
                                {
                                    "speakerId": 5833,
                                    "title": null,
                                    "pronouns": null,
                                    "firstName": "Ankit",
                                    "lastName": "D",
                                    "email": "ankit.d@brilworks.com",
                                    "sessionDTO": null,
                                    "userId": 11,
                                    "imageUrl": null,
                                    "company": null,
                                    "bio": null,
                                    "linkedIn": null,
                                    "twitter": null,
                                    "instagram": null,
                                    "position": 5485,
                                    "moderator": true,
                                    "ticketTypesForSpeaker": null,
                                    "loggedInAtVEH": false,
                                    "showModerator": true,
                                    "deviceChecked": false,
                                    "allowOverrideDetails": false,
                                    "allowAttendeeAccess": false
                                }
                            ],
                            "sponsorList": [],
                            "sessionStats": {
                                "id": 11920,
                                "registeredUserCount": 1,
                                "interestedUserCount": 0,
                                "attendeeCount": 0,
                                "sessionSpeakerCount": 0
                            },
                            "registerdHolderUsers": null,
                            "currentUserRegisteredEventTicketId": [
                                null
                            ],
                            "purchaserUserRegisteredEventTicketId": null,
                            "duration": null,
                            "chatEnabled": true,
                            "pollEnabled": true,
                            "quesAndAnsEnabled": true,
                            "hideSessionFromAttendees": false,
                            "tags": [],
                            "tracks": [],
                            "ticketTypesThatCanBeRegistered": [
                                8460,
                                8458
                            ],
                            "streamProvider": "ACCELEVENTS",
                            "subStreamProvider": "OPENTOK",
                            "streamUrl": "caaJLa5bvlnb2hzu1o00DABbOIyb00uqJvtjDHrSL9y3k",
                            "streamKey": "b1e18870-a8d3-f5e1-a240-96b582b24557",
                            "rtmpUrl": "rtmp://live.mux.com/app",
                            "accelEventsStudio": true,
                            "directVideoAutoStart": false,
                            "assetList": null,
                            "displayDonation": false,
                            "closedCaptionUrl": null,
                            "closedCaptionHeight": 150,
                            "meetingPassword": null,
                            "documentKeyValue": [],
                            "linkKeyValue": [],
                            "sessionVisibilityType": "PUBLIC",
                            "subTitleFileUrl": null,
                            "hideVideoControls": false,
                            "recordSession": true,
                            "position": 1000,
                            "allowedMinutesToJoinLate": 0,
                            "enableAttendeeList": true,
                            "playBackRestrictionToken": "eyJraWQiOiJNSEJvMXhaR09PUGlHUTJ4Y3AwMjFOOXNVVnkzcTVURFBnNUN3Sk1McTAyQlUiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJZdmVjMDE5Qld4MDFUUDZ4djJ6MkNCRjkxNEp0bTRBNHBXajAxd09TU0tWdUkwMCIsImF1ZCI6InYiLCJwbGF5YmFja19yZXN0cmljdGlvbl9pZCI6IjZrT3RTY1lxTzAyYUxuY2ZLckl6NWJadVUwMXdzeEJYOUQzZnZlNnpwWElHYyIsImV4cCI6MTg2MTM0OTk4MH0.HFKL_Q_5ucSABk5P54ovhusGO1EjptHfvhAnc0ImNioq1-Kn8TLFjJ-LoRn3tLlSCWxL9-QlTCZTfN3EZhnlB6et4_ZDQSx0Pa1fBg20oSWQ5xOXmhL1qR9luRtYwxEAv4ZU2mZKZrqCNOyXyMK4CckEi5vqvvLeMY_bnd2YpRavdUth8W0VSOEyYxV_E262HsUXxGFu6xpqsor9TosbSDG19SUg1XQ_sDO4mBdS_hvAtXwViiy0AZ2BUYSH6_cUKYfNdfSCRznVLAPesyVzzNP46o6y3n047hqBvkvgHTjj-TZkx8pgL96QjPzh3QiuZ_EgKjCO5iA6owIBWSATYg",
                            "thumbnailRestrictionToken": "eyJraWQiOiJNSEJvMXhaR09PUGlHUTJ4Y3AwMjFOOXNVVnkzcTVURFBnNUN3Sk1McTAyQlUiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJZdmVjMDE5Qld4MDFUUDZ4djJ6MkNCRjkxNEp0bTRBNHBXajAxd09TU0tWdUkwMCIsImF1ZCI6InQiLCJwbGF5YmFja19yZXN0cmljdGlvbl9pZCI6IjZrT3RTY1lxTzAyYUxuY2ZLckl6NWJadVUwMXdzeEJYOUQzZnZlNnpwWElHYyIsImV4cCI6MTg2MTM0OTk4MH0.Vcg-XNuNlnMAZldmN33IgBB9r0Hl3_F45av9KQPHLVkLQM6NiiR8ZOIe8TnsapaDfmU21O7r8tn-lMF5RqjTSP9ChcV7Ub0TFS08B9ZQ7JcVPMOZj1pOdm6KGZ4tWKVmwEkSNHx39tpqciGbctk-CF3YLrHntlRZD6G-V1jjiDh6sEftrTgionJbxuD3V0VRmnXlcC2cI75nMej8Ae6FQBqH3m24_6tbLlinOXGFeHwOG34jUTnJ8BKbuyYpuX8LyAlGrmJR0xQJUSu0k2wHm9tSr4vgxJTTax4N6jyOxWi3uG4H5QB6ntZqZjvpBmyi_R7v41s7BoNHSPhxF9YGOQ",
                            "postSessionCallToActionJson": {
                                "enablePostSessionCallToAction": false,
                                "destinationType": null,
                                "description": null,
                                "buttonLabelText": null,
                                "destination": null
                            },
                            "chimeConfig": null,
                            "qnAPrivate": true
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112912,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllSessionDatesInEvent",
        "executor_version": "v1",
        "executor_display_name": "Get All Session dates in event",
        "executor_description": "Using this API, you can get sessions dates in the local time zone.",
        "executor_category": "DisplayAgendaAndSpeaker",
        "executor_category_group": "DisplayAgendaAndSpeaker",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/session/allSessionDates/{utcOffSet}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "utcOffSet",
                "value": "",
                "description": "The UTC offset is the difference in hours and minutes between Coordinated Universal Time and local solar time, at a particular place. This difference is expressed with respect to UTC and is generally shown in the format \u00b1[hh]:[mm], \u00b1[hh][mm], or \u00b1[hh]."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692857221503,
        "lastModifiedTime": 1692857221503,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    "2021-08-18T00:00:00+0530",
                    "2021-08-19T00:00:00+0530"
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112932,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllSessions",
        "executor_version": "v2",
        "executor_display_name": "Get all sessions",
        "executor_description": "Using this API, you can get all sessions list for a particular event. This API will get data from the cache.  To call this API, you need to pass eventUrl as path parameters.  API can be used by any registered user with the event.",
        "executor_category": "DisplayPortalSessionCacheAPI",
        "executor_category_group": "DisplayPortalSessionCacheAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/cache/events/{eventUrl}/session/portal",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692858283603,
        "lastModifiedTime": 1692858283603,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "sessionId": 1644,
                        "title": "To Fast",
                        "startTime": "2021/06/07 03:30",
                        "endTime": "2021/06/07 04:30",
                        "location": null,
                        "description": null,
                        "capacity": 0,
                        "status": "VISIBLE",
                        "format": "MAIN_STAGE",
                        "streamProvider": "ACCELEVENTS",
                        "streamUrl": "kUv71U02cOCGqT4DVSzUU3XuxrT02eMU8bhWKCJ6uh81M",
                        "accelEventsStudio": true,
                        "directVideoAutoStart": false,
                        "speakerList": [
                            757,
                            758,
                            484
                        ],
                        "tags": [],
                        "tracks": [],
                        "displayDonation": false
                    },
                    {
                        "sessionId": 3115,
                        "title": "string",
                        "startTime": "2021/06/07 03:30",
                        "endTime": "2021/06/07 04:30",
                        "location": "string",
                        "description": "string",
                        "capacity": 0,
                        "status": "VISIBLE",
                        "format": "WORKSHOP",
                        "streamProvider": "NULL",
                        "streamUrl": "string",
                        "accelEventsStudio": false,
                        "directVideoAutoStart": false,
                        "speakerList": null,
                        "tags": [],
                        "tracks": [],
                        "displayDonation": false
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112935,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTracksTags",
        "executor_version": "v1",
        "executor_display_name": "Get Tracks/Tags",
        "executor_description": "Using this API, you can get tracks/tags basic lists, etc. This API will get data from the cache.  To call this API, you need to pass eventurl & type as path parameters. type value can be either TAG/TRACKS.  Only authorized users can use this API and need the event attendee, event admin, event staff, and super admin.",
        "executor_category": "DisplayPortalSessionCacheAPI",
        "executor_category_group": "DisplayPortalSessionCacheAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/cache/events/{eventUrl}/tagAndTrack/{type}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "type",
                "value": "",
                "description": "It's will returns data by type and type contains TAG,TRACK"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692858451088,
        "lastModifiedTime": 1692858451088,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": 2477,
                        "name": "cvf",
                        "type": "TAG",
                        "color": null,
                        "description": null,
                        "position": 2000
                    },
                    {
                        "id": 2476,
                        "name": "abc",
                        "type": "TAG",
                        "color": null,
                        "description": null,
                        "position": 1000
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112933,
        "executor_type": "THIRDPARTY",
        "executor_name": "getRegisteredSessions",
        "executor_version": "v1",
        "executor_display_name": "Get registered sessions",
        "executor_description": "Using this API, You can get all the sessions in which the attendee has registered. This API will get data from the cache.  To call this API, you need to pass eventurl as path parameters.  Only authorized users can use this API and event attendees, event admin, event staff, and super admin can access this API.",
        "executor_category": "DisplayPortalSessionCacheAPI",
        "executor_category_group": "DisplayPortalSessionCacheAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/cache/events/{eventUrl}/session/registered",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692858366441,
        "lastModifiedTime": 1692858366441,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "accelEventsStudio": false,
                        "capacity": 0,
                        "description": "string",
                        "directVideoAutoStart": false,
                        "endTime": "string",
                        "format": "MAIN_STAGE",
                        "location": "string",
                        "sessionId": 0,
                        "speakerList": [
                            0
                        ],
                        "startTime": "string",
                        "status": "VISIBLE",
                        "streamProvider": "NULL",
                        "streamUrl": "string",
                        "title": "string"
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112929,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSessionDetail",
        "executor_version": "v2",
        "executor_display_name": "Get session detail",
        "executor_description": "Using this API, you can get sessions details for an event. This API will get data from the cache.  You need to send eventurl as a path parameter.  This API can pass Authentication as an optional header parameter. If the token is passed and you are event admin/staff then it will bring all hidden/private sessions also otherwise it will return only public/visible sessions only.",
        "executor_category": "DisplayPortalSessionCacheAPI",
        "executor_category_group": "DisplayPortalSessionCacheAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/cache/events/{eventUrl}/session/{id}/portal",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Session ID is unique identifier for your session."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692858204695,
        "lastModifiedTime": 1692858204695,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "accelEventsStudio": false,
                    "capacity": 0,
                    "description": "string",
                    "directVideoAutoStart": false,
                    "displayDonation": false,
                    "endTime": "string",
                    "format": "MAIN_STAGE",
                    "location": "string",
                    "sessionId": 0,
                    "speakerList": [
                        0
                    ],
                    "startTime": "string",
                    "status": "VISIBLE",
                    "streamProvider": "NULL",
                    "streamUrl": "string",
                    "tags": [
                        0
                    ],
                    "title": "string",
                    "tracks": [
                        0
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113042,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllAttendeesRegisteredSessions",
        "executor_version": "v1",
        "executor_display_name": "Get all attendee's registered sessions",
        "executor_description": "Get all registered sessions for the specified event.",
        "executor_category": "AttendeeSessions",
        "executor_category_group": "AttendeeSessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/user-session/registered/{userId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": ""
            },
            {
                "key": "userId",
                "value": "",
                "description": "Unique user ID"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692864725680,
        "lastModifiedTime": 1692864725680,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 1,
                    "recordsFiltered": 1,
                    "data": [
                        {
                            "sessionId": 1644,
                            "title": "To Fast",
                            "startTime": "2021/06/07 03:30",
                            "endTime": "2021/06/07 04:30",
                            "location": null,
                            "description": null,
                            "capacity": 0,
                            "status": "VISIBLE",
                            "format": "MAIN_STAGE",
                            "speakerList": null,
                            "sponsorList": [],
                            "sessionStats": {
                                "id": 1644,
                                "registeredUserCount": 0,
                                "interestedUserCount": 0,
                                "attendeeCount": 0,
                                "sessionSpeakerCount": 0
                            },
                            "registerdHolderUsers": null,
                            "currentUserRegisteredEventTicketId": null,
                            "purchaserUserRegisteredEventTicketId": null,
                            "duration": null,
                            "enableChat": true,
                            "enablePoll": true,
                            "enableQuesAndAns": true,
                            "hideSessionFromAttendees": false,
                            "tags": [],
                            "tracks": [],
                            "ticketTypesThatCanBeRegistered": [
                                1030,
                                960
                            ],
                            "streamProvider": "ACCELEVENTS",
                            "subStreamProvider": "OPENTOK",
                            "streamUrl": "kUv71U02cOCGqT4DVSzUU3XuxrT02eMU8bhWKCJ6uh81M",
                            "streamKey": "181e2bbd-40a5-fd36-cd60-5cb24577bd26",
                            "rtmpUrl": "rtmp://live.mux.com/app",
                            "accelEventsStudio": true,
                            "directVideoAutoStart": false,
                            "assetList": null,
                            "displayDonation": false,
                            "closedCaptionUrl": null,
                            "closedCaptionHeight": 150,
                            "meetingPassword": null,
                            "documentKeyValue": [
                                {
                                    "key": "5dae86d2-ee61-4d28-8698-8b27604b123c_D0151038902545815742808643SCHEDULESC.pdf",
                                    "value": "D0151038902545815742808643SCHEDULESC.pdf"
                                }
                            ],
                            "linkKeyValue": [
                                {
                                    "key": "dfdf",
                                    "value": "dd"
                                }
                            ],
                            "sessionVisibilityType": "PUBLIC",
                            "subTitleFileUrl": null,
                            "hideVideoControls": false,
                            "recordSession": true,
                            "position": 1000,
                            "allowedMinutesToJoinLate": 0,
                            "enableAttendeeList": true,
                            "chimeConfig": null,
                            "qnAPrivate": true
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113018,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateAttendeesStatusForSession",
        "executor_version": "v1",
        "executor_display_name": "Update attendee's status for session",
        "executor_description": "Using this API you can update the attendee's status for a particular session. It will help to track the attendee's current status for sessions.  To call this API, you have to pass eventurl, id as path parameters. Also, need to send status as a query parameter.  Following are the different values that can be set for status:  REGISTERED - Attendee has registered/bookmarked the session CHECK_IN_AVAILABLE - Attendee is available for a networking session IN_MEETING - Attendee is currently in a session LEFT - Attendee has left the session PAST_SESSION_CHECK_IN - Attendee has registered for a past session to see the recorded session if available",
        "executor_category": "AttendeeSessions",
        "executor_category_group": "AttendeeSessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/user-session/change-status/session/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "The sessionId represents the unique ID of each session. It will be generated automatically when a new session is created."
            }
        ],
        "queryParams": [
            {
                "key": "status",
                "value": "",
                "description": "status can be REGISTERED, CHECK_IN_AVAILABLE, IN_MEETING, LEFT, PAST_SESSION_CHECK_IN.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692863996016,
        "lastModifiedTime": 1692863996016,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113024,
        "executor_type": "THIRDPARTY",
        "executor_name": "registerBookmarkSession",
        "executor_version": "v1",
        "executor_display_name": "Register/Bookmark session",
        "executor_description": "Use this API to register/bookmark the session.  You need to send true for query parameter joinSession if the attendee register/bookmark session before it's live.  If the attendee registers for a session after the session ended, then you need to send pastJoinSession as true within the query parameters.  If for the session allowedMinutesToJoinLate is set true, and you try to register after the session ended then recording of this session is not available, it's only available for the attendees who have watched the session when it's live.  This API can be used by authenticated users only, and it will require super admin/event admin/event staff/attendee level access.",
        "executor_category": "AttendeeSessions",
        "executor_category_group": "AttendeeSessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/user-session/register/portal",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "joinSession",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "pastJoinSession",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "userSessionDTO": {
                    "eventId": 0,
                    "userId": 0,
                    "sessionId": 0,
                    "join": true
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692864286125,
        "lastModifiedTime": 1692864286125,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113020,
        "executor_type": "THIRDPARTY",
        "executor_name": "getCheckInAttendeeCountForSession",
        "executor_version": "v1",
        "executor_display_name": "Get check-in attendee count for session",
        "executor_description": "Using this API, you can get the attendees count who has checked in for the session.  To call this API, you need to pass eventurl and id (session ID) as path parameters.  This API can be used by authenticated users only, and it will require super admin/event admin/event staff/attendee access.",
        "executor_category": "AttendeeSessions",
        "executor_category_group": "AttendeeSessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/user-session/check-in-count/session/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "The sessionId represents the unique ID of each session. It will be generated automatically when a new session is created."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692864110682,
        "lastModifiedTime": 1692864110682,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113026,
        "executor_type": "THIRDPARTY",
        "executor_name": "unregisterRemoveSessionFromTheBookmark",
        "executor_version": "v1",
        "executor_display_name": "Unregister/remove a session from the bookmark",
        "executor_description": "This API is used to unregister a session or remove a session from the bookmark.  To call this API you need to send sessionId and userId in the request body.  This API can be used by authenticated users only, and it will require super admin/event admin/event staff/attendee level access.",
        "executor_category": "AttendeeSessions",
        "executor_category_group": "AttendeeSessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/user-session/register/event-ticket/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique event ticketing ID"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "userSessionDTO": {
                    "eventId": 0,
                    "join": true,
                    "sessionId": 0,
                    "userId": 0
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692864404613,
        "lastModifiedTime": 1692864404613,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113045,
        "executor_type": "THIRDPARTY",
        "executor_name": "getPreviousMatchForNetworkingSession",
        "executor_version": "v1",
        "executor_display_name": "Get previous match for networking session",
        "executor_description": "You can use this API to get a previously matched attendee for the networking session.  This API will return previously matched attendee's id as userIdOfMatch and networking session's timeout time as meetingTimeOut  This API can be used by authenticated users only, and it will require super admin/event admin/event staff/attendee level access.",
        "executor_category": "AttendeeSessions",
        "executor_category_group": "AttendeeSessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/virtual/event/{eventUrl}/networking-rule/previous/meet-up/session/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "The sessionId represents the unique ID of each session. It will be generated automatically when a new session is created."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692864809858,
        "lastModifiedTime": 1692864809858,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "userIdOfMatch": null,
                    "meetingTimeOut": 180
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113040,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAttendeesRegisteredSessionsWithFilter",
        "executor_version": "v1",
        "executor_display_name": "Get attendee's registered sessions with filter",
        "executor_description": "Using this API, you can get the list of sessions for which the attendee has subscribed.  You can also pass query parameters like expand, sessionFormat, showPastAndUpcoming, filterDate to filter response data.",
        "executor_category": "AttendeeSessions",
        "executor_category_group": "AttendeeSessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/user-session/registered",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "expand",
                "value": "",
                "description": "Get records accordingly values passed in expand parameter as comma separated values. For e.g TAG,TRACK,SPEAKER,currentUserRegisteredEventTicketId",
                "req": false
            },
            {
                "key": "sessionFormat",
                "value": "",
                "description": "It's value can be MAIN_STAGE, BREAKOUT_SESSION, MEET_UP, WORKSHOP, EXPO, BREAK, OTHER",
                "req": false
            },
            {
                "key": "showPastAndUpcoming",
                "value": "",
                "description": "If showPastAndUpcoming is true, it will pull all sessions otherwise only upcoming sessions will be pulled",
                "req": false
            },
            {
                "key": "filterDate",
                "value": "",
                "description": "Date format should be yyyy-MM-dd\u2019T\u2019HH:mm:ssZ, E.g 2020-06-19T00:00:00+0530, Hours and minutes should be zero",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692864572877,
        "lastModifiedTime": 1692864572877,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 1,
                    "recordsFiltered": 1,
                    "data": [
                        {
                            "sessionId": 1644,
                            "title": "To Fast",
                            "startTime": "2021/06/07 03:30",
                            "endTime": "2021/06/07 04:30",
                            "location": null,
                            "description": null,
                            "capacity": 0,
                            "status": "VISIBLE",
                            "format": "MAIN_STAGE",
                            "speakerList": [
                                {
                                    "speakerId": 757,
                                    "title": "abc",
                                    "pronouns": null,
                                    "firstName": "test",
                                    "lastName": "test",
                                    "email": "ankit.d@brilworks.com",
                                    "sessionDTO": null,
                                    "userId": 11,
                                    "imageUrl": "",
                                    "company": "abc",
                                    "bio": "<p>abc</p>",
                                    "linkedIn": "abc",
                                    "twitter": "abc",
                                    "instagram": "abc",
                                    "position": 1000,
                                    "moderator": null,
                                    "ticketTypesForSpeaker": null,
                                    "allowAttendeeAccess": false,
                                    "loggedInAtVEH": false,
                                    "showModerator": true,
                                    "deviceChecked": false,
                                    "allowOverrideDetails": false
                                }
                            ],
                            "sponsorList": [],
                            "sessionStats": {
                                "id": 1644,
                                "registeredUserCount": 0,
                                "interestedUserCount": 0,
                                "attendeeCount": 0,
                                "sessionSpeakerCount": 0
                            },
                            "registerdHolderUsers": null,
                            "currentUserRegisteredEventTicketId": [
                                null
                            ],
                            "purchaserUserRegisteredEventTicketId": null,
                            "duration": null,
                            "enableChat": true,
                            "enablePoll": true,
                            "enableQuesAndAns": true,
                            "hideSessionFromAttendees": false,
                            "tags": [],
                            "tracks": [],
                            "ticketTypesThatCanBeRegistered": [
                                1030,
                                960
                            ],
                            "streamProvider": "ACCELEVENTS",
                            "subStreamProvider": "OPENTOK",
                            "streamUrl": "kUv71U02cOCGqT4DVSzUU3XuxrT02eMU8bhWKCJ6uh81M",
                            "streamKey": "181e2bbd-40a5-fd36-cd60-5cb24577bd26",
                            "rtmpUrl": "rtmp://live.mux.com/app",
                            "accelEventsStudio": true,
                            "directVideoAutoStart": false,
                            "assetList": null,
                            "displayDonation": false,
                            "closedCaptionUrl": null,
                            "closedCaptionHeight": 150,
                            "meetingPassword": null,
                            "documentKeyValue": [
                                {
                                    "key": "5dae86d2-ee61-4d28-8698-8b27604b123c_D0151038902545815742808643SCHEDULESC.pdf",
                                    "value": "D0151038902545815742808643SCHEDULESC.pdf"
                                }
                            ],
                            "linkKeyValue": [
                                {
                                    "key": "dfdf",
                                    "value": "dd"
                                }
                            ],
                            "sessionVisibilityType": "PUBLIC",
                            "subTitleFileUrl": null,
                            "hideVideoControls": false,
                            "recordSession": true,
                            "position": 1000,
                            "allowedMinutesToJoinLate": 0,
                            "enableAttendeeList": true,
                            "playBackRestrictionToken": null,
                            "thumbnailRestrictionToken": null,
                            "postSessionCallToActionJson": {
                                "enablePostSessionCallToAction": false,
                                "destinationType": null,
                                "description": null,
                                "buttonLabelText": null,
                                "destination": null
                            },
                            "chimeConfig": null,
                            "qnAPrivate": true
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113142,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSessionDetail",
        "executor_version": "v1",
        "executor_display_name": "Get Session Detail",
        "executor_description": "This API will return all session detail.  Will need to pass id as a path parameter. Only authorized users can use this API and require the event admin, event staff, and super admin access.",
        "executor_category": "Sessions",
        "executor_category_group": "Sessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/session/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique Session Id Of Event For getting session details by session id"
            }
        ],
        "queryParams": [
            {
                "key": "expand",
                "value": "",
                "description": "Get records accordingly we are passing in request param in expand value as comma separated like : TAG,TRACK,SPEAKER,currentUser,STATS and sessionSpeakerCount",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692938753298,
        "lastModifiedTime": 1692938753298,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "sessionId": 10966,
                    "title": "SessionCOPY1COPY1",
                    "startTime": "2021/08/18 12:00",
                    "endTime": "2021/08/18 17:00",
                    "location": null,
                    "description": "<br><span class=\"fr-video fr-deletable fr-fvc fr-dvb fr-draggable\" contenteditable=\"false\" draggable=\"true\"><iframe width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/WTJSt4wP2ME?&amp;list=RDWTJSt4wP2ME&amp;start_radio=1&amp;wmode=opaque&amp;rel=0\" frameborder=\"0\" allowfullscreen=\"\" class=\"fr-draggable\"></iframe></span><img src=\"https://res.cloudinary.com/devaccel/image/fetch/https://accelevents-dev-public-images.s3.amazonaws.com/b226ca59-a959-4f23-83ee-cb0c23d3d5b3_xZX.jpeg\" style=\"width: 300px;\" class=\"fr-fil fr-dii\"><br><br><br><br><br><br><br><br><br><br><span style=\"color: rgb(77, 81, 86); font-family: arial, sans-serif; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;\">Description is the pattern of narrative development that aims to make vivid a place, object, character, or group. Description is one of four rhetorical modes, along with exposition, argumentation, and narration. In practice it would be difficult to write literature that drew on just one of the four basic modes</span>",
                    "capacity": 0,
                    "status": "VISIBLE",
                    "format": "MAIN_STAGE",
                    "speakerList": [
                        {
                            "speakerId": 1801,
                            "title": null,
                            "pronouns": null,
                            "firstName": "aalok2",
                            "lastName": "mistry",
                            "email": "aalok.m+2@brilworks.com",
                            "sessionDTO": null,
                            "userId": 10,
                            "imageUrl": "96977302-002f-4ef9-8b39-1a570988eaec",
                            "company": null,
                            "bio": null,
                            "linkedIn": null,
                            "twitter": null,
                            "instagram": null,
                            "position": 9000,
                            "moderator": false,
                            "ticketTypesForSpeaker": null,
                            "loggedInAtVEH": false,
                            "showModerator": true,
                            "deviceChecked": false,
                            "allowAttendeeAccess": true,
                            "allowOverrideDetails": false
                        }
                    ],
                    "sponsorList": null,
                    "sessionStats": {
                        "id": null,
                        "registeredUserCount": 0,
                        "interestedUserCount": 0,
                        "attendeeCount": 0,
                        "sessionSpeakerCount": 0
                    },
                    "registerdHolderUsers": [],
                    "currentUserRegisteredEventTicketId": null,
                    "purchaserUserRegisteredEventTicketId": null,
                    "duration": null,
                    "chatEnabled": true,
                    "pollEnabled": true,
                    "quesAndAnsEnabled": true,
                    "hideSessionFromAttendees": true,
                    "tags": [
                        {
                            "id": 237,
                            "name": "tag",
                            "color": null,
                            "description": null,
                            "position": 1000
                        }
                    ],
                    "tracks": [],
                    "ticketTypesThatCanBeRegistered": [],
                    "streamProvider": "ACCELEVENTS",
                    "subStreamProvider": "OPENTOK",
                    "streamUrl": "4cZh501pUrPTrOMw46G02aoXtWlkK24DpuJxvA00YYml02I",
                    "streamKey": "165f75ce-df4a-223f-b484-20fb657b9a85",
                    "rtmpUrl": "rtmp://live.mux.com/app",
                    "accelEventsStudio": true,
                    "directVideoAutoStart": false,
                    "assetList": [],
                    "displayDonation": false,
                    "closedCaptionUrl": "",
                    "closedCaptionHeight": 150,
                    "meetingPassword": null,
                    "documentKeyValue": [
                        {
                            "key": "a2e25185-ade9-42c2-b281-a7bb8c78413f_ticketpdf78816.pdf",
                            "value": "ticketpdf78816.pdf"
                        },
                        {
                            "key": "b21dad3a-59d0-4abd-bfa9-80067dbcb10d_orderpdf20192.pdf",
                            "value": "orderpdf20192.pdf"
                        }
                    ],
                    "linkKeyValue": [],
                    "sessionVisibilityType": "PUBLIC",
                    "subTitleFileUrl": null,
                    "hideVideoControls": false,
                    "recordSession": true,
                    "position": 1000,
                    "allowedMinutesToJoinLate": 0,
                    "enableAttendeeList": true,
                    "playBackRestrictionToken": "eyJraWQiOiJNSEJvMXhaR09PUGlHUTJ4Y3AwMjFOOXNVVnkzcTVURFBnNUN3Sk1McTAyQlUiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0Y1poNTAxcFVyUFRyT013NDZHMDJhb1h0V2xrSzI0RHB1Snh2QTAwWVltbDAySSIsImF1ZCI6InYiLCJwbGF5YmFja19yZXN0cmljdGlvbl9pZCI6IjZrT3RTY1lxTzAyYUxuY2ZLckl6NWJadVUwMXdzeEJYOUQzZnZlNnpwWElHYyIsImV4cCI6MTg1OTE4NzEyMX0.Q63WI7OnAlsh90QVLFtxJfEkp16En9us7qWBgpPkx2nSNGJg3I2EqzfHp5x1hvuEaAnvo5S0QD-q8R9k7m3x0XcOtqurLmTpbI4eekuG6_kQwvtRUpDgDPx-xB05oBO-X3FJ9f6IhiSQJYSbokXZ-4dv7aOPBBLtEx8CFPJ0aSNIAp-W6VJQAv_XfQ4LpM6w_wFxXm-5JaMOjLkE9mLkgrmENmCFRSN-LH_p6kHotQGGbce1wtVxiMP-UXlLBz26Rs2-DOaFbrIbVS_moJ37KrAXE3goZz2uHFPHrPeoYstBUIXLWTvKLw3ZReG3K9nO_IQ_vSoNduq4PcTsfJzfDg",
                    "thumbnailRestrictionToken": "eyJraWQiOiJNSEJvMXhaR09PUGlHUTJ4Y3AwMjFOOXNVVnkzcTVURFBnNUN3Sk1McTAyQlUiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0Y1poNTAxcFVyUFRyT013NDZHMDJhb1h0V2xrSzI0RHB1Snh2QTAwWVltbDAySSIsImF1ZCI6InQiLCJwbGF5YmFja19yZXN0cmljdGlvbl9pZCI6IjZrT3RTY1lxTzAyYUxuY2ZLckl6NWJadVUwMXdzeEJYOUQzZnZlNnpwWElHYyIsImV4cCI6MTg1OTE4NzEyMX0.oQ3qR59N4vpM4gpl1FoMaIC9gmo7W4Ij-H6NpC7ol-khS1N0CHgzzcqe8jlS1xgKwgsKj0yuu92Cf6vbsPv15m5GnXTrtKFeUlCShYUrjf9n2GStvpflgJRowA9-CoEObQ8KsyZykwCmsR4poIqZP1QFu9MAQDuzFjKbo6Q8yvcFW5uC-5r9bbWPDWxAtRXNZZjU51WzgZV_Xr-v9g4HCkksmAYl9vLyHpcD95Ded4UF1jmPqnYvAwOnTvPYcnx2_S6fKxcy7rfOBer8kRkg7Zsv6kyOr5P0EDlVTc9cC5vzUhT3JKeY7J_F0J1qFApRPwRWg99x_EsNNvTlHPnxIg",
                    "postSessionCallToActionJson": {
                        "enablePostSessionCallToAction": false,
                        "destinationType": null,
                        "description": null,
                        "buttonLabelText": null,
                        "destination": null
                    },
                    "chimeConfig": null,
                    "qnAPrivate": true
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113158,
        "executor_type": "THIRDPARTY",
        "executor_name": "removeRecordedVideoForSession",
        "executor_version": "v1",
        "executor_display_name": "Remove recorded video for session",
        "executor_description": "Using this API, you can remove recorded video assets for a particular session.  You need to pass playbackId of the session as path parameters.  This API can be used by authenticated users only, and it will require super admin/event admin/event staff level access.",
        "executor_category": "Sessions",
        "executor_category_group": "Sessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/session/recordedSessionVideo/{playbackId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "playbackId",
                "value": "",
                "description": "Session Playback Id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692940176383,
        "lastModifiedTime": 1692940176383,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Success",
                    "type": "Success"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113181,
        "executor_type": "THIRDPARTY",
        "executor_name": "sessionMassOperation",
        "executor_version": "v1",
        "executor_display_name": "Session mass operation",
        "executor_description": "Using this API, you can execute a mass operation for sessions. You can delete, duplicate, or hide multiple sessions within a single API call.  You need to send session ids as comma-separated values as sessionids within the body parameter. Also, You need to send enumSessionMassOperation as a query parameter  Following are the different values that can be set for enumSessionMassOperation: DELETE \u2013 Delete session with session speakers. DUPLICATE \u2013 Duplicate session with their details. HIDE \u2013 Hide session, so it will hide from session from the display and portal side.",
        "executor_category": "Sessions",
        "executor_category_group": "Sessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/session/massOperation",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "enumSessionMassOperation",
                "value": "",
                "description": "Pass operation want to perform for session",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "sessionIds": [
                    0
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692941969715,
        "lastModifiedTime": 1692941969715,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113150,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateAssetsDetailsForDirectUploadStreamProvider",
        "executor_version": "v1",
        "executor_display_name": "Update assets details for direct upload stream provider",
        "executor_description": "For direct upload session/exhibitor/lobby, first, you need to create direct upload assets on MUX. To do this you need to call this (API)[https://developer.accelevents.com/reference/create-upload-video-url-for-session] which will prepare direct upload assets on MUX and will return directUploadId and directUploadUrl in response.  In the next step, you need to video directUploadUrl so it will update MUX assets and assetId will be generated on MUX. We need to get this information back in our system for streaming. To get this information we need to call this API.",
        "executor_category": "Sessions",
        "executor_category_group": "Sessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/session/{id}/directUpload",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "id is unique identifier for your session."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "uploadDto": {
                    "eventURL": "string",
                    "uploadId": "string",
                    "videoDuration": 0
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692939514991,
        "lastModifiedTime": 1692939514991,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113145,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateSessions",
        "executor_version": "v1",
        "executor_display_name": "Update Session",
        "executor_description": "Using this API, you can update session details.  You need to identify session id and send it as id path parameter.  We recommend sending at least title, startTime, ticketTypesThatCanBeRegistered, format, and endTime fields in the request body to create a session. Apart from that, you can also send other attributes related to the session defined in body parameters.  Using sessionVisibilityType you can set the session as private/public.  If the session is set as private then it will be only visible to attendees who are pre-registered by the event admin. For all other attendees, the session will be hidden.  You can not set sessions as private for the In-person event and also for the hybrid event type, you can not set the session as private for the In-person ticket.  Only authorized users can use this API and need the event admin, event staff, and super admin.",
        "executor_category": "Sessions",
        "executor_category_group": "Sessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/session/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "For getting particular session need to pass event session id for getting particular session"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "title": "string",
                "accelEventsStudio": true,
                "allowedMinutesToJoinLate": 0,
                "assetList": {
                    "id": 0,
                    "assetId": 0,
                    "createdAt": "2023-08-22",
                    "createdBy": 0,
                    "defaultPlayback": true,
                    "duration": 0,
                    "fileName": "string",
                    "playBackId": 0
                },
                "capacity": 0,
                "chimeConfig": {
                    "disableAttendeesCameraOnEntry": true,
                    "muteAttendeesOnEntry": true
                },
                "closedCaptionHeight": 0,
                "closedCaptionUrl": "string",
                "currentUserRegisteredEventTicketId": [
                    0
                ],
                "description": "string",
                "directVideoAutoStart": true,
                "displayDonation": true,
                "documentKeyValue": "string",
                "duration": 0,
                "enableChat": true,
                "enablePoll": true,
                "enableQuesAndAns": true,
                "endTime": "2023-08-22",
                "format": "MAIN_STAGE",
                "hideSessionFromAttendees": true,
                "hideVideoControls": true,
                "linkKeyValue": {
                    "key": "string",
                    "value": "string"
                },
                "location": "string",
                "meetingPassword": "string",
                "position": 0,
                "purchaserUserRegisteredEventTicketId": [
                    0
                ],
                "qnAPrivate": true,
                "recordSession": true,
                "registerdHolderUsers": {
                    "attended": true,
                    "email": "string",
                    "engagement": "string",
                    "eventTicketId": 0,
                    "firstName": "string",
                    "lastName": "string",
                    "phoneNumber": 0,
                    "registrationDate": "2023-08-22"
                },
                "rtmpUrl": "string",
                "sessionId": 0,
                "sessionStats": {
                    "attendeeCount": 0,
                    "id": 0,
                    "interestedUserCount": 0,
                    "registeredUserCount": 0,
                    "sessionSpeakerCount": 0
                },
                "sessionVisibilityType": "PUBLIC",
                "startTime": "2023-08-22",
                "status": "VISIBLE",
                "streamKey": "string",
                "streamProvider": "NULL",
                "streamUrl": "string",
                "subStreamProvider": "VOXEET",
                "subTitleFileUrl": "string",
                "postSessionCallToActionJson": "string",
                "": "string",
                "ticketTypesThatCanBeRegistered": [
                    0
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692938961909,
        "lastModifiedTime": 1692938961909,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113153,
        "executor_type": "THIRDPARTY",
        "executor_name": "uploadCaption",
        "executor_version": "v1",
        "executor_display_name": "Upload caption or subtitle file",
        "executor_description": "Remove the caption file for a particular session by playbackId.  User need to pass id and playbackId as path parameters.  This API can be used by authenticated users only, and it will require super admin/event admin/event staff level access.",
        "executor_category": "Sessions",
        "executor_category_group": "Sessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/session/{id}/removeCaptionFile/{playbackId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique session ID"
            },
            {
                "key": "playbackId",
                "value": "",
                "description": "The live stream's playback ID."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692939700320,
        "lastModifiedTime": 1692939700320,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113146,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteSession",
        "executor_version": "v1",
        "executor_display_name": "Delete session",
        "executor_description": "Using this API, you can delete session which delete session which delete like session speaker, session details, session stream channel etc, and you can not delete live session.  You need to identify the session id which you want to delete and pass it as a path parameter in the API.  This API can be used by authenticated users only, and it will require super admin/admin/staff level access.",
        "executor_category": "Sessions",
        "executor_category_group": "Sessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/session/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "For getting particular session need to pass event session id for getting particular session"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692939028223,
        "lastModifiedTime": 1692939028223,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113141,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSessionsList",
        "executor_version": "v1",
        "executor_display_name": "Get Sessions List",
        "executor_description": "This API will return a list of sessions for a particular event.  eventId is the required query parameter. Apart from that, you can pass searchString, page, size, isFromBillingPage, and expand as query parameters.",
        "executor_category": "Sessions",
        "executor_category_group": "Sessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/session",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "searchString",
                "value": "",
                "description": "Get filter session records according to search value passing in request",
                "req": false
            },
            {
                "key": "eventId",
                "value": "",
                "description": "Unique event Id used to get session related to event.",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Size will returns number of records when call api default will returns 10 records",
                "req": false
            },
            {
                "key": "expand",
                "value": "",
                "description": "Expands Get Records accordingly we are passing in request param in expand value as comma separated like : TAG,TRACK,SPEAKER,currentUserRegisteredEventTicketId",
                "req": false
            },
            {
                "key": "isFromBillingPage",
                "value": "",
                "description": "Used billing page analytics for counting session which not include [BREAK, OTHER, EXPO]",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692938654049,
        "lastModifiedTime": 1692938654049,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 2,
                    "recordsFiltered": 2,
                    "data": [
                        {
                            "sessionId": 11683,
                            "title": "Directt",
                            "startTime": "2021/12/22 16:25",
                            "endTime": "2021/12/22 17:25",
                            "location": null,
                            "description": null,
                            "capacity": 0,
                            "status": "VISIBLE",
                            "format": "BREAKOUT_SESSION",
                            "speakerList": null,
                            "sponsorList": [],
                            "sessionStats": {
                                "id": 11683,
                                "registeredUserCount": 0,
                                "interestedUserCount": 0,
                                "attendeeCount": 0,
                                "sessionSpeakerCount": 0
                            },
                            "registerdHolderUsers": null,
                            "currentUserRegisteredEventTicketId": null,
                            "purchaserUserRegisteredEventTicketId": null,
                            "duration": null,
                            "enableChat": true,
                            "enablePoll": true,
                            "enableQuesAndAns": true,
                            "hideSessionFromAttendees": false,
                            "tags": [],
                            "tracks": [],
                            "ticketTypesThatCanBeRegistered": [
                                1323,
                                41,
                                1772
                            ],
                            "streamProvider": "DIRECT_UPLOAD",
                            "subStreamProvider": null,
                            "streamUrl": "9IHUDSX023IozTLhuitET00hypQe3CdgIEixJv4C02m5KM",
                            "streamKey": null,
                            "rtmpUrl": null,
                            "accelEventsStudio": false,
                            "directVideoAutoStart": false,
                            "assetList": null,
                            "displayDonation": false,
                            "closedCaptionUrl": null,
                            "closedCaptionHeight": 150,
                            "meetingPassword": null,
                            "documentKeyValue": [],
                            "linkKeyValue": [],
                            "sessionVisibilityType": "PUBLIC",
                            "subTitleFileUrl": "",
                            "hideVideoControls": false,
                            "recordSession": true,
                            "position": 1000,
                            "allowedMinutesToJoinLate": 0,
                            "enableAttendeeList": true,
                            "playBackRestrictionToken": "eyJraWQiOiJNSEJvMXhaR09PUGlHUTJ4Y3AwMjFOOXNVVnkzcTVURFBnNUN3Sk1McTAyQlUiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI5SUhVRFNYMDIzSW96VExodWl0RVQwMGh5cFFlM0NkZ0lFaXhKdjRDMDJtNUtNIiwiYXVkIjoidiIsInBsYXliYWNrX3Jlc3RyaWN0aW9uX2lkIjoiNmtPdFNjWXFPMDJhTG5jZktySXo1Ylp1VTAxd3N4Qlg5RDNmdmU2enBYSUdjIiwiZXhwIjoxODYwODIwMTIwfQ.bVlJmFttSzm7B1AyISHFFtrg5lytLCIJbNS1JGauuKlUXMS1_6HZZ7GKcmYtlCLaATV2mAiquRn6JMwuS_J73XajW7D-8EOwDBbMzXfVuXcyTU-7IaLgOzULPWOLfIJKF62PDTStROXSHCvUYwKaxbDOhuyUtswlAgE7Ir7TSXx-MVrvfVwYefi-70qtRCWOLhT0_sWPVw-zrH7FwZAI2HeymwskHJaz0nLjRUetbI3-prQczWZXNbDqgyGYmfmdHgqXjU2VWOz9kGfHeUQT-06tprNf5MPCYQ1n6ZHt0olJS8Q9Rki9vrXUnsFXaw0z5-T22MtGImwx07golT1slQ",
                            "thumbnailRestrictionToken": null,
                            "postSessionCallToActionJson": {
                                "enablePostSessionCallToAction": false,
                                "destinationType": null,
                                "description": null,
                                "buttonLabelText": null,
                                "destination": null
                            },
                            "chimeConfig": null,
                            "qnAPrivate": true
                        },
                        {
                            "sessionId": 11741,
                            "title": "DirecttCOPY1",
                            "startTime": "2021/12/22 16:25",
                            "endTime": "2021/12/22 17:25",
                            "location": null,
                            "description": null,
                            "capacity": 0,
                            "status": "VISIBLE",
                            "format": "BREAKOUT_SESSION",
                            "speakerList": null,
                            "sponsorList": [],
                            "sessionStats": {
                                "id": 11741,
                                "registeredUserCount": 0,
                                "interestedUserCount": 0,
                                "attendeeCount": 0,
                                "sessionSpeakerCount": 0
                            },
                            "registerdHolderUsers": null,
                            "currentUserRegisteredEventTicketId": null,
                            "purchaserUserRegisteredEventTicketId": null,
                            "duration": null,
                            "enableChat": true,
                            "enablePoll": true,
                            "enableQuesAndAns": true,
                            "hideSessionFromAttendees": false,
                            "tags": [],
                            "tracks": [],
                            "ticketTypesThatCanBeRegistered": [
                                1323,
                                41,
                                1772
                            ],
                            "streamProvider": "DIRECT_UPLOAD",
                            "subStreamProvider": null,
                            "streamUrl": null,
                            "streamKey": null,
                            "rtmpUrl": null,
                            "accelEventsStudio": false,
                            "directVideoAutoStart": false,
                            "assetList": null,
                            "displayDonation": false,
                            "closedCaptionUrl": null,
                            "closedCaptionHeight": 150,
                            "meetingPassword": null,
                            "documentKeyValue": [],
                            "linkKeyValue": [],
                            "sessionVisibilityType": "PUBLIC",
                            "subTitleFileUrl": "",
                            "hideVideoControls": false,
                            "recordSession": true,
                            "position": 1000,
                            "allowedMinutesToJoinLate": 0,
                            "enableAttendeeList": true,
                            "playBackRestrictionToken": null,
                            "thumbnailRestrictionToken": null,
                            "postSessionCallToActionJson": {
                                "enablePostSessionCallToAction": false,
                                "destinationType": null,
                                "description": null,
                                "buttonLabelText": null,
                                "destination": null
                            },
                            "chimeConfig": null,
                            "qnAPrivate": true
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113182,
        "executor_type": "THIRDPARTY",
        "executor_name": "rescheduleSessionPushNotification",
        "executor_version": "v1",
        "executor_display_name": "Create/reschedule a session push notification",
        "executor_description": "Create or reschedule session push notifications, which will be sent to the users who have registered for the session.  You need to pass id as a path parameter and will create a new push notification for the session, or it will update the existing data of push notification.  This API can be used by authenticated users only, and it will require super admin/event admin/event staff/attendee access.",
        "executor_category": "Sessions",
        "executor_category_group": "Sessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/session/createOrRescheduleSessionPushNotification/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique session id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "text/plain",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in Text format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692942116763,
        "lastModifiedTime": 1692942116763,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "OK"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Unauthorized"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Forbidden"
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Forbidden"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113143,
        "executor_type": "THIRDPARTY",
        "executor_name": "createsessions",
        "executor_version": "v1",
        "executor_display_name": "Create Session",
        "executor_description": "Using this API you can create a session for the event.  We recommend sending at least title, startTime, and endTime fields in the request body to create a session. Apart from that, you can also send other attributes related to the session defined in body parameters.  Using sessionVisibilityType you can set the session as private/public.  If the session is set as private then it will be only visible to attendees who are pre-registered by the event admin. For all other attendees, the session will be hidden.  You can not set sessions as private for the In-person event and also for the hybrid event type, you can not set the session as private for the In-person ticket.  Only authorized users can use this API and need the event admin, event staff, and super admin.",
        "executor_category": "Sessions",
        "executor_category_group": "Sessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/session",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "title": "string",
                "accelEventsStudio": true,
                "allowedMinutesToJoinLate": 0,
                "assetList": {
                    "id": 0,
                    "assetId": 0,
                    "createdAt": "2023-08-22",
                    "createdBy": 0,
                    "defaultPlayback": true,
                    "duration": 0,
                    "fileName": "string",
                    "playBackId": 0
                },
                "capacity": 0,
                "chimeConfig": {
                    "disableAttendeesCameraOnEntry": true,
                    "muteAttendeesOnEntry": true
                },
                "closedCaptionHeight": 0,
                "closedCaptionUrl": "string",
                "currentUserRegisteredEventTicketId": [
                    0
                ],
                "description": "string",
                "directVideoAutoStart": true,
                "displayDonation": true,
                "documentKeyValue": "string",
                "duration": 0,
                "enableChat": true,
                "enablePoll": true,
                "enableQuesAndAns": true,
                "endTime": "2023-08-22",
                "format": "MAIN_STAGE",
                "hideSessionFromAttendees": true,
                "hideVideoControls": true,
                "linkKeyValue": {
                    "key": "string",
                    "value": "string"
                },
                "location": "string",
                "meetingPassword": "string",
                "position": 0,
                "purchaserUserRegisteredEventTicketId": [
                    0
                ],
                "qnAPrivate": true,
                "recordSession": true,
                "registerdHolderUsers": {
                    "attended": true,
                    "email": "string",
                    "engagement": "string",
                    "eventTicketId": 0,
                    "firstName": "string",
                    "lastName": "string",
                    "phoneNumber": 0,
                    "registrationDate": "2023-08-22"
                },
                "rtmpUrl": "string",
                "sessionId": 0,
                "sessionStats": {
                    "attendeeCount": 0,
                    "id": 0,
                    "interestedUserCount": 0,
                    "registeredUserCount": 0,
                    "sessionSpeakerCount": 0
                },
                "sessionVisibilityType": "PUBLIC",
                "startTime": "2023-08-22",
                "status": "VISIBLE",
                "streamKey": "string",
                "streamProvider": "NULL",
                "streamUrl": "string",
                "subStreamProvider": "VOXEET",
                "subTitleFileUrl": "string",
                "postSessionCallToActionJson": "string",
                "": "string",
                "ticketTypesThatCanBeRegistered": [
                    0
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692938851231,
        "lastModifiedTime": 1692938851231,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": 3115
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113156,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadSessionsCsv",
        "executor_version": "v1",
        "executor_display_name": "Download sessions CSV",
        "executor_description": "Using this API, you can download CSV for all sessions with their details. CSV includes details like Title, Format, Start Date, etc.  This API can be used by authenticated users only, and it will require super admin/event admin/event staff level access.",
        "executor_category": "Sessions",
        "executor_category_group": "Sessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/session/download/session-list/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692939970635,
        "lastModifiedTime": 1692939970635,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113166,
        "executor_type": "THIRDPARTY",
        "executor_name": "registerAttendeeToSession",
        "executor_version": "v1",
        "executor_display_name": "Register attendee to session",
        "executor_description": "Using this API, you can register a particular attendee to the session.  You need to send userSessionDTO containing fileds like eventId, userId, sessionId and join as request body parameter.  This API can be used by authenticated users only, and it will require super admin/event admin/event staff level access.",
        "executor_category": "Sessions",
        "executor_category_group": "Sessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/session/register/user",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "userSessionDTO": {
                    "eventId": 0,
                    "userId": 0,
                    "sessionId": 0,
                    "join": true
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692940373589,
        "lastModifiedTime": 1692940373589,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113149,
        "executor_type": "THIRDPARTY",
        "executor_name": "setDefaultPlaybackForSessionStreamingRecording",
        "executor_version": "v1",
        "executor_display_name": "Set default playback for session streaming/recording",
        "executor_description": "Set the session default playback once the streaming ended.  Using this API, you can set default playback session for live-streaming or broadcasting by playbackId. You can not set default playback before session endTime else it will throw error Can not set default playback for active session.",
        "executor_category": "Sessions",
        "executor_category_group": "Sessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/session/{id}/default-playback/{playbackId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "For getting perticular session need to pass event session id for getting perticular sessionFor getting particular session need to pass event session id for getting particular session"
            },
            {
                "key": "playbackId",
                "value": "",
                "description": "session default playback id."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692939244108,
        "lastModifiedTime": 1692939244108,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Success",
                    "type": "Success"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113155,
        "executor_type": "THIRDPARTY",
        "executor_name": "showHideSession",
        "executor_version": "v1",
        "executor_display_name": "Show/hide session",
        "executor_description": "Using this API, you can make sessions visible or hidden. If the session is hidden then it won't be listed in (display API)[https://developer.accelevents.com/reference/get-all-sessions] & (portal API)[https://developer.accelevents.com/reference/get-all-sessions-for-display-and-portal-page]  You need to send session-id as id and isVisible as path parameters. If you want to hide a particular session then you need to pass isVisible as true other wise it will be false.",
        "executor_category": "Sessions",
        "executor_category_group": "Sessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/session/{id}/visible/{isVisible}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "For getting particular session need to pass event session id for getting particular session"
            },
            {
                "key": "isVisible",
                "value": "",
                "description": "set session visibility"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692939890882,
        "lastModifiedTime": 1692939890882,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113180,
        "executor_type": "THIRDPARTY",
        "executor_name": "sortSessionPositionByTitle",
        "executor_version": "v1",
        "executor_display_name": "Sort session position by title",
        "executor_description": "You can use this API to get sessions' lists in sorted order by their title.  For sorting order ascending/descending, you need to send sortType ASC / DESC in the path parameter.",
        "executor_category": "Sessions",
        "executor_category_group": "Sessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/session/sortSessionPositionByTitle/{eventId}/{sortType}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "eventId",
                "value": "",
                "description": "Unique event Id used to get session related to event."
            },
            {
                "key": "sortType",
                "value": "",
                "description": "Pass ASC or DESC for sort session by title"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692941862622,
        "lastModifiedTime": 1692941862622,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Success",
                    "type": "Sessions sorted successfully ..."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113154,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateSessionPosition",
        "executor_version": "v1",
        "executor_display_name": "Update session position",
        "executor_description": "This API can be used to update session position by session ID. The first-time session default position will be 1000.  We are positioning the session to the top of the list, topSessionId will be passed as 0.  We are positioning the session at the bottom of the list that time we need to pass topBottomSessionId as 0.  If we are putting the session in between some sessions, then we need to pass id of the top session as topSessionId and id of the bottom session as topBottomSessionId where we want to put that session.  This API can be used by authenticated user only, and it will require super admin /event admin /event staff level access. User need to pass id, topSessionId and topBottomSessionId as path parameters.",
        "executor_category": "Sessions",
        "executor_category_group": "Sessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/session/{id}/topSession/{topSessionId}/topBottomSession/{topBottomSessionId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "For getting particular session need to pass event session id for getting particular session"
            },
            {
                "key": "topSessionId",
                "value": "",
                "description": "In Asc order first top session ID."
            },
            {
                "key": "topBottomSessionId",
                "value": "",
                "description": "In DESC order first top session ID."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692939803914,
        "lastModifiedTime": 1692939803914,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Success",
                    "type": "Session position changed successfully ..."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113165,
        "executor_type": "THIRDPARTY",
        "executor_name": "createBulkAttendeeUsingCsv",
        "executor_version": "v1",
        "executor_display_name": "Create bulk attendee using CSV",
        "executor_description": "Using this API, you can register multiple attendees for a session by uploading the CSV files. You can find out sample CSV file on this link  You need to pass sessionId as a path parameter.  This API can be used by authenticated users only, and it will require super admin/event admin/event staff level access.",
        "executor_category": "Sessions",
        "executor_category_group": "Sessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/session/register/upload/user/{sessionId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "sessionId",
                "value": "",
                "description": "Unique session ID"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "attendeeFile": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692940294363,
        "lastModifiedTime": 1692940294363,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "invalidAttendees": [
                        "string"
                    ],
                    "message": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113147,
        "executor_type": "THIRDPARTY",
        "executor_name": "getdefaultPlaybackForSessionStreamingRecording",
        "executor_version": "v1",
        "executor_display_name": "Get default playback for session streaming/recording",
        "executor_description": "Get default playback details for the session associated with the event.  Using this API you can get playback details like playBackId, assetId, playBackRestrictionToken, thumbnailRestrictionToken, duration for streaming/recording any session.  To call this API, you need to pass eventurl and id as path parameters.  This API can be used by authenticated users only, and it will require super admin/event admin/event staff level access.",
        "executor_category": "Sessions",
        "executor_category_group": "Sessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/session/{id}/default-playback",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "For getting particular session need to pass event session id for getting particular session"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692939142487,
        "lastModifiedTime": 1692939142487,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "assetId": "vPkpx2cuJlOazlCf022VUqqZC00DsHg7ckTGGAPrhrBA00",
                    "createdAt": "2021-06-28T14:55:25.052Z",
                    "createdBy": 33932,
                    "defaultPlayback": false,
                    "duration": 10.143467,
                    "fileName": "high.mp4",
                    "id": 5226,
                    "playBackId": "jAf8hjf4D01SSXB3JVSUbpXPSs9T01emOkowI95HdBtOM",
                    "playBackRestrictionToken": "eyJraWQiOiJNSEJvMXhaR09PUGlHUTJ4Y3AwMjFOOXNVVnkzcTVURFBnNUN3Sk1McTAyQlUiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0Y1poNTAxcFVyUFRyT013NDZHMDJhb1h0V2xrSzI0RHB1Snh2QTAwWVltbDAySSIsImF1ZCI6InQiLCJwbGF5YmFja19yZXN0cmljdGlvbl9pZCI6IjZrT3RTY1lxTzAyYUxuY2ZLckl6NWJadVUwMXdzeEJYOUQzZnZlNnpwWElHYyIsImV4cCI6MTg1OTE4NzEyMX0.oQ3qR59N4vpM4gpl1FoMaIC9gmo7W4Ij-H6NpC7ol-khS1N0CHgzzcqe8jlS1xgKwgsKj0yuu92Cf6vbsPv15m5GnXTrtKFeUlCShYUrjf9n2GStvpflgJRowA9-CoEObQ8KsyZykwCmsR4poIqZP1QFu9MAQDuzFjKbo6Q8yvcFW5uC-5r9bbWPDWxAtRXNZZjU51WzgZV_Xr-v9g4HCkksmAYl9vLyHpcD95Ded4UF1jmPqnYvAwOnTvPYcnx2_S6fKxcy7rfOBer8kRkg7Zsv6kyOr5P0EDlVTc9cC5vzUhT3JKeY7J_F0J1qFApRPwRWg99x_EsNNvTlHPnxIg",
                    "signed": true,
                    "thumbnailRestrictionToken": "eyJraWQiOiJNSEJvMXhaR09PUGlHUTJ4Y3AwMjFOOXNVVnkzcTVURFBnNUN3Sk1McTAyQlUiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0Y1poNTAxcFVyUFRyT013NDZHMDJhb1h0V2xrSzI0RHB1Snh2QTAwWVltbDAySSIsImF1ZCI6InQiLCJwbGF5YmFja19yZXN0cmljdGlvbl9pZCI6IjZrT3RTY1lxTzAyYUxuY2ZLckl6NWJadVUwMXdzeEJYOUQzZnZlNnpwWElHYyIsImV4cCI6MTg1OTE4NzEyMX0.oQ3qR59N4vpM4gpl1FoMaIC9gmo7W4Ij-H6NpC7ol-khS1N0CHgzzcqe8jlS1xgKwgsKj0yuu92Cf6vbsPv15m5GnXTrtKFeUlCShYUrjf9n2GStvpflgJRowA9-CoEObQ8KsyZykwCmsR4poIqZP1QFu9MAQDuzFjKbo6Q8yvcFW5uC-5r9bbWPDWxAtRXNZZjU51WzgZV_Xr-v9g4HCkksmAYl9vLyHpcD95Ded4UF1jmPqnYvAwOnTvPYcnx2_S6fKxcy7rfOBer8kRkg7Zsv6kyOr5P0EDlVTc9cC5vzUhT3JKeY7J_F0J1qFApRPwRWg99x_EsNNvTlHPnxIg"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113151,
        "executor_type": "THIRDPARTY",
        "executor_name": "duplicateSession",
        "executor_version": "v1",
        "executor_display_name": "Duplicate session",
        "executor_description": "You can use this API to duplicate a session. Using this API, you can create duplicate session with their details.  You need to pass id as path parameters.  This API can be used by authenticated users only, and it will require super admin/event admin/event staff level access.",
        "executor_category": "Sessions",
        "executor_category_group": "Sessions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/session/{id}/duplicate",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "For getting particular session need to pass event session id for getting particular session"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692939600288,
        "lastModifiedTime": 1692939600288,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113207,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateSpeakerPosition",
        "executor_version": "v1",
        "executor_display_name": "Update speaker position",
        "executor_description": "In this API, you can change the position of the speaker. Default position will be 1000.  In this API, you need to pass three path parameters to change a speaker position.",
        "executor_category": "Speakers",
        "executor_category_group": "Speakers",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/speaker/{id}/topSpeaker/{topSpeakerId}/topBottomSpeaker/{topBottomSpeakerId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique speaker ID"
            },
            {
                "key": "topSpeakerId",
                "value": "",
                "description": "immediate before top speaker ID who want to update speaker position."
            },
            {
                "key": "topBottomSpeakerId",
                "value": "",
                "description": "immediate after top bottom speaker ID who want to update speaker position."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692945078368,
        "lastModifiedTime": 1692945078368,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113203,
        "executor_type": "THIRDPARTY",
        "executor_name": "sendInviteToSpeaker",
        "executor_version": "v1",
        "executor_display_name": "Send invite to speaker",
        "executor_description": "Send an e-mail invitation to the speaker for a specific session.  You need to send speakers' id and sessions' id as id, sessionId , and eventUrl path parameters respectively.  This API can be used by authenticated user only, and it will require super admin, event admin, event staff level access.",
        "executor_category": "Speakers",
        "executor_category_group": "Speakers",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/speaker/{id}/session/{sessionId}/sendInvite",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique ID of speaker."
            },
            {
                "key": "sessionId",
                "value": "",
                "description": "The sessionId represents the unique ID of each session. It will be generated automatically when a new session is created."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692944852054,
        "lastModifiedTime": 1692944852054,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113196,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSpeakerDetail",
        "executor_version": "v1",
        "executor_display_name": "Get speaker detail",
        "executor_description": "Using this API, you can get speakers' details.  You need to send speakers' id as a path parameter. You can also send expand as a query parameter to get response data according to your requirement.",
        "executor_category": "Speakers",
        "executor_category_group": "Speakers",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/speaker/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique speaker ID"
            }
        ],
        "queryParams": [
            {
                "key": "expand",
                "value": "",
                "description": "Expands Get Records accordingly we are passing in request param in expand value as comma separated like : TAG,TRACK,SPEAKER,STATS,PLAYBACKS,registerdHolderUsers,CHIME-CONFIG",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692943334080,
        "lastModifiedTime": 1692943334080,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "email": "string",
                    "firstName": "string",
                    "lastName": "string",
                    "pronouns": "string",
                    "sessionDTO": [
                        {}
                    ],
                    "speakerId": 0,
                    "title": "string",
                    "userId": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113197,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateSpeaker",
        "executor_version": "v1",
        "executor_display_name": "Update speaker",
        "executor_description": "Using this API, you can update speakers' details.  You have to send the speakers' id as id (session ID) and the event URL in the path parameter. Also, you need to pass speakerDTO as the body parameter.  This API can be used by authenticated users only, and it will require super admin, event admin, and event staff level access.",
        "executor_category": "Speakers",
        "executor_category_group": "Speakers",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/speaker/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique speaker ID"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "speakerDTO": {
                    "allowAttendeeAccess": true,
                    "allowOverrideDetails": true,
                    "bio": "string",
                    "company": "string",
                    "deviceChecked": true,
                    "email": "string",
                    "firstName": "string",
                    "imageUrl": "string",
                    "instagram": "string",
                    "lastName": "string",
                    "linkedIn": true,
                    "moderator": true,
                    "position": 0,
                    "pronouns": "string",
                    "sessionDTO": {
                        "title": "string",
                        "accelEventsStudio": true,
                        "allowedMinutesToJoinLate": 0,
                        "assetList": {
                            "id": 0,
                            "assetId": 0,
                            "createdAt": "2023-08-22",
                            "createdBy": 0,
                            "defaultPlayback": true,
                            "duration": 0,
                            "fileName": "string",
                            "playBackId": 0
                        },
                        "capacity": 0,
                        "chimeConfig": {
                            "disableAttendeesCameraOnEntry": true,
                            "muteAttendeesOnEntry": true
                        },
                        "closedCaptionHeight": 0,
                        "closedCaptionUrl": "string",
                        "currentUserRegisteredEventTicketId": [
                            0
                        ],
                        "description": "string",
                        "directVideoAutoStart": true,
                        "displayDonation": true,
                        "documentKeyValue": "string",
                        "duration": 0,
                        "enableChat": true,
                        "enablePoll": true,
                        "enableQuesAndAns": true,
                        "endTime": "2023-08-22",
                        "format": "MAIN_STAGE",
                        "hideSessionFromAttendees": true,
                        "hideVideoControls": true,
                        "linkKeyValue": {
                            "key": "string",
                            "value": "string"
                        },
                        "location": "string",
                        "meetingPassword": "string",
                        "position": 0,
                        "purchaserUserRegisteredEventTicketId": [
                            0
                        ],
                        "qnAPrivate": true,
                        "recordSession": true,
                        "registerdHolderUsers": {
                            "attended": true,
                            "email": "string",
                            "engagement": "string",
                            "eventTicketId": 0,
                            "firstName": "string",
                            "lastName": "string",
                            "phoneNumber": 0,
                            "registrationDate": "2023-08-22"
                        },
                        "rtmpUrl": "string",
                        "sessionId": 0,
                        "sessionStats": {
                            "attendeeCount": 0,
                            "id": 0,
                            "interestedUserCount": 0,
                            "registeredUserCount": 0,
                            "sessionSpeakerCount": 0
                        },
                        "sessionVisibilityType": "PUBLIC",
                        "startTime": "2023-08-22",
                        "status": "VISIBLE",
                        "streamKey": "string",
                        "streamProvider": "NULL",
                        "streamUrl": "string",
                        "subStreamProvider": "VOXEET",
                        "subTitleFileUrl": "string",
                        "postSessionCallToActionJson": "string",
                        "": "string",
                        "ticketTypesThatCanBeRegistered": [
                            0
                        ]
                    },
                    "showModerator": true,
                    "speakerId": 0,
                    "ticketTypesForSpeaker": {
                        "speakerOrder": true,
                        "ticketTypeId": 0,
                        "userId": 0
                    },
                    "title": "string",
                    "twitter": "string",
                    "userId": 0
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692943414479,
        "lastModifiedTime": 1692943414479,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113194,
        "executor_type": "THIRDPARTY",
        "executor_name": "createSpeaker",
        "executor_version": "v1",
        "executor_display_name": "Create speaker",
        "executor_description": "Using this API, you can create a new speaker for a particular event.  You need to send SpeakerDTO as a request body, which contains information like firstName, lastName, email etc.  If a speaker with the same email already exists you will get the error 4068906.",
        "executor_category": "Speakers",
        "executor_category_group": "Speakers",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/speaker",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "SpeakerDTO": {
                    "allowAttendeeAccess": true,
                    "allowOverrideDetails": true,
                    "bio": "string",
                    "company": "string",
                    "deviceChecked": true,
                    "email": "string",
                    "firstName": "string",
                    "imageUrl": "string",
                    "instagram": "string",
                    "lastName": "string",
                    "linkedIn": true,
                    "moderator": true,
                    "position": 0,
                    "pronouns": "string",
                    "sessionDTO": {
                        "title": "string",
                        "accelEventsStudio": true,
                        "allowedMinutesToJoinLate": 0,
                        "assetList": {
                            "id": 0,
                            "assetId": 0,
                            "createdAt": "2023-08-22",
                            "createdBy": 0,
                            "defaultPlayback": true,
                            "duration": 0,
                            "fileName": "string",
                            "playBackId": 0
                        },
                        "capacity": 0,
                        "chimeConfig": {
                            "disableAttendeesCameraOnEntry": true,
                            "muteAttendeesOnEntry": true
                        },
                        "closedCaptionHeight": 0,
                        "closedCaptionUrl": "string",
                        "currentUserRegisteredEventTicketId": [
                            0
                        ],
                        "description": "string",
                        "directVideoAutoStart": true,
                        "displayDonation": true,
                        "documentKeyValue": "string",
                        "duration": 0,
                        "enableChat": true,
                        "enablePoll": true,
                        "enableQuesAndAns": true,
                        "endTime": "2023-08-22",
                        "format": "MAIN_STAGE",
                        "hideSessionFromAttendees": true,
                        "hideVideoControls": true,
                        "linkKeyValue": {
                            "key": "string",
                            "value": "string"
                        },
                        "location": "string",
                        "meetingPassword": "string",
                        "position": 0,
                        "purchaserUserRegisteredEventTicketId": [
                            0
                        ],
                        "qnAPrivate": true,
                        "recordSession": true,
                        "registerdHolderUsers": {
                            "attended": true,
                            "email": "string",
                            "engagement": "string",
                            "eventTicketId": 0,
                            "firstName": "string",
                            "lastName": "string",
                            "phoneNumber": 0,
                            "registrationDate": "2023-08-22"
                        },
                        "rtmpUrl": "string",
                        "sessionId": 0,
                        "sessionStats": {
                            "attendeeCount": 0,
                            "id": 0,
                            "interestedUserCount": 0,
                            "registeredUserCount": 0,
                            "sessionSpeakerCount": 0
                        },
                        "sessionVisibilityType": "PUBLIC",
                        "startTime": "2023-08-22",
                        "status": "VISIBLE",
                        "streamKey": "string",
                        "streamProvider": "NULL",
                        "streamUrl": "string",
                        "subStreamProvider": "VOXEET",
                        "subTitleFileUrl": "string",
                        "postSessionCallToActionJson": "string",
                        "": "string",
                        "ticketTypesThatCanBeRegistered": [
                            0
                        ]
                    },
                    "showModerator": true,
                    "speakerId": 0,
                    "ticketTypesForSpeaker": {
                        "speakerOrder": true,
                        "ticketTypeId": 0,
                        "userId": 0
                    },
                    "title": "string",
                    "twitter": "string",
                    "userId": 0
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692943200350,
        "lastModifiedTime": 1692943200350,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": 12
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113199,
        "executor_type": "THIRDPARTY",
        "executor_name": "grantRevokeAttendeeAccessToSpeakers",
        "executor_version": "v1",
        "executor_display_name": "Grant/Revoke attendee access to speakers",
        "executor_description": "Using this API, you can provide attendee access to speakers so they can also join the platform as an attendee.  To call this API you need to send speakers' ID as id and event URL in path parameter. Also, you need to pass isAllowAttendeeAccess as true/ false and ticketTypeIds as the comma-separated values of ticket id as string in query parameter.  For ticket IDs sent in ticketTypeIds this API will grant or revoke attendee access from the speaker for that particular tickets.  We need to pass the authentication key to authenticate users and it will require super admin, event admin, event staff level access.",
        "executor_category": "Speakers",
        "executor_category_group": "Speakers",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/speaker/{id}/assignAttendeeAccessToSpeaker",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique Speaker ID"
            }
        ],
        "queryParams": [
            {
                "key": "ticketTypeIds",
                "value": "",
                "description": "List of ticketing type IDs",
                "req": false
            },
            {
                "key": "isAllowAttendeeAccess",
                "value": "",
                "description": "Allow to attendee access to attend sessions other than their own.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692943606557,
        "lastModifiedTime": 1692943606557,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "speakerOrder": true,
                    "ticketTypeId": 0,
                    "userId": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113198,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteSpeaker",
        "executor_version": "v1",
        "executor_display_name": "Delete speaker",
        "executor_description": "Using this API, you can delete the speaker. You need to send speakers' id as id in the path parameter.  If you delete a speaker from the event then it will be removed as a speaker from all associated sessions of the event.  This API can be used by authenticated users only, and it will require super admin, event admin, event staff level access.",
        "executor_category": "Speakers",
        "executor_category_group": "Speakers",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/speaker/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique speaker ID"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692943492528,
        "lastModifiedTime": 1692943492528,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113206,
        "executor_type": "THIRDPARTY",
        "executor_name": "removeSpeakersProfilePicture",
        "executor_version": "v1",
        "executor_display_name": "Send invite to speaker",
        "executor_description": "Using this API, you can remove the speakers' profile picture.  You need to send the speakers' id as a path parameter id, event URL.",
        "executor_category": "Speakers",
        "executor_category_group": "Speakers",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/speaker/{id}/speakerProfile",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique speaker ID"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692944959463,
        "lastModifiedTime": 1692944959463,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113193,
        "executor_type": "THIRDPARTY",
        "executor_name": "getspeakersList",
        "executor_version": "v1",
        "executor_display_name": "Get speakers list",
        "executor_description": "Using this API, you can get speakers list for a particular event.  You have to send eventId as a query parameter. Apart from that, you can pass searchString, page, size & expand as query parameters for pagination & filter data.",
        "executor_category": "Speakers",
        "executor_category_group": "Speakers",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/speaker",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "searchString",
                "value": "",
                "description": "Get filter session records according to search value passing in request",
                "req": false
            },
            {
                "key": "eventId",
                "value": "",
                "description": "Unique event Id used to get speakers related to event.",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Size will returns number of records when call api default will returns 10 records",
                "req": false
            },
            {
                "key": "expand",
                "value": "",
                "description": "Expands Get Records accordingly we are passing in request param in expand value as comma separated like : TAG,TRACK,SPEAKER,currentUserRegisteredEventTicketId",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692943097810,
        "lastModifiedTime": 1692943097810,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 1,
                    "recordsFiltered": 1,
                    "data": [
                        {
                            "speakerId": 4516,
                            "title": "QA",
                            "pronouns": "Spekaer",
                            "firstName": "Test Dhara2",
                            "lastName": "L2",
                            "email": "test@url2.com",
                            "sessionDTO": null,
                            "userId": 10078,
                            "imageUrl": "",
                            "company": "Brilworks",
                            "bio": "Master in SoftwaerSystem",
                            "linkedIn": "https://www.linkedin.com/",
                            "twitter": "https://twitter.com/home?lang=en",
                            "instagram": "https://www.instagram.com/",
                            "position": 1000,
                            "moderator": null,
                            "ticketTypesForSpeaker": null,
                            "showModerator": null,
                            "deviceChecked": false,
                            "loggedInAtVEH": false,
                            "allowAttendeeAccess": null,
                            "allowOverrideDetails": false
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113222,
        "executor_type": "THIRDPARTY",
        "executor_name": "speakerBasicInfo",
        "executor_version": "v1",
        "executor_display_name": "Speaker basic info",
        "executor_description": "Using this API you can allow the speaker to use the platform as an attendee.  To grant/revoke attendee access you need to pass the isAllowAttendeeAccess as true/false respective. There are some restrictions on event/ticket type to grant attendee access to the speaker as given below:  You can give attendees access for free ticket type only. For the Hybrid event type, you can not give attendees access to the speaker for the In-person ticket.",
        "executor_category": "Speakers",
        "executor_category_group": "Speakers",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/speaker/{id}/assignAttendeeAccessToSpeaker",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "Unique speaker id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "isAllowAttendeeAccess": true,
                "ticketTypeIds": [
                    0
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692945880842,
        "lastModifiedTime": 1692945880842,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "userId": 25703,
                        "ticketTypeId": 18434,
                        "speakerOrder": true
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113220,
        "executor_type": "THIRDPARTY",
        "executor_name": "speakerSortingByColumnName",
        "executor_version": "v1",
        "executor_display_name": "Speaker sorting by column name",
        "executor_description": "You can use this API to get speakers' lists in sorted order by their attributes.  You need to send an attribute like firstName, lastName, company & title as columnName in path parameter. If columnName doesn't match any attribute then it will default sort by firstName.  For sorting order, you need to send isAscending as true/false in the path parameter.  we need to pass the authentication key to authenticate users and it will require super admin, event admin, event staff level access.",
        "executor_category": "Speakers",
        "executor_category_group": "Speakers",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/speaker/sortSpeakerBy/{columnName}/{isAscending}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "columnName",
                "value": "",
                "description": "speaker column name for sort by column ex: first name, last name etc."
            },
            {
                "key": "isAscending",
                "value": "",
                "description": "It will sort by Ascending if will pass true else Descending if false."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692945795335,
        "lastModifiedTime": 1692945795335,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 2,
                    "recordsFiltered": 2,
                    "data": [
                        {
                            "speakerId": 4550,
                            "title": "string",
                            "pronouns": "string",
                            "firstName": "string",
                            "lastName": "string",
                            "email": "string",
                            "sessionDTO": null,
                            "userId": 10338,
                            "imageUrl": "string",
                            "company": "string",
                            "bio": "string",
                            "linkedIn": "string",
                            "twitter": "string",
                            "instagram": "string",
                            "position": 1004,
                            "moderator": null,
                            "ticketTypesForSpeaker": null,
                            "deviceChecked": false,
                            "showModerator": null,
                            "loggedInAtVEH": false,
                            "allowAttendeeAccess": true,
                            "allowOverrideDetails": true
                        },
                        {
                            "speakerId": 4516,
                            "title": "QA",
                            "pronouns": "Spekaer",
                            "firstName": "Test Dhara2",
                            "lastName": "L2",
                            "email": "test@url2.com",
                            "sessionDTO": null,
                            "userId": 10078,
                            "imageUrl": "",
                            "company": "Brilworks",
                            "bio": "Master in SoftwaerSystem",
                            "linkedIn": "https://www.linkedin.com/",
                            "twitter": "https://twitter.com/home?lang=en",
                            "instagram": "https://www.instagram.com/",
                            "position": 1003,
                            "moderator": null,
                            "ticketTypesForSpeaker": null,
                            "deviceChecked": false,
                            "showModerator": null,
                            "loggedInAtVEH": false,
                            "allowAttendeeAccess": null,
                            "allowOverrideDetails": false
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113212,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllSpeakers",
        "executor_version": "v1",
        "executor_display_name": "Get all speakers",
        "executor_description": "Using this API, you can get all speakers for an event.  we need to pass authenticated key to authenticate the user and it will require super admin/event admin/event staff level access.",
        "executor_category": "Speakers",
        "executor_category_group": "Speakers",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/speaker/basicInfo",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692945343764,
        "lastModifiedTime": 1692945343764,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "email": "string",
                    "firstName": "string",
                    "lastName": "string",
                    "pronouns": "string",
                    "sessionDTO": [
                        {}
                    ],
                    "speakerId": 0,
                    "title": "string",
                    "userId": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113214,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllSpeakersWithAssociatedSessionDetails",
        "executor_version": "v1",
        "executor_display_name": "Get all speakers with associated session details",
        "executor_description": "This API allows you to retrieve all the speakers for an event along with their session details. To access this API, you will need to provide the API key. For instructions on how to obtain the API key, please visit the following link: https://developer.accelevents.com/docs/getting-started.",
        "executor_category": "Speakers",
        "executor_category_group": "Speakers",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/speaker/speakerWithSessions",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692945433656,
        "lastModifiedTime": 1692945433656,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113218,
        "executor_type": "THIRDPARTY",
        "executor_name": "sendEmailInviteToAllSpeakers",
        "executor_version": "v1",
        "executor_display_name": "Send email Invite to all speakers",
        "executor_description": "Using this API, you can send bulk invites via email to all speakers.  we need to pass the authentication key to authenticate users and it will require super admin, event admin, event staff level access.",
        "executor_category": "Speakers",
        "executor_category_group": "Speakers",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/speaker/sendInviteToAllSpeaker",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692945620003,
        "lastModifiedTime": 1692945620003,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113215,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadSpeakerCsv",
        "executor_version": "v1",
        "executor_display_name": "Download speaker CSV",
        "executor_description": "Using this API, you can download CSV which contains speakers' details like first name, last name, email, pronouns, title, company, bio, linked URL, Instagram handle and Twitter handles, etc.  we need to pass the authentication key to authenticate users and it will require super admin, event admin, event staff level access.",
        "executor_category": "Speakers",
        "executor_category_group": "Speakers",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/speaker/download/speakerEmails/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692945534025,
        "lastModifiedTime": 1692945534025,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112243,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateSponsorPosition",
        "executor_version": "v1",
        "executor_display_name": "Update sponsor position",
        "executor_description": "This API helps to change the sponsor position from the host side",
        "executor_category": "HostSponsorAPI",
        "executor_category_group": "HostSponsorAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/sponsors/{id}/topSponsor/{topSponsorId}/topBottomSponsor/{topBottomSponsorId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "it is the id of sponsor to be moved"
            },
            {
                "key": "topSponsorId",
                "value": "",
                "description": "it is the id of top position sponsor"
            },
            {
                "key": "topBottomSponsorId",
                "value": "",
                "description": "it is the id of top bottom position sponsor"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692603039692,
        "lastModifiedTime": 1692603039692,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Sponsor position changed successfully ..."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112246,
        "executor_type": "THIRDPARTY",
        "executor_name": "copyExhibitorsIntoSponsors",
        "executor_version": "v1",
        "executor_display_name": "Copy Exhibitors into Sponsors",
        "executor_description": "This API is used to create sponsors from exbhitors names by exhibitors ids",
        "executor_category": "HostSponsorAPI",
        "executor_category_group": "HostSponsorAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/sponsors/copyExhibitorIntoSponsor",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": [
                {
                    "id": 0,
                    "staffUserIds": "string",
                    "exhibitorName": "string",
                    "leadRetrieversAllowed": false,
                    "seeAllLeads": false,
                    "maxLeadRetrievers": 0,
                    "linkToSite": "string",
                    "videoURL": "string",
                    "logo": "string",
                    "SocialLinkKeyValueDto": {
                        "key": "string",
                        "value": "string"
                    },
                    "exhibitorDescription": "string",
                    "offer": "string",
                    "offerLink": "string",
                    "position": 0,
                    "Exhibitor_Link_clicks": 0,
                    "liveStreamUrl": "string",
                    "proAccount": true,
                    "companyDetails": "string",
                    "boothSize": "SMALL",
                    "preferredExhibitor": false,
                    "autoGenerateLead": false,
                    "includeInExhibitorCarousel": false,
                    "scanByQRCode": false,
                    "categoryIdList": [
                        0
                    ],
                    "categoryName": "string",
                    "documentKeyValue": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ],
                    "documentKeyPosition": [
                        {
                            "documentId": 0,
                            "documentPosition": 0,
                            "key": "string",
                            "value": "string"
                        }
                    ],
                    "eventURL": "string",
                    "eventId": 0,
                    "externalLiveStreamingEnabled": false,
                    "exhibitorFieldsInJson": {
                        "": "string",
                        "tabList": [
                            {
                                "key": "string",
                                "value": "string"
                            }
                        ],
                        "requestMeeting": {
                            "label": "string",
                            "hide": true,
                            "buttonColor": "string",
                            "buttonTextColor": "string",
                            "confirmationMessage": "string",
                            "requestMeetingURL": "string"
                        },
                        "companyRepresentativeTitle": "string"
                    },
                    "addLinksInJson": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ],
                    "documentIds": [
                        0
                    ],
                    "streamProvider": "NULL",
                    "chatEnabled": true,
                    "acceleventsStreamingEnabled": true,
                    "meetingPassword": "string",
                    "showStatusIndicator": true,
                    "showDownloadLeadBtn": true,
                    "countBoothVisitorAsLead": true,
                    "carouselLogoSliderDelaySeconds": 0,
                    "shortDescription": "string",
                    "expoCardImage": "string",
                    "colorConfig": {
                        "shortDescriptionColor": "string",
                        "nameColor": "string",
                        "categoryColor": "string"
                    },
                    "isMeetingEntryExitNotificationOn": true,
                    "isRequireApprovalBeforeAttendeesCanJoin": true,
                    "expoBannerImage": "string",
                    "visitedTime": "2023-08-21",
                    "pollEnabled": true,
                    "quesAndAnsEnabled": true,
                    "isQnAPrivate": true,
                    "featured": true,
                    "categoryPositionJson": [
                        {
                            "key": 0,
                            "value": 0
                        }
                    ],
                    "showBoothName": true,
                    "currency": "AUD",
                    "currencySymbol": "string",
                    "createSponsor": true,
                    "gamification": true
                }
            ],
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692603128076,
        "lastModifiedTime": 1692603128076,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "ids": [
                        2502,
                        2024,
                        2185,
                        2135,
                        2025
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112252,
        "executor_type": "THIRDPARTY",
        "executor_name": "parseAndUploadValidSponsorsFromCSV",
        "executor_version": "v1",
        "executor_display_name": "Parse and upload valid sponsors from CSV",
        "executor_description": "This API is used to create sponsors using an upload CSV file. for it you have to enter a name, Sponsor Card Size, Short Description, Sponsor URL details in a CSV file",
        "executor_category": "HostSponsorAPI",
        "executor_category_group": "HostSponsorAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/events/{eventUrl}/upload/sponsor/parse/csv",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "it is unique event url of your event"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "sponsorFile": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692603396453,
        "lastModifiedTime": 1692603396453,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "validSponsors": [
                        {
                            "sponsorName": "Sponsor3",
                            "sponsorSize": "LARGE",
                            "shortDescription": "description3",
                            "sponsorUrl": "sponsor3URL"
                        },
                        {
                            "sponsorName": "Sponsor2",
                            "sponsorSize": "SMALL",
                            "shortDescription": "description2",
                            "sponsorUrl": "sponsor2URL"
                        },
                        {
                            "sponsorName": "Sponsor1",
                            "sponsorSize": "MEDIUM",
                            "shortDescription": "description1",
                            "sponsorUrl": "sponsor1URL"
                        }
                    ],
                    "invalidSponsors": []
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112248,
        "executor_type": "THIRDPARTY",
        "executor_name": "addSessionSponsor",
        "executor_version": "v1",
        "executor_display_name": "Add session sponsor",
        "executor_description": "This API is used to add sponsors in particular session from the host side",
        "executor_category": "HostSponsorAPI",
        "executor_category_group": "HostSponsorAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/sponsors/session/{sessionId}/sponsor/{sponsorId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "sessionId",
                "value": "",
                "description": "it is unique session id of session"
            },
            {
                "key": "sponsorId",
                "value": "",
                "description": "it is unique sponsor id of sponsor"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692603215114,
        "lastModifiedTime": 1692603215114,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Success"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112253,
        "executor_type": "THIRDPARTY",
        "executor_name": "uploadSponsors",
        "executor_version": "v1",
        "executor_display_name": "Upload Sponsors",
        "executor_description": "This API helps us we upload sponsors CSV and we add duplicate sponsor so it gives suggestion to edit info and add it one by one sponsor.",
        "executor_category": "HostSponsorAPI",
        "executor_category_group": "HostSponsorAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/events/{eventUrl}/upload/sponsor",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "sponsorName": "string",
                "sponsorSize": "string",
                "shortDescription": "string",
                "sponsorUrl": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692603485803,
        "lastModifiedTime": 1692603485803,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "validSponsors": [
                        {
                            "sponsorName": "Sponsor3",
                            "sponsorSize": "LARGE",
                            "shortDescription": "description3",
                            "sponsorUrl": "sponsor3URL"
                        }
                    ],
                    "invalidSponsors": []
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112234,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllSponsors",
        "executor_version": "v1",
        "executor_display_name": "Get All Sponsors",
        "executor_description": "This API will help to get all sponsors of event. We need to pass authentication to get particular event's sponsors. We are also using pagination and searching functionality for get records.",
        "executor_category": "HostSponsorAPI",
        "executor_category_group": "HostSponsorAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/sponsors",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "searchString",
                "value": "",
                "description": "Get filter sponsors records according to search value passing in request",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Size will returns number of records when call api default will returns 10 records",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692602584570,
        "lastModifiedTime": 1692602584570,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 4,
                    "recordsFiltered": 4,
                    "data": [
                        {
                            "id": 957,
                            "eventId": 40,
                            "sponsorName": "Duplicate sponsor test",
                            "sponsorLogo": "48b1aeb6-0233-4069-8683-570e8cfb42d0",
                            "sponsorSize": "SMALL",
                            "sponsorUrl": "www.google.com",
                            "position": 4000,
                            "includeInLobbyCarousel": true,
                            "carouselLogoSliderDelaySeconds": 5,
                            "shortDescription": "This is for duplicate sponsor.",
                            "sponsorCardImage": "07139909-2a34-4b9a-9c64-b60fb0dd841d",
                            "colorConfig": {
                                "shortDescriptionColor": "#ffffff",
                                "nameColor": "#0000FF",
                                "categoryColor": null
                            },
                            "cardTag": null,
                            "exhibitorId": 1161
                        },
                        {
                            "id": 941,
                            "eventId": 40,
                            "sponsorName": "yahoo",
                            "sponsorLogo": "1c3fe76f-4c34-470f-8726-d6ebcd232c73",
                            "sponsorSize": "MEDIUM",
                            "sponsorUrl": null,
                            "position": 3000,
                            "includeInLobbyCarousel": true,
                            "carouselLogoSliderDelaySeconds": 5,
                            "shortDescription": null,
                            "sponsorCardImage": null,
                            "colorConfig": {
                                "shortDescriptionColor": "#0000FF",
                                "nameColor": "#000000",
                                "categoryColor": null
                            },
                            "cardTag": "TAG",
                            "exhibitorId": null
                        },
                        {
                            "id": 940,
                            "eventId": 40,
                            "sponsorName": "facebook 1",
                            "sponsorLogo": "c81c4fb1-c927-46a8-930a-bb33984dc068",
                            "sponsorSize": "SMALL",
                            "sponsorUrl": null,
                            "position": 2000,
                            "includeInLobbyCarousel": true,
                            "carouselLogoSliderDelaySeconds": 5,
                            "shortDescription": null,
                            "sponsorCardImage": null,
                            "colorConfig": {
                                "shortDescriptionColor": "#0000FF",
                                "nameColor": "#0000FF",
                                "categoryColor": null
                            },
                            "cardTag": null,
                            "exhibitorId": null
                        },
                        {
                            "id": 939,
                            "eventId": 40,
                            "sponsorName": "facebook",
                            "sponsorLogo": null,
                            "sponsorSize": "SMALL",
                            "sponsorUrl": null,
                            "position": 1000,
                            "includeInLobbyCarousel": true,
                            "carouselLogoSliderDelaySeconds": 5,
                            "shortDescription": null,
                            "sponsorCardImage": null,
                            "colorConfig": {
                                "shortDescriptionColor": "#0000FF",
                                "nameColor": "#0000FF",
                                "categoryColor": null
                            },
                            "cardTag": null,
                            "exhibitorId": null
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112249,
        "executor_type": "THIRDPARTY",
        "executor_name": "removeSponsorFromSession",
        "executor_version": "v1",
        "executor_display_name": "Remove sponsor from session",
        "executor_description": "This API is used to remove sponsors in particular sessions from the host side",
        "executor_category": "HostSponsorAPI",
        "executor_category_group": "HostSponsorAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/sponsors/session/{sessionId}/sponsor/{sponsorId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "sessionId",
                "value": "",
                "description": "it is unique session id of session"
            },
            {
                "key": "sponsorId",
                "value": "",
                "description": "it is unique sponsor id of sponsor"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692603298156,
        "lastModifiedTime": 1692603298156,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Success"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112238,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSponsorDetailsbySponsorId",
        "executor_version": "v1",
        "executor_display_name": "Get sponsor details by sponsor id",
        "executor_description": "This API will help to get sponsor details by sponsor id. We need to provide sponsor id and event url to get sponsor.",
        "executor_category": "HostSponsorAPI",
        "executor_category_group": "HostSponsorAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/sponsors/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "This should be sponsor's unique id."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692602780623,
        "lastModifiedTime": 1692602780624,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": 1535,
                    "eventId": 40,
                    "sponsorName": "TCS",
                    "sponsorLogo": null,
                    "sponsorSize": "MEDIUM",
                    "sponsorUrl": null,
                    "position": 6000,
                    "includeInLobbyCarousel": true,
                    "carouselLogoSliderDelaySeconds": 5,
                    "shortDescription": null,
                    "sponsorCardImage": null,
                    "colorConfig": {
                        "shortDescriptionColor": "#0000FF",
                        "nameColor": "#0000FF",
                        "categoryColor": "#0000FF"
                    },
                    "cardTag": null,
                    "exhibitorId": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112240,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateSponsor",
        "executor_version": "v1",
        "executor_display_name": "Update Sponsor",
        "executor_description": "This API will help to update sponsor of event. We need to provide appropriate details to update sponsor.",
        "executor_category": "HostSponsorAPI",
        "executor_category_group": "HostSponsorAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/sponsors/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "This should be sponsor's unique id."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "id": 0,
                "eventId": 0,
                "sponsorName": "string",
                "sponsorLogo": "string",
                "sponsorSize": "SMALL",
                "sponsorUrl": "string",
                "position": 0,
                "includeInLobbyCarousel": true,
                "carouselLogoSliderDelaySeconds": 0,
                "shortDescription": "string",
                "sponsorCardImage": "string",
                "colorConfig": {
                    "shortDescriptionColor": "string",
                    "nameColor": "string",
                    "categoryColor": "string"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692602849728,
        "lastModifiedTime": 1692602849729,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Sponsor updated for event."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112237,
        "executor_type": "THIRDPARTY",
        "executor_name": "createSponsor",
        "executor_version": "v1",
        "executor_display_name": "Create Sponsor",
        "executor_description": "This API will help to create new sponsor of event. We need to provide appropriate details to create sponsor.",
        "executor_category": "HostSponsorAPI",
        "executor_category_group": "HostSponsorAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/sponsors",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "id": 0,
                "eventId": 0,
                "sponsorName": "string",
                "sponsorLogo": "string",
                "sponsorSize": "SMALL",
                "sponsorUrl": "string",
                "position": 0,
                "includeInLobbyCarousel": true,
                "carouselLogoSliderDelaySeconds": 0,
                "shortDescription": "string",
                "sponsorCardImage": "string",
                "colorConfig": {
                    "shortDescriptionColor": "string",
                    "nameColor": "string",
                    "categoryColor": "string"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692602680720,
        "lastModifiedTime": 1692602680720,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": 1535,
                    "eventId": 40,
                    "sponsorName": "TCS",
                    "sponsorLogo": null,
                    "sponsorSize": "MEDIUM",
                    "sponsorUrl": null,
                    "position": 6000,
                    "includeInLobbyCarousel": true,
                    "carouselLogoSliderDelaySeconds": 5,
                    "shortDescription": null,
                    "sponsorCardImage": null,
                    "colorConfig": {
                        "shortDescriptionColor": "#0000FF",
                        "nameColor": "#0000FF",
                        "categoryColor": "#0000FF"
                    },
                    "cardTag": null,
                    "exhibitorId": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112242,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteSponsorDetails",
        "executor_version": "v1",
        "executor_display_name": "Delete Sponsor Details",
        "executor_description": "This API is help us to delete sponsors from your event by sponsor id",
        "executor_category": "HostSponsorAPI",
        "executor_category_group": "HostSponsorAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/sponsors/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "This should be sponsor's unique id."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692602911303,
        "lastModifiedTime": 1692602911303,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Sponsor details deleted."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112343,
        "executor_type": "THIRDPARTY",
        "executor_name": "eventDataWithDesignDetails",
        "executor_version": "v1",
        "executor_display_name": "Event Data With Design Details",
        "executor_description": "This API used to get event data with design details associated with the specified event. This API can be access by event admin and super admin. It will return event data like accessToken, eventId, eventStatus, eventURL, address, eventDesignDetails, organizerName, createdDate and many more. To call this API, user have to pass query param with API URL like eventurl, userKey and authentication key to authenticate user.",
        "executor_category": "HostEventAndDesign",
        "executor_category_group": "HostEventAndDesign",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "userKey",
                "value": "",
                "description": "User pass the unique identifier key.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692612158160,
        "lastModifiedTime": 1692612158160,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "accessToken": {
                        "access_token": "string",
                        "expires_in": "string",
                        "redirectUrl": "string",
                        "showExhibitorMenu": true,
                        "userId": 0,
                        "userRole": "string",
                        "whiteLabelURL": "string"
                    },
                    "accountActivatedTriggerStatus": "INITIAL",
                    "address": "string",
                    "analyticsId": "string",
                    "auctionEnabled": false,
                    "auctionEnded": false,
                    "auctionId": 0,
                    "auctionModuleShow": false,
                    "ccProcessingEnabled": false,
                    "ccRequiredForBidConfirm": false,
                    "countryCode": "US",
                    "createdDate": "2021-10-05T08:18:13.239Z",
                    "creditCardEnabled": false,
                    "currency": "AUD",
                    "currencySymbol": "string",
                    "donationEnabled": false,
                    "enableBidderRegistration": false,
                    "endDate": "string",
                    "equivalentTimezone": "string",
                    "eventDesignDetails": {
                        "adBlockerDocumentUrl": "string",
                        "adBlockerLogoImage": "string",
                        "allowEndedEventAccess": false,
                        "auctionTabTitle": "string",
                        "bannerImage": "string",
                        "bannerImageEnabled": false,
                        "biillingPageEnabled": false,
                        "configureTabsAsJson": [
                            {
                                "hide": false,
                                "key": "string",
                                "value": "string",
                                "visible": false
                            }
                        ],
                        "defaultItemImage": "string",
                        "descripation": "string",
                        "displayBackgroundColor": "string",
                        "displayTabsColor": "string",
                        "displayTabsTextColor": "string",
                        "displayTextColor": "string",
                        "donationButtonText": {
                            "color": "string",
                            "hidden": false,
                            "label": "string"
                        },
                        "donationTabTitle": "string",
                        "emailTemplateId": 0,
                        "enableAutoAssignedSequence": false,
                        "enableSessionsSpeakers": false,
                        "eventCalendarInvite": "string",
                        "eventTagLine": "string",
                        "eventType": "string",
                        "exitIntentContent": "string",
                        "faviconDirectory": "string",
                        "fbAppId": "string",
                        "footerText": "string",
                        "fundANeedTabTitle": "string",
                        "getStartedUrl": "string",
                        "headerColor": "string",
                        "headerFontColor": "string",
                        "headerLogoImage": "string",
                        "helpCenterActivated": false,
                        "helpCenterURL": "string",
                        "hideCreateEventButton": false,
                        "hideFundRaisingModuleToggle": false,
                        "hideGoogleMap": false,
                        "hideProductUpdateNotification": false,
                        "hideSponsorSection": false,
                        "intercomActivated": false,
                        "logoEnabled": false,
                        "logoImage": "string",
                        "marketingOptInChecked": false,
                        "marketingOptInHidden": false,
                        "notificationPopupImage": "string",
                        "orderConfirmationText": "string",
                        "poweredByAeActivated": false,
                        "raffleBuyButtonText": {
                            "color": "string",
                            "font": "string",
                            "hidden": false,
                            "label": "string"
                        },
                        "raffleTabTitle": "string",
                        "showEnableModulePopup": false,
                        "showOrganizer": false,
                        "signUpText": "string",
                        "socialSharingEnabled": false,
                        "sponsorSection": "string",
                        "stripeDocumentationURL": "string",
                        "themeId": 0,
                        "ticketingBuyButtonText": {
                            "color": "string",
                            "font": "string",
                            "hidden": false,
                            "label": "string"
                        },
                        "ticketingTabTitle": "string",
                        "totalFundRaisedShow": false,
                        "trackingScript": "string",
                        "virtualEventScript": "string",
                        "whiteLabelHostBaseUrl": "string",
                        "whiteLabelName": "string",
                        "whiteLabelUrl": "string"
                    },
                    "eventId": 0,
                    "eventStatus": "EVENT_HAPPENING",
                    "eventURL": "string",
                    "fundANeedEnabled": false,
                    "fundANeedEnded": false,
                    "fundANeedId": 0,
                    "fundANeedModuleShow": false,
                    "fundRaisingGoal": 0,
                    "goalStartingAmount": 0,
                    "latitude": "string",
                    "liveItemAvailable": false,
                    "longitude": "string",
                    "name": "string",
                    "organizerName": "string",
                    "organizerPageURL": "string",
                    "paymentGateway": "SQUARE",
                    "phoneNumber": 0,
                    "processingFeesToPurchaser": false,
                    "raffleEnabled": false,
                    "raffleEnded": false,
                    "raffleId": 0,
                    "raffleModuleShow": false,
                    "recurring": true,
                    "squareLocationId": "string",
                    "startDate": "string",
                    "stripeConnectRequiredToTicketing": true,
                    "stripeKey": "string",
                    "taxId": "string",
                    "textToGiveEnabled": false,
                    "ticketingEnabled": false,
                    "ticketingEnded": false,
                    "ticketingId": 0,
                    "timezoneId": "string",
                    "timezoneOffset": "string",
                    "trackingPixelId": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112351,
        "executor_type": "THIRDPARTY",
        "executor_name": "getNeonEventsList",
        "executor_version": "v1",
        "executor_display_name": "Get neon events list",
        "executor_description": "This API is used to get a list of neon events for the logged user.",
        "executor_category": "HostEventAndDesign",
        "executor_category_group": "HostEventAndDesign",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/neon/listEvents",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Number records in single page to returns.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692613213530,
        "lastModifiedTime": 1692613213530,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 0,
                    "recordsFiltered": 0,
                    "neonEvents": []
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Error message text",
                    "errorCode": "4061201",
                    "developerMessage": "Error message textt"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112345,
        "executor_type": "THIRDPARTY",
        "executor_name": "getEventDesignSettings",
        "executor_version": "v1",
        "executor_display_name": "Get Event Design Settings",
        "executor_description": "This API is used to get event data with design details associated with the specified event.  This API can be accessed by event admin and super admin. It will return event data like accessToken, eventId, eventStatus, eventURL, address, eventDesignDetails, organizerName, createdDate and many more.  To call this API, the user has to pass query param with API URLs like eventurl, userKey and authentication key to authenticate the user.",
        "executor_category": "HostEventAndDesign",
        "executor_category_group": "HostEventAndDesign",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/design/setting",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692612431921,
        "lastModifiedTime": 1692612431921,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "eventName": "Test13573",
                    "eventUrl": "test13573",
                    "logoEnabled": true,
                    "logoImage": "default_ae_images/Smooth_AE_Icon_700x350.png",
                    "bannerImageEnabled": true,
                    "bannerImage": "default_banner_image.jpg",
                    "desc": "<h2 style=\"text-align:center\"><strong>Description</strong></h2><p style=\"text-align:center\">Tell your participants about your event!</p><p style=\"text-align:center;\">You can just click here and start typing.</p><p style=\"text-align:center;\"><strong>Or</strong></p><p style=\"text-align:center;\">Highlight text to format it.</p>",
                    "totalFundRaisedShow": true,
                    "socialSharingEnabled": true,
                    "organizerId": 52,
                    "organizerName": "Mitul Soni",
                    "organizerPageURL": "MitulSoni",
                    "displayBackgroundColor": "#e9ebed",
                    "displayTextColor": "#000000",
                    "sponsorSection": "<h2 style=\"text-align:center\"><strong>Sponsors</strong></h2><p style=\"text-align:center\">Add a list of your sponsors or upload your sponsors' logos!</p>",
                    "eventTagLine": "You can click here to add a tagline for your event!",
                    "hideSponsorSection": false,
                    "startDate": "2021/09/30 12:00",
                    "endDate": "2021/09/30 22:00",
                    "equivalentTimezone": "Asia/Calcutta",
                    "eventAddress": "Online/Virtual event",
                    "ticketingBuyButtonText": {
                        "color": "#406ae8",
                        "label": "Buy Tickets",
                        "font": "",
                        "hidden": false
                    },
                    "raffleBuyButtonText": {
                        "color": "#406ae8",
                        "label": "Buy Raffle Tickets",
                        "font": "",
                        "hidden": false
                    },
                    "trackingScript": null,
                    "virtualEventScript": null,
                    "themeId": 3,
                    "enableSessionsSpeakers": true,
                    "eventType": "AUCTION",
                    "enableEventType": true,
                    "auctionTabTitle": null,
                    "fundANeedTabTitle": null,
                    "raffleTabTitle": null,
                    "ticketingTabTitle": "Buy Tickets",
                    "donationTabTitle": null,
                    "hideGoogleMap": false,
                    "auctionInstruction": "Bid here or text Your Bid To: (832) 529-6234 with the item's three letter code and bid amount ex. AUC$300.0",
                    "raffleInstruction": "Submit your tickets here or text your ticket submission to: (832) 529-6234 with the item's three letter code, and your desired number of tickets ex. RAF10",
                    "fundANeedInstruction": "Pledge here or text Your Pledge To: (832) 529-6234 with the item's three letter code and pledge amount ex. FAN$300.0",
                    "donationButtonText": {
                        "color": "#3bd89c",
                        "hidden": false,
                        "label": "Donate"
                    },
                    "eventFormat": null,
                    "configureTabsAsJson": [],
                    "allowEndedEventAccess": true,
                    "eventCalendarInvite": null,
                    "displayTabsColor": "#406AE8",
                    "displayTabsTextColor": "#000000",
                    "showOrganizer": true,
                    "preEventAccessMinutes": 30
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112348,
        "executor_type": "THIRDPARTY",
        "executor_name": "userCurrentEventDetails",
        "executor_version": "v1",
        "executor_display_name": "User Current Event Details",
        "executor_description": "This API is used to get users' current event details. It gives us the name and event URL of the user's current event.",
        "executor_category": "HostEventAndDesign",
        "executor_category_group": "HostEventAndDesign",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/currentEvent",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692612666768,
        "lastModifiedTime": 1692612666768,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "eventName": "Test13573",
                    "eventUrl": "test13573"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112352,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateHubspotEvent",
        "executor_version": "v1",
        "executor_display_name": "Update hubspot Event",
        "executor_description": "This API is used to update a Hubspot event.",
        "executor_category": "HostEventAndDesign",
        "executor_category_group": "HostEventAndDesign",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/design/update/hubspot/event",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692613307868,
        "lastModifiedTime": 1692613307868,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Success"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112342,
        "executor_type": "THIRDPARTY",
        "executor_name": "eventAndDesignDetails",
        "executor_version": "v1",
        "executor_display_name": "Event and Design details",
        "executor_description": "This API used to get event and its design related information. This API can be access by event admin and super admin. It will return data like eventFormat, eventId, eventListingStatus, eventPhoneNumber, eventUrl, fundANeedEnabled, eventCountryCode, eventDesignDetail and many more. User have to pass their authentication key for user authentication. This API used at host side to get event and its design related information.",
        "executor_category": "HostEventAndDesign",
        "executor_category_group": "HostEventAndDesign",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/eventDetails",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692612030243,
        "lastModifiedTime": 1692612030243,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "eventId": 598,
                    "eventNamel": "FirstAddOn",
                    "eventUrl": "FirstAddOn",
                    "eventPhoneNumber": "[account activation required]",
                    "eventCountryCode": "",
                    "noModuleActivate": false,
                    "auctionEnabled": true,
                    "fundANeedEnabled": true,
                    "raffleEnabled": true,
                    "donationEnabled": true,
                    "ticketingEnabled": true,
                    "textToGiveEnabled": true,
                    "currencySymbol": "$",
                    "enableBidderRegistration": false,
                    "eventDesignDetailDto": {
                        "logoEnabled": true,
                        "logoImage": "default_ae_images/Smooth_AE_Icon_700x350.png",
                        "headerLogoImage": "default_ae_images/Smooth_Accelevents_Default_Event_Logo_Black.png",
                        "notificationPopupImage": null,
                        "headerColor": "#d0021b",
                        "headerFontColor": "#3f69e8",
                        "bannerImageEnabled": true,
                        "bannerImage": "default_banner_image.jpg",
                        "descripation": "<h2 style=\"text-align:center\"><strong>Description</strong></h2><p style=\"text-align:center\">Tell your participants about your event!</p><p style=\"text-align:center;\">You can just click here and start typing.</p><p style=\"text-align:center;\"><strong>Or</strong></p><p style=\"text-align:center;\">Highlight text to format it.</p>",
                        "totalFundRaisedShow": true,
                        "socialSharingEnabled": true,
                        "intercomActivated": true,
                        "helpCenterActivated": true,
                        "poweredByAeActivated": true,
                        "biillingPageEnabled": false,
                        "marketingOptInHidden": false,
                        "marketingOptInChecked": true,
                        "defaultItemImage": "default_ae_images/Smooth_Accelevents_dark_fill_icon.png",
                        "hideFundRaisingModuleToggle": true,
                        "showEnableModulePopup": true,
                        "faviconDirectory": null,
                        "fbAppId": null,
                        "whiteLabelHostBaseUrl": null,
                        "footerText": "AccelEventsFooter",
                        "whiteLabelUrl": "TestWL11May1",
                        "whiteLabelName": "TestWL11May1",
                        "auctionTabTitle": "Auction",
                        "fundANeedTabTitle": "Fund a Need",
                        "raffleTabTitle": "Raffle",
                        "ticketingTabTitle": "Buy Tickets",
                        "donationTabTitle": "Donate",
                        "helpCenterURL": null,
                        "stripeDocumentationURL": null,
                        "signUpText": "By signing up, I agree to Accelevent&#39;s <a href=\"https://www.accelevents.com/terms-conditions/\" target=\"_blank\">terms of service</a> and <a href=\"https://www.accelevents.com/Privacy-Policy/\" target=\"_blank\">privacy policy</a>.",
                        "emailTemplateId": null,
                        "sponsorSection": "<h2 style=\"text-align:center\"><strong>Sponsors</strong></h2><p style=\"text-align:center\">Add a list of your sponsors or upload your sponsors' logos!</p>",
                        "eventTagLine": "You can click here to add a tagline for your event!",
                        "displayBackgroundColor": "#e9ebed",
                        "displayTextColor": "#000000",
                        "hideSponsorSection": false,
                        "getStartedUrl": null,
                        "ticketingBuyButtonText": {
                            "color": "#406ae8",
                            "label": "Buy Tickets",
                            "font": "",
                            "hidden": false
                        },
                        "raffleBuyButtonText": {
                            "color": "#406ae8",
                            "label": "Buy Raffle Tickets",
                            "font": "",
                            "hidden": false
                        },
                        "trackingScript": null,
                        "virtualEventScript": null,
                        "themeId": 3,
                        "orderConfirmationText": "Thanks for registering for FirstAddOn",
                        "enableSessionsSpeakers": true,
                        "enableAutoAssignedSequence": false,
                        "hideGoogleMap": false,
                        "donationButtonText": {
                            "color": "#3bd89c",
                            "hidden": false,
                            "label": "Donate"
                        },
                        "eventType": "CONFERENCE",
                        "configureTabsAsJson": [],
                        "allowEndedEventAccess": true,
                        "hideCreateEventButton": true,
                        "hideProductUpdateNotification": false,
                        "eventCalendarInvite": "",
                        "displayTabsColor": "#406AE8",
                        "displayTabsTextColor": "#000000",
                        "showOrganizer": true,
                        "adBlockerDocumentUrl": null,
                        "adBlockerLogoImage": null,
                        "exitIntentContent": null
                    },
                    "organizerURL": "Bharat",
                    "countryCode": null,
                    "equivalentTimezone": "Asia/Calcutta",
                    "auctionModuleShow": true,
                    "fundANeedModuleShow": true,
                    "raffleModuleShow": true,
                    "stripeKey": "pk_test_51IvHzJIXkv0uh8RxrbBUAailsQcj0Xrs6G1zt836mulY9ie67EycKtUxq8IbwFDqJfVBGzOxRRnYz7pSRdI9c0mV00LIrRJdpx",
                    "creditCardEnabled": true,
                    "paymentGateway": "STRIPE",
                    "squareLocationId": null,
                    "processingFeesToPurchaser": true,
                    "eventListingStatus": "PREVIEW",
                    "eventFormat": "VIRTUAL",
                    "supportEnabled": false,
                    "accountActivatedTriggerStatus": "INITIAL",
                    "recurring": false
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112349,
        "executor_type": "THIRDPARTY",
        "executor_name": "usersEventsInformation",
        "executor_version": "v1",
        "executor_display_name": "User's Events Information",
        "executor_description": "This API is used to get users' event information in which the user is assigned and we can provide by active,past and all events.",
        "executor_category": "HostEventAndDesign",
        "executor_category_group": "HostEventAndDesign",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/myprofile/events/{status}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "status",
                "value": "",
                "description": "here we pass event status is like past,active or all"
            }
        ],
        "queryParams": [
            {
                "key": "searchDate",
                "value": "",
                "description": "we can search based on event date : dd/MM/yyyy",
                "req": false
            },
            {
                "key": "search",
                "value": "",
                "description": "we can search events based on name or eventUrl",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692612785991,
        "lastModifiedTime": 1692612785991,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "name": "COPY25Divy Testing Event 28 7",
                        "eventURL": "COPY25testingevent28may6798",
                        "eventStartDate": 1634309567000,
                        "eventEndDate": 1678384367000,
                        "eventType": "speaker",
                        "type": null,
                        "address": null,
                        "eventStripePublishableKey": "pk_test_51IvzDKBqtbOh9Al3gtRkTfY7lCyboVejf5LTunXCKqqOTgVhDa4s9ZaVgKdQ2f2HTR62pVNfqxNN5LOGq34Mj80Z005eTI2wEb",
                        "eventLogo": "default_ae_images/Smooth_AE_Icon_700x350.png",
                        "numberOfTicketSold": 0,
                        "numberOfTotalTickets": 1060
                    },
                    {
                        "name": "Divy Testing Event 28 7",
                        "eventURL": "testingevent28may6798",
                        "eventStartDate": 1622170800000,
                        "eventEndDate": 1666245600000,
                        "eventType": "user",
                        "type": null,
                        "address": null,
                        "eventStripePublishableKey": "pk_test_51IvzDKBqtbOh9Al3gtRkTfY7lCyboVejf5LTunXCKqqOTgVhDa4s9ZaVgKdQ2f2HTR62pVNfqxNN5LOGq34Mj80Z005eTI2wEb",
                        "eventLogo": "default_ae_images/Smooth_AE_Icon_700x350.png",
                        "numberOfTicketSold": 55,
                        "numberOfTotalTickets": 2050
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112350,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateEventDesignSettings",
        "executor_version": "v1",
        "executor_display_name": "Update Event Design Settings",
        "executor_description": "This API is used to update event design settings.",
        "executor_category": "HostEventAndDesign",
        "executor_category_group": "HostEventAndDesign",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/design/setting",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "eventName": "string",
                "eventUrl": "string",
                "logoEnabled": true,
                "logoImage": "string",
                "bannerImageEnabled": true,
                "bannerImage": "string",
                "desc": "string",
                "totalFundRaisedShow": true,
                "socialSharingEnabled": true,
                "organizerId": 0,
                "organizerName": "string",
                "organizerPageURL": "string",
                "displayBackgroundColor": "string",
                "displayTextColor": "string",
                "sponsorSection": "string",
                "eventTagLine": "string",
                "hideSponsorSection": true,
                "startDate": "string",
                "endDate": "string",
                "equivalentTimezone": "string",
                "eventAddress": "string",
                "ticketingBuyButtonText": {
                    "color": "string",
                    "label": "string",
                    "font": "string",
                    "hidden": false
                },
                "raffleBuyButtonText": {
                    "color": "string",
                    "label": "string",
                    "font": "string",
                    "hidden": false
                },
                "trackingScript": "string",
                "virtualEventScript": "string",
                "themeId": 0,
                "enableSessionsSpeakers": true,
                "eventType": "string",
                "enableEventType": true,
                "auctionTabTitle": "string",
                "fundANeedTabTitle": "string",
                "raffleTabTitle": "string",
                "ticketingTabTitle": "string",
                "donationTabTitle": "string",
                "hideGoogleMap": true,
                "auctionInstruction": "string",
                "raffleInstruction": "string",
                "fundANeedInstruction": "string",
                "eventFormat": "VIRTUAL",
                "allowEndedEventAccess": true,
                "eventCalendarInvite": "string",
                "displayTabsColor": "string",
                "displayTabsTextColor": "string",
                "showOrganizer": true,
                "preEventAccessMinutes": 0,
                "donationButtonText": {
                    "color": "string",
                    "hidden": true,
                    "label": "string"
                },
                "configureTabsAsJson": [
                    {
                        "key": "string",
                        "value": "string",
                        "hide": true,
                        "visible": true
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692613076926,
        "lastModifiedTime": 1692613076926,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Settings saved."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112347,
        "executor_type": "THIRDPARTY",
        "executor_name": "getEventCalendarInvite",
        "executor_version": "v1",
        "executor_display_name": "Get event calendar invite",
        "executor_description": "This API Used to get event calendar invite. API used at host side event admin and super admin can access this API. It will return data like eventCalendarInvite. To call this API, user have to pass an authentication key to authenticate user.",
        "executor_category": "HostEventAndDesign",
        "executor_category_group": "HostEventAndDesign",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/design/calendarInvite",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692612571573,
        "lastModifiedTime": 1692612571573,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "eventCalendarInvite": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "You are not authorized to view the resource.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The request could not be understood by the server due to malformed syntax.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112344,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateEventCalendarInvite",
        "executor_version": "v1",
        "executor_display_name": "Update event calendar invite",
        "executor_description": "This API Used to Update event calendar invite. API used at host side event admin and super admin can access this API. It will return response data like type, message etc. To call this API, user have to pass request param with API URL like calendarInviteDto and authentication key to authenticate user.",
        "executor_category": "HostEventAndDesign",
        "executor_category_group": "HostEventAndDesign",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/design/calendarInvite",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "calendarInviteDto": {
                    "eventCalendarInvite": "string"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692612335729,
        "lastModifiedTime": 1692612335729,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "You are not authorized to view the resource.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Accessing the resource you were trying to reach is forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "The resource you were trying to reach is not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112478,
        "executor_type": "THIRDPARTY",
        "executor_name": "publishPrivatePostponedEvent",
        "executor_version": "v1",
        "executor_display_name": "Publish Private Postponed event",
        "executor_description": "This API is used to update the ListingStatus of event like PUBLIC,PRIVATE,POSTPONED. This API can be accessed by event admin and super admin. It will return responses like type and message. We need to pass authentication key to authenticate user and eventListingStatus(PUBLIC,PRIVATE , POSTPONED)",
        "executor_category": "ChangeListingStatusofEvent",
        "executor_category_group": "ChangeListingStatusofEvent",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/changeEventListing/{eventListingStatus}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "eventListingStatus",
                "value": "",
                "description": "To make event Publish/Private, pass ListingStatus"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692685046552,
        "lastModifiedTime": 1692685046552,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112500,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAttendeeConnectionConfigurationDetails",
        "executor_version": "v1",
        "executor_display_name": "Get Attendee Connection Configuration Details",
        "executor_description": "This API is used to get the attendee's connection configuration details. This API is used when the user clicks on the virtual networking page from the Engage tab. This API can be accessed by event admins and super admins. To call this API, we need to pass the path parameter of eventUrl and authorization token in API in the header. Authorization token will be generated when the user logs into the system.",
        "executor_category": "HostInterestTagsAPI",
        "executor_category_group": "HostInterestTagsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/connection/setting",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "It contains the Event URL which is a unique identifier for the event"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692690632910,
        "lastModifiedTime": 1692690632910,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "name": "Email",
                        "value": "email",
                        "isEnable": true
                    },
                    {
                        "name": "Country",
                        "value": "country",
                        "isEnable": true
                    },
                    {
                        "name": "First Name",
                        "value": "firstName",
                        "isEnable": true
                    },
                    {
                        "name": "Last Name",
                        "value": "lastName",
                        "isEnable": true
                    },
                    {
                        "name": "Pronouns",
                        "value": "pronouns",
                        "isEnable": false
                    },
                    {
                        "name": "Title",
                        "value": "title",
                        "isEnable": false
                    },
                    {
                        "name": "Company",
                        "value": "company",
                        "isEnable": false
                    },
                    {
                        "name": "Video Intro",
                        "value": "videoIntro",
                        "isEnable": false
                    },
                    {
                        "name": "Accept Meeting Requests",
                        "value": "acceptMeetingRequests",
                        "isEnable": false
                    },
                    {
                        "name": "Accept Direct Messages",
                        "value": "acceptDirectMessages",
                        "isEnable": false
                    }
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4030201",
                    "developerMessage": "Not Event Host"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Event Not Found",
                    "errorCode": "4040200",
                    "developerMessage": "No Event could be found"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Cant create url",
                    "errorCode": "40600013",
                    "developerMessage": "Cant create url"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112497,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteAnInterestTag",
        "executor_version": "v1",
        "executor_display_name": "Delete an Interest Tag",
        "executor_description": "User have to pass the interest tag ID as path variable, for which interest tag they want to delete tag. To call this API, user have to pass an authentication key to authenticate the user. This API used at event host side to delete an interest tag.",
        "executor_category": "HostInterestTagsAPI",
        "executor_category_group": "HostInterestTagsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/interest/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "For getting particular interest tag need to pass event interest tag id for getting particular tag."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692689548362,
        "lastModifiedTime": 1692689548362,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Interest tag deleted"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112498,
        "executor_type": "THIRDPARTY",
        "executor_name": "uploadInterestCsv",
        "executor_version": "v1",
        "executor_display_name": "Upload Interest CSV",
        "executor_description": "This API Used to upload interests tag details by event. This API can be used by admin and super admin to upload interests tags. User can use this api to upload interests tags name. User have to pass the interests csv file as request params. This API used at event host side to upload interests tags.",
        "executor_category": "HostInterestTagsAPI",
        "executor_category_group": "HostInterestTagsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/interest/uploadInterestCsv",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "file",
                "value": "",
                "description": "A representation of an uploaded file received in a multipart request.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692689633273,
        "lastModifiedTime": 1692689633273,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "CSV uploaded successfully."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112496,
        "executor_type": "THIRDPARTY",
        "executor_name": "createAnInterestTag",
        "executor_version": "v1",
        "executor_display_name": "Create an Interest Tag",
        "executor_description": "A user can use this API to create an interest tag for an event. This API can be access by event admin and super admin. For creating new interest tag, need to pass request body param for interest. User have to pass their authentication key for user authentication. This API used at host side to create new interest tag.",
        "executor_category": "HostInterestTagsAPI",
        "executor_category_group": "HostInterestTagsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/interest",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "interestDto": {
                    "id": "string",
                    "name": "string"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692689473568,
        "lastModifiedTime": 1692689473568,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "f0068c59-901b-4e9d-b453-2926ebcaf3c8"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112499,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllInterestTags",
        "executor_version": "v1",
        "executor_display_name": "Get All Interest Tags",
        "executor_description": "This API Used to get all interest tags associated with the specified event. This API can be access by admin and super admin. It will return data like id and name. User have to pass their authentication key for user authentication. This API used at event host side to get all interest tags.",
        "executor_category": "HostInterestTagsAPI",
        "executor_category_group": "HostInterestTagsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/interest",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692690496388,
        "lastModifiedTime": 1692690496388,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": "9e6021cc-0c1f-4ded-a160-be44bb8be827",
                        "name": "ABC"
                    },
                    {
                        "id": "0b2bc7ef-bf4a-4bf0-94c6-c8edf7c64a12",
                        "name": "DANCING"
                    },
                    {
                        "id": "76e232d3-6569-4732-9509-3887d84da466",
                        "name": "MUSIC"
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112576,
        "executor_type": "THIRDPARTY",
        "executor_name": "getExhibitorsDetailsByCategoryId",
        "executor_version": "v1",
        "executor_display_name": "Get Exhibitors Details by categoryId",
        "executor_description": "This API is used to get Exibhitor details by entering category id. user enters the category id of the category and gets all details of exhibitors who have this category of the exhibitor.",
        "executor_category": "ExhibitorCategoryAPI",
        "executor_category_group": "ExhibitorCategoryAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/exhibitor/categories/{categoryId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "this is unique event url of your event"
            },
            {
                "key": "categoryId",
                "value": "",
                "description": "This is unique id of category for which we have to get data for API"
            }
        ],
        "queryParams": [
            {
                "key": "categorySeachDto",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692701226150,
        "lastModifiedTime": 1692701226150,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Category Updated Successfully."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112574,
        "executor_type": "THIRDPARTY",
        "executor_name": "addExhibitorCategory",
        "executor_version": "v1",
        "executor_display_name": "Add Exhibitor category",
        "executor_description": "This API is used to create add a category from the host.",
        "executor_category": "ExhibitorCategoryAPI",
        "executor_category_group": "ExhibitorCategoryAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/exhibitor/categories",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "name": "string",
                "categoryColor": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692701037476,
        "lastModifiedTime": 1692701037476,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Category Added Successfully."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112575,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateExhibitorCategory",
        "executor_version": "v1",
        "executor_display_name": "Update Exhibitor category",
        "executor_description": "This API is used to update category information from the Host side.",
        "executor_category": "ExhibitorCategoryAPI",
        "executor_category_group": "ExhibitorCategoryAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/exhibitor/categories/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "this is unique id of category"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "name": "string",
                "categoryColor": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692701129387,
        "lastModifiedTime": 1692701129387,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Category Updated Successfully."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112585,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteExhibitorCategory",
        "executor_version": "v1",
        "executor_display_name": "Delete Exhibitor Category",
        "executor_description": "This API is used to delete the Exhibitor category from the host",
        "executor_category": "ExhibitorCategoryAPI",
        "executor_category_group": "ExhibitorCategoryAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/exhibitor/categories/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "This is id of category to be deleted"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692701946710,
        "lastModifiedTime": 1692701946710,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Category Deleted Successfully."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112586,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateexhibitorCategoryPosition",
        "executor_version": "v1",
        "executor_display_name": "Update Exhibitor category position",
        "executor_description": "This API is used to update category position from exhibitor settings",
        "executor_category": "ExhibitorCategoryAPI",
        "executor_category_group": "ExhibitorCategoryAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/exhibitor/categories/{id}/topId/{topId}/topBottomId/{topBottomId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "it is id of category that we have to change postion"
            },
            {
                "key": "topId",
                "value": "",
                "description": "it is top position id of category"
            },
            {
                "key": "topBottomId",
                "value": "",
                "description": "it is bottomTop position id of category"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692702041526,
        "lastModifiedTime": 1692702041526,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112583,
        "executor_type": "THIRDPARTY",
        "executor_name": "exhibitorCategoriesListbyEventId",
        "executor_version": "v1",
        "executor_display_name": "Exhibitor categories list by event id",
        "executor_description": "This API is used to get types of categories list of exhibitors of an event by event Id and in response get details of the category.",
        "executor_category": "ExhibitorCategoryAPI",
        "executor_category_group": "ExhibitorCategoryAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{id}/exhibitor/categories",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "Unique Event Id Of Event For getting Exhibitor categories list by event id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692701870601,
        "lastModifiedTime": 1692701870601,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "exhibitorCategories": [
                        {
                            "id": 265,
                            "name": "Item 1",
                            "position": 1000,
                            "categoryColor": "#ca2323"
                        },
                        {
                            "id": 266,
                            "name": "Item 2",
                            "position": 2000,
                            "categoryColor": "#724f4f"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112582,
        "executor_type": "THIRDPARTY",
        "executor_name": "exhibitorCategoriesListbyEventUrl",
        "executor_version": "v1",
        "executor_display_name": "Exhibitor categories list by event Url",
        "executor_description": "This API is used to get types of categories list of exhibitors of an event by event Url and in response get details of the category.",
        "executor_category": "ExhibitorCategoryAPI",
        "executor_category_group": "ExhibitorCategoryAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/cache/events/{eventUrl}/exhibitor/categories",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here 'demo' is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692701803172,
        "lastModifiedTime": 1692701803172,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "exhibitorCategories": [
                        {
                            "id": 265,
                            "name": "Item 1",
                            "position": 1000,
                            "categoryColor": "#ca2323"
                        },
                        {
                            "id": 266,
                            "name": "Item 2",
                            "position": 2000,
                            "categoryColor": "#724f4f"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112580,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateExhibitorCategoryPosition",
        "executor_version": "v1",
        "executor_display_name": "Update exhibitor category position",
        "executor_description": "This API is used to change the position of an exhibitor in the exhibitor category.",
        "executor_category": "ExhibitorCategoryAPI",
        "executor_category_group": "ExhibitorCategoryAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/exhibitor/categories/{categoryId}/exhibitor/{exhibitorId}/topExhibitor/{topExhibitorId}/topBottomExhibitor/{topBottomExhibitorId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Unique event url of Event"
            },
            {
                "key": "categoryId",
                "value": "",
                "description": "unique id of category of exhibitor"
            },
            {
                "key": "exhibitorId",
                "value": "",
                "description": "unique id of exhibitor that you want to move"
            },
            {
                "key": "topExhibitorId",
                "value": "",
                "description": "top exhibitor id of exhibitor in position"
            },
            {
                "key": "topBottomExhibitorId",
                "value": "",
                "description": "top bottom exhibitor id of exhibitor"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692701731698,
        "lastModifiedTime": 1692701731698,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Exhibitor position changed successfully ..."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112778,
        "executor_type": "THIRDPARTY",
        "executor_name": "exhibitorImageAsTheBackgroundForTheCard",
        "executor_version": "v1",
        "executor_display_name": "Exhibitor Image As The Background for The Card",
        "executor_description": "This API used to create exhibitor image as the background for the card by exhibitor id associated with the specified event. To call this API, user have to pass query param with API URL like id, image upload detials and authentication key to authenticate user.",
        "executor_category": "MyBoothCompanyDetailsAPI",
        "executor_category_group": "MyBoothCompanyDetailsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/event/upload/expoCardImage/exhibitor/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "User pass the exhibitor image as the background for the card by exhibitor id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692784906588,
        "lastModifiedTime": 1692784906588,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "croppedImgName": "string",
                    "croppedImgUrl": "string",
                    "faviconImage": false,
                    "fileName": "string",
                    "height": 0,
                    "originalImgUrl": "string",
                    "secureUrl": "string",
                    "width": 0,
                    "x": 0,
                    "y": 0
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112772,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateExhibitorFieldsTabListInMultiLanguageLabelFromPortal",
        "executor_version": "v1",
        "executor_display_name": "Update ExhibitorFields TabList In MultiLanguageLabel From Portal",
        "executor_description": "This API used to update exhibitor fields tab list in multi language label from portal associated with the specified event. To call this API, user have to pass query param with API URL like eventUrl, id, multi language label details and authentication key to authenticate user.",
        "executor_category": "MyBoothCompanyDetailsAPI",
        "executor_category_group": "MyBoothCompanyDetailsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/exhibitor/{id}/exhibitorFieldsTabList",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "User pass the update exhibitor fields tab list in multi language label details by id."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "labelDto": {
                    "label": "string",
                    "defaultlabel": "string",
                    "customLabel": "string",
                    "labelType": "EXPO",
                    "expoId": 0
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692784436219,
        "lastModifiedTime": 1692784436219,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112779,
        "executor_type": "THIRDPARTY",
        "executor_name": "documentUpload",
        "executor_version": "v1",
        "executor_display_name": "Upload Document",
        "executor_description": "This API used to upload or drag documents available to attendees. Document must be .pdf,.doc,.docx,docxx,.ppt,.pptx format. To call this API, user have to pass query param with API URL like upload file and authentication key to authenticate user.",
        "executor_category": "MyBoothCompanyDetailsAPI",
        "executor_category_group": "MyBoothCompanyDetailsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/upload/document",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "uploadFile",
                "value": "",
                "description": "A representation of an uploaded file received in a multipart request. Document must be .pdf,.doc,.docx,docxx,.ppt,.pptx format.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692785019181,
        "lastModifiedTime": 1692785019181,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112775,
        "executor_type": "THIRDPARTY",
        "executor_name": "exhibitorLogoUploadByExhibitorId",
        "executor_version": "v1",
        "executor_display_name": "Exhibitor Logo Upload By Exhibitor Id",
        "executor_description": "This API used to exhibitor logo upload by exhibitor id associated with the specified event. To call this API, user have to pass query param with API URL like id, image upload detials and authentication key to authenticate user.",
        "executor_category": "MyBoothCompanyDetailsAPI",
        "executor_category_group": "MyBoothCompanyDetailsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/upload/logo/exhibitor/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "The id unique value associated with exhibitor logo upload by exhibitor id."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692784719597,
        "lastModifiedTime": 1692784719597,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "croppedImgName": "string",
                    "croppedImgUrl": "string",
                    "faviconImage": false,
                    "fileName": "string",
                    "height": 0,
                    "originalImgUrl": "string",
                    "secureUrl": "string",
                    "width": 0,
                    "x": 0,
                    "y": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112776,
        "executor_type": "THIRDPARTY",
        "executor_name": "exhibitorBannerImageUpload",
        "executor_version": "v1",
        "executor_display_name": "Exhibitor Banner Image Upload",
        "executor_description": "This API used to exhibitor banner image upload by exhibitor id associated with the specified event. To call this API, user have to pass query param with API URL like id, image upload details and authentication key to authenticate user.",
        "executor_category": "MyBoothCompanyDetailsAPI",
        "executor_category_group": "MyBoothCompanyDetailsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/event/upload/expoBannerImage/exhibitor/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "User pass the update exhibitor banner image details by id."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "imageUploadDto": {
                    "fileName": "string",
                    "secureUrl": "string",
                    "originalImgUrl": "string",
                    "croppedImgUrl": "string",
                    "croppedImgName": "string",
                    "height": 0,
                    "width": 0,
                    "x": 0,
                    "y": 0,
                    "faviconImage": true
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692784810168,
        "lastModifiedTime": 1692784810168,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "croppedImgName": "string",
                    "croppedImgUrl": "string",
                    "faviconImage": false,
                    "fileName": "string",
                    "height": 0,
                    "originalImgUrl": "string",
                    "secureUrl": "string",
                    "width": 0,
                    "x": 0,
                    "y": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112774,
        "executor_type": "THIRDPARTY",
        "executor_name": "getUserTicketIds",
        "executor_version": "v1",
        "executor_display_name": "Get UserTicketIds",
        "executor_description": "This API used to get list of user ticket ids associated with the specified event. To call this API, user have to pass query param with API URL like eventurl and authentication key to authenticate user.",
        "executor_category": "MyBoothCompanyDetailsAPI",
        "executor_category_group": "MyBoothCompanyDetailsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/userTicketTypeIds",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692784621039,
        "lastModifiedTime": 1692784621039,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {}
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112773,
        "executor_type": "THIRDPARTY",
        "executor_name": "logExpoVisitor",
        "executor_version": "v1",
        "executor_display_name": "Log Expo visitor",
        "executor_description": "This API used to get log expo visitor associated with the specified event. To call this API, user have to pass query param with API URL like exhibitorId, id and authentication key to authenticate user.",
        "executor_category": "MyBoothCompanyDetailsAPI",
        "executor_category_group": "MyBoothCompanyDetailsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{id}/exhibitor/{exhibitorId}/visit",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "User pass the unique value associated with log expo."
            },
            {
                "key": "exhibitorId",
                "value": "",
                "description": "The exhibitorId returns unique value associated with exhibitor."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692784554563,
        "lastModifiedTime": 1692784554563,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112782,
        "executor_type": "THIRDPARTY",
        "executor_name": "addExhibitorStaffDetails",
        "executor_version": "v1",
        "executor_display_name": "Add Exhibitor Staff Details",
        "executor_description": "This API is used to add exhibitor staff from the portal page.  This API can be used by authenticated users only, and it will require super admin, event admin, and event staff level access.",
        "executor_category": "MyBoothTeamAPI",
        "executor_category_group": "MyBoothTeamAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/exhibitor/{id}/staff",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "it is unique exhibitor id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "email": "string",
                "firstName": "string",
                "lastName": "string",
                "id": 0,
                "role": "string",
                "allowToBookMeeting": true,
                "allowDirectMessages": true,
                "isLoggedInAtVEH": true,
                "isAllowAttendeeAccess": true,
                "ticketTypesForStaff": [
                    {
                        "userId": 0,
                        "ticketTypeId": 0,
                        "isStaffOrder": true
                    }
                ],
                "user": {
                    "userId": 0,
                    "password": "string",
                    "email": "string",
                    "firstName": "string",
                    "lastName": "string",
                    "phoneNumber": 0,
                    "address1": "string",
                    "address2": "string",
                    "zipcode": "string",
                    "state": "string",
                    "cityOrProvidence": "string",
                    "country": "string",
                    "passwordResetToken": "string",
                    "mostRecentEventId": 0,
                    "marketingOptIn": true,
                    "fbUserId": "string",
                    "googleUserId": "string",
                    "linkedinUserId": "string",
                    "photo": "string",
                    "coverPhoto": "string",
                    "showExhibitorMenu": true,
                    "languageCode": "string",
                    "pushNotificationToken": "string",
                    "": "string",
                    "signUpDate": "2023-08-22",
                    "countryCode": "US(1)"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692785382494,
        "lastModifiedTime": 1692785382494,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Exhibitor staff details saved.",
                    "id": 20
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112780,
        "executor_type": "THIRDPARTY",
        "executor_name": "resendInvitationToTheStaffOfTheExhibitor",
        "executor_version": "v1",
        "executor_display_name": "Resend invitation to the staff of the exhibitor",
        "executor_description": "This API is used to resend the staff invitation emails to exbhitor staff",
        "executor_category": "MyBoothTeamAPI",
        "executor_category_group": "MyBoothTeamAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/exhibitor/{id}/resendInvitation/staff/{staffId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "it contains the event URL of the event"
            },
            {
                "key": "id",
                "value": "",
                "description": "it is unique exhibitor id"
            },
            {
                "key": "staffId",
                "value": "",
                "description": "Staff id is unique number, Contains staff user id."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692785168031,
        "lastModifiedTime": 1692785168031,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Your invitation has been resent."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112781,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllExhibitorStaffDetails",
        "executor_version": "v1",
        "executor_display_name": "Get All Exhibitor Staff Details",
        "executor_description": "This API is used to get all staff details of exhibitors on a portal page by event URL and exhibitor id",
        "executor_category": "MyBoothTeamAPI",
        "executor_category_group": "MyBoothTeamAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/exhibitor/{id}/staff",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "it is unique exhibitor id"
            }
        ],
        "queryParams": [
            {
                "key": "searchString",
                "value": "",
                "description": "it is name of exhibitor you want to search",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "it is number of rerecords you want to fetch",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692785293257,
        "lastModifiedTime": 1692785293257,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 1,
                    "recordsFiltered": 1,
                    "data": [
                        {
                            "firstName": "Mitul",
                            "lastName": "Soni",
                            "email": "Mitul.s@brilworks.com",
                            "role": "exhibitoradmin",
                            "allowToBookMeeting": true,
                            "allowDirectMessages": true,
                            "user": null,
                            "id": 5603,
                            "exhibitorId": 2024,
                            "leads": 0,
                            "exhibitorAdmin": true
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112783,
        "executor_type": "THIRDPARTY",
        "executor_name": "getExhibitorStaff",
        "executor_version": "v1",
        "executor_display_name": "Get Exhibitor staff",
        "executor_description": "This API is used to get login user is exhibitor staff or not from your event url? it will return true or false",
        "executor_category": "MyBoothTeamAPI",
        "executor_category_group": "MyBoothTeamAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/exhibitor/event/{eventUrl}/isExhibitorStaff",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "This field is unique event Url of your event"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692785460826,
        "lastModifiedTime": 1692785460826,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112785,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteExhibitorStaffDetails",
        "executor_version": "v1",
        "executor_display_name": "Delete Exhibitor Staff Details",
        "executor_description": "This API is used to delete exhibitor staff details from the portal page.",
        "executor_category": "MyBoothTeamAPI",
        "executor_category_group": "MyBoothTeamAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/exhibitor/{id}/staff/{staffId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "it is the Unique id of the exhibitor."
            },
            {
                "key": "staffId",
                "value": "",
                "description": "it is staff id of member for that we update details"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692785634307,
        "lastModifiedTime": 1692785634307,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Exhibitor staff details deleted."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112784,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateExhibitorStaffDetails",
        "executor_version": "v1",
        "executor_display_name": "Update Exhibitor Staff Details",
        "executor_description": "This API is used to update staff details from the portal page by the exhibitor admin.  This API can be used by authenticated users only, and it will require super admin, event admin, and event staff level access.",
        "executor_category": "MyBoothTeamAPI",
        "executor_category_group": "MyBoothTeamAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/exhibitor/{id}/staff/{staffId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "it is the Unique id of the exhibitor."
            },
            {
                "key": "staffId",
                "value": "",
                "description": "it is staff id of member for that we update details"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "email": "string",
                "firstName": "string",
                "lastName": "string",
                "id": 0,
                "role": "string",
                "allowToBookMeeting": true,
                "allowDirectMessages": true,
                "isLoggedInAtVEH": true,
                "isAllowAttendeeAccess": true,
                "ticketTypesForStaff": [
                    {
                        "userId": 0,
                        "ticketTypeId": 0,
                        "isStaffOrder": true
                    }
                ],
                "user": {
                    "userId": 0,
                    "password": "string",
                    "email": "string",
                    "firstName": "string",
                    "lastName": "string",
                    "phoneNumber": 0,
                    "address1": "string",
                    "address2": "string",
                    "zipcode": "string",
                    "state": "string",
                    "cityOrProvidence": "string",
                    "country": "string",
                    "passwordResetToken": "string",
                    "mostRecentEventId": 0,
                    "marketingOptIn": true,
                    "fbUserId": "string",
                    "googleUserId": "string",
                    "linkedinUserId": "string",
                    "photo": "string",
                    "coverPhoto": "string",
                    "showExhibitorMenu": true,
                    "languageCode": "string",
                    "pushNotificationToken": "string",
                    "": "string",
                    "signUpDate": "2023-08-22",
                    "countryCode": "US(1)"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692785566763,
        "lastModifiedTime": 1692785566763,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Exhibitor Admin updated for event."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112905,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateCoverPhotoForAttendee",
        "executor_version": "v1",
        "executor_display_name": "Update cover photo for attendee",
        "executor_description": "this API is used to update cover Photo for attendees on the event portal side  To call this API, the user has to add image upload details and an authentication key to authenticate the user.",
        "executor_category": "PortalProfileAPI",
        "executor_category_group": "PortalProfileAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/attendee/coverPhoto",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "this is unique event Url of your event"
            }
        ],
        "queryParams": [
            {
                "key": "coverPhoto",
                "value": "",
                "description": "this is the file name of coverPhoto",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692856609669,
        "lastModifiedTime": 1692856609669,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Success"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112904,
        "executor_type": "THIRDPARTY",
        "executor_name": "uploadCoverPhotoForAttendee",
        "executor_version": "v1",
        "executor_display_name": "upload cover photo for attendee",
        "executor_description": "this API is used to upload cover Photo for attendees on the event portal side  To call this API, the user has to add image upload details and an authentication key to authenticate the user.",
        "executor_category": "PortalProfileAPI",
        "executor_category_group": "PortalProfileAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/upload/coverPhoto/user",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "ImageUploadDto": {
                    "fileName": "string",
                    "secureUrl": "string",
                    "originalImgUrl": "string",
                    "croppedImgUrl": "string",
                    "croppedImgName": "string",
                    "height": 0,
                    "width": 0,
                    "x": 0,
                    "y": 0,
                    "faviconImage": true
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692856512380,
        "lastModifiedTime": 1692856512380,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "croppedImgName": "string",
                    "croppedImgUrl": "string",
                    "faviconImage": false,
                    "fileName": "string",
                    "height": 0,
                    "originalImgUrl": "string",
                    "secureUrl": "string",
                    "width": 0,
                    "x": 0,
                    "y": 0
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112232,
        "executor_type": "THIRDPARTY",
        "executor_name": "createVirtualEventSettings",
        "executor_version": "v1",
        "executor_display_name": "Create virtual event settings",
        "executor_description": "This API is used to create virtual event settings.",
        "executor_category": "HostVirtualEventAPI",
        "executor_category_group": "HostVirtualEventAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/virtual-event-settings",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "streamProvider": "NULL",
                "subStreamProvider": "VOXEET",
                "streamUrl": "string",
                "streamKey": "string",
                "rtmpUrl": "string",
                "accelEventsStudio": true,
                "id": 0,
                "sponsorSection": "string",
                "hubNavigationBackgroundColor": "string",
                "hubMainBackgroundColor": "string",
                "allowAttendeeToPostInFeed": true,
                "welcomeMessage": "string",
                "welcomeMessageVideo": "string",
                "customTab": "string",
                "numberOfLiveStreamingExhibitorsPurchased": 0,
                "maxNumberOfFreeAttendees": 0,
                "virtualEventTabs": {
                    "key1": [
                        {
                            "key": "string",
                            "value": "string",
                            "hide": true,
                            "visible": true
                        }
                    ]
                },
                "expoBackgroundImage": "string",
                "simultaneousSessionScroll": true,
                "gamificationNewFlow": true,
                "buttonTextColorConfiguration": {
                    "mainStageSessionColor": "string",
                    "breakoutSessionColor": "string",
                    "meetUpSessionColor": "string",
                    "workshopSessionColor": "string",
                    "expoSessionColor": "string",
                    "breakSessionColor": "string",
                    "othersSessionColor": "string",
                    "font": "string",
                    "countdownSessionTextColor": "string",
                    "SessionTimeTextColor": "string",
                    "agendaTabsColor": "string",
                    "virtualHubTabTextColor": "string",
                    "joinButtonColor": "string",
                    "enterEventButtonColor": "string",
                    "enterEventLabel": "string",
                    "expoTabsColor": "string",
                    "numberOfSessionColor": "string",
                    "numberOfSessionTextColor": "string",
                    "chatLinkColor": "string",
                    "hubAllSessionTextColor": "string",
                    "hubSpeakerNameTextColor": "string",
                    "virtualEventHubHeaderColor": "string",
                    "hubSessionHeaderColor": "string",
                    "hubSessionNameColor": "string",
                    "joinSessionColor": "string",
                    "agendaTabsTextColor": "string",
                    "virtualEventHubHeaderTextColor": "string",
                    "mainStageTextColor": "string",
                    "breakOutSessionTextColor": "string",
                    "meetupSessionTextColor": "string",
                    "workshopSessionTextColor": "string",
                    "expoSessionTextColor": "string",
                    "breakSessionTextColor": "string",
                    "otherSessionTextColor": "string"
                },
                "virtualEventLabels": {
                    "key1": [
                        {
                            "key": "string",
                            "value": "string",
                            "hide": true,
                            "color": "string"
                        }
                    ]
                },
                "lobbyBannerImage": "string",
                "maxAgendaItems": 0,
                "hideLobbyBanner": true,
                "addNoFollow": true,
                "bookMarkButtonColor": "string",
                "allowInterestToAttendee": true,
                "allowLateJoin": true,
                "lobbyPageStreamInfo": {
                    "type": "LOBBY",
                    "streamUrl": "string",
                    "streamKey": "string",
                    "title": "string",
                    "description": "string",
                    "liveStreamId": "string",
                    "streamProvider": "NULL",
                    "rtmpUrl": "string",
                    "streamStatus": true,
                    "playBackRestrictionToken": "string",
                    "thumbnailRestrictionToken": "string"
                },
                "expoPageStreamInfo": {
                    "type": "LOBBY",
                    "streamUrl": "string",
                    "streamKey": "string",
                    "title": "string",
                    "description": "string",
                    "liveStreamId": "string",
                    "streamProvider": "NULL",
                    "rtmpUrl": "string",
                    "streamStatus": true,
                    "playBackRestrictionToken": "string",
                    "thumbnailRestrictionToken": "string"
                },
                "sessionWaitingImage": "string",
                "allowContactInfoFlagForAttendees": true,
                "expoBannerImage": "string",
                "lowLatency": true,
                "labelLanguageCode": "string",
                "hideExpoBannerImage": true,
                "acceptDirectMessages": true,
                "pronounEnabled": true,
                "workshopEnabled": true,
                "enabledLounges": true,
                "speakerInviteEnable": true,
                "enablePeoplePage": true,
                "showTotalAttendees": true,
                "showOnlineAttendees": true,
                "stageEnabled": true,
                "sessionEnabled": true,
                "networkingEnabled": true,
                "expoEnabled": true,
                "feedEnabled": true,
                "hubNavigationTextColor": "string",
                "enabledLobbyChat": true,
                "expoLiveStream": true,
                "menuCTAEnabled": true,
                "menuCTAUrl": "string",
                "menuCTAImage": "string",
                "enableVirtualization": true,
                "enableLobbyQnAPrivate": true,
                "enableLobbyQuesAndAns": true,
                "thumbnailRestrictionToken": "string",
                "playBackRestrictionToken": "string",
                "enableLobbyPoll": true,
                "lobbyLiveStream": true,
                "customizeSpeakerInviteEmail": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692602403411,
        "lastModifiedTime": 1692602403411,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Virtual events settings created successfully."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112229,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateVirtualEvent",
        "executor_version": "v1",
        "executor_display_name": "Update virtual event",
        "executor_description": "This API can be used by admin and super admin to update virtual event settings.  It will update data like allowInterestToAttendee, accelEventsStudio, acceptDirectMessages, addNoFollow, allowAttendeeToPostInFeed, enablePeoplePage, enabledLobbyChat, sponsorSection, sessionEnabled, lobbyPageStreamInfo and other details.",
        "executor_category": "HostVirtualEventAPI",
        "executor_category_group": "HostVirtualEventAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/virtual-event-settings/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Id is unique identifier for virtual event settings."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "virtualEventDTO": {
                    "streamProvider": "NULL",
                    "subStreamProvider": "VOXEET",
                    "streamUrl": "string",
                    "streamKey": "string",
                    "rtmpUrl": "string",
                    "accelEventsStudio": true,
                    "id": 0,
                    "sponsorSection": "string",
                    "hubNavigationBackgroundColor": "string",
                    "hubMainBackgroundColor": "string",
                    "allowAttendeeToPostInFeed": true,
                    "welcomeMessage": "string",
                    "welcomeMessageVideo": "string",
                    "customTab": "string",
                    "numberOfLiveStreamingExhibitorsPurchased": 0,
                    "maxNumberOfFreeAttendees": 0,
                    "virtualEventTabs": {
                        "key1": [
                            {
                                "key": "string",
                                "value": "string",
                                "hide": true,
                                "visible": true
                            }
                        ]
                    },
                    "expoBackgroundImage": "string",
                    "simultaneousSessionScroll": true,
                    "gamificationNewFlow": true,
                    "buttonTextColorConfiguration": {
                        "mainStageSessionColor": "string",
                        "breakoutSessionColor": "string",
                        "meetUpSessionColor": "string",
                        "workshopSessionColor": "string",
                        "expoSessionColor": "string",
                        "breakSessionColor": "string",
                        "othersSessionColor": "string",
                        "font": "string",
                        "countdownSessionTextColor": "string",
                        "SessionTimeTextColor": "string",
                        "agendaTabsColor": "string",
                        "virtualHubTabTextColor": "string",
                        "joinButtonColor": "string",
                        "enterEventButtonColor": "string",
                        "enterEventLabel": "string",
                        "expoTabsColor": "string",
                        "numberOfSessionColor": "string",
                        "numberOfSessionTextColor": "string",
                        "chatLinkColor": "string",
                        "hubAllSessionTextColor": "string",
                        "hubSpeakerNameTextColor": "string",
                        "virtualEventHubHeaderColor": "string",
                        "hubSessionHeaderColor": "string",
                        "hubSessionNameColor": "string",
                        "joinSessionColor": "string",
                        "agendaTabsTextColor": "string",
                        "virtualEventHubHeaderTextColor": "string",
                        "mainStageTextColor": "string",
                        "breakOutSessionTextColor": "string",
                        "meetupSessionTextColor": "string",
                        "workshopSessionTextColor": "string",
                        "expoSessionTextColor": "string",
                        "breakSessionTextColor": "string",
                        "otherSessionTextColor": "string"
                    },
                    "virtualEventLabels": {
                        "key1": [
                            {
                                "key": "string",
                                "value": "string",
                                "hide": true,
                                "color": "string"
                            }
                        ]
                    },
                    "lobbyBannerImage": "string",
                    "maxAgendaItems": 0,
                    "hideLobbyBanner": true,
                    "addNoFollow": true,
                    "bookMarkButtonColor": "string",
                    "allowInterestToAttendee": true,
                    "allowLateJoin": true,
                    "lobbyPageStreamInfo": {
                        "type": "LOBBY",
                        "streamUrl": "string",
                        "streamKey": "string",
                        "title": "string",
                        "description": "string",
                        "liveStreamId": "string",
                        "streamProvider": "NULL",
                        "rtmpUrl": "string",
                        "streamStatus": true,
                        "playBackRestrictionToken": "string",
                        "thumbnailRestrictionToken": "string"
                    },
                    "expoPageStreamInfo": {
                        "type": "LOBBY",
                        "streamUrl": "string",
                        "streamKey": "string",
                        "title": "string",
                        "description": "string",
                        "liveStreamId": "string",
                        "streamProvider": "NULL",
                        "rtmpUrl": "string",
                        "streamStatus": true,
                        "playBackRestrictionToken": "string",
                        "thumbnailRestrictionToken": "string"
                    },
                    "sessionWaitingImage": "string",
                    "allowContactInfoFlagForAttendees": true,
                    "expoBannerImage": "string",
                    "lowLatency": true,
                    "labelLanguageCode": "string",
                    "hideExpoBannerImage": true,
                    "acceptDirectMessages": true,
                    "pronounEnabled": true,
                    "workshopEnabled": true,
                    "enabledLounges": true,
                    "speakerInviteEnable": true,
                    "enablePeoplePage": true,
                    "showTotalAttendees": true,
                    "showOnlineAttendees": true,
                    "stageEnabled": true,
                    "sessionEnabled": true,
                    "networkingEnabled": true,
                    "expoEnabled": true,
                    "feedEnabled": true,
                    "hubNavigationTextColor": "string",
                    "enabledLobbyChat": true,
                    "expoLiveStream": true,
                    "menuCTAEnabled": true,
                    "menuCTAUrl": "string",
                    "menuCTAImage": "string",
                    "enableVirtualization": true,
                    "enableLobbyQnAPrivate": true,
                    "enableLobbyQuesAndAns": true,
                    "thumbnailRestrictionToken": "string",
                    "playBackRestrictionToken": "string",
                    "enableLobbyPoll": true,
                    "lobbyLiveStream": true,
                    "customizeSpeakerInviteEmail": "string"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692602305088,
        "lastModifiedTime": 1692602305088,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Virtual events settings updated successfully."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112227,
        "executor_type": "THIRDPARTY",
        "executor_name": "getVirtualEventSettings",
        "executor_version": "v1",
        "executor_display_name": "Get Virtual Event Settings",
        "executor_description": "This API is used to get virtual event settings details associated with the specified event. API used at host side - event admin and super admin can access this API.  It will return data like allowInterestToAttendee, accelEventsStudio, acceptDirectMessages, addNoFollow, allowAttendeeToPostInFeed, enablePeoplePage, enabledLobbyChat, sponsorSection, sessionEnabled, lobbyPageStreamInfo and other details.",
        "executor_category": "HostVirtualEventAPI",
        "executor_category_group": "HostVirtualEventAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/virtual-event-settings",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692602209260,
        "lastModifiedTime": 1692602209260,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "streamProvider": null,
                    "subStreamProvider": null,
                    "streamUrl": null,
                    "streamKey": null,
                    "rtmpUrl": null,
                    "accelEventsStudio": false,
                    "id": 3596,
                    "sponsorSection": "<h2 style=\"text-align:center\"><strong>Sponsors</strong></h2><p style=\"text-align:center\">Add a list of your sponsors or upload your sponsors' logos!</p>",
                    "hubNavigationBackgroundColor": "#377EF9",
                    "hubMainBackgroundColor": "#f5fafc",
                    "allowAttendeeToPostInFeed": false,
                    "welcomeMessage": null,
                    "welcomeMessageVideo": null,
                    "customTab": null,
                    "menuCTAUrl": null,
                    "menuCTAImage": null,
                    "numberOfLiveStreamingExhibitorsPurchased": 0,
                    "maxNumberOfFreeAttendees": 0,
                    "virtualEventTabs": {
                        "lobbyTab": [
                            {
                                "key": "Feed",
                                "value": "Feed",
                                "hide": false,
                                "visible": true
                            },
                            {
                                "key": "Agenda",
                                "value": "Agenda",
                                "hide": false,
                                "visible": true
                            },
                            {
                                "key": "Sponsors",
                                "value": "Sponsors",
                                "hide": false,
                                "visible": true
                            },
                            {
                                "key": "Info Desk",
                                "value": "Info Desk",
                                "hide": false,
                                "visible": true
                            },
                            {
                                "key": "Custom",
                                "value": "Custom",
                                "hide": true,
                                "visible": true
                            },
                            {
                                "key": "Gamification",
                                "value": "Gamification",
                                "hide": false,
                                "visible": true
                            },
                            {
                                "key": "Show Challenges",
                                "value": "Show Challenges",
                                "hide": false,
                                "visible": true
                            }
                        ],
                        "stageSessionTab": [
                            {
                                "key": "Live Sessions",
                                "value": "Live Sessions",
                                "hide": false,
                                "visible": true
                            },
                            {
                                "key": "Session Details",
                                "value": "Details",
                                "hide": false,
                                "visible": true
                            },
                            {
                                "key": "Speakers",
                                "value": "Speakers",
                                "hide": false,
                                "visible": true
                            },
                            {
                                "key": "Sponsoring Company",
                                "value": "Sponsoring Company",
                                "hide": false,
                                "visible": true
                            },
                            {
                                "key": "Up Next",
                                "value": "Up Next",
                                "hide": false,
                                "visible": true
                            }
                        ],
                        "leftSideNavMenu": [
                            {
                                "key": "Lobby",
                                "value": "Lobby",
                                "hide": false,
                                "visible": true
                            },
                            {
                                "key": "Main Stage",
                                "value": "Main Stage",
                                "hide": false,
                                "visible": true
                            },
                            {
                                "key": "Breakout Sessions",
                                "value": "Breakout Sessions",
                                "hide": false,
                                "visible": true
                            },
                            {
                                "key": "Networking",
                                "value": "Networking",
                                "hide": false,
                                "visible": true
                            },
                            {
                                "key": "Lounges",
                                "value": "Lounges",
                                "hide": false,
                                "visible": true
                            },
                            {
                                "key": "Workshops",
                                "value": "Workshops",
                                "hide": false,
                                "visible": true
                            },
                            {
                                "key": "Expo",
                                "value": "Expo",
                                "hide": false,
                                "visible": true
                            },
                            {
                                "key": "People",
                                "value": "People",
                                "hide": false,
                                "visible": true
                            },
                            {
                                "key": "My Speaking Schedule",
                                "value": "My Speaking Schedule",
                                "hide": false,
                                "visible": true
                            },
                            {
                                "key": "My Booth",
                                "value": "My Booth",
                                "hide": false,
                                "visible": true
                            }
                        ]
                    },
                    "virtualEventLabels": {
                        "otherLabels": [
                            {
                                "key": "Bookmark",
                                "value": "Bookmark",
                                "hide": false,
                                "color": null
                            }
                        ]
                    },
                    "expoBackgroundImage": null,
                    "simultaneousSessionScroll": true,
                    "gamificationNewFlow": true,
                    "buttonTextColorConfiguration": {
                        "mainStageSessionColor": "#2ec974",
                        "breakoutSessionColor": "#377ef9",
                        "meetUpSessionColor": "#f0ad4e",
                        "workshopSessionColor": "#c9c12e",
                        "expoSessionColor": "#722ec9",
                        "breakSessionColor": "#2EC974",
                        "othersSessionColor": "#f93737",
                        "font": "#ffffff",
                        "countdownSessionTextColor": "#377ef9",
                        "agendaTabsColor": "#37c5f9",
                        "virtualHubTabTextColor": "#377ef9",
                        "joinButtonColor": "#377ef9",
                        "enterEventButtonColor": "#406ae8",
                        "enterEventLabel": "Enter Event",
                        "expoTabsColor": "#37c5f9",
                        "numberOfSessionColor": "#33CCFF",
                        "numberOfSessionTextColor": "#ffffff",
                        "chatLinkColor": "#000000",
                        "hubAllSessionTextColor": "#172856",
                        "hubSpeakerNameTextColor": "#30384e",
                        "virtualEventHubHeaderColor": "#31415f",
                        "hubSessionHeaderColor": "#31415f",
                        "hubSessionNameColor": "#31415f",
                        "joinSessionColor": "#377EF9",
                        "mainStageTextColor": "#ffffff",
                        "breakOutSessionTextColor": "#ffffff",
                        "meetupSessionTextColor": "#ffffff",
                        "workshopSessionTextColor": "#ffffff",
                        "expoSessionTextColor": "#ffffff",
                        "breakSessionTextColor": "#ffffff",
                        "otherSessionTextColor": "#ffffff",
                        "sessionTimeTextColor": "#377ef9"
                    },
                    "lobbyBannerImage": null,
                    "maxAgendaItems": 10,
                    "customizeSpeakerInviteEmail": null,
                    "hideLobbyBanner": false,
                    "addNoFollow": false,
                    "bookMarkButtonColor": null,
                    "allowInterestToAttendee": true,
                    "allowLateJoin": true,
                    "lobbyPageStreamInfo": null,
                    "expoPageStreamInfo": null,
                    "sessionWaitingImage": null,
                    "allowContactInfoFlagForAttendees": false,
                    "expoBannerImage": null,
                    "lowLatency": false,
                    "labelLanguageCode": "EN",
                    "hideExpoBannerImage": false,
                    "acceptDirectMessages": true,
                    "pronounEnabled": true,
                    "workshopEnabled": true,
                    "enabledLounges": true,
                    "lobbyLiveStream": false,
                    "speakerInviteEnable": true,
                    "enablePeoplePage": true,
                    "menuCTAEnabled": true,
                    "showTotalAttendees": true,
                    "showOnlineAttendees": true,
                    "stageEnabled": true,
                    "sessionEnabled": true,
                    "networkingEnabled": true,
                    "expoEnabled": true,
                    "feedEnabled": false,
                    "hubNavigationTextColor": "#9BBEF9",
                    "enabledLobbyChat": true,
                    "expoLiveStream": false
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112519,
        "executor_type": "THIRDPARTY",
        "executor_name": "addCustomAttribute",
        "executor_version": "v1",
        "executor_display_name": "Add Custom Attribute",
        "executor_description": "This API adds a custom attribute associated with the specified event. API used at host side event admin and super admin can access this API. It will return a response like a type and a message. To call this API, the user has to pass a query param with API URLs like eventURL, dataType, recurringEventId, customAttribute, and authentication key to authenticate the user.",
        "executor_category": "HostRegistrationOrderForm",
        "executor_category_group": "HostRegistrationOrderForm",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/event/{eventURL}/customAttribute",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventURL",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here is the demo event url."
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "User pass the In-Person event id.",
                "req": false
            },
            {
                "key": "dataType",
                "value": "",
                "description": "It's contains the data type like TICKET, ADDON.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "customAttribute": {
                    "attributeValueType": "DROPDOWN",
                    "attribute": true,
                    "enabledForTicketHolder": true,
                    "requiredForTicketHolder": true,
                    "enabledForTicketPurchaser": true,
                    "requiredForTicketPurchaser": true,
                    "hiddenForPurchaser": true,
                    "hiddenForHolder": true,
                    "dataType": "TICKET",
                    "customAttributeCommons": [
                        {
                            "attributeName": "string",
                            "defaultValueJson": "string",
                            "eventTicketTypeId": "string",
                            "id": 0,
                            "newSubQue": false,
                            "parentQuestionId": 0,
                            "selectedAnsId": 0
                        }
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692693051839,
        "lastModifiedTime": 1692693051839,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112515,
        "executor_type": "THIRDPARTY",
        "executor_name": "saveTicketingSetting",
        "executor_version": "v1",
        "executor_display_name": "Save Ticketing Setting",
        "executor_description": "This API Used to save ticketing setting associated with the specified event. API used at host side event admin and super admin can access this API. It will return response like type and message. To call this API, user have to pass query param with API URL like isForBuyer, ticket setting details and authentication key to authenticate user.",
        "executor_category": "HostRegistrationOrderForm",
        "executor_category_group": "HostRegistrationOrderForm",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/settings",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "isForBuyer",
                "value": "",
                "description": "User pass true then is for buyer ticketing otherwise false.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "ticketSetting": {
                    "holderAttribute": true,
                    "collectAddOnAttribute": true,
                    "allowAttendeeToEditInfo": true,
                    "attributes": {
                        "id": 0,
                        "fieldName": "string",
                        "enabledForTicketHolder": true,
                        "requiredForTicketHolder": true,
                        "enabledForTicketPurchaser": true,
                        "requiredForTicketPurchaser": true,
                        "isDeletedForHolder": true,
                        "isDeletedForBuyer": true,
                        "createdFrom": 0,
                        "type": "string",
                        "holderPosition": 0,
                        "buyerPosition": 0
                    }
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692692646344,
        "lastModifiedTime": 1692692646344,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112513,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTicketingSetting",
        "executor_version": "v1",
        "executor_display_name": "Get Ticketing Setting",
        "executor_description": "This API Used to get ticketing setting associated with the specified event. API used at host side event admin and super admin can access this API. It will return data like allowAttendeeToEditInfo, collectAddOnAttribute, holderAttribute, eventURL, attributes and other details. To call this API, user have to pass query param with API URL like recurringEventId and authentication key to authenticate user.",
        "executor_category": "HostRegistrationOrderForm",
        "executor_category_group": "HostRegistrationOrderForm",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/settings",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "User pass the In-Person event id.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692692466631,
        "lastModifiedTime": 1692692466631,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "allowAttendeeToEditInfo": false,
                    "attributes": [
                        {
                            "buyerPosition": 0,
                            "createdFrom": 0,
                            "deletedForBuyer": true,
                            "deletedForHolder": true,
                            "enabledForTicketHolder": false,
                            "enabledForTicketPurchaser": false,
                            "fieldName": "string",
                            "holderPosition": 0,
                            "id": 0,
                            "requiredForTicketHolder": false,
                            "requiredForTicketPurchaser": false,
                            "type": "string"
                        }
                    ],
                    "collectAddOnAttribute": false,
                    "eventURL": "string",
                    "holderAttribute": false
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112514,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllTicketingTypeSettings",
        "executor_version": "v1",
        "executor_display_name": "Get All Ticketing Type Settings",
        "executor_description": "This API is used to get all ticketing type settings associated with the specified event. API is used as host side event admin and super admin can access this API. It will return data like allowDisagreeDisclaimerConfirmation, seating, eventCapacity, showRemainingTickets, showRegistrationButton and other details. To call this API, user will have to pass query parameter with API URL like recurringEventId and authentication key to authenticate user.",
        "executor_category": "HostRegistrationOrderForm",
        "executor_category_group": "HostRegistrationOrderForm",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/getTicketingTypeSettings",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "User pass the In-Person event id.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692692536239,
        "lastModifiedTime": 1692692536239,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "allowDisagreeDisclaimerConfirmation": false,
                    "allowEditingOfDisclaimer": false,
                    "customDisclaimer": "string",
                    "eventCapacity": 0,
                    "limitEventCapacity": false,
                    "requireDisclaimerConfirmation": true,
                    "seating": true,
                    "showRegistrationButton": false,
                    "showRemainingTickets": false,
                    "showTicketPrice": false
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112522,
        "executor_type": "THIRDPARTY",
        "executor_name": "saveTicketingSettings",
        "executor_version": "v1",
        "executor_display_name": "Save Ticketing Settings",
        "executor_description": "This API is used to save ticketing settings associated with the specified event. API used at host side event admin and super admin can access this API. It will return a response like type and message. To call this API, user will have to pass query param with API URL like recurringEventId, ticketing type settings details and authentication key to authenticate user.",
        "executor_category": "HostRegistrationOrderForm",
        "executor_category_group": "HostRegistrationOrderForm",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/saveTicketingTypeSettings",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "ticketingTypeSettingsDto": {
                    "showRemainingTickets": true,
                    "isSeating": true,
                    "customDisclaimer": "string",
                    "requireDisclaimerConfirmation": true,
                    "allowDisagreeDisclaimerConfirmation": true,
                    "limitEventCapacity": true,
                    "eventCapacity": 0,
                    "showRegistrationButton": true,
                    "showTicketPrice": true
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692693697809,
        "lastModifiedTime": 1692693697809,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112523,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateCustomAttributePosition",
        "executor_version": "v1",
        "executor_display_name": "Update Custom Attribute Position",
        "executor_description": "This API is used to update the custom attribute position associated with the specified event. API used at host side event admin and super admin can access this API. To call this API, user will have to pass query param with API URL like recurringEventId, isForBuyer, topId, topBottomId, customAttributeId and authentication key to authenticate user.",
        "executor_category": "HostRegistrationOrderForm",
        "executor_category_group": "HostRegistrationOrderForm",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/event/{eventURL}/customAttribute/{customAttributeId}/topId/{topId}/topBottomId/{topBottomId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventURL",
                "value": "",
                "description": "Update Custom Attribute Position"
            },
            {
                "key": "customAttributeId",
                "value": "",
                "description": "The customAttributeId user pass the unique value associated with custom attribute."
            },
            {
                "key": "topId",
                "value": "",
                "description": "User pass the top position custom attribute id."
            },
            {
                "key": "topBottomId",
                "value": "",
                "description": "User pass the top bottom custom position id."
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "User pass the In-Person event id.",
                "req": false
            },
            {
                "key": "isForBuyer",
                "value": "",
                "description": "User pass the true and false value for buyer attribute.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692693830949,
        "lastModifiedTime": 1692693830949,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "ok"
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112520,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllCustomAttribute",
        "executor_version": "v1",
        "executor_display_name": "Get All Custom Attribute",
        "executor_description": "This API is used to get all custom attributes associated with the specified event. API used at host side event admin and super admin can access this API. It will return response like type and message. To call this API, user have to pass query param with API URL like isForBuyer and authentication key to authenticate user.",
        "executor_category": "HostRegistrationOrderForm",
        "executor_category_group": "HostRegistrationOrderForm",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/customAttribute/addon",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "isForBuyer",
                "value": "",
                "description": "User pass the true and false for buyer.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692693496694,
        "lastModifiedTime": 1692693496694,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": 0,
                        "fieldName": "name",
                        "enabledForTicketHolder": false,
                        "requiredForTicketHolder": false,
                        "enabledForTicketPurchaser": false,
                        "requiredForTicketPurchaser": false,
                        "isDeletedForHolder": false,
                        "isDeletedForBuyer": false,
                        "createdFrom": 0,
                        "type": "type",
                        "holderPosition": 0,
                        "buyerPosition": 0
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112517,
        "executor_type": "THIRDPARTY",
        "executor_name": "getCustomAttribute",
        "executor_version": "v1",
        "executor_display_name": "Get Custom Attribute",
        "executor_description": "This API Used to get custom attribute associated with the specified event. API used at host side event admin and super admin can access this API. It will return response like attributeType, atrributeName, enabledForTicketHolder, eventTicketTypeId and many more. To call this API, user have to pass query param with API URL like isForBuyer, attributeId and authentication key to authenticate user.",
        "executor_category": "HostRegistrationOrderForm",
        "executor_category_group": "HostRegistrationOrderForm",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/customAttribute/{attributeId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "attributeId",
                "value": "",
                "description": "User pass the custom attribute id."
            }
        ],
        "queryParams": [
            {
                "key": "isForBuyer",
                "value": "",
                "description": "User pass the true or false value for buyer attribute.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692692745769,
        "lastModifiedTime": 1692692745769,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112521,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteCustomAttribute",
        "executor_version": "v1",
        "executor_display_name": "Delete Custom Attribute",
        "executor_description": "his API is used to delete custom attributes associated with the specified event. API is used at host side event admin and super admin can access this API. It will return response like type and message. To call this API, user has to pass query param with API URL like recurringEventId, attributeId, isDeletedForBuyer and authentication key to authenticate user.",
        "executor_category": "HostRegistrationOrderForm",
        "executor_category_group": "HostRegistrationOrderForm",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/customAttribute/{attributeId}/deleteForBuyer/{isDeletedForBuyer}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "attributeId",
                "value": "",
                "description": "The attributeId user pass the unique value associated with attribute."
            },
            {
                "key": "isDeletedForBuyer",
                "value": "",
                "description": "It's contains the fields is deleted for buyer."
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "User pass the In-Person event id.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692693605429,
        "lastModifiedTime": 1692693605429,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112518,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateCustomAttribute",
        "executor_version": "v1",
        "executor_display_name": "Update Custom Attribute",
        "executor_description": "This API is used to update custom attributes associated with the specified event. API used at host side event admin and super admin can access this API. It will return response like type and message. To call this API, user will have to pass query param with API URL like eventURL, attributeId, updateForBuyer, recurringEventId, customAttribute and authentication key to authenticate user.",
        "executor_category": "HostRegistrationOrderForm",
        "executor_category_group": "HostRegistrationOrderForm",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/event/{eventURL}/customAttribute/{attributeId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventURL",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here is the demo event url."
            },
            {
                "key": "attributeId",
                "value": "",
                "description": "The attributeId user pass the unique value associated with attribute."
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "User pass the In-Person event id.",
                "req": false
            },
            {
                "key": "updateForBuyer",
                "value": "",
                "description": "User pass the true for buyer update otherwise false.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "customAttribute": {
                    "attributeValueType": "DROPDOWN",
                    "attribute": true,
                    "enabledForTicketHolder": true,
                    "requiredForTicketHolder": true,
                    "enabledForTicketPurchaser": true,
                    "requiredForTicketPurchaser": true,
                    "hiddenForPurchaser": true,
                    "hiddenForHolder": true,
                    "dataType": "TICKET",
                    "customAttributeCommons": [
                        {
                            "attributeName": "string",
                            "defaultValueJson": "string",
                            "eventTicketTypeId": "string",
                            "id": 0,
                            "newSubQue": false,
                            "parentQuestionId": 0,
                            "selectedAnsId": 0
                        }
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692692917935,
        "lastModifiedTime": 1692692917935,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "created"
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112562,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateDiscountCodesForTicketing",
        "executor_version": "v1",
        "executor_display_name": "Update Discount Codes For Ticketing",
        "executor_description": "This API is used to update discount codes for ticketing associated with the specified event. API is used as host side event admin and super admin can access this API. To call this API, user will have to pass query param with API URL like recurringEventId, id, ticketing coupon details and authentication key to authenticate user.",
        "executor_category": "HostRegistrationDiscount",
        "executor_category_group": "HostRegistrationDiscount",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/couponCode/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "User pass the update discount codes for ticketing details by id."
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "User pass the In-Person event id.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "ticketingCoupon": {
                    "id": 0,
                    "eventTicketTypeId": "string",
                    "uses": 0,
                    "usesPerUser": 0,
                    "couponStartDate": "string",
                    "couponEndDate": "string",
                    "applicableToHiddenCoupon": true,
                    "recurringRelativeStartTime": 0,
                    "recurringRelativeEndTime": 0,
                    "couponCodes": [
                        "string"
                    ],
                    "couponCode": "string",
                    "amount": 0,
                    "discountType": "PERCENTAGE",
                    "applicableTo": "PER_TICKET"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692699860255,
        "lastModifiedTime": 1692699860255,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112563,
        "executor_type": "THIRDPARTY",
        "executor_name": "saveDiscountCodesForTicketing",
        "executor_version": "v1",
        "executor_display_name": "Save Discount Codes For Ticketing",
        "executor_description": "This API is used to save discount codes for ticketing associated with the specified event. API is used as host side event admin and super admin can access this API. To call this API, user will have to pass query param with API URL like recurringEventId, ticketing coupen details and authentication key to authenticate user.",
        "executor_category": "HostRegistrationDiscount",
        "executor_category_group": "HostRegistrationDiscount",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/couponCode",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "User pass the In-Person event id.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "ticketingCoupon": {
                    "id": 0,
                    "eventTicketTypeId": "string",
                    "uses": 0,
                    "usesPerUser": 0,
                    "couponStartDate": "string",
                    "couponEndDate": "string",
                    "applicableToHiddenCoupon": true,
                    "recurringRelativeStartTime": 0,
                    "recurringRelativeEndTime": 0,
                    "couponCodes": [
                        "string"
                    ],
                    "couponCode": "string",
                    "amount": 0,
                    "discountType": "PERCENTAGE",
                    "applicableTo": "PER_TICKET"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692699946780,
        "lastModifiedTime": 1692699946780,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112561,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllDiscountCodesForTicketing",
        "executor_version": "v1",
        "executor_display_name": "Get All Discount Codes For Ticketing",
        "executor_description": "This API is used to get all discount codes for ticketing associated with the specified event. API is used as host side event admin and super admin can access this API. To call this API, user will have to pass query param with API URL like recurringEventId and authentication key to authenticate user.",
        "executor_category": "HostRegistrationDiscount",
        "executor_category_group": "HostRegistrationDiscount",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/couponCodes",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "User pass the In-Person event id.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692699761167,
        "lastModifiedTime": 1692699761167,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": 635,
                        "code": "CODE50",
                        "amount": 50,
                        "couponUsed": 0,
                        "maximumUseOfCoupon": -1,
                        "maximumUseOfCouponPerUser": -1,
                        "startDate": "10/19/2021 11:24:00",
                        "endDate": "11/10/2021 16:45:00",
                        "eventTicketTypeId": "0",
                        "discountType": "FLAT",
                        "applicableTo": "PER_TICKET",
                        "recurringRelativeStartTime": 0,
                        "recurringRelativeEndTime": 0,
                        "recurringEventId": null
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112565,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteDiscountCodeDetailByCode",
        "executor_version": "v1",
        "executor_display_name": "Delete Discount Code Detail By Code",
        "executor_description": "This API is used to delete discount code detail by code associated with the specified event. API is used as host side event admin and super admin can access this API. It will return a response like type and message. To call this API, user will have to pass query param with API URL like recurringEventId, id and authentication key to authenticate user.",
        "executor_category": "HostRegistrationDiscount",
        "executor_category_group": "HostRegistrationDiscount",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/couponCode/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "User pass the delete discount code details by id."
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "User pass the In-Person event id.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692700032188,
        "lastModifiedTime": 1692700032188,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Coupon deleted successfully"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112790,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteExhibitorProduct",
        "executor_version": "v1",
        "executor_display_name": "Delete Exhibitor Product",
        "executor_description": "This API is used to delete a product by its id.",
        "executor_category": "MyBoothProductsAPI",
        "executor_category_group": "MyBoothProductsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/portal/exhibitor/{exhibitorId}/product/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "exhibitorId",
                "value": "",
                "description": "it is the Unique id of the exhibitor."
            },
            {
                "key": "id",
                "value": "",
                "description": "it is unique product id of exhibitor"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692786482428,
        "lastModifiedTime": 1692786482428,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Product Deleted Successfully."
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112787,
        "executor_type": "THIRDPARTY",
        "executor_name": "addExhibitorProduct",
        "executor_version": "v1",
        "executor_display_name": "Add Exhibitor product",
        "executor_description": "This API is used to add exbhitor product for exbhitor by event URL.",
        "executor_category": "MyBoothProductsAPI",
        "executor_category_group": "MyBoothProductsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/portal/exhibitor/{exhibitorId}/product",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "exhibitorId",
                "value": "",
                "description": "it is the Unique id of the exhibitor."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "id": 0,
                "name": "string",
                "description": "string",
                "price": 0,
                "images": [
                    {
                        "id": 0,
                        "imageUrl": "string"
                    }
                ],
                "discountAmount": 0,
                "discountType": "PERCENTAGE",
                "position": 0,
                "Shopify Buy Button": "string",
                "productBuyButtonLink": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692786077903,
        "lastModifiedTime": 1692786077903,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Product Added Successfully."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112788,
        "executor_type": "THIRDPARTY",
        "executor_name": "exhibitorProductById",
        "executor_version": "v1",
        "executor_display_name": "Exhibitor product by id",
        "executor_description": "This API is used to get product details by product id. Mainly used for edit product information so for we have to get details of product by its Id",
        "executor_category": "MyBoothProductsAPI",
        "executor_category_group": "MyBoothProductsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/portal/exhibitor/{exhibitorId}/product/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "exhibitorId",
                "value": "",
                "description": "it is the Unique id of the exhibitor."
            },
            {
                "key": "id",
                "value": "",
                "description": "it is unique product id of exhibitor"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692786217780,
        "lastModifiedTime": 1692786217780,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": 500,
                    "name": "Item 2",
                    "description": "",
                    "price": 0,
                    "images": [],
                    "discountAmount": 0,
                    "discountType": "PERCENTAGE",
                    "position": 3000,
                    "shopifyBuyButton": null,
                    "productBuyButtonLink": ""
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112786,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllProductDetails",
        "executor_version": "v1",
        "executor_display_name": "Get All Product Details",
        "executor_description": "This API is used to get product details on the portal side by exhibitor Id and used for the front end to see data to users",
        "executor_category": "MyBoothProductsAPI",
        "executor_category_group": "MyBoothProductsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/portal/exhibitor/{exhibitorId}/product",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "exhibitorId",
                "value": "",
                "description": "it is the Unique id of the exhibitor."
            }
        ],
        "queryParams": [
            {
                "key": "searchString",
                "value": "",
                "description": "Name of exhibitor for search",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Total number of records you want to fetch",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692785780957,
        "lastModifiedTime": 1692785780957,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 1,
                    "recordsFiltered": 1,
                    "data": [
                        {
                            "id": 498,
                            "name": "Item 1",
                            "description": "<undefined>kjjjj</undefined>",
                            "price": 20,
                            "images": [],
                            "discountAmount": 0,
                            "discountType": "PERCENTAGE",
                            "position": 1000,
                            "shopifyBuyButton": null,
                            "productBuyButtonLink": ""
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112789,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateExhibitorProduct",
        "executor_version": "v1",
        "executor_display_name": "Update Exhibitor product",
        "executor_description": "This API is used to update product information while exhibitors edit product details and going to save data then this API is used to save data.",
        "executor_category": "MyBoothProductsAPI",
        "executor_category_group": "MyBoothProductsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/portal/exhibitor/{exhibitorId}/product/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "exhibitorId",
                "value": "",
                "description": "it is the Unique id of the exhibitor."
            },
            {
                "key": "id",
                "value": "",
                "description": "it is unique product id of exhibitor"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "id": 0,
                "name": "string",
                "description": "string",
                "price": 0,
                "images": [
                    {
                        "id": 0,
                        "imageUrl": "string"
                    }
                ],
                "discountAmount": 0,
                "discountType": "PERCENTAGE",
                "position": 0,
                "Shopify Buy Button": "string",
                "productBuyButtonLink": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692786407715,
        "lastModifiedTime": 1692786407715,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Product Updated Successfully."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112950,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSponsorsForEvent",
        "executor_version": "v1",
        "executor_display_name": "Get sponsors for event",
        "executor_description": "This API will help to get all sponsors of event. We need to pass eventId in param to get particular event's sponsors. We are also using pagination and searching functionality for get records.",
        "executor_category": "DisplaySponsorAPI",
        "executor_category_group": "DisplaySponsorAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{id}/sponsors",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "This should be event id."
            }
        ],
        "queryParams": [
            {
                "key": "searchString",
                "value": "",
                "description": "Get filter sponsors records according to search value passing in request",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Size will returns number of records when call api default will returns 10 records",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692859075108,
        "lastModifiedTime": 1692859075108,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 1,
                    "recordsFiltered": 1,
                    "data": [
                        {
                            "id": 957,
                            "eventId": 40,
                            "sponsorName": "Duplicate sponsor test",
                            "sponsorLogo": "48b1aeb6-0233-4069-8683-570e8cfb42d0",
                            "sponsorSize": "SMALL",
                            "sponsorUrl": "www.google.com",
                            "position": 4000,
                            "includeInLobbyCarousel": true,
                            "carouselLogoSliderDelaySeconds": 5,
                            "shortDescription": "This is for duplicate sponsor.",
                            "sponsorCardImage": "07139909-2a34-4b9a-9c64-b60fb0dd841d",
                            "colorConfig": {
                                "shortDescriptionColor": "#ffffff",
                                "nameColor": "#0000FF",
                                "categoryColor": null
                            },
                            "cardTag": null,
                            "exhibitorId": 1161
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112952,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSponsorsDetailsForSession",
        "executor_version": "v1",
        "executor_display_name": "Get sponsors details for session",
        "executor_description": "This API will help to get sponsors of session. We need to pass eventId and sessionId in param to get particular session's sponsors. We are also using pagination and searching functionality for get records.",
        "executor_category": "DisplaySponsorAPI",
        "executor_category_group": "DisplaySponsorAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{id}/sponsors/session/{sessionId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "This should be event id."
            },
            {
                "key": "sessionId",
                "value": "",
                "description": "Session id to get sponsors which associate with this session."
            }
        ],
        "queryParams": [
            {
                "key": "searchString",
                "value": "",
                "description": "Get filter sponsors records according to search value passing in request",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Size will returns number of records when call api default will returns 10 records",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692859162961,
        "lastModifiedTime": 1692859162961,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 2,
                    "recordsFiltered": 2,
                    "data": [
                        {
                            "id": 941,
                            "eventId": 40,
                            "sponsorName": "yahoo",
                            "sponsorLogo": "1c3fe76f-4c34-470f-8726-d6ebcd232c73",
                            "sponsorSize": "MEDIUM",
                            "sponsorUrl": null,
                            "position": 3000,
                            "includeInLobbyCarousel": true,
                            "carouselLogoSliderDelaySeconds": 5,
                            "shortDescription": null,
                            "sponsorCardImage": null,
                            "colorConfig": {
                                "shortDescriptionColor": "#0000FF",
                                "nameColor": "#000000",
                                "categoryColor": null
                            },
                            "cardTag": "TAG",
                            "exhibitorId": null
                        },
                        {
                            "id": 939,
                            "eventId": 40,
                            "sponsorName": "facebook",
                            "sponsorLogo": null,
                            "sponsorSize": "SMALL",
                            "sponsorUrl": null,
                            "position": 1000,
                            "includeInLobbyCarousel": true,
                            "carouselLogoSliderDelaySeconds": 5,
                            "shortDescription": null,
                            "sponsorCardImage": null,
                            "colorConfig": {
                                "shortDescriptionColor": "#0000FF",
                                "nameColor": "#0000FF",
                                "categoryColor": null
                            },
                            "cardTag": null,
                            "exhibitorId": null
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112982,
        "executor_type": "THIRDPARTY",
        "executor_name": "sendCartDataForCurrentOrder",
        "executor_version": "v1",
        "executor_display_name": "Send Cart data for current order",
        "executor_description": "This API is used to send cart data for the current order associated with the specified event. It will return data like the message, type.",
        "executor_category": "DisplayBuyTickets",
        "executor_category_group": "DisplayBuyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/abandonment/cart/saveOrUpdate",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "cartAbandonmentDto": {
                    "eventId": 0,
                    "orderId": 0,
                    "userId": 0,
                    "buyerEmail": "string",
                    "ticketTypeIds": "string",
                    "data": "string"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692861789909,
        "lastModifiedTime": 1692861789909,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112959,
        "executor_type": "THIRDPARTY",
        "executor_name": "setStatusAsCheckedInForThisTicket",
        "executor_version": "v1",
        "executor_display_name": "Set status as checked-in for this ticket",
        "executor_description": "This API is used to set the status as checked for a specific ticket with the specified event. Super admin, admin and user can access this API. It will return a true or false value. To call this API, the user has to pass eventUrl in query param and authentication key to authenticate the user.",
        "executor_category": "DisplayBuyTickets",
        "executor_category_group": "DisplayBuyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/virtualEventPortal/check-in",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692860004224,
        "lastModifiedTime": 1692860004224,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": true
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112964,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveFeedTokenOfAttendee",
        "executor_version": "v1",
        "executor_display_name": "Retrieve feed token of attendee",
        "executor_description": "This API is used to retrieve the feed token of the attendee with the specified event. It will return a message if API executes successfully. To call this API, a user has to pass eventUrl as a query param with an authentication key to authenticate the user.",
        "executor_category": "DisplayBuyTickets",
        "executor_category_group": "DisplayBuyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/feed/token/attendee",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692860398647,
        "lastModifiedTime": 1692860398647,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "string"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112987,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateTriggeredForExitIntentPopup",
        "executor_version": "v1",
        "executor_display_name": "Update triggered for exit intent popup",
        "executor_description": "This API is used to update triggered for exit intent popup associated with the specified event. It will return data like orderId.  To call this API, the user has to pass query param with API URLs like eventUrl, orderId, and authentication key to authenticate the user.",
        "executor_category": "DisplayBuyTickets",
        "executor_category_group": "DisplayBuyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/ticketing/order/{orderId}/popupTriggered",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "orderId",
                "value": "",
                "description": "The orderId user pass the unique value associated with update triggered for exit intent popup."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692862496180,
        "lastModifiedTime": 1692862496180,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "orderId": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112963,
        "executor_type": "THIRDPARTY",
        "executor_name": "getVirtualEventLabelsByLanguageCode",
        "executor_version": "v1",
        "executor_display_name": "Get virtual event labels by language code",
        "executor_description": "This API is used to get virtual event labels by language code with the specified event. It will return data like the custom label, default label, expoId, label, label type, etc. To call this API, the user has to pass eventUrl as a query param, languageCode, label type, and authentication key to authenticate the user.",
        "executor_category": "DisplayBuyTickets",
        "executor_category_group": "DisplayBuyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/virtualEventPortal/virtualeventsettings/language/{languageCode}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "languageCode",
                "value": "",
                "description": "User pass the language code. e.g. EN"
            }
        ],
        "queryParams": [
            {
                "key": "labelType",
                "value": "",
                "description": "User pass the multi language label type.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692860286663,
        "lastModifiedTime": 1692860286663,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "customLabel": "string",
                        "defaultlabel": "string",
                        "expoId": 0,
                        "label": "string",
                        "labelType": "EXPO"
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112995,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteUserNotificationPreferenceDetails",
        "executor_version": "v1",
        "executor_display_name": "Delete user notification preference Details",
        "executor_description": "Delete user notification preference Details",
        "executor_category": "DisplayBuyTickets",
        "executor_category_group": "DisplayBuyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/user/notificationPreference/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "It is unique id of record for which data save of notification preferences"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692863045105,
        "lastModifiedTime": 1692863045105,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112998,
        "executor_type": "THIRDPARTY",
        "executor_name": "usersInformationOfOrders",
        "executor_version": "v1",
        "executor_display_name": "Users Information of Orders",
        "executor_description": "This API is used to get information on the total number of the unique users registered which we display while users are registering for tickets.  This API is also used to retrieve registration information data from the last 10 users.  We display a count and basic user information from the attendee registration page.",
        "executor_category": "DisplayBuyTickets",
        "executor_category_group": "DisplayBuyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/displayTicketing/settings/userdataOfOrders",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "it is the unique event url of the event which we want to fetch information"
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "it is the recurring event id of the event if it is a recurring event",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692863134412,
        "lastModifiedTime": 1692863134412,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "memberCount": 0,
                    "userDetailsDtos": [
                        {
                            "firstName": "string",
                            "lastName": "string",
                            "photo": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112991,
        "executor_type": "THIRDPARTY",
        "executor_name": "getLatitudeAndLongitude",
        "executor_version": "v1",
        "executor_display_name": "Get Latitude and Longitude by search string or ticketType or dateRange",
        "executor_description": "This API is used to get data of latitude and longitude by search string, ticket type or date range.",
        "executor_category": "DisplayBuyTickets",
        "executor_category_group": "DisplayBuyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/ipLookUp/events/{eventurl}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "It is the unique event url of the event which we want to fetch information."
            }
        ],
        "queryParams": [
            {
                "key": "searchString",
                "value": "",
                "description": "Filter string will work for city, district and country fields",
                "req": false
            },
            {
                "key": "fromDate",
                "value": "",
                "description": "This represents start date for filter. The recommended format will be like dd/MM/yyyy HH:mm:ss",
                "req": false
            },
            {
                "key": "toDate",
                "value": "",
                "description": "This represents end date for filter. The recommended format will be like dd/MM/yyyy HH:mm:ss",
                "req": false
            },
            {
                "key": "ticketType",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692862764820,
        "lastModifiedTime": 1692862764820,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "latitude": 34.3655,
                        "longitude": -89.5556,
                        "country": "India",
                        "district": "Bhavnagar",
                        "zipcode": "364140",
                        "city": "Talaja",
                        "ipAddress": "192.168.40.26",
                        "numberOfAttendees": 3,
                        "numberOfOrders": 3
                    }
                ]
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "timestamp": 1662533456846,
                    "status": 404,
                    "error": "Not Found",
                    "message": "No message available",
                    "path": "/rest/ipLookUp/events/"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Event url can not be empty",
                    "errorCode": "4060905",
                    "developerMessage": "Event url can not be empty"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112994,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateUserNotificationPreferenceDetails",
        "executor_version": "v1",
        "executor_display_name": "Update User Notification Preference Details",
        "executor_description": "This API is used to update users' notification preferences for a specific event.  To call this API, the user has to pass path param with eventURL, request params like userNotificationPreferenceDto, and authentication key to authenticate the user.",
        "executor_category": "DisplayBuyTickets",
        "executor_category_group": "DisplayBuyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/user/notificationPreference/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "It is unique id of record for which data save of notification preferences"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "id": 0,
                "userId": 0
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692862967664,
        "lastModifiedTime": 1692862967664,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Notification Preference Updated."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112970,
        "executor_type": "THIRDPARTY",
        "executor_name": "getLeaderboard",
        "executor_version": "v1",
        "executor_display_name": "Get leaderboard",
        "executor_description": "This API is used to get leaderboard data from the specified event. It will return a list of leaderboard data like firstName, lastName, title, photo, point, userId, etc.  To call this API, the user has to pass query param with API urls like eventUrl and authentication key to authenticate the user.",
        "executor_category": "DisplayBuyTickets",
        "executor_category_group": "DisplayBuyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/leaderboard",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692860934422,
        "lastModifiedTime": 1692860934422,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "firstName": "string",
                        "lastName": "string",
                        "photo": "string",
                        "point": 0,
                        "title": "string",
                        "userId": 0
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112980,
        "executor_type": "THIRDPARTY",
        "executor_name": "checkUserAndPasswordArePresentorNot",
        "executor_version": "v1",
        "executor_display_name": "Check user and password are present or not",
        "executor_description": "This API is used to check if user and password are present or not. It will return data like passwordPresent, userPresent.",
        "executor_category": "DisplayBuyTickets",
        "executor_category_group": "DisplayBuyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/user/{email}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "email",
                "value": "",
                "description": "The user has to pass query param with API URL like email."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692861694978,
        "lastModifiedTime": 1692861694978,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "passwordPresent": true,
                    "userPresent": true
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112992,
        "executor_type": "THIRDPARTY",
        "executor_name": "addUserNotificationPreferenceDetails",
        "executor_version": "v1",
        "executor_display_name": "Add User Notification Preference Details",
        "executor_description": "This API is used to save user's notification preferences for an event.  To call this API, the user has to pass path param with eventUrl, request params like userNotificationPreferenceDto and authorization token.",
        "executor_category": "DisplayBuyTickets",
        "executor_category_group": "DisplayBuyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/user/notificationPreference",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "id": 0,
                "userId": 0
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692862881962,
        "lastModifiedTime": 1692862881962,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Notification Preference saved."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112956,
        "executor_type": "THIRDPARTY",
        "executor_name": "getVirtualAccessUserRole",
        "executor_version": "v1",
        "executor_display_name": "Get virtual access user role",
        "executor_description": "This API is used to get the virtual access user role for the specified event. This API is accessible by super admin, admin, and user. It will return data like admin, staff, exhibitor, speaker, attendee, isDisclaimerChecked, and a list of roles. To call this API, a user has to pass eventUrl as a query param with an authentication key to authenticate the user.",
        "executor_category": "DisplayBuyTickets",
        "executor_category_group": "DisplayBuyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventurl}/virtualEventPortal/allowedToVirtualAccess",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692859783658,
        "lastModifiedTime": 1692859783658,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "admin": true,
                    "attendee": true,
                    "disclaimerChecked": true,
                    "exhibitor": true,
                    "roles": [
                        "string"
                    ],
                    "speaker": true,
                    "staff": true
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112989,
        "executor_type": "THIRDPARTY",
        "executor_name": "saveIPLookUpData",
        "executor_version": "v1",
        "executor_display_name": "Save IPLookUp Data",
        "executor_description": "This API is used to save IP look-up Data associated with the specified event. It will not return data because it will save the IP look-up data.",
        "executor_category": "DisplayBuyTickets",
        "executor_category_group": "DisplayBuyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/ipLookUp",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "ipLookUpDto": {
                    "lookUpText": "string",
                    "eventId": 0,
                    "latitude": 0,
                    "countryCode": "US(1)",
                    "country": "string",
                    "district": "string",
                    "zipcode": "string",
                    "city": "string",
                    "source": "MODULE_ACTIVE",
                    "sourceId": 0,
                    "longitude": 0,
                    "createdDate": "2023-08-22"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692862585068,
        "lastModifiedTime": 1692862585068,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112957,
        "executor_type": "THIRDPARTY",
        "executor_name": "ticketmoduleDisplayPageSetting",
        "executor_version": "v1",
        "executor_display_name": "Ticket module display page setting",
        "executor_description": "This API is used to get the ticket module display page setting with the specified event. It will return data like showEnterEventButton, address, startDate, endDate, preEventAccessMinutes, eventListingStatus and ticketTypes etc. To call this API, the user has to pass query param with API urls like eventUrl, accesscode and authentication key to authenticate the user.",
        "executor_category": "DisplayBuyTickets",
        "executor_category_group": "DisplayBuyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/displayTicketing/settings/portal",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "accessCode",
                "value": "",
                "description": "User pass the accesscode for ticket module display page setting",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692859887241,
        "lastModifiedTime": 1692859887241,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "address": "string",
                    "endDate": "2021-12-28T13:18:21.088Z",
                    "eventFormat": "VIRTUAL",
                    "eventListingStatus": "PRIVATE",
                    "eventVenueStatus": "VENUE",
                    "preEventAccessMinutes": 0,
                    "showEnterEventButton": false,
                    "showRegistrationButton": false,
                    "showTicketPrice": false,
                    "startDate": "2021-12-28T13:18:21.088Z",
                    "ticketTypes": [
                        {
                            "id": 0,
                            "name": "string"
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112979,
        "executor_type": "THIRDPARTY",
        "executor_name": "returnsUserProofOfVaccination",
        "executor_version": "v1",
        "executor_display_name": "Returns user proof of vaccination",
        "executor_description": "This API is used to return user proof of vaccination associated with the specified event. It will return a string message if API executes it successfully.",
        "executor_category": "DisplayBuyTickets",
        "executor_category_group": "DisplayBuyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/proofOfVaccination",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692861611789,
        "lastModifiedTime": 1692861611789,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "string"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112978,
        "executor_type": "THIRDPARTY",
        "executor_name": "eventdataWithDesignDetails",
        "executor_version": "v1",
        "executor_display_name": "Event data with design details",
        "executor_description": "This API is used to get event data with design details associated with the specified event. It will return data like name, auctionEnabled, accountActivatedTriggerStatus, eventDesignDetails, eventType, eventId, eventStatus, eventURL etc.  To call this API, the user has to pass query param with API URL like eventUrl and authentication key to authenticate the user.",
        "executor_category": "DisplayBuyTickets",
        "executor_category_group": "DisplayBuyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/cache/events/{eventurl}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692861524374,
        "lastModifiedTime": 1692861524374,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "accountActivatedTriggerStatus": "INITIAL",
                    "address": "string",
                    "analyticsId": "string",
                    "auctionEnabled": false,
                    "auctionEnded": false,
                    "auctionId": 0,
                    "auctionModuleShow": false,
                    "ccProcessingEnabled": false,
                    "ccRequiredForBidConfirm": false,
                    "countryCode": "US",
                    "createdDate": "2021-12-29T10:20:21.127Z",
                    "creditCardEnabled": false,
                    "currency": "AUD",
                    "currencySymbol": "string",
                    "donationEnabled": false,
                    "enableBidderRegistration": false,
                    "endDate": "string",
                    "equivalentTimezone": "string",
                    "eventDesignDetails": {
                        "adBlockerDocumentUrl": "string",
                        "adBlockerLogoImage": "string",
                        "allowEndedEventAccess": false,
                        "auctionTabTitle": "string",
                        "bannerImage": "string",
                        "bannerImageEnabled": false,
                        "biillingPageEnabled": false,
                        "configureTabsAsJson": [
                            {
                                "hide": false,
                                "key": "string",
                                "value": "string",
                                "visible": false
                            }
                        ],
                        "defaultItemImage": "string",
                        "descripation": "string",
                        "displayBackgroundColor": "string",
                        "displayTabsColor": "string",
                        "displayTabsTextColor": "string",
                        "displayTextColor": "string",
                        "donationButtonText": {
                            "color": "string",
                            "hidden": false,
                            "label": "string"
                        },
                        "donationTabTitle": "string",
                        "emailTemplateId": 0,
                        "enableAutoAssignedSequence": false,
                        "enableSessionsSpeakers": false,
                        "eventCalendarInvite": "string",
                        "eventTagLine": "string",
                        "eventType": "string",
                        "exitIntentContent": "string",
                        "faviconDirectory": "string",
                        "fbAppId": "string",
                        "footerText": "string",
                        "fundANeedTabTitle": "string",
                        "getStartedUrl": "string",
                        "headerColor": "string",
                        "headerFontColor": "string",
                        "headerLogoImage": "string",
                        "helpCenterActivated": false,
                        "helpCenterURL": "string",
                        "hideCreateEventButton": false,
                        "hideFundRaisingModuleToggle": false,
                        "hideGoogleMap": false,
                        "hideProductUpdateNotification": false,
                        "hideSponsorSection": false,
                        "intercomActivated": false,
                        "intercomId": "string",
                        "logoEnabled": false,
                        "logoImage": "string",
                        "marketingOptInChecked": false,
                        "marketingOptInHidden": false,
                        "notificationPopupImage": "string",
                        "orderConfirmationText": "string",
                        "poweredByAeActivated": false,
                        "raffleBuyButtonText": {
                            "color": "string",
                            "font": "string",
                            "hidden": false,
                            "label": "string"
                        },
                        "raffleTabTitle": "string",
                        "showEnableModulePopup": false,
                        "showOrganizer": false,
                        "signUpText": "string",
                        "socialSharingEnabled": false,
                        "sponsorSection": "string",
                        "stripeDocumentationURL": "string",
                        "themeId": 0,
                        "ticketingBuyButtonText": {
                            "color": "string",
                            "font": "string",
                            "hidden": false,
                            "label": "string"
                        },
                        "ticketingTabTitle": "string",
                        "totalFundRaisedShow": false,
                        "trackingScript": "string",
                        "virtualEventScript": "string",
                        "whiteLabelHostBaseUrl": "string",
                        "whiteLabelName": "string",
                        "whiteLabelUrl": "string"
                    },
                    "eventId": 0,
                    "eventStatus": "EVENT_HAPPENING",
                    "eventURL": "string",
                    "fundANeedEnabled": false,
                    "fundANeedEnded": false,
                    "fundANeedId": 0,
                    "fundANeedModuleShow": false,
                    "fundRaisingGoal": 0,
                    "goalStartingAmount": 0,
                    "latitude": "string",
                    "liveItemAvailable": false,
                    "longitude": "string",
                    "name": "string",
                    "organizerName": "string",
                    "organizerPageURL": "string",
                    "paymentGateway": "SQUARE",
                    "phoneNumber": 0,
                    "processingFeesToPurchaser": false,
                    "raffleEnabled": false,
                    "raffleEnded": false,
                    "raffleId": 0,
                    "raffleModuleShow": false,
                    "recurring": true,
                    "squareLocationId": "string",
                    "startDate": "string",
                    "stripeConnectRequiredToTicketing": true,
                    "stripeKey": "string",
                    "taxId": "string",
                    "textToGiveEnabled": false,
                    "ticketingEnabled": false,
                    "ticketingEnded": false,
                    "ticketingId": 0,
                    "timezoneId": "string",
                    "timezoneOffset": "string",
                    "trackingPixelId": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112977,
        "executor_type": "THIRDPARTY",
        "executor_name": "getUserNotificationPreferenceDetailbyUserIdAndEventId",
        "executor_version": "v1",
        "executor_display_name": "Get user notification preference detail by user id and event id",
        "executor_description": "This API is used to get user notification preference detail by user id and event id. It will return data like id, notificationPreference, userId, etc.  To call this API, the user has to pass query param with API URL like eventUrl and authentication key to authenticate the user.",
        "executor_category": "DisplayBuyTickets",
        "executor_category_group": "DisplayBuyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/user/notificationPreference",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692861436857,
        "lastModifiedTime": 1692861436857,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": 0,
                    "notificationPreference": {
                        "additionalProp1": true,
                        "additionalProp2": true,
                        "additionalProp3": true
                    },
                    "userId": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112965,
        "executor_type": "THIRDPARTY",
        "executor_name": "getChallengesNames",
        "executor_version": "v1",
        "executor_display_name": "Get challenges names",
        "executor_description": "This API is used to get a list of challenge names with the specified event. It will return data like users, description, endDate, startDate, name, goal, event challenge Id, etc. To call this API, a user has to pass eventUrl as a query param with an authentication key to authenticate the user.",
        "executor_category": "DisplayBuyTickets",
        "executor_category_group": "DisplayBuyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/leaderboard/challenges",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692860498734,
        "lastModifiedTime": 1692860498734,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "description": "string",
                        "endDate": "2021-12-29T04:36:15.616Z",
                        "eventChallengeId": 0,
                        "goal": 0,
                        "name": "string",
                        "rewards": "string",
                        "startDate": "2021-12-29T04:36:15.616Z",
                        "users": [
                            {
                                "firstName": "string",
                                "lastName": "string",
                                "photo": "string",
                                "point": 0,
                                "title": "string",
                                "userId": 0
                            }
                        ]
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112975,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveFeedTokenOfEvent",
        "executor_version": "v1",
        "executor_display_name": "Retrieve feed token of event",
        "executor_description": "This API is used to retrieve feed tokens with the specified event. It will return a string message if API executes it successfully.  To call this API, the user has to pass query param with API URL like eventUrl and authentication key to authenticate the user.",
        "executor_category": "DisplayBuyTickets",
        "executor_category_group": "DisplayBuyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/feed/token/event",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692861332092,
        "lastModifiedTime": 1692861332092,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "String"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112961,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAttendeeDetailsById",
        "executor_version": "v1",
        "executor_display_name": "Get attendee details by id",
        "executor_description": "This API is used to get attendee profile details by id with the specified event. It will return data like accept direct messages, accept meeting requests, firstName, lastName, email, request, title, rules, etc. To call this API, the user has to pass eventUrl as query param and authentication key to authenticate the user.",
        "executor_category": "DisplayBuyTickets",
        "executor_category_group": "DisplayBuyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/attendee",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692860143895,
        "lastModifiedTime": 1692860143895,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "acceptDirectMessages": true,
                    "acceptMeetingRequests": "NO_ONE",
                    "allowCallsAndVideosFromNotConnectedAttendees": true,
                    "availabilityDuration": 0,
                    "availabilityEndTime": "string",
                    "availabilityStartAndEndTime": {
                        "additionalProp1": [
                            "string"
                        ],
                        "additionalProp2": [
                            "string"
                        ],
                        "additionalProp3": [
                            "string"
                        ]
                    },
                    "availabilityStartTime": "string",
                    "availabilityTimezoneId": "string",
                    "city": "string",
                    "company": "string",
                    "country": "string",
                    "countryRelatedValue": {
                        "additionalProp1": [
                            "string"
                        ],
                        "additionalProp2": [
                            "string"
                        ],
                        "additionalProp3": [
                            "string"
                        ]
                    },
                    "coverPhoto": "string",
                    "deleted": true,
                    "email": "string",
                    "emailNotification": true,
                    "equivalentTimezone": "string",
                    "eventId": 0,
                    "exposeProfileToOtherUser": true,
                    "extraInfo": {
                        "aboutMe": "string",
                        "knows": "string",
                        "wantsToLearn": "string",
                        "wantsToMeet": "string"
                    },
                    "facebook": "string",
                    "firstEvent": "string",
                    "firstName": "string",
                    "id": "string",
                    "industry": "string",
                    "instagram": "string",
                    "interests": [
                        {
                            "id": "string",
                            "name": "string"
                        }
                    ],
                    "languageCode": "string",
                    "lastActive": "string",
                    "lastName": "string",
                    "linkedIn": "string",
                    "meetingAvailabilitySetted": true,
                    "photo": "string",
                    "pronouns": "string",
                    "rejectedBy": "string",
                    "request": true,
                    "rules": [
                        {
                            "date": "string",
                            "intervals": [
                                {
                                    "error": "string",
                                    "from": "string",
                                    "to": "string"
                                }
                            ],
                            "type": "string",
                            "wday": "string"
                        }
                    ],
                    "showContactInfo": true,
                    "showProfile": true,
                    "status": "string",
                    "timeZonRelatedValue": {
                        "additionalProp1": [
                            "string"
                        ],
                        "additionalProp2": [
                            "string"
                        ],
                        "additionalProp3": [
                            "string"
                        ]
                    },
                    "timezoneId": "string",
                    "title": "string",
                    "twitter": "string",
                    "user": 0,
                    "userDetail": {
                        "address1": "string",
                        "address2": "string",
                        "cityOrProvidence": "string",
                        "country": "string",
                        "countryCode": "US",
                        "coverPhoto": "string",
                        "email": "string",
                        "fbUserId": "string",
                        "firstName": "string",
                        "googleUserId": "string",
                        "languageCode": "string",
                        "lastName": "string",
                        "linkedinUserId": "string",
                        "marketingOptIn": true,
                        "mostRecentEventId": 0,
                        "password": "string",
                        "passwordResetToken": "string",
                        "phoneNumber": 0,
                        "photo": "string",
                        "pushNotificationToken": "string",
                        "showExhibitorMenu": true,
                        "signUpDate": "2021-12-29T05:24:39.689Z",
                        "state": "string",
                        "userId": 0,
                        "zipcode": "string"
                    },
                    "userId": 0,
                    "videoIntro": "string",
                    "website": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112968,
        "executor_type": "THIRDPARTY",
        "executor_name": "getChallengeWiseTotalPointsByUserId",
        "executor_version": "v1",
        "executor_display_name": "Get challenge wise total points by userId",
        "executor_description": "This API is used to get total points by userId for a specific challenge within the specified event. It will return data like firstName, lastName, title, userChallengePointMap, userId etc. To call this API, a user has to pass eventUrl as a query param with an authentication key to authenticate the user.",
        "executor_category": "DisplayBuyTickets",
        "executor_category_group": "DisplayBuyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/leaderboard/userChallengePoints",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692860826723,
        "lastModifiedTime": 1692860826723,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "firstName": "string",
                    "lastName": "string",
                    "title": "string",
                    "userChallengePointMap": {
                        "additionalProp1": 0,
                        "additionalProp2": 0,
                        "additionalProp3": 0
                    },
                    "userId": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112974,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllEventChallengeDetails",
        "executor_version": "v1",
        "executor_display_name": "Get all event challenge details",
        "executor_description": "This API is used to get all event challenge details from the specified event. It will return data like eventChallengeId, action, area, description, startDate, endDate, rewards, trigger, ticketTypeAllowInChallenge etc.  To call this API, the user has to pass query param with API URL like eventUrl and authentication key to authenticate the user.",
        "executor_category": "DisplayBuyTickets",
        "executor_category_group": "DisplayBuyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/leaderboard/getAllChallengeDetails",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692861258714,
        "lastModifiedTime": 1692861258714,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "action": [
                            {
                                "additionalProp1": {},
                                "additionalProp2": {},
                                "additionalProp3": {}
                            }
                        ],
                        "area": "string",
                        "description": "string",
                        "endDate": "string",
                        "endDateUtc": "2021-12-29T07:45:34.749Z",
                        "eventChallengeId": 0,
                        "filter": [
                            {
                                "additionalProp1": {},
                                "additionalProp2": {},
                                "additionalProp3": {}
                            }
                        ],
                        "gamificationTabDisabled": false,
                        "goal": 0,
                        "maxPoints": {},
                        "name": "string",
                        "rewards": [
                            {
                                "additionalProp1": {},
                                "additionalProp2": {},
                                "additionalProp3": {}
                            }
                        ],
                        "startDate": "string",
                        "startDateUtc": "2021-12-29T07:45:34.749Z",
                        "subArea": "string",
                        "ticketTypeAllowInChallenge": [
                            0
                        ],
                        "trigger": {
                            "additionalProp1": [
                                0
                            ],
                            "additionalProp2": [
                                0
                            ],
                            "additionalProp3": [
                                0
                            ]
                        },
                        "type": "STANDARD"
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113064,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTagTracksList",
        "executor_version": "v1",
        "executor_display_name": "Get tag/tracks list",
        "executor_description": "Using this API you can get the list of tags/tracks for a particular event.  You need to pass the type field in the request body to specify whether you want to get the tags/tracks list.",
        "executor_category": "TagAndTracks",
        "executor_category_group": "TagAndTracks",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/key-value/basicInfo/{type}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "type",
                "value": "",
                "description": "TAG,TRACK"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692865969783,
        "lastModifiedTime": 1692865969783,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "color": "string",
                    "description": "string",
                    "id": 0,
                    "name": "string",
                    "position": 0,
                    "type": "TAG"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113058,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteTagTracks",
        "executor_version": "v1",
        "executor_display_name": "Delete tag/tracks",
        "executor_description": "Using this API, you can delete a tag or track from an event.  You need to identify the track/tracks id which you want to delete and pass it as a path parameter in API.  This API can be used by authenticated users only, and it will require super admin/admin/staff level access.",
        "executor_category": "TagAndTracks",
        "executor_category_group": "TagAndTracks",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/key-value/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692865769881,
        "lastModifiedTime": 1692865769881,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113067,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllTag",
        "executor_version": "v1",
        "executor_display_name": "Get all tag/track with pagination & search",
        "executor_description": "Using this API you can get the list of tags/tracks for a particular event.  You need to pass type and event url as a path parameter. Also, you are required to pass eventId as a query parameter otherwise it will return an error message \"Event Not Found\".  This API supports options for search and pagination. For which you can pass page, size, searchString.",
        "executor_category": "TagAndTracks",
        "executor_category_group": "TagAndTracks",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/key-value/type/{type}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "type",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "searchString",
                "value": "",
                "description": "Get filter tag and track records according to search value passing in request",
                "req": false
            },
            {
                "key": "eventId",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url.",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Size will returns number of records when call api default will returns 10 records",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692866099992,
        "lastModifiedTime": 1692866099992,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 1,
                    "recordsFiltered": 1,
                    "data": [
                        {
                            "id": 516,
                            "name": "bab",
                            "color": null,
                            "description": null,
                            "position": 1000,
                            "sessionCount": 0
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113053,
        "executor_type": "THIRDPARTY",
        "executor_name": "createTagTracks",
        "executor_version": "v1",
        "executor_display_name": "Create tag/tracks",
        "executor_description": "Using tags and tracks you can label sessions and group them according to your convenience. It helps to filter out sessions based on tags and tracks.  To create tags or tracks for an event same API endpoints are used. They are differentiated by type field. For tags and tracks type fields' values should be TAGS and TRACKS respectively.  type and name are required fields, apart from them you can also pass additional fields like color, position, description.  This API can be used by authenticated users only and it will require super admin/admin/staff level access.",
        "executor_category": "TagAndTracks",
        "executor_category_group": "TagAndTracks",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/key-value",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "keyValueDTO": {
                    "color": "string",
                    "description": "string",
                    "id": 0,
                    "name": "string",
                    "position": 0,
                    "type": "TAG"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692865617141,
        "lastModifiedTime": 1692865617141,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113061,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateTagTracksPosition",
        "executor_version": "v1",
        "executor_display_name": "Update tag/tracks position",
        "executor_description": "This API you can change to the position of tag/tracks. The tag/tracks default position will be 1000.  In this API you need to pass three path parameters to change a tag/track's posiotion.",
        "executor_category": "TagAndTracks",
        "executor_category_group": "TagAndTracks",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/key-value/{id}/topKeyValue/{topKeyValueId}/topBottomKeyValue/{topBottomKeyValueId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique tag or track ID"
            },
            {
                "key": "topKeyValueId",
                "value": "",
                "description": "In Asc order first top tag or track ID."
            },
            {
                "key": "topBottomKeyValueId",
                "value": "",
                "description": "In Asc order first top tag or track ID."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692865879435,
        "lastModifiedTime": 1692865879435,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113056,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateTagTracks",
        "executor_version": "v1",
        "executor_display_name": "Update tag/tracks",
        "executor_description": "Using this API, you can update a tag or track details like name, color, description.  You need to identify track/tracks id which you want to update and pass it as a path parameter in API.  This API can be used by authenticated users only, and it will require super admin/admin/staff level access.",
        "executor_category": "TagAndTracks",
        "executor_category_group": "TagAndTracks",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/key-value/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "keyValueDTO": {
                    "color": "string",
                    "description": "string",
                    "id": 0,
                    "name": "string",
                    "position": 0,
                    "type": "TAG"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692865701285,
        "lastModifiedTime": 1692865701285,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112364,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllAttendees",
        "executor_version": "v1",
        "executor_display_name": "Get All Attendees",
        "executor_description": "This API will help to get all attendees of event. We need to pass authentication and event URL to get particular event's attendees. We are also using pagination and searching functionality for get records.",
        "executor_category": "CheckInAttendees",
        "executor_category_group": "CheckInAttendees",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/staff/allAttendees",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "pass recurring event id.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Size will returns number of records when call api default will returns 10 records",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "search",
                "value": "",
                "description": "Get filter ticketing orders according to search value passing in request.",
                "req": false
            },
            {
                "key": "dataType",
                "value": "",
                "description": "pass the event ticket datatype like TICKET or ADDON",
                "req": false
            },
            {
                "key": "isUnique",
                "value": "",
                "description": "pass true for unique value else false",
                "req": false
            },
            {
                "key": "ticketTypes",
                "value": "",
                "description": "pass the ticket type like FREE,PAID or DONATION",
                "req": false
            },
            {
                "key": "ticketStatus",
                "value": "",
                "description": "pass the list of ticket status",
                "req": false
            },
            {
                "key": "ticketTypeIds",
                "value": "",
                "description": "pass the list of ticket type Ids",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692615178783,
        "lastModifiedTime": 1692615178783,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "attendees": [
                        {
                            "attendeeId": "string",
                            "barcode": "string",
                            "email": "string",
                            "firstName": "string",
                            "lastName": "string",
                            "status": "string",
                            "ticketStatus": "string",
                            "ticketType": "string"
                        }
                    ],
                    "recordsFiltered": 0,
                    "recordsTotal": 0,
                    "ticketTypeCountDtos": [
                        {
                            "ticketTypeId": 0,
                            "ticketTypeName": "string",
                            "totalTickets": 0
                        }
                    ],
                    "totalBookedTickets": 0,
                    "totalCheckedInTickets": 0,
                    "totalFreeTickets": 0,
                    "totalPaidTickets": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112366,
        "executor_type": "THIRDPARTY",
        "executor_name": "checkAllowedAttendeesLimitReached",
        "executor_version": "v1",
        "executor_display_name": "Check Allowed Attendees Limit Reached",
        "executor_description": "This API can be used to check if the number of allowed attendees limit for the event has been reached or not. For In-person events, this API will always return false as we are not restricting the users to checked-in.  This will return true if the event is in draft mode (PREVIEW) with 25 unique attendees checked-in or if it's a event with a Free plan that has reached the plan allowed attendee limit.",
        "executor_category": "CheckInAttendees",
        "executor_category_group": "CheckInAttendees",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/virtualEventPortal/isCheckInAttendeeMoreThanAllowed",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event URL of the event"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692615474428,
        "lastModifiedTime": 1692615474428,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Event Not Found",
                    "errorCode": "4040200",
                    "developerMessage": "No Event could be found"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": false
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112365,
        "executor_type": "THIRDPARTY",
        "executor_name": "receivePaymentAndChangeOrderStatus",
        "executor_version": "v1",
        "executor_display_name": "Receive payment and change order status",
        "executor_description": "This API is used for save receive payment data and also to change order status.",
        "executor_category": "CheckInAttendees",
        "executor_category_group": "CheckInAttendees",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/staff/receiveUnpaidPayment",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "This field contains the event URL."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "detailsForStaffDto": {
                    "tokenOrIntentId": "string",
                    "paymentType": "string",
                    "note": "string",
                    "orderId": 0
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692615324330,
        "lastModifiedTime": 1692615324330,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "You are not authorized to view the resource",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112472,
        "executor_type": "THIRDPARTY",
        "executor_name": "getListOfTicketingSalesData",
        "executor_version": "v1",
        "executor_display_name": "Get list of ticketing sales data",
        "executor_description": "This API will get ticketing sales data to display on the dashboard. By default ticket data type details will be fetched and can be changed to display ADDON type details.",
        "executor_category": "HostTicketing",
        "executor_category_group": "HostTicketing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/performance/ticketing/sale",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "Unique identifier of an event.",
                "req": false
            },
            {
                "key": "dataType",
                "value": "",
                "description": "Default: TICKET",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692684332887,
        "lastModifiedTime": 1692684332887,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "ticketSold": 5,
                        "totalTickets": 100,
                        "ticketTypeName": "Free Admission",
                        "ticketPrice": 0,
                        "status": "ACTIVE",
                        "endDate": "2021/06/06 02:50 AM",
                        "date": null
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112473,
        "executor_type": "THIRDPARTY",
        "executor_name": "getListOfTicketingBuyerDataWithAmounts",
        "executor_version": "v1",
        "executor_display_name": "Get list of ticketing buyer data with amounts",
        "executor_description": "This API will get ticket buyer data with the gross and net amount of recent events to display on the dashboard. By default ticket data type details will be fetched and can be changed to display ADDON type details. This API support pagination, allowing you to pass details of page index and row count to get specific data, and you can pass values in the search parameter to find specific values.",
        "executor_category": "HostTicketing",
        "executor_category_group": "HostTicketing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/performance/ticketing/buyer",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "Unique identifier of an event.",
                "req": false
            },
            {
                "key": "dataType",
                "value": "",
                "description": "Default: TICKET",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "number of records per page.",
                "req": false
            },
            {
                "key": "search",
                "value": "",
                "description": "Pass text to search value.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692684491588,
        "lastModifiedTime": 1692684491588,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "buyerData": [
                        {
                            "orderAmount": 0,
                            "orderDate": "string",
                            "orderNo": 0,
                            "paymentMode": "string",
                            "quantity": 0,
                            "refundedAmount": 0,
                            "ticketBuyerName": "string"
                        }
                    ],
                    "grossAmount": 0,
                    "netAmount": 0,
                    "recordsFiltered": 0,
                    "recordsTotal": 0
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4060001",
                    "developerMessage": "Not Event Host"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112438,
        "executor_type": "THIRDPARTY",
        "executor_name": "checkRecurringEventEnable",
        "executor_version": "v1",
        "executor_display_name": "Check recurring event is enable",
        "executor_description": "This API is used to check whether the event is recurring or not. This API will return a Boolean value like true or false.",
        "executor_category": "HostTicketing",
        "executor_category_group": "HostTicketing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/ticketing/checkRecurring",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692677711582,
        "lastModifiedTime": 1692677711582,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "boolean"
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112439,
        "executor_type": "THIRDPARTY",
        "executor_name": "getListofRecurringEventSchedule",
        "executor_version": "v1",
        "executor_display_name": "Get list of recurring event schedule",
        "executor_description": "This API is used to get a list of a recurring event schedule. If the event is recurring, it will give results as a list of the recurring events. If the event is not recurring, it will return an empty result.",
        "executor_category": "HostTicketing",
        "executor_category_group": "HostTicketing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/ticketing/recurringEvent/schedule",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692677836117,
        "lastModifiedTime": 1692677836117,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "startTime": "string",
                        "endTime": "string",
                        "occursFrom": "string",
                        "occursUntil": "string",
                        "checkInXMinutesBefore": "string",
                        "id": 0,
                        "frequency": "string",
                        "weekOfMonth": "string",
                        "daysOfWeek": "string",
                        "dayOfMonth": "string",
                        "endTimeOnXDays": 0,
                        "totalDaysCount": 0,
                        "soldTickets": false,
                        "soldDate": "string",
                        "recurringEventResDtos": [
                            {
                                "startTime": "string",
                                "endTime": "string",
                                "occursFrom": "string",
                                "occursUntil": "string",
                                "checkInXMinutesBefore": "string",
                                "id": 0,
                                "location": "string",
                                "scheduleId": 0,
                                "soldTickets": false,
                                "soldTicketCount": "string",
                                "remainingTicketCount": "string"
                            }
                        ]
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112474,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTicketingSalesWrapperDate",
        "executor_version": "v1",
        "executor_display_name": "Get ticketing sales wrapper date",
        "executor_description": "This API will get ticketing sales details and uses pagination and searching functionality to retrieve records.",
        "executor_category": "HostTicketing",
        "executor_category_group": "HostTicketing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/performance/ticketing/recurringEvent/revenueInfo",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "pastEvent",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692684581831,
        "lastModifiedTime": 1692684581831,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 0,
                    "recordsFiltered": 5,
                    "data": [
                        {
                            "grossRevenue": 0,
                            "recurringEventDates": {
                                "checkInXMinutesBefore": 0,
                                "endTime": "string",
                                "occursFrom": "string",
                                "occursUntil": "string",
                                "startTime": "string"
                            },
                            "recurringEventId": 0,
                            "ticketsSold": 0,
                            "totalTickets": 0
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4060001",
                    "developerMessage": "Not Event Host"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112440,
        "executor_type": "THIRDPARTY",
        "executor_name": "saveTicketingWithoutTicketTypes",
        "executor_version": "v1",
        "executor_display_name": "Save Ticketing Without TicketTypes",
        "executor_description": "This API is used to save ticketing details without adding any ticket types.  Query Parameters isFromEventDetailsPage - to check whether it's from the event details page.",
        "executor_category": "HostTicketing",
        "executor_category_group": "HostTicketing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/ticketing/saveTicketingWithoutTicketTypes",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "ticketingFee": [
                    {
                        "aeFeeFlat": 0,
                        "aeFeePercentage": 0,
                        "wlFeeFlat": 0,
                        "creditCardProcessingFlat": 0,
                        "creditCardProcessingPercentage": 0,
                        "fromThreshold": 0,
                        "toThreshold": 0,
                        "operator": "string",
                        "isInPerson": true,
                        "isAddon": true,
                        "wlFeePercentage": 0
                    }
                ],
                "timezoneId": "string",
                "equivalentTimezone": "string",
                "eventVenueType": "string",
                "eventFormat": "VIRTUAL",
                "eventIsActive": true,
                "currencySymbol": "string",
                "longitude": "string",
                "latitude": "string",
                "eventStartDate": "string",
                "eventEndDate": "string",
                "eventAddress": "string",
                "preEventAccessMinutes": 0,
                "eventKey": "string",
                "seatingChartKey": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692677951491,
        "lastModifiedTime": 1692677951491,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Success"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112475,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadEventPollsCsv",
        "executor_version": "v1",
        "executor_display_name": "Download event polls CSV",
        "executor_description": "This API will download event poll details into .CSV format.",
        "executor_category": "HostTicketing",
        "executor_category_group": "HostTicketing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/performance/ticketing/download/polls/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692684654256,
        "lastModifiedTime": 1692684654256,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112477,
        "executor_type": "THIRDPARTY",
        "executor_name": "changeCurrentEvent",
        "executor_version": "v1",
        "executor_display_name": "Change current event",
        "executor_description": "This API will set events for the user. This API can be accessed by event admin and super admin.  We need to pass authentication and event URL. This API is used on the host side for setting events from the dropdown.",
        "executor_category": "SwitchEvents",
        "executor_category_group": "SwitchEvents",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/u/setEvent/eventUrl/{eventurl}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692684940392,
        "lastModifiedTime": 1692684940392,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112559,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateAccessCode",
        "executor_version": "v1",
        "executor_display_name": "Update Access Code",
        "executor_description": "This API is used to update the access code associated with the specified event. This API can be accessed by an event admin and super admin. It will return a response like type and message. To call this API, user will have to pass query param with API URL like recurringEventId, access code details and authentication key to authenticate user.",
        "executor_category": "HostRegistrationAccessCodes",
        "executor_category_group": "HostRegistrationAccessCodes",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/accessCode",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "User pass the In-Person event id.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "accessCodeDto": {
                    "id": 0,
                    "code": "string",
                    "eventTicketTypeId": "string",
                    "startDate": "string",
                    "endDate": "string",
                    "recurringRelativeStartTime": 0,
                    "recurringRelativeEndTime": 0,
                    "accessCodeList": [
                        "string"
                    ],
                    "uses": 0
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692699580799,
        "lastModifiedTime": 1692699580799,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112560,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteAccessCodeDetailById",
        "executor_version": "v1",
        "executor_display_name": "Delete Access Code Detail By Id",
        "executor_description": "This API is used to delete access code details by id associated with the specified event. This API can be accessed by an event admin and super admin. It will return data like type and message. To call this API, user will have to pass query param with API URL like recurringEventId, id and authentication key to authenticate user.",
        "executor_category": "HostRegistrationAccessCodes",
        "executor_category_group": "HostRegistrationAccessCodes",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/accessCode/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "User pass the delete access code details by id."
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "User pass the In-Person event id.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692699665954,
        "lastModifiedTime": 1692699665954,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112558,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAccessCode",
        "executor_version": "v1",
        "executor_display_name": "Get Access Code",
        "executor_description": "This API is used to retrieve access codes associated with the specified event. This API can be accessed by an event admin and super admin. It will return data like id, code, eventTicketTypeId, startDate, accessCodeList and many more. To call this API, user will have to pass query param with API URL like recurringEventId and authentication key to authenticate user.",
        "executor_category": "HostRegistrationAccessCodes",
        "executor_category_group": "HostRegistrationAccessCodes",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/accessCode",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "User pass the In-Person event id.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692699485548,
        "lastModifiedTime": 1692699485548,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": 358,
                        "code": "CODE10",
                        "eventTicketTypeId": "0",
                        "startDate": "2021/10/20 09:43",
                        "endDate": "2021/11/10 16:45",
                        "recurringRelativeStartTime": 0,
                        "recurringRelativeEndTime": 0,
                        "accessCodeList": null,
                        "uses": -1
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112557,
        "executor_type": "THIRDPARTY",
        "executor_name": "addAccessCode",
        "executor_version": "v1",
        "executor_display_name": "Add Access Code",
        "executor_description": "This API is used to create access codes associated with the specified event. This API can be accessed by an event admin and super admin. It will return data like type and message. To call this API, user will have to pass query param with API URL like recurringEventId, access code details and authentication key to authenticate user.",
        "executor_category": "HostRegistrationAccessCodes",
        "executor_category_group": "HostRegistrationAccessCodes",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/accessCode",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "User pass the In-Person event id.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "accessCodeDto": {
                    "id": 0,
                    "code": "string",
                    "eventTicketTypeId": "string",
                    "startDate": "string",
                    "endDate": "string",
                    "recurringRelativeStartTime": 0,
                    "recurringRelativeEndTime": 0,
                    "accessCodeList": [
                        "string"
                    ],
                    "uses": 0
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692699381489,
        "lastModifiedTime": 1692699381489,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113188,
        "executor_type": "THIRDPARTY",
        "executor_name": "allowAttendeesToJoinSessionsLate",
        "executor_version": "v1",
        "executor_display_name": "Allow attendees to join sessions late",
        "executor_description": "Using this API you can change your preferences to allow attendees to join sessions late or not.  If you have purchased the Professional/Enterprise / White Label plan then only you will be able to change this setting. For Scale and Starter plans won't allow changing this setting. However, this setting is applicable for all In Person events irrespective of plan type.  If the user purchases the Scale or Starter plan and tries to change this setting then they get the error message 4070008.  This API work in two different scenarios:  Admin won't allow any attendee to join the session after a specified period of time for that admin should pass allowLateJoin as true.(then only admin can set a particular time for the session after it starts).  If Admin passes allowLateJoin as false then the attendee can join the session anytime.",
        "executor_category": "HostAgendaSettings",
        "executor_category_group": "HostAgendaSettings",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/virtual-event-settings/enableLateJoinAllow/{allowLateJoin}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "allowLateJoin",
                "value": "",
                "description": "For Automatically enable pass the true else pass the false."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692942764606,
        "lastModifiedTime": 1692942764606,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Success"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113187,
        "executor_type": "THIRDPARTY",
        "executor_name": "inviteEmailSettingsForSpeakers",
        "executor_version": "v1",
        "executor_display_name": "Invite email settings for speakers",
        "executor_description": "This API is used to configure settings for whether to send email invitations to speakers before the session starts.  You need to identify the virtual event setting id for which you want to update this setting and send it as an id path parameter. You also have to send isSpeakerInviteEnable as true / false to switch settings.  If isSpeakerInviteEnable is true only then emails will be sent to speakers before any session starts.  This API can be used by authenticated users only and it will require super admin/admin/staff level access.",
        "executor_category": "HostAgendaSettings",
        "executor_category_group": "HostAgendaSettings",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/virtual-event-settings/{id}/changeSpeakerInviteMail/{isSpeakerInviteEnable}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Virtual event settings id is unique identifier for your event.And You can find this id calling https://devaccel.readme.io/reference/get-virtual-event-settings API."
            },
            {
                "key": "isSpeakerInviteEnable",
                "value": "",
                "description": "For Automatically enable pass the true else pass the false."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692942675467,
        "lastModifiedTime": 1692942675467,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Success"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112481,
        "executor_type": "THIRDPARTY",
        "executor_name": "retrieveCategoriesDetail",
        "executor_version": "v1",
        "executor_display_name": "Retrieve categories detail",
        "executor_description": "This API will get all categories details of the recently visited event for the passed data type.",
        "executor_category": "HostTicketSeatingCategory",
        "executor_category_group": "HostTicketSeatingCategory",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/category",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "dataType",
                "value": "",
                "description": "Pass event ticket type to get categories detail.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692685361684,
        "lastModifiedTime": 1692685361684,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": 1437,
                        "name": "Paid Ticket 1",
                        "havingVariations": true,
                        "color": null,
                        "imageUrl": null,
                        "quantity": 100,
                        "eventId": 10630,
                        "position": null,
                        "dataType": null,
                        "ticketType": "PAID"
                    },
                    {
                        "id": 1436,
                        "name": "Free Admission",
                        "havingVariations": false,
                        "color": null,
                        "imageUrl": null,
                        "quantity": 100,
                        "eventId": 10630,
                        "position": null,
                        "dataType": null,
                        "ticketType": "FREE"
                    }
                ]
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4030201",
                    "developerMessage": "Not Event Host"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112906,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllSponsorsForDisplayPortalSideByEventUrl",
        "executor_version": "v1",
        "executor_display_name": "Get all sponsors for display/portal side by eventUrl",
        "executor_description": "This API will help to get all sponsors of event. We need to pass eventUrl in param to get particular event's sponsors.",
        "executor_category": "PortalSponsorAPI",
        "executor_category_group": "PortalSponsorAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/cache/events/{eventurl}/sponsors",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692856738247,
        "lastModifiedTime": 1692856738247,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": 957,
                        "eventId": 40,
                        "sponsorName": "Duplicate sponsor test",
                        "sponsorLogo": "48b1aeb6-0233-4069-8683-570e8cfb42d0",
                        "sponsorSize": "SMALL",
                        "sponsorUrl": "www.google.com",
                        "position": 4000,
                        "includeInLobbyCarousel": true,
                        "carouselLogoSliderDelaySeconds": 5,
                        "shortDescription": "This is for duplicate sponsor.",
                        "sponsorCardImage": "07139909-2a34-4b9a-9c64-b60fb0dd841d",
                        "colorConfig": {
                            "shortDescriptionColor": "#ffffff",
                            "nameColor": "#0000FF",
                            "categoryColor": null
                        },
                        "cardTag": null,
                        "exhibitorId": 1161
                    },
                    {
                        "id": 941,
                        "eventId": 40,
                        "sponsorName": "yahoo",
                        "sponsorLogo": "1c3fe76f-4c34-470f-8726-d6ebcd232c73",
                        "sponsorSize": "MEDIUM",
                        "sponsorUrl": null,
                        "position": 3000,
                        "includeInLobbyCarousel": true,
                        "carouselLogoSliderDelaySeconds": 5,
                        "shortDescription": null,
                        "sponsorCardImage": null,
                        "colorConfig": {
                            "shortDescriptionColor": "#0000FF",
                            "nameColor": "#000000",
                            "categoryColor": null
                        },
                        "cardTag": "TAG",
                        "exhibitorId": null
                    },
                    {
                        "id": 940,
                        "eventId": 40,
                        "sponsorName": "facebook 1",
                        "sponsorLogo": "c81c4fb1-c927-46a8-930a-bb33984dc068",
                        "sponsorSize": "SMALL",
                        "sponsorUrl": null,
                        "position": 2000,
                        "includeInLobbyCarousel": true,
                        "carouselLogoSliderDelaySeconds": 5,
                        "shortDescription": null,
                        "sponsorCardImage": null,
                        "colorConfig": {
                            "shortDescriptionColor": "#0000FF",
                            "nameColor": "#0000FF",
                            "categoryColor": null
                        },
                        "cardTag": null,
                        "exhibitorId": null
                    },
                    {
                        "id": 939,
                        "eventId": 40,
                        "sponsorName": "facebook",
                        "sponsorLogo": null,
                        "sponsorSize": "SMALL",
                        "sponsorUrl": null,
                        "position": 1000,
                        "includeInLobbyCarousel": true,
                        "carouselLogoSliderDelaySeconds": 5,
                        "shortDescription": null,
                        "sponsorCardImage": null,
                        "colorConfig": {
                            "shortDescriptionColor": "#0000FF",
                            "nameColor": "#0000FF",
                            "categoryColor": null
                        },
                        "cardTag": null,
                        "exhibitorId": null
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112918,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllSessionsforDisplayAndPortalPage",
        "executor_version": "v2",
        "executor_display_name": "Get all sessions for display and portal page",
        "executor_description": "Using this API, you can get sessions details for an event.  You need to send eventurl as a path parameter. You can pass page, size, expand, tagIds, trackIds, sessionFormat, past, showPastAndUpcoming, filterDate and calledFrom as query parameter for pagination and filter support.",
        "executor_category": "DisplayPortalSessionsAPI",
        "executor_category_group": "DisplayPortalSessionsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/session/v2",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here 'demo' is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "searchString",
                "value": "",
                "description": "Get filter session records according to search value passing in request.",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Size will returns number of records when call api default will returns 10 records",
                "req": false
            },
            {
                "key": "expand",
                "value": "",
                "description": "Expands Get Records accordingly we are passing in request param in expand value as comma separated like : TAG,TRACK,SPEAKER,currentUserRegisteredEventTicketId",
                "req": false
            },
            {
                "key": "tagIds",
                "value": "",
                "description": "Filter Tag Ids in comma separated for filtering session records according to tags",
                "req": false
            },
            {
                "key": "trackIds",
                "value": "",
                "description": "Filter Tracks Ids in comma separated for filtering session records according to Tracks",
                "req": false
            },
            {
                "key": "sessionFormat",
                "value": "",
                "description": "This Attribute used to return filter sessionFormat according as we are setting from portal",
                "req": false
            },
            {
                "key": "past",
                "value": "",
                "description": "If past is null, i.e not passed, it will pull all sessions, past=true, should pull past session, past=false, should pull upcoming sessions",
                "req": false
            },
            {
                "key": "showPastAndUpcoming",
                "value": "",
                "description": "If showPastAndUpcoming is true, it will pull all sessions, showPastAndUpcoming=false, should pull upcoming sessions",
                "req": false
            },
            {
                "key": "filterDate",
                "value": "",
                "description": "Date format should be yyyy-MM-dd\u2019T\u2019HH:mm:ssZ, E.g 2020-06-19T00:00:00+0530, Hours and minutes should be zero",
                "req": false
            },
            {
                "key": "calledFrom",
                "value": "",
                "description": "Toggle to Hide this session from attendees who cannot register for this session should only be applicable to portal agenda",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692857697874,
        "lastModifiedTime": 1692857697874,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 74,
                    "recordsFiltered": 1,
                    "data": [
                        {
                            "sessionId": 9654,
                            "title": "Session",
                            "startTime": "2021/08/18 12:00",
                            "endTime": "2021/08/18 17:00",
                            "location": null,
                            "description": "<span class=\"fr-video fr-deletable fr-fvc fr-dvb fr-draggable\" contenteditable=\"false\" draggable=\"true\"><iframe width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/WTJSt4wP2ME?&amp;list=RDWTJSt4wP2ME&amp;start_radio=1&amp;wmode=opaque&amp;rel=0\" frameborder=\"0\" allowfullscreen=\"\" class=\"fr-draggable\"></iframe></span><img src=\"https://res.cloudinary.com/devaccel/image/fetch/https://accelevents-dev-public-images.s3.amazonaws.com/b226ca59-a959-4f23-83ee-cb0c23d3d5b3_xZX.jpeg\" style=\"width: 300px;\" class=\"fr-fil fr-dii\"><br>",
                            "format": "MAIN_STAGE",
                            "speakerList": [
                                {
                                    "speakerId": 4687,
                                    "title": null,
                                    "pronouns": "ABCD",
                                    "firstName": "tamanna",
                                    "lastName": "N",
                                    "email": "tamanna.n@brilworks.com",
                                    "sessionDTO": null,
                                    "userId": 8169,
                                    "imageUrl": "3b572bf1-2113-45fa-8f74-6fa21e6bb58f",
                                    "company": null,
                                    "bio": null,
                                    "linkedIn": null,
                                    "twitter": null,
                                    "instagram": null,
                                    "position": 4485,
                                    "moderator": null,
                                    "ticketTypesForSpeaker": null,
                                    "deviceChecked": false,
                                    "loggedInAtVEH": false,
                                    "showModerator": true,
                                    "allowOverrideDetails": false,
                                    "allowAttendeeAccess": false
                                }
                            ],
                            "currentUserRegisteredEventTicketId": null,
                            "tracks": [],
                            "streamProvider": null,
                            "streamUrl": null,
                            "rtmpUrl": null,
                            "meetingPassword": "",
                            "sessionVisibilityType": "PUBLIC",
                            "sponsorList": [],
                            "recordSession": true,
                            "hideVideoControls": false,
                            "exihiborList": [],
                            "postSessionCallToActionJson": null,
                            "playBackRestrictionToken": "eyJraWQiOiJNSEJvMXhaR09PUGlHUTJ4Y3AwMjFOOXNVVnkzcTVURFBnNUN3Sk1McTAyQlUiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI5SUhVRFNYMDIzSW96VExodWl0RVQwMGh5cFFlM0NkZ0lFaXhKdjRDMDJtNUtNIiwiYXVkIjoidiIsInBsYXliYWNrX3Jlc3RyaWN0aW9uX2lkIjoiNmtPdFNjWXFPMDJhTG5jZktySXo1Ylp1VTAxd3N4Qlg5RDNmdmU2enBYSUdjIiwiZXhwIjoxODYwODIwMTIwfQ.bVlJmFttSzm7B1AyISHFFtrg5lytLCIJbNS1JGauuKlUXMS1_6HZZ7GKcmYtlCLaATV2mAiquRn6JMwuS_J73XajW7D-8EOwDBbMzXfVuXcyTU-7IaLgOzULPWOLfIJKF62PDTStROXSHCvUYwKaxbDOhuyUtswlAgE7Ir7TSXx-MVrvfVwYefi-70qtRCWOLhT0_sWPVw-zrH7FwZAI2HeymwskHJaz0nLjRUetbI3-prQczWZXNbDqgyGYmfmdHgqXjU2VWOz9kGfHeUQT-06tprNf5MPCYQ1n6ZHt0olJS8Q9Rki9vrXUnsFXaw0z5-T22MtGImwx07golT1slQ",
                            "thumbnailRestrictionToken": "eyJraWQiOiJNSEJvMXhaR09PUGlHUTJ4Y3AwMjFOOXNVVnkzcTVURFBnNUN3Sk1McTAyQlUiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0Y1poNTAxcFVyUFRyT013NDZHMDJhb1h0V2xrSzI0RHB1Snh2QTAwWVltbDAySSIsImF1ZCI6InQiLCJwbGF5YmFja19yZXN0cmljdGlvbl9pZCI6IjZrT3RTY1lxTzAyYUxuY2ZLckl6NWJadVUwMXdzeEJYOUQzZnZlNnpwWElHYyIsImV4cCI6MTg1OTE4NzEyMX0.oQ3qR59N4vpM4gpl1FoMaIC9gmo7W4Ij-H6NpC7ol-khS1N0CHgzzcqe8jlS1xgKwgsKj0yuu92Cf6vbsPv15m5GnXTrtKFeUlCShYUrjf9n2GStvpflgJRowA9-CoEObQ8KsyZykwCmsR4poIqZP1QFu9MAQDuzFjKbo6Q8yvcFW5uC-5r9bbWPDWxAtRXNZZjU51WzgZV_Xr-v9g4HCkksmAYl9vLyHpcD95Ded4UF1jmPqnYvAwOnTvPYcnx2_S6fKxcy7rfOBer8kRkg7Zsv6kyOr5P0EDlVTc9cC5vzUhT3JKeY7J_F0J1qFApRPwRWg99x_EsNNvTlHPnxIg"
                        }
                    ],
                    "error": null,
                    "pastSession": true,
                    "upComingSession": false
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112920,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSessionForDisplayAndPortalPage",
        "executor_version": "v2",
        "executor_display_name": "Get session for display and portal page",
        "executor_description": "Using this API, you can get sessions' details like title, streamUrl, startDate, endDate, sessionStats, etc.  To call this API, you need to pass an eventurl and sessionId as path parameters. You can also send expand as query parameters to get responses data according to your need.",
        "executor_category": "DisplayPortalSessionsAPI",
        "executor_category_group": "DisplayPortalSessionsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/session/v2/{sessionId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "sessionId",
                "value": "",
                "description": "For getting particular session need to pass event session id for getting particular session"
            }
        ],
        "queryParams": [
            {
                "key": "expand",
                "value": "",
                "description": "Expands Get Records accordingly we are passing in request param in expand value as comma separated like : TAG,TRACK,SPEAKER,currentUserRegisteredEventTicketId",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692857814209,
        "lastModifiedTime": 1692857814209,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "sessionId": 11920,
                    "title": "tesing for API",
                    "startTime": "2021/12/27 15:09",
                    "endTime": "2021/12/27 16:09",
                    "status": "VISIBLE",
                    "format": "WORKSHOP",
                    "sessionStats": {
                        "id": null,
                        "registeredUserCount": 1,
                        "interestedUserCount": 0,
                        "attendeeCount": 0,
                        "sessionSpeakerCount": 0
                    },
                    "registerdHolderUsers": null,
                    "currentUserRegisteredEventTicketId": [
                        null
                    ],
                    "ticketTypesThatCanBeRegistered": [
                        8460,
                        8458
                    ],
                    "assetList": null,
                    "playBackRestrictionToken": "eyJraWQiOiJNSEJvMXhaR09PUGlHUTJ4Y3AwMjFOOXNVVnkzcTVURFBnNUN3Sk1McTAyQlUiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJZdmVjMDE5Qld4MDFUUDZ4djJ6MkNCRjkxNEp0bTRBNHBXajAxd09TU0tWdUkwMCIsImF1ZCI6InYiLCJwbGF5YmFja19yZXN0cmljdGlvbl9pZCI6IjZrT3RTY1lxTzAyYUxuY2ZLckl6NWJadVUwMXdzeEJYOUQzZnZlNnpwWElHYyIsImV4cCI6MTg2MTM0OTk4MH0.HFKL_Q_5ucSABk5P54ovhusGO1EjptHfvhAnc0ImNioq1-Kn8TLFjJ-LoRn3tLlSCWxL9-QlTCZTfN3EZhnlB6et4_ZDQSx0Pa1fBg20oSWQ5xOXmhL1qR9luRtYwxEAv4ZU2mZKZrqCNOyXyMK4CckEi5vqvvLeMY_bnd2YpRavdUth8W0VSOEyYxV_E262HsUXxGFu6xpqsor9TosbSDG19SUg1XQ_sDO4mBdS_hvAtXwViiy0AZ2BUYSH6_cUKYfNdfSCRznVLAPesyVzzNP46o6y3n047hqBvkvgHTjj-TZkx8pgL96QjPzh3QiuZ_EgKjCO5iA6owIBWSATYg",
                    "thumbnailRestrictionToken": "eyJraWQiOiJNSEJvMXhaR09PUGlHUTJ4Y3AwMjFOOXNVVnkzcTVURFBnNUN3Sk1McTAyQlUiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJZdmVjMDE5Qld4MDFUUDZ4djJ6MkNCRjkxNEp0bTRBNHBXajAxd09TU0tWdUkwMCIsImF1ZCI6InQiLCJwbGF5YmFja19yZXN0cmljdGlvbl9pZCI6IjZrT3RTY1lxTzAyYUxuY2ZLckl6NWJadVUwMXdzeEJYOUQzZnZlNnpwWElHYyIsImV4cCI6MTg2MTM0OTk4MH0.Vcg-XNuNlnMAZldmN33IgBB9r0Hl3_F45av9KQPHLVkLQM6NiiR8ZOIe8TnsapaDfmU21O7r8tn-lMF5RqjTSP9ChcV7Ub0TFS08B9ZQ7JcVPMOZj1pOdm6KGZ4tWKVmwEkSNHx39tpqciGbctk-CF3YLrHntlRZD6G-V1jjiDh6sEftrTgionJbxuD3V0VRmnXlcC2cI75nMej8Ae6FQBqH3m24_6tbLlinOXGFeHwOG34jUTnJ8BKbuyYpuX8LyAlGrmJR0xQJUSu0k2wHm9tSr4vgxJTTax4N6jyOxWi3uG4H5QB6ntZqZjvpBmyi_R7v41s7BoNHSPhxF9YGOQ",
                    "accelEventsStudio": true,
                    "closedCaptionUrl": null,
                    "closedCaptionHeight": 150,
                    "description": null,
                    "directVideoAutoStart": false,
                    "pollEnabled": true,
                    "quesAndAnsEnabled": true,
                    "displayDonation": false,
                    "documentKeyValue": [],
                    "linkKeyValue": [],
                    "location": null,
                    "meetingPassword": null,
                    "rtmpUrl": "rtmp://live.mux.com/app",
                    "speakerList": [
                        {
                            "speakerId": 5833,
                            "title": null,
                            "pronouns": null,
                            "firstName": "Ankit",
                            "lastName": "D",
                            "email": "ankit.d@brilworks.com",
                            "sessionDTO": null,
                            "userId": 11,
                            "imageUrl": null,
                            "company": null,
                            "bio": null,
                            "linkedIn": null,
                            "twitter": null,
                            "instagram": null,
                            "position": 1000,
                            "moderator": true,
                            "ticketTypesForSpeaker": null,
                            "allowAttendeeAccess": false,
                            "deviceChecked": false,
                            "allowOverrideDetails": false,
                            "loggedInAtVEH": false,
                            "showModerator": true
                        }
                    ],
                    "streamProvider": "ACCELEVENTS",
                    "subStreamProvider": "OPENTOK",
                    "streamUrl": "caaJLa5bvlnb2hzu1o00DABbOIyb00uqJvtjDHrSL9y3k",
                    "streamKey": "b1e18870-a8d3-f5e1-a240-96b582b24557",
                    "subTitleFileUrl": null,
                    "tracks": [],
                    "hideVideoControls": false,
                    "recordSession": true,
                    "enableAttendeeList": true,
                    "postSessionCallToActionJson": {
                        "enablePostSessionCallToAction": false,
                        "destinationType": null,
                        "description": null,
                        "buttonLabelText": null,
                        "destination": null
                    },
                    "qnAPrivate": true
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112923,
        "executor_type": "THIRDPARTY",
        "executor_name": "getWorkshopConfiguration",
        "executor_version": "v2",
        "executor_display_name": "Get workshop configuration",
        "executor_description": "Using this API you can get workshop configuration. It will return details like disableAttendeesCameraOnEntry and muteAttendeesOnEntry. So based on this configuration you can disable the microphone/camera device when the attendee joins the meeting.  To call this API, You have to send eventurl and sessionId as path parameters.",
        "executor_category": "DisplayPortalSessionsAPI",
        "executor_category_group": "DisplayPortalSessionsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/session/v2/chimeConfig/{sessionId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "sessionId",
                "value": "",
                "description": "Unique Session Id Of Event For getting chime config details by session id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692857894290,
        "lastModifiedTime": 1692857894290,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "disableAttendeesCameraOnEntry": false,
                    "muteAttendeesOnEntry": false
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112927,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateWorkshopConfiguration",
        "executor_version": "v2",
        "executor_display_name": "Update workshop configuration",
        "executor_description": "Using this API, the workshop moderator/admin can configure whether to allow attendees are allowed to use their microphone/camera when joining the meeting.  To call this API, You have to send eventurl and sessionId as path parameters. You have to pass chimeConfigDto containing disableAttendeesCameraOnEntry and muteAttendeesOnEntry fields. If values for these are true attendees are allowed to keep the camera/microphone on other wise it will be off.  This API can be used by authenticated users only, and it will require super admin/admin/staff/attendee level access and you need to be the moderator of that session.",
        "executor_category": "DisplayPortalSessionsAPI",
        "executor_category_group": "DisplayPortalSessionsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/session/v2/chimeConfig/{sessionId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "sessionId",
                "value": "",
                "description": "Unique Session Id Of Event For getting chime config details by session id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "chimeConfigDto": {
                    "disableAttendeesCameraOnEntry": true,
                    "muteAttendeesOnEntry": true
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692857988952,
        "lastModifiedTime": 1692857988952,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112928,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSpeakersCountRegisteredSessionCountForEvent",
        "executor_version": "v2",
        "executor_display_name": "Get speakers count & registered session count for event",
        "executor_description": "Using this API, You can get the total speaker for a particular event, along with the number of sessions for which you have registered/bookmarked for an event.  To call this API, you need to send eventurl as path parameters.  This API can be used by authenticated users only, and it will require super admin/admin/staff/attendee level access.",
        "executor_category": "DisplayPortalSessionsAPI",
        "executor_category_group": "DisplayPortalSessionsAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/session/v2/speakerRegisterSessionCount",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692858100005,
        "lastModifiedTime": 1692858100005,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "speakerCount": 13,
                    "registerSessionCount": 10
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113183,
        "executor_type": "THIRDPARTY",
        "executor_name": "createSessionStreamKey",
        "executor_version": "v1",
        "executor_display_name": "Create session stream key and RTMP URL for Accelevent studio or Accelevent RTMP stream provider",
        "executor_description": "For streaming, we are using MUX(link). Using this API, you can generate streaming key and RTMP url that you need to configure in streaming/broadcasting software/tool.  To call this API you need to pass sessionId for which streamKey and rtmpUrl will be generated and returned in the response. Combining streamKey and rtmpUrl you will create a streaming endpoint and configure it within your broadcasting software. For more information, check out this link https://docs.mux.com/guides/video/configure-broadcast-software.  For example If api return below rtmpUrl and streamKey: rtmpUrl: rtmp://live.mux.com/app streamKey: a42ccb8f-dce1-00f8-3552-504d14b43724 then final endpoint will be rtmp://live.mux.com/app/a42ccb8f-dce1-00f8-3552-504d14b43724.  To call this API you need to pass sessionId and event url as path parameters.  You can also pass the optional parameter regenerate if you want to generate existing keys, but it will be allowed only if streaming is not active for the current stream key.",
        "executor_category": "RTMPSessionAPI",
        "executor_category_group": "RTMPSessionAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/rtmp/session/{sessionId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "sessionId",
                "value": "",
                "description": "The sessionId represents the unique ID of each session. It will be generated automatically when a new session is created."
            }
        ],
        "queryParams": [
            {
                "key": "regenerate",
                "value": "",
                "description": "It will allow to regenerate stream key if stream status is not active.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692942258279,
        "lastModifiedTime": 1692942258279,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "streamProvider": "ACCELEVENTS",
                    "subStreamProvider": null,
                    "streamUrl": "aIdDAEH00MdVsGYfAV4tpD3Xi3aHqZ7IGID01FkExb8d4",
                    "streamKey": "2406d3e8-e197-8096-6ad8-87db7ef0c08f",
                    "rtmpUrl": "rtmp://live.mux.com/app",
                    "accelEventsStudio": true,
                    "playBackRestrictionToken": "eyJraWQiOiJNSEJvMXhaR09PUGlHUTJ4Y3AwMjFOOXNVVnkzcTVURFBnNUN3Sk1McTAyQlUiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhSWREQUVIMDBNZFZzR1lmQVY0dHBEM1hpM2FIcVo3SUdJRDAxRmtFeGI4ZDQiLCJhdWQiOiJ2IiwicGxheWJhY2tfcmVzdHJpY3Rpb25faWQiOiI2a090U2NZcU8wMmFMbmNmS3JJejViWnVVMDF3c3hCWDlEM2Z2ZTZ6cFhJR2MiLCJleHAiOjE4NjEwMTIyNTN9.ADpGfMbNWLE3HNR5WflAGldPaY-cjs5H99X0ysK7SZIHwp4SP56coPJWifh34CRPyO-aItSaiE5gsOWrCQHoSoWC88kbGWnMaezi0gvk1NeZk6LSwDMiMaAXzWyEkPFuUqcx2TYwxJL9y0scAATA1JpjLxkRFomoGt8B376U041XmheVofOiOKJTLPB0RR2O3WZfDQWyFJY-udWe-otetxieM0pFGrf_g0zOQqSsjHl_7qHguLV0T8tSaOXn1J4Q9Go0xM4PgY4k8gvKgmUnakvW9ck1W8ZO1oHDOAGiMnXPufvb9KdM3nTPyydCTwUIULqzyVCqU0_CY1ZA_uZizw",
                    "thumbnailRestrictionToken": "eyJraWQiOiJNSEJvMXhaR09PUGlHUTJ4Y3AwMjFOOXNVVnkzcTVURFBnNUN3Sk1McTAyQlUiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhSWREQUVIMDBNZFZzR1lmQVY0dHBEM1hpM2FIcVo3SUdJRDAxRmtFeGI4ZDQiLCJhdWQiOiJ0IiwicGxheWJhY2tfcmVzdHJpY3Rpb25faWQiOiI2a090U2NZcU8wMmFMbmNmS3JJejViWnVVMDF3c3hCWDlEM2Z2ZTZ6cFhJR2MiLCJleHAiOjE4NjEwMTIyNTN9.qRw1wuYCUjeH8x2Lywl70s3EV0yPqpnvIz-bTliRvDmCCCVLlsR0k3fCx8odjfkxSgtsz1GV7NmMysBlc1OpiyNjbclqQNzitc8n8a4K5u9USovd1lPjUbQb3-sdrCPiZ_0uGPNfFn_8dLzDHQeyw03MSvELWVd6VSuC8YDpBeK43SfA_wjjImzdf9rlt5yBO6iIH5BZ_bzEsS9qBB2sawD-MB8dgxaZGOeyLqWZ-gf4SxJRpg9edKnNPXrX5f8rmbwyVNh7SIugZT7gC-VkT4LcsDtr0yISXL_8mEFnl5Y86xxIQ4xQg90nguPXQHGrzI0LbuAVp0SvRllJ2N2BKQ",
                    "metaData": "{\"reconnect_window\":90,\"playback_ids\":[{\"id\":\"aIdDAEH00MdVsGYfAV4tpD3Xi3aHqZ7IGID01FkExb8d4\",\"policy\":\"signed\"}],\"latency_mode\":\"standard\",\"passthrough\":\"SESSION_1644\",\"created_at\":\"1640260253\",\"new_asset_settings\":{\"playback_policies\":[\"signed\"]},\"id\":\"wvzlrf7jaN8UgPRGBXw9xMWq702j9pYu6hpEUHmF3KLU\",\"stream_key\":\"2406d3e8-e197-8096-6ad8-87db7ef0c08f\",\"status\":\"idle\"}",
                    "liveStreamId": "wvzlrf7jaN8UgPRGBXw9xMWq702j9pYu6hpEUHmF3KLU"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113184,
        "executor_type": "THIRDPARTY",
        "executor_name": "createAssetsForDirectUpload",
        "executor_version": "v1",
        "executor_display_name": "Create assets for direct upload provider/exhibitor streaming/lobby streaming",
        "executor_description": "Create direct upload ID & direct upload URL for session / exhibitor / lobby. For direct upload session/exhibitor/lobby, first, you need to create direct upload assets on MUX. To do this you need to call this API which will prepare direct upload assets on MUX and will return directUploadId and directUploadUrl in response.  directUploadId is a unique reference to uploaded video, and it can be used to get further details about created assets to check this API (https://developer.accelevents.com/reference/update-upload-id-and-file-name).  directUploadUrl is an endpoint where the uploaded video will be stored and used by MUX. Once assets are prepared using this API in the next step, you need to upload a video (https://docs.mux.com/guides/video/upload-files-directly) to directUploadUrl for streaming.  To call this API you need to send sessionId as path parameters.  For creating direct upload assets for exhibitor/lobby users, need to pass 0 as sessionId in the path parameter in this API.",
        "executor_category": "RTMPSessionAPI",
        "executor_category_group": "RTMPSessionAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/rtmp/upload/session/{sessionId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "sessionId",
                "value": "",
                "description": "The sessionId represents the unique ID of each session. It will be generated automatically when a new session is created."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692942365193,
        "lastModifiedTime": 1692942365193,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "directUploadId": "UAFPhRY54dyTh01uLb1p00LEGusQkb8CCiyJn016nGyP024",
                    "directUploadUrl": "https://storage.googleapis.com/video-storage-us-east1-uploads/UAFPhRY54dyTh01uLb1p00LEGusQkb8CCiyJn016nGyP024?Expires=1640265370&GoogleAccessId=direct-uploads-writer-prod%40mux-cloud.iam.gserviceaccount.com&Signature=MifxtlqC%2B1htHtN2G3Qq95jUd%2F6b0p1nTWdwfagOPiBFtE8Fr%2BIB299i9RkJO6uyFNvhaSLp4Nmxx8i7V0t5S0H2c6hU1op%2Ff3OMLUt5ZSNke1eOFWfs6dcUY4c4vTc572ku6q6i5%2Bq6UXBV9IEY7RikdaURO1y1SEUgH7lLen8waGagIpO%2B0TEi7FxQXzdEuqK6A4M3VnK4tQXFxzzPS%2BVvH2YrjMc2JuIAxTpHXVcKe5R3jNMNHfOU5%2Bg%2ByfqboQezQk2gPfEe3hmP3G2f%2BFeh6xnAdotEpthIQAv5Nqn7BgIxTYMniR4l7WJRuzNzWQn2eHsy5AHyeoBpl9LdLQ%3D%3D&upload_id=ADPycdsufbDHI6PPETq0O5x7O6D7a413VEcSKqZLf8AXI9cJONPJrCW7hmHr23T9YqCo-9DOvIPDAwn-Rr5zsVfF-ZNczZo7Gg"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113185,
        "executor_type": "THIRDPARTY",
        "executor_name": "createRtmpUrlForEvent",
        "executor_version": "v1",
        "executor_display_name": "Create RTMP URL for event",
        "executor_description": "Create Real-Time Messaging Protocol with their details for event video streaming. API can be use by host level user's permission to access this API which contains admin, staff and super admin. User need to pass an authentication token as header, session ID as path parameters and regenerate as query parameter.",
        "executor_category": "RTMPSessionAPI",
        "executor_category_group": "RTMPSessionAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/rtmp",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692942447424,
        "lastModifiedTime": 1692942447424,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "streamProvider": "ACCELEVENTS",
                    "subStreamProvider": null,
                    "streamUrl": "aIdDAEH00MdVsGYfAV4tpD3Xi3aHqZ7IGID01FkExb8d4",
                    "streamKey": "2406d3e8-e197-8096-6ad8-87db7ef0c08f",
                    "rtmpUrl": "rtmp://live.mux.com/app",
                    "accelEventsStudio": true,
                    "playBackRestrictionToken": "eyJraWQiOiJNSEJvMXhaR09PUGlHUTJ4Y3AwMjFOOXNVVnkzcTVURFBnNUN3Sk1McTAyQlUiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhSWREQUVIMDBNZFZzR1lmQVY0dHBEM1hpM2FIcVo3SUdJRDAxRmtFeGI4ZDQiLCJhdWQiOiJ2IiwicGxheWJhY2tfcmVzdHJpY3Rpb25faWQiOiI2a090U2NZcU8wMmFMbmNmS3JJejViWnVVMDF3c3hCWDlEM2Z2ZTZ6cFhJR2MiLCJleHAiOjE4NjEwMTIyNTN9.ADpGfMbNWLE3HNR5WflAGldPaY-cjs5H99X0ysK7SZIHwp4SP56coPJWifh34CRPyO-aItSaiE5gsOWrCQHoSoWC88kbGWnMaezi0gvk1NeZk6LSwDMiMaAXzWyEkPFuUqcx2TYwxJL9y0scAATA1JpjLxkRFomoGt8B376U041XmheVofOiOKJTLPB0RR2O3WZfDQWyFJY-udWe-otetxieM0pFGrf_g0zOQqSsjHl_7qHguLV0T8tSaOXn1J4Q9Go0xM4PgY4k8gvKgmUnakvW9ck1W8ZO1oHDOAGiMnXPufvb9KdM3nTPyydCTwUIULqzyVCqU0_CY1ZA_uZizw",
                    "thumbnailRestrictionToken": "eyJraWQiOiJNSEJvMXhaR09PUGlHUTJ4Y3AwMjFOOXNVVnkzcTVURFBnNUN3Sk1McTAyQlUiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhSWREQUVIMDBNZFZzR1lmQVY0dHBEM1hpM2FIcVo3SUdJRDAxRmtFeGI4ZDQiLCJhdWQiOiJ0IiwicGxheWJhY2tfcmVzdHJpY3Rpb25faWQiOiI2a090U2NZcU8wMmFMbmNmS3JJejViWnVVMDF3c3hCWDlEM2Z2ZTZ6cFhJR2MiLCJleHAiOjE4NjEwMTIyNTN9.qRw1wuYCUjeH8x2Lywl70s3EV0yPqpnvIz-bTliRvDmCCCVLlsR0k3fCx8odjfkxSgtsz1GV7NmMysBlc1OpiyNjbclqQNzitc8n8a4K5u9USovd1lPjUbQb3-sdrCPiZ_0uGPNfFn_8dLzDHQeyw03MSvELWVd6VSuC8YDpBeK43SfA_wjjImzdf9rlt5yBO6iIH5BZ_bzEsS9qBB2sawD-MB8dgxaZGOeyLqWZ-gf4SxJRpg9edKnNPXrX5f8rmbwyVNh7SIugZT7gC-VkT4LcsDtr0yISXL_8mEFnl5Y86xxIQ4xQg90nguPXQHGrzI0LbuAVp0SvRllJ2N2BKQ",
                    "metaData": "{\"reconnect_window\":90,\"playback_ids\":[{\"id\":\"aIdDAEH00MdVsGYfAV4tpD3Xi3aHqZ7IGID01FkExb8d4\",\"policy\":\"signed\"}],\"latency_mode\":\"standard\",\"passthrough\":\"SESSION_1644\",\"created_at\":\"1640260253\",\"new_asset_settings\":{\"playback_policies\":[\"signed\"]},\"id\":\"wvzlrf7jaN8UgPRGBXw9xMWq702j9pYu6hpEUHmF3KLU\",\"stream_key\":\"2406d3e8-e197-8096-6ad8-87db7ef0c08f\",\"status\":\"idle\"}",
                    "liveStreamId": "wvzlrf7jaN8UgPRGBXw9xMWq702j9pYu6hpEUHmF3KLU"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113186,
        "executor_type": "THIRDPARTY",
        "executor_name": "createStreamAssetsForEventLobby",
        "executor_version": "v1",
        "executor_display_name": "Create stream assets for event lobby or exhibitor Aceelevents RTMP or direct upload stream provider",
        "executor_description": "Generate streaming assets for lobby/exhibitor. Using this API, you can generate streamKey & rtmpUrl for Aceelevents RTMP or direct upload assets for direct upload stream provider returned in response.  For Accelevents RTMP combining streamKey and rtmpUrl you will create a streaming endpoint and configure it within your broadcasting software. For more information, checkout this link, https://docs.mux.com/guides/video/configure-broadcast-software.  For example: If API return below rtmpUrl and streamKey rtmpUrl: \u201crtmp://live.mux.com/app\u201d streamKey: \u201ca42ccb8f-dce1-00f8-3552-504d14b43724\u201d then final endpoint will be rtmp://live.mux.com/app/a42ccb8f-dce1-00f8-3552-504d14b43724.  For direct upload lobby/exhibitor, first you need to create direct upload assets on MUX and for more details for how to create direct upload assets and use, checkout this link : https://developer.accelevents.com/reference/create-upload-video-url-for-session, and as API response you will get directUploadId that you need to pass in current API as body parameter.  User need to pass type for identify stream type EX : LOBBY, EXPO & streamProvider for identify lobby/exhibitor stream provider like : DIRECT_UPLOAD, ACCELEVENTS.  This API can be used by authenticated user only, and it will require super admin/event admin/event staff level access. User need to pass an authentication token as header and type and streamProvider as query parameter.",
        "executor_category": "RTMPSessionAPI",
        "executor_category_group": "RTMPSessionAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/rtmp/eventLiveStream",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "type",
                "value": "",
                "description": "Identify stream type EX : LOBBY,EXPO",
                "req": false
            },
            {
                "key": "streamProvider",
                "value": "",
                "description": "For identify stream provider EX : ACCELEVENTS,DIRECT_UPLOAD",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "directUploadDto": {
                    "eventURL": "string",
                    "uploadId": "string",
                    "videoDuration": 0
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692942563167,
        "lastModifiedTime": 1692942563167,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "streamProvider": "ACCELEVENTS",
                    "subStreamProvider": null,
                    "streamUrl": "aIdDAEH00MdVsGYfAV4tpD3Xi3aHqZ7IGID01FkExb8d4",
                    "streamKey": "2406d3e8-e197-8096-6ad8-87db7ef0c08f",
                    "rtmpUrl": "rtmp://live.mux.com/app",
                    "accelEventsStudio": true,
                    "playBackRestrictionToken": "eyJraWQiOiJNSEJvMXhaR09PUGlHUTJ4Y3AwMjFOOXNVVnkzcTVURFBnNUN3Sk1McTAyQlUiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhSWREQUVIMDBNZFZzR1lmQVY0dHBEM1hpM2FIcVo3SUdJRDAxRmtFeGI4ZDQiLCJhdWQiOiJ2IiwicGxheWJhY2tfcmVzdHJpY3Rpb25faWQiOiI2a090U2NZcU8wMmFMbmNmS3JJejViWnVVMDF3c3hCWDlEM2Z2ZTZ6cFhJR2MiLCJleHAiOjE4NjEwMTIyNTN9.ADpGfMbNWLE3HNR5WflAGldPaY-cjs5H99X0ysK7SZIHwp4SP56coPJWifh34CRPyO-aItSaiE5gsOWrCQHoSoWC88kbGWnMaezi0gvk1NeZk6LSwDMiMaAXzWyEkPFuUqcx2TYwxJL9y0scAATA1JpjLxkRFomoGt8B376U041XmheVofOiOKJTLPB0RR2O3WZfDQWyFJY-udWe-otetxieM0pFGrf_g0zOQqSsjHl_7qHguLV0T8tSaOXn1J4Q9Go0xM4PgY4k8gvKgmUnakvW9ck1W8ZO1oHDOAGiMnXPufvb9KdM3nTPyydCTwUIULqzyVCqU0_CY1ZA_uZizw",
                    "thumbnailRestrictionToken": "eyJraWQiOiJNSEJvMXhaR09PUGlHUTJ4Y3AwMjFOOXNVVnkzcTVURFBnNUN3Sk1McTAyQlUiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhSWREQUVIMDBNZFZzR1lmQVY0dHBEM1hpM2FIcVo3SUdJRDAxRmtFeGI4ZDQiLCJhdWQiOiJ0IiwicGxheWJhY2tfcmVzdHJpY3Rpb25faWQiOiI2a090U2NZcU8wMmFMbmNmS3JJejViWnVVMDF3c3hCWDlEM2Z2ZTZ6cFhJR2MiLCJleHAiOjE4NjEwMTIyNTN9.qRw1wuYCUjeH8x2Lywl70s3EV0yPqpnvIz-bTliRvDmCCCVLlsR0k3fCx8odjfkxSgtsz1GV7NmMysBlc1OpiyNjbclqQNzitc8n8a4K5u9USovd1lPjUbQb3-sdrCPiZ_0uGPNfFn_8dLzDHQeyw03MSvELWVd6VSuC8YDpBeK43SfA_wjjImzdf9rlt5yBO6iIH5BZ_bzEsS9qBB2sawD-MB8dgxaZGOeyLqWZ-gf4SxJRpg9edKnNPXrX5f8rmbwyVNh7SIugZT7gC-VkT4LcsDtr0yISXL_8mEFnl5Y86xxIQ4xQg90nguPXQHGrzI0LbuAVp0SvRllJ2N2BKQ",
                    "metaData": "{\"reconnect_window\":90,\"playback_ids\":[{\"id\":\"aIdDAEH00MdVsGYfAV4tpD3Xi3aHqZ7IGID01FkExb8d4\",\"policy\":\"signed\"}],\"latency_mode\":\"standard\",\"passthrough\":\"SESSION_1644\",\"created_at\":\"1640260253\",\"new_asset_settings\":{\"playback_policies\":[\"signed\"]},\"id\":\"wvzlrf7jaN8UgPRGBXw9xMWq702j9pYu6hpEUHmF3KLU\",\"stream_key\":\"2406d3e8-e197-8096-6ad8-87db7ef0c08f\",\"status\":\"idle\"}",
                    "liveStreamId": "wvzlrf7jaN8UgPRGBXw9xMWq702j9pYu6hpEUHmF3KLU"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112480,
        "executor_type": "THIRDPARTY",
        "executor_name": "checkIfTheLoggedInUserIsAnEventAdmin",
        "executor_version": "v1",
        "executor_display_name": "Check if the logged-in user is an event admin",
        "executor_description": "This API is used to check if the currently logged-in user is part of the admin list of the passed event ID. The Super Admin always returns true, and the super admin can be authorized to access any event like an admin of the event. The Whitelabel Admin returns true if the event is part of that Whitelabel account.",
        "executor_category": "UserRole",
        "executor_category_group": "UserRole",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/event/{eventId}/isAdmin",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventId",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692685251337,
        "lastModifiedTime": 1692685251337,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": false
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112479,
        "executor_type": "THIRDPARTY",
        "executor_name": "userHasBillingTypeAdminRole",
        "executor_version": "v1",
        "executor_display_name": "User has billing type admin role",
        "executor_description": "This API is used to check if the currently logged-in user has a Billing Type Admin Role in the system or not. This role holder can change the type of organizer and event from Paid to Comp or vise versa.",
        "executor_category": "UserRole",
        "executor_category_group": "UserRole",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/superadmin/isBillingTypeAdmin",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692685173121,
        "lastModifiedTime": 1692685173121,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": false
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112766,
        "executor_type": "THIRDPARTY",
        "executor_name": "getGetstreamChannels",
        "executor_version": "v1",
        "executor_display_name": "Get getstream channels",
        "executor_description": "This API is used to get the getstream channels of the specified event. To call this API, the user has to pass eventUrl as a path param and authentication key to authenticate the user.",
        "executor_category": "MyBoothChatwithLeadAPI",
        "executor_category_group": "MyBoothChatwithLeadAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/virtualEventPortal/channels",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692783792025,
        "lastModifiedTime": 1692783792025,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    "string"
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112767,
        "executor_type": "THIRDPARTY",
        "executor_name": "returnsListofEventStaffBasicInformation",
        "executor_version": "v1",
        "executor_display_name": "Returns list of event staff basic information",
        "executor_description": "This API used to Get list of event staff basic information of the specified event. To call this API, user have to pass path param with API URL like eventUrl and authentication key to authenticate user.",
        "executor_category": "MyBoothChatwithLeadAPI",
        "executor_category_group": "MyBoothChatwithLeadAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/staff/staffsBasicInfo",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692783874650,
        "lastModifiedTime": 1692783874650,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "exhibitorIds": [
                        0
                    ],
                    "firstName": "string",
                    "lastName": "string",
                    "profileImage": "string",
                    "role": "string",
                    "sessionIds": [
                        0
                    ],
                    "userId": 0
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112770,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateChannelSetting",
        "executor_version": "v1",
        "executor_display_name": "Update channel setting",
        "executor_description": "This API used to update channel setting with the specified event. To call this API, user have to pass path param with API URL like eventUrl, request params like channelSettingDto and authentication key to authenticate user.",
        "executor_category": "MyBoothChatwithLeadAPI",
        "executor_category_group": "MyBoothChatwithLeadAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/virtual/get-stream/channel/update/{eventUrl}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "channelSettingDto": {
                    "replies": true,
                    "reactions": true,
                    "cooldown": 0,
                    "channelId": "string",
                    "channelType": "string",
                    "channelSettingType": "string"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692784208100,
        "lastModifiedTime": 1692784208100,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Created"
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden"
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112768,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadChatCsv",
        "executor_version": "v1",
        "executor_display_name": "Download Chat CSV",
        "executor_description": "This API is used to download a chat CSV file in which message, time of the message, and user name details are mentioned with thread name.",
        "executor_category": "MyBoothChatwithLeadAPI",
        "executor_category_group": "MyBoothChatwithLeadAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/exhibitor/{id}/download/chat/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "it is the Unique id of the exhibitor."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692783972678,
        "lastModifiedTime": 1692783972678,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "\"User name\",\"Message\",\"Timestamp\",\"Thread Messages\"\n\"Mitul Soni\",\"hu\",\"09/22/2021 18:24:54\",\"\"\n\"Mitul Soni\",\"hsgvsg\",\"09/22/2021 18:24:57\",\"\"\n\"Mitul Soni\",\"ddff\",\"09/22/2021 18:24:58\",\"\""
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112476,
        "executor_type": "THIRDPARTY",
        "executor_name": "eventTicketCheckin",
        "executor_version": "v1",
        "executor_display_name": "Event ticket checkin",
        "executor_description": "This API is used for checkin event using barcode of the purchased ticket. It will take eventurl, barcode and checkin flag as path parameters",
        "executor_category": "AttendeeStaffAPI",
        "executor_category_group": "AttendeeStaffAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/staff/checkin/barcode/{barcode}/checkin/{checkin}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "This field contains the event URL."
            },
            {
                "key": "barcode",
                "value": "",
                "description": "This field contains the barcode of the ticket purchased."
            },
            {
                "key": "checkin",
                "value": "",
                "description": "This field contains boolean value to check chekin."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692684814588,
        "lastModifiedTime": 1692684814588,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "bundleTypeTable": true,
                    "paid": false,
                    "responseMessage": "string",
                    "seatNumber": "string",
                    "status": "string",
                    "table": "string",
                    "ticketHolderName": "string",
                    "ticketId": 0,
                    "ticketingType": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The request could not be understood by the server due to malformed syntax.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112942,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSpeakerDetails",
        "executor_version": "v1",
        "executor_display_name": "Get speaker details",
        "executor_description": "Using this API, you can get particular speakers' details like firstName, lastName, email, etc which are associated with the event. This API will get data from the cache.  To call this API, you have to send eventurl and id (Speaker id) as path parameters.",
        "executor_category": "DisplayPortalSpeakerAPI",
        "executor_category_group": "DisplayPortalSpeakerAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/cache/events/{eventUrl}/speaker/{id}/portal",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique speaker ID"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692858777631,
        "lastModifiedTime": 1692858777631,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "speakerId": 484,
                        "pronouns": "ss",
                        "title": "ss",
                        "firstName": "Ankit",
                        "lastName": "Dabhi",
                        "email": "ankitdabhi33@gmail.com",
                        "sessionDTO": null,
                        "userId": 850,
                        "allowOverrideDetails": false,
                        "imageUrl": "",
                        "company": "ss",
                        "bio": "<undefined>dd</undefined>",
                        "linkedIn": "ss",
                        "twitter": "ss",
                        "instagram": "ss",
                        "position": 1003
                    },
                    {
                        "speakerId": 758,
                        "pronouns": null,
                        "title": "abc",
                        "firstName": "test",
                        "lastName": "test",
                        "email": "test.b@gmail.com",
                        "sessionDTO": null,
                        "userId": 1916,
                        "allowOverrideDetails": false,
                        "imageUrl": null,
                        "company": "abc",
                        "bio": "<p>abc</p>",
                        "linkedIn": "abc",
                        "twitter": "abc",
                        "instagram": "abc",
                        "position": 1001
                    },
                    {
                        "speakerId": 757,
                        "pronouns": null,
                        "title": "abc",
                        "firstName": "test",
                        "lastName": "test",
                        "email": "ankit.d@brilworks.com",
                        "sessionDTO": null,
                        "userId": 11,
                        "allowOverrideDetails": false,
                        "imageUrl": "",
                        "company": "abc",
                        "bio": "<p>abc</p>",
                        "linkedIn": "abc",
                        "twitter": "abc",
                        "instagram": "abc",
                        "position": 1000
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112940,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSpeakersList",
        "executor_version": "v1",
        "executor_display_name": "Get speakers list",
        "executor_description": "Using this API, you can get a speaker list for events. This API will get data from the cache.  To call this API, you need to pass eventurl as path parameters. For search speakers, you can send searchString as a query parameter.",
        "executor_category": "DisplayPortalSpeakerAPI",
        "executor_category_group": "DisplayPortalSpeakerAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/cache/events/{eventUrl}/speaker/portal",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "searchString",
                "value": "",
                "description": "Get filter speaker records according to search value passing in request",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692858664441,
        "lastModifiedTime": 1692858664441,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "speakerId": 484,
                        "pronouns": "ss",
                        "title": "ss",
                        "firstName": "Ankit",
                        "lastName": "Dabhi",
                        "email": "ankitdabhi33@gmail.com",
                        "sessionDTO": null,
                        "userId": 850,
                        "allowOverrideDetails": false,
                        "imageUrl": "",
                        "company": "ss",
                        "bio": "<undefined>dd</undefined>",
                        "linkedIn": "ss",
                        "twitter": "ss",
                        "instagram": "ss",
                        "position": 1003
                    },
                    {
                        "speakerId": 758,
                        "pronouns": null,
                        "title": "abc",
                        "firstName": "test",
                        "lastName": "test",
                        "email": "test.b@gmail.com",
                        "sessionDTO": null,
                        "userId": 1916,
                        "allowOverrideDetails": false,
                        "imageUrl": null,
                        "company": "abc",
                        "bio": "<p>abc</p>",
                        "linkedIn": "abc",
                        "twitter": "abc",
                        "instagram": "abc",
                        "position": 1001
                    },
                    {
                        "speakerId": 757,
                        "pronouns": null,
                        "title": "abc",
                        "firstName": "test",
                        "lastName": "test",
                        "email": "ankit.d@brilworks.com",
                        "sessionDTO": null,
                        "userId": 11,
                        "allowOverrideDetails": false,
                        "imageUrl": "",
                        "company": "abc",
                        "bio": "<p>abc</p>",
                        "linkedIn": "abc",
                        "twitter": "abc",
                        "instagram": "abc",
                        "position": 1000
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112946,
        "executor_type": "THIRDPARTY",
        "executor_name": "getallSpeakersSession",
        "executor_version": "v1",
        "executor_display_name": "Get all speakers session",
        "executor_description": "Using this API, you can get all sessions list in which you are added as a speaker.  You have to pass an eventUrl as path parameters.",
        "executor_category": "DisplayPortalSpeakerAPI",
        "executor_category_group": "DisplayPortalSpeakerAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/cache/events/{eventUrl}/session/myTalks",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692858922665,
        "lastModifiedTime": 1692858922665,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "accelEventsStudio": false,
                    "capacity": 0,
                    "description": "string",
                    "directVideoAutoStart": false,
                    "endTime": "string",
                    "format": "MAIN_STAGE",
                    "location": "string",
                    "sessionId": 0,
                    "speakerList": [
                        0
                    ],
                    "startTime": "string",
                    "status": "VISIBLE",
                    "streamProvider": "NULL",
                    "streamUrl": "string",
                    "title": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112384,
        "executor_type": "THIRDPARTY",
        "executor_name": "getUserActivityDetailbyUserIdAndEventId",
        "executor_version": "v1",
        "executor_display_name": "Get User Activity detail by user Id and event Id",
        "executor_description": "This API is used to get user activity details by user id and event id.",
        "executor_category": "HostAttendees",
        "executor_category_group": "HostAttendees",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/attendee/userActivity",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "This field contains event URL"
            }
        ],
        "queryParams": [
            {
                "key": "userId",
                "value": "",
                "description": "This field contains user id",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692616944005,
        "lastModifiedTime": 1692616944005,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "data": [
                        {}
                    ],
                    "error": "string",
                    "recordsFiltered": 0,
                    "recordsTotal": 0
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112382,
        "executor_type": "THIRDPARTY",
        "executor_name": "getUserTicketingOrders",
        "executor_version": "v1",
        "executor_display_name": "Get user ticketing orders",
        "executor_description": "This API is used to get all ticketing orders of User.",
        "executor_category": "HostAttendees",
        "executor_category_group": "HostAttendees",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/staff/user/{userId}/orders",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "userId",
                "value": "",
                "description": "This field contains user id."
            }
        ],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Size will returns number of records when call api default will returns 10 records",
                "req": false
            },
            {
                "key": "recurringEventId",
                "value": "",
                "description": "This field contains recurring event id",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692616840051,
        "lastModifiedTime": 1692616840051,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "orders": [
                        {
                            "attendee": [
                                {
                                    "blocked": true,
                                    "bundleType": "string",
                                    "ccFee": 0,
                                    "dataType": "TICKET",
                                    "email": "string",
                                    "eventTicketingId": 0,
                                    "firstName": "string",
                                    "lastName": "string",
                                    "paidAmount": 0,
                                    "paidTicket": true,
                                    "phoneNumber": 0,
                                    "qty": 0,
                                    "salesTaxFee": 0,
                                    "seatNumber": "string",
                                    "status": "string",
                                    "table": true,
                                    "ticketType": "string",
                                    "ticketTypeId": 0,
                                    "ticketingFee": 0,
                                    "userId": "string"
                                }
                            ],
                            "cardType": "string",
                            "ccFee": 0,
                            "currency": "string",
                            "deliveryMode": "string",
                            "equivalentTimezone": "string",
                            "id": 0,
                            "lastFour": "string",
                            "note": "string",
                            "orderId": 0,
                            "orderType": "CASH",
                            "purchaseDate": "string",
                            "purchaser": {
                                "email": "string",
                                "firstName": "string",
                                "lastName": "string"
                            },
                            "recurringEventDate": "string",
                            "salesTaxFee": 0,
                            "speakerOrder": true,
                            "status": "string",
                            "ticketingFee": 0,
                            "timezoneId": "string",
                            "totalAmount": 0
                        }
                    ],
                    "recordsFiltered": 0,
                    "recordsTotal": 0
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "You are not authorized to view the resource.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Accessing the resource you were trying to reach is forbidden.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "The resource you were trying to reach is not found.",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113190,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllMatchedUsersofNetworkingSession",
        "executor_version": "v1",
        "executor_display_name": "Get all matched users of networking session",
        "executor_description": "Using this API you can get all matched users of the networking sessions you have joined/registered.  For calling this API you need to find the event URL and session id and send them as eventurl and sessionId path parameters respectively.  Even if you have super admin/event admin access you need to purchase the required ticket to join the networking session & view matches otherwise it will throw the error 4068910.  This API can be used by authenticated users only and it will require super admin/event admin/event staff/attendee access.",
        "executor_category": "PortalNetworking",
        "executor_category_group": "PortalNetworking",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/virtual/event/{eventUrl}/networking-rule/session/{sessionId}/matches",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Pass eventurl for which even's session matches data required."
            },
            {
                "key": "sessionId",
                "value": "",
                "description": "Pass unique sessionid for which session matches data required."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692942914402,
        "lastModifiedTime": 1692942914402,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "userIdOfMatch": 8447,
                        "fullName": "New ticekt",
                        "profileImage": "b03c4de4-3ec6-4bc1-9d4d-9a10fa56cc2b",
                        "matTimeDate": 1629795933000,
                        "title": "",
                        "company": "",
                        "sessionId": null,
                        "matchStarted": false
                    },
                    {
                        "userIdOfMatch": 8447,
                        "fullName": "New ticekt",
                        "profileImage": "b03c4de4-3ec6-4bc1-9d4d-9a10fa56cc2b",
                        "matTimeDate": 1629795854000,
                        "title": "",
                        "company": "",
                        "sessionId": null,
                        "matchStarted": false
                    },
                    {
                        "userIdOfMatch": 34,
                        "fullName": "Sanjay 1 raval",
                        "profileImage": "a7317903-e4fa-4aba-bf1b-08c61a5ae18c",
                        "matTimeDate": 1629795636000,
                        "title": "",
                        "company": "",
                        "sessionId": null,
                        "matchStarted": false
                    },
                    {
                        "userIdOfMatch": 34,
                        "fullName": "Sanjay 1 raval",
                        "profileImage": "a7317903-e4fa-4aba-bf1b-08c61a5ae18c",
                        "matTimeDate": 1629795204000,
                        "title": "",
                        "company": "",
                        "sessionId": null,
                        "matchStarted": false
                    },
                    {
                        "userIdOfMatch": 34,
                        "fullName": "Sanjay 1 raval",
                        "profileImage": "a7317903-e4fa-4aba-bf1b-08c61a5ae18c",
                        "matTimeDate": 1629794957000,
                        "title": "",
                        "company": "",
                        "sessionId": null,
                        "matchStarted": false
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112482,
        "executor_type": "THIRDPARTY",
        "executor_name": "getListOfEventsInEnterpriseAccount",
        "executor_version": "v1",
        "executor_display_name": "Get list of events in Enterprise Account",
        "executor_description": "This API is used to get a list of events created under and Enterprise or White Label account. The parameters are in curly braces in the above URL for that need to pass these values:  whiteLabelURL is the whitelabel URL where the list of events will come from pastEvent is a parameter with a true or false value that is used to specify whether you want to fetch past events or active & upcoming events. pass True to get all past events and pass false to get all active & upcoming events  Query params page: Default value of page is 0, which is used for pagination E.g. If you need result after the first 10 events and total events count is 200 then you need to pass page value as 1 it'll return the events records from 11 to 20. size: defualt value of size is 10, which is returns 10 events per page if you need more or less events in single page then you can pass value accordingly",
        "executor_category": "WhiteLabelAdmin",
        "executor_category_group": "WhiteLabelAdmin",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/whiteLabelURL/{whiteLabelURL}/events/{status}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "whiteLabelURL",
                "value": "",
                "description": "Identifier of white label, i.e. if your enterprise account home url is https://www.accelevents.com/u/wl/enterprisedemo/home in this whiteLabelURL= enterprisedemo"
            },
            {
                "key": "status",
                "value": "",
                "description": "Want to fetch past event or active event, to get past events use status=past and for active events use status=active."
            }
        ],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "How many events do you need in one page, if you need 20 events in a single API call then you need to add 20",
                "req": false
            },
            {
                "key": "search",
                "value": "",
                "description": "want to search events by event name then pass this parameter with search string",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692685643493,
        "lastModifiedTime": 1692685643493,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "OK",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 11,
                    "recordsFiltered": 11,
                    "data": [
                        {
                            "eventName": "admin admin's Event 374",
                            "eventId": 24055,
                            "eventURL": "ankurtest8",
                            "eventEndDate": 1680772077000,
                            "eventCreateDate": 1678180062000,
                            "eventTicketRevenueDto": {
                                "totalTicketSold": 0,
                                "totalSales": -1,
                                "netSales": 0,
                                "totalWLFees": 0
                            },
                            "eventStartDate": 1680737820000,
                            "logoImage": "default_ae_images/Ae_Icn_700x350.png",
                            "eventFormat": "VIRTUAL",
                            "eventListingStatus": "PREVIEW",
                            "eventPlanName": "WhiteLabel",
                            "totalSoldTicket": 0,
                            "organizerId": 448
                        },
                        {
                            "eventName": "admin admin's Event 372",
                            "eventId": 23999,
                            "eventURL": "ankurtest7",
                            "eventEndDate": 1680413160000,
                            "eventCreateDate": 1677840955000,
                            "eventTicketRevenueDto": {
                                "totalTicketSold": 0,
                                "totalSales": -1,
                                "netSales": 0,
                                "totalWLFees": 0
                            },
                            "eventStartDate": 1680398760000,
                            "logoImage": "default_ae_images/Ae_Icn_700x350.png",
                            "eventFormat": "VIRTUAL",
                            "eventListingStatus": "PREVIEW",
                            "eventPlanName": "WhiteLabel",
                            "totalSoldTicket": 0,
                            "organizerId": 3714
                        },
                        {
                            "eventName": "admin admin's Event 370",
                            "eventId": 23979,
                            "eventURL": "ankurtest6",
                            "eventEndDate": 1680386574000,
                            "eventCreateDate": 1677780152000,
                            "eventTicketRevenueDto": {
                                "totalTicketSold": 0,
                                "totalSales": -1,
                                "netSales": 0,
                                "totalWLFees": 0
                            },
                            "eventStartDate": 1680372174000,
                            "logoImage": "default_ae_images/Ae_Icn_700x350.png",
                            "eventFormat": "VIRTUAL",
                            "eventListingStatus": "PREVIEW",
                            "eventPlanName": "WhiteLabel",
                            "totalSoldTicket": 0,
                            "organizerId": null
                        },
                        {
                            "eventName": "raj bhatt's Event 6",
                            "eventId": 22863,
                            "eventURL": "ankurtest5",
                            "eventEndDate": 1673049840000,
                            "eventCreateDate": 1670481281000,
                            "eventTicketRevenueDto": {
                                "totalTicketSold": 0,
                                "totalSales": -1,
                                "netSales": 0,
                                "totalWLFees": 0
                            },
                            "eventStartDate": 1673035440000,
                            "logoImage": "default_ae_images/Ae_Icn_700x350.png",
                            "eventFormat": "VIRTUAL",
                            "eventListingStatus": "PREVIEW",
                            "eventPlanName": "Free",
                            "totalSoldTicket": 0,
                            "organizerId": 3479
                        },
                        {
                            "eventName": "raj bhatt's Event 5",
                            "eventId": 22824,
                            "eventURL": "rajb28",
                            "eventEndDate": 1672932600000,
                            "eventCreateDate": 1670307168000,
                            "eventTicketRevenueDto": {
                                "totalTicketSold": 0,
                                "totalSales": -1,
                                "netSales": 0,
                                "totalWLFees": 0
                            },
                            "eventStartDate": 1672921800000,
                            "logoImage": "default_ae_images/Ae_Icn_700x350.png",
                            "eventFormat": "VIRTUAL",
                            "eventListingStatus": "PREVIEW",
                            "eventPlanName": "Free",
                            "totalSoldTicket": 0,
                            "organizerId": 3479
                        },
                        {
                            "eventName": "Ankur Savaliya's Event 7",
                            "eventId": 22186,
                            "eventURL": "ankurtest4",
                            "eventEndDate": 1668653340000,
                            "eventCreateDate": 1666084795000,
                            "eventTicketRevenueDto": {
                                "totalTicketSold": 0,
                                "totalSales": -1,
                                "netSales": 0,
                                "totalWLFees": 0
                            },
                            "eventStartDate": 1668638940000,
                            "logoImage": "default_ae_images/Ae_Icn_700x350.png",
                            "eventFormat": "VIRTUAL",
                            "eventListingStatus": "PREVIEW",
                            "eventPlanName": "Free",
                            "totalSoldTicket": 0,
                            "organizerId": 448
                        },
                        {
                            "eventName": "Ankur Savaliya's Event 6",
                            "eventId": 21596,
                            "eventURL": "ankurtest3",
                            "eventEndDate": 1665837855000,
                            "eventCreateDate": 1663231455000,
                            "eventTicketRevenueDto": {
                                "totalTicketSold": 0,
                                "totalSales": -1,
                                "netSales": 0,
                                "totalWLFees": 0
                            },
                            "eventStartDate": 1665823455000,
                            "logoImage": "default_ae_images/Ae_Icn_700x350.png",
                            "eventFormat": "VIRTUAL",
                            "eventListingStatus": "PREVIEW",
                            "eventPlanName": "Free",
                            "totalSoldTicket": 0,
                            "organizerId": 448
                        },
                        {
                            "eventName": "Ankur Savaliya's Event 5",
                            "eventId": 21595,
                            "eventURL": "ankurtest2",
                            "eventEndDate": 1665837300000,
                            "eventCreateDate": 1663230916000,
                            "eventTicketRevenueDto": {
                                "totalTicketSold": 0,
                                "totalSales": -1,
                                "netSales": 0,
                                "totalWLFees": 0
                            },
                            "eventStartDate": 1665822900000,
                            "logoImage": "default_ae_images/Ae_Icn_700x350.png",
                            "eventFormat": "VIRTUAL",
                            "eventListingStatus": "PREVIEW",
                            "eventPlanName": "Free",
                            "totalSoldTicket": 0,
                            "organizerId": 448
                        },
                        {
                            "eventName": "Ankur Savaliya's Event 4",
                            "eventId": 21590,
                            "eventURL": "ankurtest1",
                            "eventEndDate": 1665830700000,
                            "eventCreateDate": 1663224330000,
                            "eventTicketRevenueDto": {
                                "totalTicketSold": 0,
                                "totalSales": -1,
                                "netSales": 0,
                                "totalWLFees": 0
                            },
                            "eventStartDate": 1665816300000,
                            "logoImage": "default_ae_images/Ae_Icn_700x350.png",
                            "eventFormat": "VIRTUAL",
                            "eventListingStatus": "PREVIEW",
                            "eventPlanName": "Free",
                            "totalSoldTicket": 0,
                            "organizerId": 448
                        },
                        {
                            "eventName": "Admin Admin's Event 9",
                            "eventId": 13458,
                            "eventURL": "ankurtest0",
                            "eventEndDate": 1647444600000,
                            "eventCreateDate": 1644827800000,
                            "eventTicketRevenueDto": {
                                "totalTicketSold": 0,
                                "totalSales": -1,
                                "netSales": 0,
                                "totalWLFees": 0
                            },
                            "eventStartDate": 1647433800000,
                            "logoImage": "default_ae_images/Smooth_AE_Icon_700x350.png",
                            "eventFormat": "VIRTUAL",
                            "eventListingStatus": "PREVIEW",
                            "eventPlanName": "WhiteLabel",
                            "totalSoldTicket": 0,
                            "organizerId": null
                        },
                        {
                            "eventName": "6ca3f0a941",
                            "eventId": 1655,
                            "eventURL": "ankurtest",
                            "eventEndDate": 1627470840000,
                            "eventCreateDate": 1624864450000,
                            "eventTicketRevenueDto": {
                                "totalTicketSold": 0,
                                "totalSales": -1,
                                "netSales": 0,
                                "totalWLFees": 0
                            },
                            "eventStartDate": 1627456440000,
                            "logoImage": "default_ae_images/Smooth_AE_Icon_700x350.png",
                            "eventFormat": "VIRTUAL",
                            "eventListingStatus": "PREVIEW",
                            "eventPlanName": "Free",
                            "totalSoldTicket": 0,
                            "organizerId": 448
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "This white label event does not exist",
                    "errorCode": "4040201",
                    "developerMessage": "This white label event does not exist"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 112718,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSummaryofAllExhibitors",
        "executor_version": "v1",
        "executor_display_name": "Get Summary of All Exhibitors",
        "executor_description": "This API returns the summary details of exhibitors - showing data in display and portal side from the event URL.",
        "executor_category": "ExhibitorAPI",
        "executor_category_group": "ExhibitorAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/exhibitor/summary",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "it contains the event URL of the event"
            }
        ],
        "queryParams": [
            {
                "key": "searchString",
                "value": "",
                "description": "Name of exhibitor for search",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Total number of records you want to fetch",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692777264910,
        "lastModifiedTime": 1692777264910,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 4,
                    "recordsFiltered": 1,
                    "data": [
                        {
                            "id": 2135,
                            "eventId": 3604,
                            "exhibitorName": "test expo3",
                            "boothSize": "SMALL",
                            "categoryId": "266,265,267",
                            "showStatusIndicator": true,
                            "preferredExhibitor": true,
                            "chatEnabled": true,
                            "categoryName": "Item 2,Item 1,Item 3",
                            "position": 3000,
                            "colorConfig": {
                                "shortDescriptionColor": "#0000FF",
                                "nameColor": "#0000FF",
                                "categoryColor": "#724f4f,#ca2323,#000000"
                            },
                            "linkToSite": "http://www.africau.edu/images/default/sample.pdf",
                            "showBoothName": true,
                            "featured": false,
                            "categoryPositionJson": {
                                "265": [
                                    {
                                        "key": 2135,
                                        "value": 1500
                                    }
                                ],
                                "266": [
                                    {
                                        "key": 2135,
                                        "value": 3000
                                    }
                                ],
                                "267": [
                                    {
                                        "key": 2135,
                                        "value": 3000
                                    }
                                ]
                            }
                        }
                    ],
                    "error": null,
                    "numberOfExhibitorsRemainingToEnable": 1,
                    "numberOfProExhibitorPurchased": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113231,
        "executor_type": "THIRDPARTY",
        "executor_name": "confirmOrderByPayingTicketAmount",
        "executor_version": "v1",
        "executor_display_name": "Confirm order by paying ticket amount",
        "executor_description": "Users can use this API to confirm their reserved order.  Users have to pass all required details like holder info, buyer info, selected tickets info, etc. along with the authentication key. This API returns a success message if the order gets confirmed.",
        "executor_category": "TicketingCheckoutFlowAPI",
        "executor_category_group": "TicketingCheckoutFlowAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/tickets/payment/order/{orderid}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Pass event URL for which event user wants to purchase ticket."
            },
            {
                "key": "orderid",
                "value": "",
                "description": "Pass order id which is generated by selecting tickets."
            }
        ],
        "queryParams": [
            {
                "key": "isInternationalPayment",
                "value": "",
                "description": "Pass the flag true if it's an international payment.",
                "req": false
            },
            {
                "key": "trackingUrl",
                "value": "",
                "description": "Pass the tracking link of event.",
                "req": false
            },
            {
                "key": "waitListIds",
                "value": "",
                "description": "Pass the wait list ids.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "purchaser": {
                    "attributes": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ],
                    "questions": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ],
                    "nestedQuestions": [
                        {
                            "id": "string",
                            "name": "string",
                            "parentQueId": "string",
                            "type": "string",
                            "value": "string"
                        }
                    ]
                },
                "addOnAttributes": {
                    "attributes": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ],
                    "questions": [
                        {
                            "key": "string",
                            "value": "string"
                        }
                    ],
                    "nestedQuestions": [
                        {
                            "id": "string",
                            "name": "string",
                            "parentQueId": "string",
                            "type": "string",
                            "value": "string"
                        }
                    ]
                },
                "holder": [
                    {
                        "attributes": [
                            {
                                "key": "string",
                                "value": "string"
                            }
                        ],
                        "questions": [
                            {
                                "key": "string",
                                "value": "string"
                            }
                        ],
                        "tickettypeid": 0,
                        "tableid": 0,
                        "nestedQuestions": [
                            {
                                "id": "string",
                                "name": "string",
                                "parentQueId": "string",
                                "type": "string",
                                "value": "string"
                            }
                        ]
                    }
                ],
                "hasholderattributes": true,
                "tokenOrIntentId": "string",
                "disclaimer": "string",
                "clientDate": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692946762806,
        "lastModifiedTime": 1692946762806,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": " The Resource You Were Trying To Reach Is Not Found",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113225,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAvailableDonationDetails",
        "executor_version": "v1",
        "executor_display_name": "Get available donation details",
        "executor_description": "User will use this API to get the details of donations mapped with the specified event. User have to pass the event url, for which event they wants donation details. It will return donation setting details, donation goals, how much was raised & other details.",
        "executor_category": "TicketingCheckoutFlowAPI",
        "executor_category_group": "TicketingCheckoutFlowAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/donation/settings",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Pass eventurl for which even's ticketing data required."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692946100667,
        "lastModifiedTime": 1692946100667,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "adsorbAEFees": false,
                    "aeFeePercentage": 0,
                    "customThermometerImage": "string",
                    "defaultSelectAmount": 0,
                    "donationAmounts": [
                        0
                    ],
                    "donationPageDescription": "string",
                    "donationViewBackgroundImage": "string",
                    "enableRecurringDonations": false,
                    "goalAmount": 0,
                    "hideDonationGoal": false,
                    "numberOfDonors": 0,
                    "textToGiveActivated": false,
                    "totalFundRaised": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113229,
        "executor_type": "THIRDPARTY",
        "executor_name": "orderGeneration",
        "executor_version": "v1",
        "executor_display_name": "Order generation",
        "executor_description": "User can use this api to reserve their ticket order for specified event. User have to pass required details like number of tickets, ticket amount after fees calculation etc. User have to pass their authentication key along with the other details for user authentication.",
        "executor_category": "TicketingCheckoutFlowAPI",
        "executor_category_group": "TicketingCheckoutFlowAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/ticketing/order",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Pass event URL for which event's fees wants to calculate."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "ticketings": [
                    {
                        "ticketTypeId": 0,
                        "numberOfTicket": 0,
                        "price": 0,
                        "seatNumbers": [
                            "string"
                        ],
                        "seatNumbersDisplay": [
                            "string"
                        ],
                        "tableNumber": "string"
                    }
                ],
                "clientDate": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692946422388,
        "lastModifiedTime": 1692946422388,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "orderId": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113226,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAvailableWaitlistDetails",
        "executor_version": "v1",
        "executor_display_name": "Get available waitlist details",
        "executor_description": "User can use this api to get the details of waitlist setting. User have to pass a eventurl for which they want to get the wait list details.",
        "executor_category": "TicketingCheckoutFlowAPI",
        "executor_category_group": "TicketingCheckoutFlowAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/waitlist/setting",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Pass eventurl for which even's ticketing data required."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692946172617,
        "lastModifiedTime": 1692946172617,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "manualReleaseTickets": false,
                    "maxWaitListSize": 0,
                    "maxWaitListSizeReached": false,
                    "phoneNumberRequired": false,
                    "remainingTickets": 0,
                    "timeToRespondInDays": 0,
                    "timeToRespondInHours": 0,
                    "timeToRespondInMinutes": 0,
                    "waitListEnabled": false,
                    "waitListTicketReleaseMessage": "string",
                    "waitListTrigger": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113230,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTheHolder",
        "executor_version": "v1",
        "executor_display_name": "Get the holder/buyer/addon field details",
        "executor_description": "This api returns mapped attributes of buyer/holder and addon which required to fill data during ticket purchase. To call this api, user have to pass event url, order id which was return in order generation api and authentication key to authenticate user.",
        "executor_category": "TicketingCheckoutFlowAPI",
        "executor_category_group": "TicketingCheckoutFlowAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/ticketing/order/{orderid}/formattributes",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Pass event URL for which event's custom fields required during ticket purchase."
            },
            {
                "key": "orderid",
                "value": "",
                "description": "Pass the orderid here so that in further process details filled by user get's stored."
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "Pass the recurring event id.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692946538105,
        "lastModifiedTime": 1692946538105,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "customDisclaimer": "string",
                    "discountCoupon": false,
                    "processingFeesToPurchaser": false,
                    "purchaserDetail": {
                        "addressRequired": false,
                        "admin": false,
                        "bidderNumber": 0,
                        "countryCode": "US",
                        "email": "string",
                        "firstName": "string",
                        "lastName": "string",
                        "hasStaffAccess": false,
                        "marketingOptIn": false,
                        "phonenumber": 0,
                        "linkedCard": {
                            "stripeCards": [
                                {
                                    "id": "string",
                                    "last4": "string",
                                    "expmonth": 0,
                                    "expyear": 0,
                                    "defaultCard": false,
                                    "cardType": "string"
                                }
                            ]
                        },
                        "userId": 0,
                        "userProfilePhoto": "string"
                    },
                    "ticketAttribute": {
                        "addOnsQuestions": [
                            {
                                "defaultValue": "string",
                                "eventTicketTypeId": "string",
                                "mandatory": false,
                                "name": "string",
                                "type": "string",
                                "value": "string"
                            }
                        ],
                        "attendees": [
                            {
                                "attributes": [
                                    {
                                        "defaultValue": "string",
                                        "eventTicketTypeId": "string",
                                        "mandatory": false,
                                        "name": "string",
                                        "type": "string",
                                        "value": "string"
                                    }
                                ],
                                "header": "string",
                                "questions": [
                                    {
                                        "defaultValue": "string",
                                        "eventTicketTypeId": "string",
                                        "mandatory": false,
                                        "name": "string",
                                        "type": "string",
                                        "value": "string"
                                    }
                                ],
                                "tableId": 0,
                                "tickettypeid": 0
                            }
                        ],
                        "buyerInformationFields": [
                            {
                                "defaultValue": "string",
                                "eventTicketTypeId": "string",
                                "mandatory": false,
                                "name": "string",
                                "type": "string",
                                "value": "string"
                            }
                        ],
                        "buyerQuestions": [
                            {
                                "defaultValue": "string",
                                "eventTicketTypeId": "string",
                                "mandatory": false,
                                "name": "string",
                                "type": "string",
                                "value": "string"
                            }
                        ],
                        "couponCode": "string",
                        "discountAmount": 0,
                        "hasAddOnAttributes": false,
                        "hasHolderAttributes": false,
                        "onlyDonationTicket": true,
                        "orderData": [
                            {
                                "avgTotalFee": 0,
                                "id": 0,
                                "numberofticket": 0,
                                "price": 0,
                                "priceWithFee": 0,
                                "ticketTypeDescription": "string",
                                "ticketTypeName": "string"
                            }
                        ],
                        "orderId": 0,
                        "remainingSeconds": 0,
                        "showCellPhoneField": false,
                        "totalPrice": 0
                    }
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113227,
        "executor_type": "THIRDPARTY",
        "executor_name": "calculateFeesBasedonSelectedTickets",
        "executor_version": "v1",
        "executor_display_name": "Calculate fees based on selected tickets",
        "executor_description": "User can use this api to check the total payable amount after adding extra charge based on selected tickets. It has the price and ticketing type id which we get from available ticketing details api. No need to pass authentication key to call this api.",
        "executor_category": "TicketingCheckoutFlowAPI",
        "executor_category_group": "TicketingCheckoutFlowAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/calculateFee",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Pass event URL for which event's fees wants to calculate."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": [
                {
                    "ticketPrice": 0,
                    "ticketQuantity": 0,
                    "ticketingTypeId": 0
                }
            ],
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692946295486,
        "lastModifiedTime": 1692946295486,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "aeFees": 0,
                    "ccFees": 0,
                    "ticketPrice": 0,
                    "ticketQuantity": 0,
                    "ticketingTypeId": 0,
                    "totalPayable": 0,
                    "wlFees": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113223,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAvailableTicketinDetails",
        "executor_version": "v1",
        "executor_display_name": "Get available ticketing details",
        "executor_description": "This api is used to fetch available ticketing details with specified eventurl. If we are passing accescode with this api, it will gives only those tickets which are accessible with specified access code. It gives all the enabled tickets and add-on details as per the event URL.",
        "executor_category": "TicketingCheckoutFlowAPI",
        "executor_category_group": "TicketingCheckoutFlowAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/ticketing/settings",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Pass eventurl for which even's ticketing data required."
            }
        ],
        "queryParams": [
            {
                "key": "accessCode",
                "value": "",
                "description": "Pass access code for ticketing data.",
                "req": false
            },
            {
                "key": "recurringEventId",
                "value": "",
                "description": "Pass recurring event id.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692946021818,
        "lastModifiedTime": 1692946021818,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "address": "string",
                    "allowDisagreeDisclaimerConfirmation": true,
                    "availableAccessCode": true,
                    "categories": [
                        {
                            "color": "string",
                            "dataType": "TICKET",
                            "eventId": 0,
                            "havingVariations": false,
                            "id": 0,
                            "imageUrl": "string",
                            "name": "string",
                            "position": 0,
                            "quantity": 0
                        }
                    ],
                    "discountCodeAvailable": false,
                    "endDate": "2021-06-29T13:57:47.135Z",
                    "eventCapacityReach": true,
                    "eventFormat": "VIRTUAL",
                    "eventKey": "string",
                    "eventListingStatus": "PRIVATE",
                    "eventVenueStatus": "VENUE",
                    "exitIntentPopupEnabled": false,
                    "hideRegistrationButton": false,
                    "hideRemainingTickets": false,
                    "hideTicketPrice": false,
                    "holderAttributeRequired": true,
                    "preEventAccessMinutes": 0,
                    "requireDisclaimerConfirmation": true,
                    "seatingChartKey": "string",
                    "startDate": "2021-06-29T13:57:47.135Z",
                    "stripeCountry": "string",
                    "tickeTypes": [
                        {
                            "id": 0,
                            "name": "string"
                        }
                    ],
                    "ticketingFee": [
                        {
                            "addon": true,
                            "aeFeeFlat": 0,
                            "aeFeePercentage": 0,
                            "creditCardProcessingFlat": 0,
                            "creditCardProcessingPercentage": 0,
                            "fromThreshold": 0,
                            "inPerson": true,
                            "operator": "string",
                            "toThreshold": 0,
                            "wlFeeFlat": 0,
                            "wlFeePercentage": 0
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113236,
        "executor_type": "THIRDPARTY",
        "executor_name": "resendMailToTicketBuyerandTicketHolder",
        "executor_version": "v1",
        "executor_display_name": "Resend Mail to Ticket Buyer and Ticket Holder",
        "executor_description": "This API is used to resend mail to ticket buyer and ticket holder associated with the specified event and order id. This API can be accessed by an event admin and super admin. To call this API, user will have to pass query param with API URL like orderId and authentication key to authenticate user. This API is used at host side to resend mail to ticket buyer and ticket holder.",
        "executor_category": "HostAttendeesOrders",
        "executor_category_group": "HostAttendeesOrders",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/resendmail/order/{orderId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "orderId",
                "value": "",
                "description": "It contains the ticketing order id must be required."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692947425549,
        "lastModifiedTime": 1692947425549,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113401,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTicketingHolderData",
        "executor_version": "v1",
        "executor_display_name": "Get Ticketing Holder Data",
        "executor_description": "This API used to get ticketing holder data associated with the specified the ticketId and event. This API can be access by event admin and super admin. It will return data like ticketingFee, firstName, lastName, paidAmount, ticketType, bundleType, paidAmount and many others. To call this API, user have to pass query param with API URL like ticketId and authentication key to authenticate user.",
        "executor_category": "HostAttendeesOrders",
        "executor_category_group": "HostAttendeesOrders",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/order/eventTicket/{ticketId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "ticketId",
                "value": "",
                "description": "pass event ticket id."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693200896962,
        "lastModifiedTime": 1693200896962,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "blocked": true,
                    "bundleType": "string",
                    "ccFee": 0,
                    "dataType": "TICKET",
                    "email": "string",
                    "eventTicketingId": 0,
                    "firstName": "string",
                    "lastName": "string",
                    "paidAmount": 0,
                    "paidTicket": true,
                    "phoneNumber": 0,
                    "qty": 0,
                    "salesTaxFee": 0,
                    "seatNumber": "string",
                    "status": "string",
                    "table": true,
                    "ticketType": "string",
                    "ticketTypeId": 0,
                    "ticketingFee": 0,
                    "userId": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113403,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateTicketingHolderAttributesDataByTicketingId",
        "executor_version": "v1",
        "executor_display_name": "Update Ticketing Holder Attributes Data by Ticketing Id",
        "executor_description": "This API is used to update ticketing holder attributes data by ticketing id associated with the specified event. This API can be accessed by an event admin and super admin. It will return a response like type and message. To call this API, user will have to pass query param with API URL like ticketId, block and authentication key to authenticate user.",
        "executor_category": "HostAttendeesOrders",
        "executor_category_group": "HostAttendeesOrders",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/eventTicket/{ticketId}/block/{block}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "ticketId",
                "value": "",
                "description": "pass ticketing holder attributes data by ticketing id."
            },
            {
                "key": "block",
                "value": "",
                "description": "pass block or unblock value."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693201100989,
        "lastModifiedTime": 1693201100989,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113404,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateOrderNote",
        "executor_version": "v1",
        "executor_display_name": "Update Order Note",
        "executor_description": "This API is used to update order note by order id associated with the specified event . This API can be accessed by an event admin and super admin. It will return a response like type and message. To call this API, user will have to pass query param with API URL like orderId, note and authentication key to authenticate user. This API is used at event host side to update order note.",
        "executor_category": "HostAttendeesOrders",
        "executor_category_group": "HostAttendeesOrders",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/note/order/{orderId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "orderId",
                "value": "",
                "description": "pass ticketing order id must be required."
            }
        ],
        "queryParams": [
            {
                "key": "note",
                "value": "",
                "description": "pass order note to be update.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693201188160,
        "lastModifiedTime": 1693201188160,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113400,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateTicketingHolderAttributesDatabyTicketingId",
        "executor_version": "v1",
        "executor_display_name": "Update Ticketing Holder Attributes Data by Ticketing Id",
        "executor_description": "This API is used to update ticketing holder attributes data by ticketing id associated with the specified event. This API can be accessed by an event admins and super admin. It will return a response like type and message. To call this API, user will have to pass query param with API URL like ticketId, attendee attributes details and authentication key to authenticate user.",
        "executor_category": "HostAttendeesOrders",
        "executor_category_group": "HostAttendeesOrders",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/holderData/ticket/{ticketId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "ticketId",
                "value": "",
                "description": "It's contains the ticketing holder attributes data by ticketing id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "message": "string",
                "type": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693200802619,
        "lastModifiedTime": 1693200802619,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "attributes": [
                        {
                            "defaultValue": "string",
                            "eventTicketTypeId": "string",
                            "mandatory": false,
                            "name": "string",
                            "type": "string",
                            "value": "string"
                        }
                    ],
                    "eventKey": "string",
                    "eventTicketingId": 0,
                    "questions": [
                        {
                            "defaultValue": "string",
                            "eventTicketTypeId": "string",
                            "mandatory": false,
                            "name": "string",
                            "type": "string",
                            "value": "string"
                        }
                    ],
                    "nestedQuestions": [
                        {
                            "defaultValue": "string",
                            "eventTicketTypeId": "string",
                            "id": 0,
                            "mandatory": false,
                            "name": "string",
                            "parentQueId": 0,
                            "position": 0,
                            "selectedAnsId": 0,
                            "type": "string",
                            "value": "string"
                        }
                    ],
                    "seatNumber": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113233,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTicketingOrders",
        "executor_version": "v1",
        "executor_display_name": "Get Ticketing Orders",
        "executor_description": "This API used to get ticketing order data associated with the specified event. This API can be access by event admin and super admin. It will return list of orders data like orderId, cardType, orderType, deliveryMode, totalAmount, purchaseDate, status, note and many more. To call this API, user have to pass query param with API URL like eventurl, searchString, dataType, searchDate, page, size, recurringEventId and authentication key to authenticate user.",
        "executor_category": "HostAttendeesOrders",
        "executor_category_group": "HostAttendeesOrders",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/staff/orders",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "searchString",
                "value": "",
                "description": "Get filter ticketing orders according to search value passing in request.",
                "req": false
            },
            {
                "key": "dataType",
                "value": "",
                "description": "pass the event ticket datatype like TICKET or ADDON.",
                "req": false
            },
            {
                "key": "searchDate",
                "value": "",
                "description": "It's contains the order date search.",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Size will returns number of records when call api default will returns 10 records",
                "req": false
            },
            {
                "key": "recurringEventId",
                "value": "",
                "description": "pass recurring event id.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692947108909,
        "lastModifiedTime": 1692947108909,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 1,
                    "recordsFiltered": 1,
                    "orders": [
                        {
                            "ccFee": 0,
                            "ticketingFee": 0,
                            "salesTaxFee": 0,
                            "id": 19438,
                            "totalAmount": 130,
                            "status": "PAID",
                            "purchaser": {
                                "firstName": "bharat",
                                "lastName": "zala",
                                "email": "bharat.z@brilworks.com"
                            },
                            "purchaseDate": "2021/09/30 11:48 AM",
                            "orderType": "CASH",
                            "cardType": null,
                            "lastFour": null,
                            "note": "",
                            "attendee": [
                                {
                                    "ccFee": 0,
                                    "ticketingFee": 0,
                                    "salesTaxFee": 0,
                                    "firstName": "bharat",
                                    "lastName": "zala",
                                    "email": "bharat.z@brilworks.com",
                                    "qty": 1,
                                    "ticketType": "General Admission",
                                    "bundleType": null,
                                    "paidAmount": 100,
                                    "status": "Booked",
                                    "eventTicketingId": 14631,
                                    "seatNumber": "",
                                    "dataType": "TICKET",
                                    "blocked": false,
                                    "userId": "193",
                                    "phoneNumber": 9998986371,
                                    "ticketTypeId": 771,
                                    "table": false,
                                    "paidTicket": true
                                },
                                {
                                    "ccFee": 0,
                                    "ticketingFee": 0,
                                    "salesTaxFee": 0,
                                    "firstName": "bharat",
                                    "lastName": "zala",
                                    "email": "bharat.z@brilworks.com",
                                    "qty": 1,
                                    "ticketType": "Free Admission",
                                    "bundleType": null,
                                    "paidAmount": 0,
                                    "status": "Booked",
                                    "eventTicketingId": 14632,
                                    "seatNumber": "",
                                    "dataType": "TICKET",
                                    "blocked": false,
                                    "userId": "193",
                                    "phoneNumber": 9998986371,
                                    "ticketTypeId": 770,
                                    "table": false,
                                    "paidTicket": false
                                },
                                {
                                    "ccFee": 0,
                                    "ticketingFee": 0,
                                    "salesTaxFee": 0,
                                    "firstName": "bharat",
                                    "lastName": "zala",
                                    "email": "bharat.z@brilworks.com",
                                    "qty": 1,
                                    "ticketType": "First Addon",
                                    "bundleType": null,
                                    "paidAmount": 10,
                                    "status": "Booked",
                                    "eventTicketingId": 14633,
                                    "seatNumber": "",
                                    "dataType": "ADDON",
                                    "blocked": false,
                                    "userId": "193",
                                    "phoneNumber": 9998986371,
                                    "ticketTypeId": 772,
                                    "table": false,
                                    "paidTicket": true
                                },
                                {
                                    "ccFee": 0,
                                    "ticketingFee": 0,
                                    "salesTaxFee": 0,
                                    "firstName": "bharat",
                                    "lastName": "zala",
                                    "email": "bharat.z@brilworks.com",
                                    "qty": 1,
                                    "ticketType": "Second Addon",
                                    "bundleType": null,
                                    "paidAmount": 20,
                                    "status": "Booked",
                                    "eventTicketingId": 14634,
                                    "seatNumber": "",
                                    "dataType": "ADDON",
                                    "blocked": false,
                                    "userId": "193",
                                    "phoneNumber": 9998986371,
                                    "ticketTypeId": 773,
                                    "table": false,
                                    "paidTicket": true
                                }
                            ],
                            "currency": "$",
                            "timezoneId": "India Time",
                            "equivalentTimezone": "Asia/Calcutta",
                            "recurringEventDate": null,
                            "orderId": null,
                            "deliveryMode": "Email",
                            "speakerOrder": false
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113395,
        "executor_type": "THIRDPARTY",
        "executor_name": "sendMagicLinkToTheProvidedEmailAddress",
        "executor_version": "v1",
        "executor_display_name": "Send Magic Link to The Provided Email Address",
        "executor_description": "This API is used to send a magic link to the provided email address. This API can be accessed by an admin and super admin. To call this API, user will have to pass query param with API URL like email and authentication key to authenticate user.",
        "executor_category": "HostAttendeesOrders",
        "executor_category_group": "HostAttendeesOrders",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/magicLink/{email}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "email",
                "value": "",
                "description": "user pass email address ."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            },
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693199918896,
        "lastModifiedTime": 1693199918896,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113238,
        "executor_type": "THIRDPARTY",
        "executor_name": "resendMailToTicketHolderbyTicketingId",
        "executor_version": "v1",
        "executor_display_name": "Resend Mail to Ticket Holder by Ticketing Id",
        "executor_description": "This API is used to resend mail to the ticket holder by ticketing id associated with the specified event and ticketing Id. This API can be accessed by an event admin and super admin. To call this API, user will have to pass query param with API URL like orderId, ticketingId and authentication key to authenticate user. This API is used at host side to resend mail to ticket holder by ticketing id.",
        "executor_category": "HostAttendeesOrders",
        "executor_category_group": "HostAttendeesOrders",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/resendmail/order/{orderId}/ticketing/{ticketingId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "orderId",
                "value": "",
                "description": "User pass ticket holder by ticketing order id."
            },
            {
                "key": "ticketingId",
                "value": "",
                "description": "User pass ticketing id must be required."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692947547208,
        "lastModifiedTime": 1692947547208,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113309,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateTicketingPurchaserDatabyOrderId",
        "executor_version": "v1",
        "executor_display_name": "Update Ticketing Purchaser Data by Order Id",
        "executor_description": "This API is used to update ticketing Purchaser data by order id associated with the specified event. This API can be accessed by an event admin and super admin. To call this API, user will have to pass query param with API URL like orderId, Attendee Attributes, Attendee Questions and authentication key to authenticate user.",
        "executor_category": "HostAttendeesOrders",
        "executor_category_group": "HostAttendeesOrders",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/purchaserData/order/{orderId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here is the demo event url."
            },
            {
                "key": "orderId",
                "value": "",
                "description": "It contains is ticketing purchaser attribute data by order id."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "attributes": [
                    {
                        "key": "string",
                        "value": "string"
                    }
                ],
                "questions": [
                    {
                        "key": "string",
                        "value": "string"
                    }
                ],
                "nestedQuestions": [
                    {
                        "id": "string",
                        "name": "string",
                        "parentQueId": "string",
                        "type": "string",
                        "value": "string"
                    }
                ]
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692958012471,
        "lastModifiedTime": 1692958012471,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113397,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTicketingHolderDatabyTicketingId",
        "executor_version": "v1",
        "executor_display_name": "Get Ticketing Holder Data by Ticketing Id",
        "executor_description": "This API used to get ticketing holder data by ticketing id associated with the specified event. This API can be access by event admin and super admin. It will return attributes data like seatNumber, eventTicketingId, eventKey, holder related attributes information and question related attributes information. To call this API, user have to pass query param with API URL like ticketId and authentication key to authenticate user.",
        "executor_category": "HostAttendeesOrders",
        "executor_category_group": "HostAttendeesOrders",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/holderData/ticket/{ticketId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "ticketId",
                "value": "",
                "description": "pass ticketing holder data by ticketing id."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693200133673,
        "lastModifiedTime": 1693200133673,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "attributes": [
                        {
                            "defaultValue": "string",
                            "eventTicketTypeId": "string",
                            "mandatory": false,
                            "name": "string",
                            "type": "string",
                            "value": "string"
                        }
                    ],
                    "eventKey": "string",
                    "eventTicketingId": 0,
                    "questions": [
                        {
                            "defaultValue": "string",
                            "eventTicketTypeId": "string",
                            "mandatory": false,
                            "name": "string",
                            "type": "string",
                            "value": "string"
                        }
                    ],
                    "nestedQuestions": [
                        {
                            "defaultValue": "string",
                            "eventTicketTypeId": "string",
                            "id": 0,
                            "mandatory": false,
                            "name": "string",
                            "parentQueId": 0,
                            "position": 0,
                            "selectedAnsId": 0,
                            "type": "string",
                            "value": "string"
                        }
                    ],
                    "seatNumber": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113308,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTicketingPurchaserAttributesDatabyOrderId",
        "executor_version": "v1",
        "executor_display_name": "Get Ticketing Purchaser Attributes Data by Order Id",
        "executor_description": "This API is used to get ticketing purchaser attributes data by order id associated with the specified event. This API can be accessed by an event admin and super admin. It will return attributes data like seatNumber, eventTicketingId, eventKey, holder related attributes information and question related attributes information. To call this API, user will have to pass query param with API URL like orderId, dataType and authentication key to authenticate user.",
        "executor_category": "HostAttendeesOrders",
        "executor_category_group": "HostAttendeesOrders",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/purchaserData/order/{orderId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here is the demo event url."
            },
            {
                "key": "orderId",
                "value": "",
                "description": "It contains is ticketing purchaser attribute data by order id."
            }
        ],
        "queryParams": [
            {
                "key": "dataType",
                "value": "",
                "description": "User pass the datatype like TICKET or ADDON.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692957859388,
        "lastModifiedTime": 1692957859388,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "attributes": [
                        {
                            "defaultValue": "string",
                            "eventTicketTypeId": "string",
                            "mandatory": false,
                            "name": "string",
                            "type": "string",
                            "value": "string"
                        }
                    ],
                    "eventKey": "string",
                    "eventTicketingId": 0,
                    "questions": [
                        {
                            "defaultValue": "string",
                            "eventTicketTypeId": "string",
                            "mandatory": false,
                            "name": "string",
                            "type": "string",
                            "value": "string"
                        }
                    ],
                    "nestedQuestions": [
                        {
                            "defaultValue": "string",
                            "eventTicketTypeId": "string",
                            "id": 0,
                            "mandatory": false,
                            "name": "string",
                            "parentQueId": 0,
                            "position": 0,
                            "selectedAnsId": 0,
                            "type": "string",
                            "value": "string"
                        }
                    ],
                    "seatNumber": "string"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113310,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllAvailableCategoryforTheSeatingTypeTicketing",
        "executor_version": "v1",
        "executor_display_name": "Get All Available Category for The Seating Type Ticketing",
        "executor_description": "This API used to get all available category for the seating type ticketing associated with the specified event. This API can be access by event admin and super admin. It will return attributes data like key, category, label, price, ticketTypes, recurringChartKey and many others. To call this API, user have to pass query param with API URL like eventurl, recurringEventId and authentication key to authenticate user.",
        "executor_category": "HostAttendeesOrders",
        "executor_category_group": "HostAttendeesOrders",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/ticketing/seatingCategories",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "Use pass the recurring event id.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692958494478,
        "lastModifiedTime": 1692958494478,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "category": 0,
                        "ticketTypes": [
                            {
                                "accessCodeAssociated": false,
                                "createdFrom": 0,
                                "hidden": true,
                                "label": "string",
                                "price": 0,
                                "ticketType": 0
                            }
                        ]
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113311,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadOrderPdf",
        "executor_version": "v1",
        "executor_display_name": "Download Order Pdf",
        "executor_description": "This API is used to download order pdf associated with the specified event and orderId. This API can be used by the admin and super admin to download order data like name, eventname, purchaseDate, applicationFee, userId and ticket holder email details. To call this API, user will have to pass query param with API URL like orderId and authentication key to authenticate user.",
        "executor_category": "HostAttendeesOrders",
        "executor_category_group": "HostAttendeesOrders",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/download/order/pdf/{orderId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "orderId",
                "value": "",
                "description": "pass ticketing order id."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692958582346,
        "lastModifiedTime": 1692958582346,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113312,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteTicket",
        "executor_version": "v1",
        "executor_display_name": "Delete Ticket",
        "executor_description": "This API is used to delete ticket by order id associated with the specified event. This API can be accessed by admin and super admin. User has to pass the order id as path variable, for which event ticket they want to delete by order id. To call this API, user will have to pass query param with API URL like orderId, eventTicketingId, isRefundEmailSend and authentication key to authenticate user.",
        "executor_category": "HostAttendeesOrders",
        "executor_category_group": "HostAttendeesOrders",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/deleteEventTicket/order/{orderId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "orderId",
                "value": "",
                "description": "user pass ticketing order id."
            }
        ],
        "queryParams": [
            {
                "key": "eventTicketingId",
                "value": "",
                "description": "pass event ticketing id.",
                "req": false
            },
            {
                "key": "isRefundEmailSend",
                "value": "",
                "description": "user pass is refund email send or not.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692958717647,
        "lastModifiedTime": 1692958717647,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113234,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTicketingOrderDataByOrderId",
        "executor_version": "v1",
        "executor_display_name": "Get Ticketing Order Data By Order Id",
        "executor_description": "This API used to get ticketing order data by order id associated with the specified event. This API can be accessed by event admin and super admin. It will return list of orders data like cardType, amount, deliveryMode, numberOfTickets, purchaseDate, status, ticketsRefunded and many more. To call this API, user have to pass query param with API URL like eventurl, orderId and authentication key to authenticate user.",
        "executor_category": "HostAttendeesOrders",
        "executor_category_group": "HostAttendeesOrders",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/staff/refund/order/{orderId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here is the demo event url."
            },
            {
                "key": "orderId",
                "value": "",
                "description": "Pass ticketing order data by order id."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692947207876,
        "lastModifiedTime": 1692947207876,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "amount": 0,
                    "attendee": [
                        {
                            "barcode": "string",
                            "blocked": true,
                            "bundleType": "string",
                            "ccFee": 0,
                            "dataType": "TICKET",
                            "email": "string",
                            "eventTicketingId": 0,
                            "firstName": "string",
                            "lastName": "string",
                            "paid": 0,
                            "paidTicket": true,
                            "phoneNumber": 0,
                            "qty": 0,
                            "refundAmount": 0,
                            "refundQty": 0,
                            "refundedAmount": 0,
                            "salesTaxFee": 0,
                            "seatNumber": "string",
                            "status": "string",
                            "table": true,
                            "ticketPrice": 0,
                            "ticketStatus": "string",
                            "ticketType": "string",
                            "ticketTypeId": 0,
                            "ticketingFee": 0,
                            "userId": "string"
                        }
                    ],
                    "cardType": "string",
                    "clientDate": "string",
                    "deliveryMode": "EMAIL",
                    "id": 0,
                    "lastFour": "string",
                    "numberOfTickets": 0,
                    "orderType": "CASH",
                    "originalPurchaser": {
                        "email": "string",
                        "firstName": "string",
                        "lastName": "string"
                    },
                    "purchaseDate": "2021-09-30T13:19:58.246Z",
                    "purchaser": {
                        "email": "string",
                        "firstName": "string",
                        "lastName": "string"
                    },
                    "status": "string",
                    "ticketsRefunded": 0
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113402,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadTicketPdf",
        "executor_version": "v1",
        "executor_display_name": "Download Ticket Pdf",
        "executor_description": "This API used to download ticket pdf associated with the specified ticketing Id. This API can be used by admin and super admin to download ticket data like name, eventname, purchaseDate, applicationFee, userId, ticket holder email details and many more. To call this API, user have to pass query param with API URL like ticketingId and authentication key to authenticate user.",
        "executor_category": "HostAttendeesOrders",
        "executor_category_group": "HostAttendeesOrders",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/download/ticket/pdf/{ticketingId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "ticketingId",
                "value": "",
                "description": "Pass ticketing id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693200990458,
        "lastModifiedTime": 1693200990458,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "OK"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113235,
        "executor_type": "THIRDPARTY",
        "executor_name": "refundTicketingOrderById",
        "executor_version": "v1",
        "executor_display_name": "Refund Ticketing Order By Id",
        "executor_description": "This API used to refund ticketing order by id associated with the specified event. To call this API, user have to pass query param with API URL like eventurl, orderId, Refund Information and authentication key to authenticate user.",
        "executor_category": "HostAttendeesOrders",
        "executor_category_group": "HostAttendeesOrders",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/events/{eventurl}/staff/refund/order/{orderId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here is the demo event url."
            },
            {
                "key": "orderId",
                "value": "",
                "description": "Pass ticketing order data by order id."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "RefundInfoArray": {
                    "clientDate": "string",
                    "RefundInfo": [
                        {
                            "eventTicketingId": 0,
                            "qty": 0,
                            "refundAmount": 0,
                            "bundleType": "string"
                        }
                    ]
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1692947309623,
        "lastModifiedTime": 1692947309623,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": "",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113455,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadTheSessionOverviewCsv",
        "executor_version": "v1",
        "executor_display_name": "Download the Session Overview CSV",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. This API will return session data like how many attendees are registered, attendee how much time is spent in live/Recorded sessions, how many attendees join Live/Recorded sessions, etc. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "SessionAnalytics",
        "executor_category_group": "SessionAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/session/download/session-overview-report/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "timeStream",
                "value": "",
                "description": "it is a service which is used to Store/Retrieve session video analytics data.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693210600511,
        "lastModifiedTime": 1693210600511,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "\"Session Name\",\"Session Date\",\"Session Length\",\"Number of Attendees Registered\",\"Number of Views (Live)\",\"Average Watch Time (Live)\",\"Engagement (Live)\",\"Number of Views (Recorded)\",\"Average Watch Time (Recorded)\",\"Engagement (Recorded)\"\n\"Zoom Breakout Session\",\"2021/11/22 17:40\",\"N/A\",\"10\",\"0\",\"N/A\",\"0%\",\"0\",\"N/A\",\"0%\"\n\"Vimeo Session\",\"2021/11/22 17:42\",\"00:04:45\",\"9\",\"8\",\"00:00:28\",\"10.12%\",\"6\",\"00:01:52\",\"39.5%\"\n\"Direct Upload Session\",\"2021/11/22 17:42\",\"00:00:10\",\"6\",\"0\",\"N/A\",\"0%\",\"0\",\"N/A\",\"0%\"\n"
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource\n"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden\n"
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found\n"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Not Acceptable "
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113452,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadTheCsvofAttendeesSessionsDataByUserId",
        "executor_version": "v1",
        "executor_display_name": "Download the CSV of Attendee's Sessions data by User Id",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. This API will return session data for attendees like session start time, end time, session title, status, and engagement data. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "SessionAnalytics",
        "executor_category_group": "SessionAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/attendee/user/{userId}/download/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "userId",
                "value": "",
                "description": "It is an id when you log in/sign-up in the website it will generate a unique user Id."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693210302162,
        "lastModifiedTime": 1693210302162,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "attended": true,
                    "endTime": "string",
                    "engagement": "string",
                    "sessionId": 0,
                    "startTime": "string",
                    "status": "string",
                    "title": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource\n"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden\n"
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found\n"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113456,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadTheCsvOfSessionAttendeeComparison",
        "executor_version": "v1",
        "executor_display_name": "Download the CSV of Session Attendee Comparison",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. This API will return details of all attendees with all sessions like attendees first name, last name, and attendee how many sessions joined, etc. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "SessionAnalytics",
        "executor_category_group": "SessionAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/attendee/download/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693210683027,
        "lastModifiedTime": 1693210683027,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "\"Prefix\",\"First Name\",\"Last Name\",\"Email\",\"Please upload a photo of your completed COVID-19 Vaccination Card\",\"Gender\",\"Birthday\",\"Age\",\"Organization\",\"Job title\",\"Image\",\"Upload\",\"Pronouns\",\"What Does Your Company Do?\",\"Facebook\",\"Instagram\",\"LinkedIn\",\"Twitter\",\"WORKSHOP\",\"Direct Upload Session\",\"Networking Session\",\"Vimeo Session\",\"Youtube Session\",\"Zoom Breakout Session\",\"TokBox Main Stage\",\"Voxeet Session\",\"Demo Session\",\"Toxbox\",\"Voxeet\",\"hide\",\"Private Session\",\"session_test\",\"new session_mobile app\",\"test\",\"Testing Session quick wins\"\n\"Mr.\",\"Prahalad\",\"Singh\",\"prahalad.s@brilworks.com\",\"https://s3.amazonaws.com/v2-dev-images-public/ticket_buyer_uploads/9ccfa2a0-c5a8-4768-8d4e-386472c05756_buildingjpg.jpg\",\"Male\",\"2021-11-01\",\"29\",\"Brill\",\"QA\",\"https://s3.amazonaws.com/v2-dev-images-public/ticket_buyer_uploads/d8270331-f213-4fb7-8fb0-00a44ba1f7be_buildingjpg.jpg\",\"https://s3.amazonaws.com/v2-dev-images-public/ticket_buyer_uploads/bce2f016-35a9-4c62-8fc9-35acde0e1fed_BoardingPasspdf.pdf|BoardingPass.pdf\",\"He/Him\",\"Testing\",\"https://www.facebook.com/\",\"https://www.instagram.com/\",\"https://www.linkedin.com/signup\",\"https://twitter.com/home?lang=en\",\"JOINED\",\"JOINED\",\"JOINED\",\"\",\"JOINED\",\"JOINED\",\"JOINED\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"\n\"Mr.\",\"Nirmal 3\",\"Rathod 3\",\"nirmal.r+user1@brilworks.com\",,,,,,,,,,,,,,,\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"\n"
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource\n"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden\n"
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found\n"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Not Acceptable "
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113451,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAttendeeDataForSessionBySessionId",
        "executor_version": "v1",
        "executor_display_name": "Get Attendee data for Session By Session Id",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. This API is used to get attendee session details by session-id. This API will return attendee data like attendee attend the session, how much engagement with the session, and basic information of the attendee. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "SessionAnalytics",
        "executor_category_group": "SessionAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/session/{sessionId}/attendee",
        "dataroot": null,
        "pathParams": [
            {
                "key": "sessionId",
                "value": "",
                "description": "Unique session Id of event for getting session details"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693210213936,
        "lastModifiedTime": 1693210213936,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "attended": true,
                    "email": "string",
                    "engagement": "string",
                    "eventTicketId": 0,
                    "firstName": "string",
                    "lastName": "string",
                    "phoneNumber": 0,
                    "registrationDate": "2021-12-21T11:34:37.564Z",
                    "userId": 0
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource\n"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden\n"
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found\n"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113453,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadQuestionAnswerCsvforSession",
        "executor_version": "v1",
        "executor_display_name": "Download Question Answer CSV for Session",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. it will return the session's question and answer data. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "SessionAnalytics",
        "executor_category_group": "SessionAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/session/{sessionId}/download/questionAnswers/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "sessionId",
                "value": "",
                "description": "Unique session Id of event for getting session details"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693210408005,
        "lastModifiedTime": 1693210408005,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "\"#\",\"Question\",\"Asker Name\",\"Answer(s)\",\"AnswerType\",\"Status\"\n\"1\",\"dlk;df\n\",\"aalok mistry\",,,\"OPEN\"\n\"2\",\"dclkjdlk\",\"aalok mistry\",,,\"OPEN\"\n\"3\",\"test\n\n\",\"Tammy N\",,,\"OPEN\"\n\"4\",\"send as private\",\"Heta Admin Shah\",,,\"OPEN\"\n"
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource\n"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden\n"
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found\n"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Not Acceptable "
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113454,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadTheCsvOfSessionAttendance",
        "executor_version": "v1",
        "executor_display_name": "Download the CSV Of Session Attendance",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. This API is used to get attendees how much time spent on video watch or Live in session etc kind of information. This API will return attendee data like video duration time(live& Recorded), watch the recording, attended Live, and basic information of the attendee. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "SessionAnalytics",
        "executor_category_group": "SessionAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/session/{sessionId}/download/session-attendance/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "sessionId",
                "value": "",
                "description": "Unique session Id of event for getting session details"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693210510425,
        "lastModifiedTime": 1693210510425,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "\"Attendee First Name\",\"Attendee Last Name\",\"Attendee Email\",\"Registered Date\",\"Attended Live\",\"Duration Time(Live)\",\"Watched Recording\",\"Duration Time(Recorded)\"\n\"Ekta\",\"Kabra\",\"ekta.k@brilworks.com\",\"22/11/2021 09:27:09\",\"No\",\"N/A\",\"No\",\"N/A\"\n\"Hina Admin\",\"admin\",\"hina.c@brilworks.com\",\"22/11/2021 12:19:25\",\"Yes\",\"00:00:25\",\"Yes\",\"00:03:16\""
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource\n"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden\n"
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found\n"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Not Acceptable "
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113458,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSessionAnalyticsDatabySessionId",
        "executor_version": "v1",
        "executor_display_name": "Get Session Analytics Data by Session Id",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. On the host side when we click on Analytics -> sessions -> sessions row, it will give us a session Id and it will return all session data like session start time, end time, session title, description capacity, etc. it will give the speaker, sponsors, and register holder data as well We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "SessionAnalytics",
        "executor_category_group": "SessionAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/session/{sessionId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "sessionId",
                "value": "",
                "description": "Unique session Id of event for getting session details"
            }
        ],
        "queryParams": [
            {
                "key": "expand",
                "value": "",
                "description": "it is contains duration,speaker,sponsors,exhibitor,video Analytics etc value and return data accordingly",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693210927057,
        "lastModifiedTime": 1693210927057,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "sessionId": 25518,
                    "title": "Zoom Breakout Session",
                    "startTime": "2021/11/22 17:40",
                    "endTime": "2021/11/26 18:50",
                    "location": null,
                    "description": "<img src=\"https://res.cloudinary.com/aestage/image/fetch/https://v2-dev-images-public.s3.amazonaws.com/6caaa230-3da3-4741-bd54-e82e752c46f6_FlyerJPEGTFA10118821TFAVirtualSummitOnepageSchedulev9FINAL.jpg\" style=\"width: 300px;\" class=\"fr-fil fr-dii\">",
                    "capacity": 0,
                    "status": "VISIBLE",
                    "format": "BREAKOUT_SESSION",
                    "speakerList": [
                        {
                            "speakerId": 7092,
                            "title": "QA",
                            "pronouns": "Speaker",
                            "firstName": "Prahald",
                            "lastName": "S",
                            "email": "prahalad.s@brilworks.com",
                            "sessionDTO": null,
                            "userId": 8972,
                            "imageUrl": "96dd7cf4-9155-4198-8ed0-ec3ad40ed9e7",
                            "company": "Brilworks",
                            "bio": "Automation",
                            "linkedIn": "https://www.linkedin.com/signup",
                            "twitter": "https://twitter.com/home?lang=en",
                            "instagram": "https://www.instagram.com/",
                            "position": 2000,
                            "moderator": false,
                            "ticketTypesForSpeaker": null,
                            "loggedInAtVEH": false,
                            "showModerator": true,
                            "deviceChecked": false,
                            "allowAttendeeAccess": null,
                            "allowOverrideDetails": true
                        }
                    ],
                    "sponsorList": null,
                    "sessionStats": {
                        "id": null,
                        "registeredUserCount": 10,
                        "interestedUserCount": 0,
                        "attendeeCount": 8,
                        "sessionSpeakerCount": 0
                    },
                    "registerdHolderUsers": [
                        {
                            "eventTicketId": null,
                            "userId": 35923,
                            "firstName": "Ekta",
                            "lastName": null,
                            "email": "ekta.k@brilworks.com",
                            "phoneNumber": 259699999,
                            "attended": false,
                            "registrationDate": 1637573220000,
                            "engagement": null
                        }
                    ],
                    "currentUserRegisteredEventTicketId": null,
                    "purchaserUserRegisteredEventTicketId": null,
                    "duration": 0,
                    "enableChat": false,
                    "enablePoll": false,
                    "enableQuesAndAns": false,
                    "hideSessionFromAttendees": false,
                    "enableVirtualization": false,
                    "tags": null,
                    "tracks": null,
                    "ticketTypesThatCanBeRegistered": [
                        153758,
                        153775
                    ],
                    "streamProvider": "ZOOM",
                    "subStreamProvider": null,
                    "streamUrl": "95759286592",
                    "streamKey": null,
                    "rtmpUrl": null,
                    "accelEventsStudio": false,
                    "directVideoAutoStart": false,
                    "assetList": null,
                    "displayDonation": false,
                    "closedCaptionUrl": "https://www.streamtext.net/player?event=IHaveADream",
                    "closedCaptionHeight": 150,
                    "meetingPassword": "U2V2Ae",
                    "documentKeyValue": [],
                    "sessionVisibilityType": "PUBLIC",
                    "subTitleFileUrl": null,
                    "hideVideoControls": false,
                    "recordSession": true,
                    "position": 1000,
                    "allowedMinutesToJoinLate": 0,
                    "enableAttendeeList": false,
                    "playBackRestrictionToken": null,
                    "thumbnailRestrictionToken": null,
                    "postSessionCallToActionJson": {
                        "enablePostSessionCallToAction": false,
                        "destinationType": null,
                        "description": null,
                        "buttonLabelText": null,
                        "destination": null
                    },
                    "chimeConfig": null,
                    "qnAPrivate": false
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource\n"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden\n"
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found\n"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113450,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadSessionAttendeesCsv",
        "executor_version": "v1",
        "executor_display_name": "Download Session Attendees CSV",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. This API is used to get attendee session details by session-id. This API will return attendee data like first name, last name, email, and attendee was attending a session or not. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "SessionAnalytics",
        "executor_category_group": "SessionAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/session/{id}/download/attendees/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique session Id of event for getting session details"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693210027747,
        "lastModifiedTime": 1693210027747,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "\"First Name\",\"Last Name\",\"Email\",\"Attended\"\n\"Ekta\",,\"ekta.k@brilworks.com\",\"NO\"\n\"Aalok\",\"Mistri\",\"aalok.m@brilworks.com\",\"NO\""
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource\n"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden\n"
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found\n"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113457,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllSessionAnalyticsData",
        "executor_version": "v1",
        "executor_display_name": "Get All Session Analytics Data",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. This API will return all session's data like session start time, end time, session title registered user count, Average Attended Duration, recording views. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "SessionAnalytics",
        "executor_category_group": "SessionAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/session/analytics",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "searchString",
                "value": "",
                "description": "String for searching to get specific result data",
                "req": false
            },
            {
                "key": "eventId",
                "value": "",
                "description": "Unique event Id of event for getting event details",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Size will returns number of records, by default it will returns 10 records.",
                "req": false
            },
            {
                "key": "expand",
                "value": "",
                "description": "it is contains duration,speaker,sponsors,exhibitor,video Analytics etc value and return data accordingly",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693210835484,
        "lastModifiedTime": 1693210835484,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 2,
                    "recordsFiltered": 2,
                    "data": [
                        {
                            "sessionId": 25518,
                            "title": "Zoom Breakout Session",
                            "startTime": "2021/11/22 17:40",
                            "endTime": "2021/11/26 18:50",
                            "registeredUserCount": 10,
                            "attendeeCount": 8,
                            "duration": 0,
                            "avgAttendedDuraavgRecordingDurationtion": null,
                            "": null,
                            "recordingViews": 0,
                            "liveViews": 0
                        },
                        {
                            "sessionId": 25516,
                            "title": "Vimeo Session",
                            "startTime": "2021/11/22 17:42",
                            "endTime": "2021/11/22 17:50",
                            "registeredUserCount": 9,
                            "attendeeCount": 8,
                            "duration": 285,
                            "avgAttendedDuration": 28.845625,
                            "avgRecordingDuration": null,
                            "recordingViews": 6,
                            "liveViews": 0
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource\n"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden\n"
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found\n"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113459,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSessionVideoAnalyticsData",
        "executor_version": "v1",
        "executor_display_name": "Get Session Video Analytics Data",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. On the host side when we click on Analytics -> sessions -> sessions row, It will return session video analytics data like sessions data, average attended duration, average recording view, live view information, etc. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "SessionAnalytics",
        "executor_category_group": "SessionAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/session/{sessionId}/analytics",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "sessionId",
                "value": "",
                "description": "Unique session Id of event for getting session details"
            }
        ],
        "queryParams": [
            {
                "key": "expand",
                "value": "",
                "description": "it is contains duration,speaker,sponsors,exhibitor,video Analytics etc value and return data accordingly",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693211035805,
        "lastModifiedTime": 1693211035805,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "sessionId": 25559,
                    "title": "Toxbox",
                    "startTime": "2021/11/22 18:57",
                    "endTime": "2021/11/22 19:05",
                    "registeredUserCount": null,
                    "attendeeCount": null,
                    "duration": null,
                    "avgAttendedDuration": null,
                    "avgRecordingDuration": null,
                    "recordingViews": 0,
                    "liveViews": 0,
                    "totalChatCount": 4,
                    "totalRecordingViews": 3,
                    "videoAnalytics": {
                        "liveView": [
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "0",
                                "userCount": 2
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "10",
                                "userCount": 1
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "15",
                                "userCount": 1
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "20",
                                "userCount": 1
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "25",
                                "userCount": 2
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "30",
                                "userCount": 2
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "35",
                                "userCount": 2
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "40",
                                "userCount": 2
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "45",
                                "userCount": 2
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "50",
                                "userCount": 2
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "55",
                                "userCount": 2
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "60",
                                "userCount": 2
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "65",
                                "userCount": 1
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "70",
                                "userCount": 1
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "75",
                                "userCount": 1
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "80",
                                "userCount": 1
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "85",
                                "userCount": 1
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "90",
                                "userCount": 1
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "215",
                                "userCount": 2
                            }
                        ],
                        "recordingView": [
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "0",
                                "userCount": 3
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "10",
                                "userCount": 1
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "15",
                                "userCount": 1
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "95",
                                "userCount": 1
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "100",
                                "userCount": 1
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "105",
                                "userCount": 1
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "110",
                                "userCount": 1
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "115",
                                "userCount": 1
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "120",
                                "userCount": 1
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "125",
                                "userCount": 1
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "130",
                                "userCount": 1
                            },
                            {
                                "avgAttendedDuration": 0,
                                "avgRecordingDuration": 0,
                                "recordingViews": 0,
                                "liveViews": 0,
                                "hour": "215",
                                "userCount": 2
                            }
                        ]
                    }
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource\n"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden\n"
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found\n"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113534,
        "executor_type": "THIRDPARTY",
        "executor_name": "getQualifiedAudienceListOfSpecificAudienceFilterAndWhitelabel",
        "executor_version": "v1",
        "executor_display_name": "Get Qualified Audience List of specific Audience Filter and Whitelabel",
        "executor_description": "This API is used to get a list of qualified audiences associated with the specified audience filter id. API used at host side event admin, super admin and Organizer admin can access this API. It will return a List of Audience filters with a number of counts of qualified attendees for each filter. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "AudienceFilter",
        "executor_category_group": "AudienceFilter",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/u/audience/filter/organizer/{whitelabelURL}/audience",
        "dataroot": null,
        "pathParams": [
            {
                "key": "whitelabelURL",
                "value": "",
                "description": ""
            }
        ],
        "queryParams": [
            {
                "key": "id",
                "value": "",
                "description": "Id of existing audience filter.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "starting position of a list",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "max number of records.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "id": 0,
                "name": "string",
                "userId": 0,
                "filterJson": "string",
                "totalAudience": 0,
                "source": "string",
                "sourceId": 0
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693224852628,
        "lastModifiedTime": 1693224852628,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 2,
                    "recordsFiltered": 2,
                    "data": [
                        {
                            "userId": 8363,
                            "firstName": "Umang`",
                            "lastName": "36",
                            "role": null,
                            "title": null,
                            "company": null,
                            "email": "umang.p+36@brilworks.com",
                            "photo": null,
                            "referenceValue": null
                        },
                        {
                            "userId": 8117,
                            "firstName": "Umang",
                            "lastName": "34",
                            "role": null,
                            "title": null,
                            "company": null,
                            "email": "umang.p+34@brilworks.com",
                            "photo": null,
                            "referenceValue": null
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4030201",
                    "developerMessage": "Not Event Host"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113500,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateAnAudienceFilter",
        "executor_version": "v1",
        "executor_display_name": "Update an Audience Filter",
        "executor_description": "This API is Used to update an existing audience filter associated with the specified Whitelabel/Organizer. API used at host side event admin, super admin and organizer admin can access this API. It will return created audience filter ID. We need to pass an authorization token here, which is generated after successful login into account with the other details.",
        "executor_category": "AudienceFilter",
        "executor_category_group": "AudienceFilter",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/u/audience/filter",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "id": 0,
                "name": "string",
                "userId": 0,
                "filterJson": "string",
                "totalAudience": 0,
                "source": "string",
                "sourceId": 0
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693220632202,
        "lastModifiedTime": 1693220632202,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Long"
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4030201",
                    "developerMessage": "Not Event Host"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113531,
        "executor_type": "THIRDPARTY",
        "executor_name": "getQualifiedAudienceListOfSpecificAudienceFilterAndOrganizer",
        "executor_version": "v1",
        "executor_display_name": "Get Qualified Audience List of specific Audience Filter and Organizer",
        "executor_description": "This API is used to get a list of qualified audiences associated with the specified audience filter id. API used at host side event admin, super admin and Organizer admin can access this API. It will return a List of Audience filters with a number of counts of qualified attendees for each filter. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "AudienceFilter",
        "executor_category_group": "AudienceFilter",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/u/audience/filter/organizer/{organizerURL}/audience",
        "dataroot": null,
        "pathParams": [
            {
                "key": "organizerURL",
                "value": "",
                "description": "Unique organizer URL"
            }
        ],
        "queryParams": [
            {
                "key": "id",
                "value": "",
                "description": "Id of existing audience filter.",
                "req": false
            },
            {
                "key": "offset",
                "value": "",
                "description": "starting position of a list",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "max number of records.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "id": 0,
                "name": "string",
                "userId": 0,
                "filterJson": "string",
                "totalAudience": 0,
                "source": "string",
                "sourceId": 0
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693224764562,
        "lastModifiedTime": 1693224764562,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 2,
                    "recordsFiltered": 2,
                    "data": [
                        {
                            "userId": 8363,
                            "firstName": "Umang`",
                            "lastName": "36",
                            "role": null,
                            "title": null,
                            "company": null,
                            "email": "umang.p+36@brilworks.com",
                            "photo": null,
                            "referenceValue": null
                        },
                        {
                            "userId": 8117,
                            "firstName": "Umang",
                            "lastName": "34",
                            "role": null,
                            "title": null,
                            "company": null,
                            "email": "umang.p+34@brilworks.com",
                            "photo": null,
                            "referenceValue": null
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4030201",
                    "developerMessage": "Not Event Host"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113535,
        "executor_type": "THIRDPARTY",
        "executor_name": "getReferenceFieldValuesForParticularAttributeOfOrganizer",
        "executor_version": "v1",
        "executor_display_name": "Get Reference Field values for a particular attribute of a Organizer",
        "executor_description": "this API is used for searching a particular field value to build an audience filter.",
        "executor_category": "AudienceFilter",
        "executor_category_group": "AudienceFilter",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/audience/filter/organizer/{organizerURL}/referenceField",
        "dataroot": null,
        "pathParams": [
            {
                "key": "organizerURL",
                "value": "",
                "description": "Unique organizer URL"
            }
        ],
        "queryParams": [
            {
                "key": "type",
                "value": "",
                "description": "type contain values (profile/register/engagement)",
                "req": false
            },
            {
                "key": "field",
                "value": "",
                "description": "Field name in which we want to search a specific value.",
                "req": false
            },
            {
                "key": "instance",
                "value": "",
                "description": "if a field is inside a JSON value then specified that field name.",
                "req": false
            },
            {
                "key": "value",
                "value": "",
                "description": "specify a value which you want to search.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "limit of records.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693225043145,
        "lastModifiedTime": 1693225043145,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "5309": "first-event-audience",
                    "5312": "second-audience-org",
                    "8527": "90ed91d1ee"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4030201",
                    "developerMessage": "Not Event Host"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113496,
        "executor_type": "THIRDPARTY",
        "executor_name": "createAnAudienceFilter",
        "executor_version": "v1",
        "executor_display_name": "Create an Audience Filter",
        "executor_description": "This API is used to create an audience filter associated with the specified Whitelabel/Organizer.  This API is used at the host side. Event admins, super admins, and organizer admins can access this API.  It will return created audience filter ID.  We need to pass an authorization token here, which is generated after successful login into account with the other details.",
        "executor_category": "AudienceFilter",
        "executor_category_group": "AudienceFilter",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/u/audience/filter",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "id": 0,
                "name": "string",
                "userId": 0,
                "filterJson": "string",
                "totalAudience": 0,
                "source": "string",
                "sourceId": 0
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693220008598,
        "lastModifiedTime": 1693220008598,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Long"
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4030201",
                    "developerMessage": "Not Event Host"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113504,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAudienceFilterlistOfSpecificWhitelabel",
        "executor_version": "v1",
        "executor_display_name": "Get Audience Filter list of specific Whitelabel",
        "executor_description": "This API is used to get all audience filters associated with the specified Whitelabel URL. API used at host side event admin, super admin and Whitelabel admin can access this API. It will return a List of Audience filters with a number of counts of qualified attendees for each filter. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "AudienceFilter",
        "executor_category_group": "AudienceFilter",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/audience/filter/whitelabel/{whitelabelURL}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "whitelabelURL",
                "value": "",
                "description": "Unique whitelabel URL"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693220929870,
        "lastModifiedTime": 1693220929870,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": -1,
                        "name": "Everyone",
                        "eventId": null,
                        "userId": null,
                        "filterJson": "{}",
                        "totalAudience": 2,
                        "source": null,
                        "sourceId": null
                    },
                    {
                        "id": 91,
                        "name": "dev-test-p-1",
                        "eventId": null,
                        "userId": 7559,
                        "filterJson": "{\"date\":{\"startDate\":\"\",\"endDate\":\"\",\"format\":\"MM-DD-YYYY\"},\"conditionalOperator\":\"any\",\"conditions\":[{\"type\":\"single\",\"condition\":{\"isInstance\":true,\"columnName\":\"lastName\",\"columnValue\":\"p\",\"operator\":\"CONTAINS\",\"dataType\":\"string\",\"instanceName\":\"purchaser\"},\"filterName\":\"register\"},{\"type\":\"single\",\"condition\":{\"isInstance\":true,\"columnName\":\"lastName\",\"columnValue\":\"1\",\"operator\":\"CONTAINS\",\"dataType\":\"string\",\"instanceName\":\"purchaser\"},\"filterName\":\"register\"},{\"type\":\"single\",\"condition\":{\"isInstance\":false,\"dataType\":\"string\",\"operator\":\"IS\",\"columnName\":\"email\",\"columnValue\":\"umang.p+25@brilworks.com\"},\"filterName\":\"profile\"}]}",
                        "totalAudience": 0,
                        "source": "ORGANIZER",
                        "sourceId": 1032
                    }
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4030201",
                    "developerMessage": "Not Event Host"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113537,
        "executor_type": "THIRDPARTY",
        "executor_name": "getReferenceFieldValuesForParticularAttributeOfWhitelabel",
        "executor_version": "v1",
        "executor_display_name": "Get Reference Field values for a particular attribute of a Whitelabel",
        "executor_description": "this API is used for searching a particular field value to build an audience filter.",
        "executor_category": "AudienceFilter",
        "executor_category_group": "AudienceFilter",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/audience/filter/organizer/{whitelabelURL}/referenceField",
        "dataroot": null,
        "pathParams": [
            {
                "key": "whitelabelURL",
                "value": "",
                "description": "Unique whitelabel URL"
            }
        ],
        "queryParams": [
            {
                "key": "type",
                "value": "",
                "description": "type contain values (profile/register/engagement)",
                "req": false
            },
            {
                "key": "field",
                "value": "",
                "description": "Field name in which we want to search a specific value.",
                "req": false
            },
            {
                "key": "instance",
                "value": "",
                "description": "if a field is inside a JSON value then specified that field name.",
                "req": false
            },
            {
                "key": "value",
                "value": "",
                "description": "specify a value which you want to search.",
                "req": false
            },
            {
                "key": "limit",
                "value": "",
                "description": "limit of records.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693225130411,
        "lastModifiedTime": 1693225130411,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "5309": "first-event-audience",
                    "5312": "second-audience-org",
                    "8527": "90ed91d1ee"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4030201",
                    "developerMessage": "Not Event Host"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113501,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteAnAudienceFilter",
        "executor_version": "v1",
        "executor_display_name": "Delete an Audience Filter",
        "executor_description": "This API is Used to delete an existing audience filter. API used at host side event admin, super admin and organizer admin can access this API. It will return Success if the specified audience filter is deleted successfully. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "AudienceFilter",
        "executor_category_group": "AudienceFilter",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/u/audience/filter/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "Unique ID of an existing audience filter."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693220734539,
        "lastModifiedTime": 1693220734539,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4030201",
                    "developerMessage": "Not Event Host"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113503,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAudienceFilterListOfSpecificOrganizer",
        "executor_version": "v1",
        "executor_display_name": "Get Audience Filter list of specific organizer",
        "executor_description": "This API is used to get all audience filters associated with the specified organizer URL. API used at host side event admin, super admin and organizer admin can access this API. It will return a List of Audience filters with a number of counts of qualified attendees for each filter. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "AudienceFilter",
        "executor_category_group": "AudienceFilter",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/audience/filter/organizer/{organizerURL}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "organizerURL",
                "value": "",
                "description": "Unique Organizer URL."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693220839680,
        "lastModifiedTime": 1693220839680,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": -1,
                        "name": "Everyone",
                        "eventId": null,
                        "userId": null,
                        "filterJson": "{}",
                        "totalAudience": 2,
                        "source": null,
                        "sourceId": null
                    },
                    {
                        "id": 91,
                        "name": "dev-test-p-1",
                        "eventId": null,
                        "userId": 7559,
                        "filterJson": "{\"date\":{\"startDate\":\"\",\"endDate\":\"\",\"format\":\"MM-DD-YYYY\"},\"conditionalOperator\":\"any\",\"conditions\":[{\"type\":\"single\",\"condition\":{\"isInstance\":true,\"columnName\":\"lastName\",\"columnValue\":\"p\",\"operator\":\"CONTAINS\",\"dataType\":\"string\",\"instanceName\":\"purchaser\"},\"filterName\":\"register\"},{\"type\":\"single\",\"condition\":{\"isInstance\":true,\"columnName\":\"lastName\",\"columnValue\":\"1\",\"operator\":\"CONTAINS\",\"dataType\":\"string\",\"instanceName\":\"purchaser\"},\"filterName\":\"register\"},{\"type\":\"single\",\"condition\":{\"isInstance\":false,\"dataType\":\"string\",\"operator\":\"IS\",\"columnName\":\"email\",\"columnValue\":\"umang.p+25@brilworks.com\"},\"filterName\":\"profile\"}]}",
                        "totalAudience": 0,
                        "source": "ORGANIZER",
                        "sourceId": 1032
                    }
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4030201",
                    "developerMessage": "Not Event Host"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113540,
        "executor_type": "THIRDPARTY",
        "executor_name": "getMasterJson",
        "executor_version": "v1",
        "executor_display_name": "Get Master JSON",
        "executor_description": "This API is Used to retrieve master JSON for creating or updating an audience filter. We need to pass an authorisation token here, which is generated after successful login into account with the other details.",
        "executor_category": "AudienceFilter",
        "executor_category_group": "AudienceFilter",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/audience/filter/filterJson",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693225300200,
        "lastModifiedTime": 1693225300200,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "audienceFilterJson": {
                        "operator": {
                            "text": [
                                "contains",
                                "not_contains"
                            ],
                            "numeric": [
                                "greater_than",
                                "less_than",
                                "greater_than_or_equal",
                                "less_than_or_equal",
                                "is",
                                "is_not"
                            ],
                            "textWithRef": [
                                "contains",
                                "not_contains",
                                "is",
                                "is_not"
                            ],
                            "enum": [
                                "is",
                                "is_not"
                            ]
                        },
                        "filters": {
                            "profile": {
                                "label": "Personal Data",
                                "columns": [
                                    {
                                        "label": "Personal Information",
                                        "values": [
                                            {
                                                "label": "First Name",
                                                "name": "firstName",
                                                "api": false,
                                                "operator": "textWithRef",
                                                "type": "text",
                                                "dataType": "string",
                                                "fieldType": "scaler",
                                                "limit": 0
                                            },
                                            {
                                                "label": "Last Name",
                                                "name": "lastName",
                                                "api": false,
                                                "operator": "textWithRef",
                                                "type": "text",
                                                "dataType": "string",
                                                "fieldType": "scaler",
                                                "limit": 0
                                            },
                                            {
                                                "label": "Company Name",
                                                "name": "company",
                                                "api": true,
                                                "operator": "textWithRef",
                                                "type": "text",
                                                "dataType": "string",
                                                "fieldType": "scaler",
                                                "limit": 15
                                            },
                                            {
                                                "label": "Title",
                                                "name": "title",
                                                "api": true,
                                                "operator": "textWithRef",
                                                "type": "text",
                                                "dataType": "string",
                                                "fieldType": "scaler",
                                                "limit": 15
                                            },
                                            {
                                                "label": "Bio",
                                                "name": "bio",
                                                "api": false,
                                                "operator": "text",
                                                "type": "text",
                                                "dataType": "string",
                                                "fieldType": "scaler",
                                                "limit": 0
                                            }
                                        ]
                                    },
                                    {
                                        "label": "Contact Information",
                                        "values": [
                                            {
                                                "label": "Email",
                                                "name": "email",
                                                "api": true,
                                                "operator": "textWithRef",
                                                "type": "dropdown",
                                                "dataType": "string",
                                                "fieldType": "scaler",
                                                "limit": 15
                                            },
                                            {
                                                "label": "Phone",
                                                "name": "phone",
                                                "api": false,
                                                "operator": "textWithRef",
                                                "type": "text",
                                                "dataType": "string",
                                                "fieldType": "scaler",
                                                "limit": 0
                                            }
                                        ]
                                    }
                                ]
                            },
                            "register": {
                                "label": "Registration",
                                "columns": [
                                    {
                                        "label": "Order Information",
                                        "values": [
                                            {
                                                "label": "Ticket Buyer",
                                                "fieldType": "instance",
                                                "name": "purchaser",
                                                "instanceName": "purchaser",
                                                "instanceColumns": "registration.buyer.info",
                                                "attribute": [
                                                    "eventName",
                                                    "nooftickets",
                                                    "status",
                                                    "ticketHolder"
                                                ]
                                            },
                                            {
                                                "label": "Ticket Holder",
                                                "fieldType": "instance",
                                                "name": "ticketHolder",
                                                "instanceName": "ticketHolder",
                                                "instanceColumns": "registration.holder.info",
                                                "attribute": [
                                                    "eventName",
                                                    "nooftickets",
                                                    "status",
                                                    "purchaser"
                                                ]
                                            },
                                            {
                                                "label": "Order Status",
                                                "name": "status",
                                                "api": false,
                                                "operator": "enum",
                                                "type": "dropdown",
                                                "dataType": "string",
                                                "limit": 0,
                                                "enumValue": [
                                                    "CREATE",
                                                    "EXPIRED",
                                                    "PAID",
                                                    "PAID_DELETE",
                                                    "UNPAID",
                                                    "UNPAID_DELETE"
                                                ],
                                                "fieldType": "scaler",
                                                "attribute": [
                                                    "eventName",
                                                    "nooftickets",
                                                    "ticketHolder",
                                                    "purchaser"
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "label": "Registration Information",
                                        "values": [
                                            {
                                                "label": "Ticket Type",
                                                "name": "tickettypename",
                                                "api": true,
                                                "mappingKey": "tickettypeid",
                                                "mappingDataType": "number",
                                                "operator": "enum",
                                                "type": "dropdown",
                                                "dataType": "string",
                                                "fieldType": "scaler",
                                                "limit": 1000,
                                                "attribute": [
                                                    "eventName",
                                                    "ticketprice",
                                                    "discountCode",
                                                    "ticketHolder",
                                                    "purchaser"
                                                ]
                                            },
                                            {
                                                "label": "Number of Tickets",
                                                "name": "nooftickets",
                                                "api": false,
                                                "operator": "numeric",
                                                "type": "numeric",
                                                "dataType": "number",
                                                "fieldType": "scaler",
                                                "limit": 0,
                                                "attribute": [
                                                    "eventName",
                                                    "status",
                                                    "discountCode",
                                                    "ticketHolder",
                                                    "purchaser"
                                                ]
                                            },
                                            {
                                                "label": "Price",
                                                "name": "ticketprice",
                                                "api": false,
                                                "operator": "numeric",
                                                "type": "numeric",
                                                "dataType": "number",
                                                "fieldType": "scaler",
                                                "limit": 0,
                                                "attribute": [
                                                    "eventName",
                                                    "tickettypename",
                                                    "nooftickets",
                                                    "status",
                                                    "discountCode",
                                                    "ticketHolder",
                                                    "purchaser"
                                                ]
                                            },
                                            {
                                                "label": "Total Amount",
                                                "name": "orderTotalAmount",
                                                "api": false,
                                                "operator": "numeric",
                                                "type": "numeric",
                                                "dataType": "number",
                                                "fieldType": "scaler",
                                                "limit": 0,
                                                "attribute": [
                                                    "eventName",
                                                    "nooftickets",
                                                    "ticketHolder",
                                                    "purchaser"
                                                ]
                                            },
                                            {
                                                "label": "Event Name",
                                                "name": "eventName",
                                                "api": true,
                                                "mappingKey": "eventid",
                                                "mappingDataType": "number",
                                                "operator": "enum",
                                                "type": "dropdown",
                                                "dataType": "string",
                                                "fieldType": "scaler",
                                                "limit": 15,
                                                "attribute": [
                                                    "tickettypename",
                                                    "nooftickets",
                                                    "status",
                                                    "discountCode",
                                                    "ticketHolder",
                                                    "purchaser"
                                                ]
                                            },
                                            {
                                                "label": "Discount Code",
                                                "name": "discountCode",
                                                "api": true,
                                                "mappingKey": "discountCodeId",
                                                "mappingDataType": "number",
                                                "operator": "enum",
                                                "type": "dropdown",
                                                "dataType": "string",
                                                "fieldType": "scaler",
                                                "limit": 1000,
                                                "attribute": [
                                                    "eventName",
                                                    "ticketprice",
                                                    "nooftickets",
                                                    "ticketHolder",
                                                    "purchaser"
                                                ]
                                            },
                                            {
                                                "label": "Checkout From",
                                                "name": "checkOutFrom",
                                                "api": false,
                                                "operator": "enum",
                                                "type": "dropdown",
                                                "dataType": "string",
                                                "limit": 0,
                                                "enumValue": [
                                                    "ATTENDEE_CHECKOUT",
                                                    "ATTENDEE_UPLOAD",
                                                    "ADMIN_OR_STAFF_CHECKOUT"
                                                ],
                                                "fieldType": "scaler",
                                                "attribute": [
                                                    "eventName",
                                                    "tickettypename",
                                                    "nooftickets",
                                                    "status",
                                                    "discountCode",
                                                    "ticketHolder",
                                                    "purchaser"
                                                ]
                                            }
                                        ]
                                    }
                                ],
                                "instance": {
                                    "registration_buyer_info": [
                                        {
                                            "label": "First Name",
                                            "name": "firstName",
                                            "api": false,
                                            "operator": "textWithRef",
                                            "type": "text",
                                            "dataType": "string",
                                            "limit": 0
                                        },
                                        {
                                            "label": "Last Name",
                                            "name": "lastName",
                                            "api": false,
                                            "operator": "textWithRef",
                                            "type": "text",
                                            "dataType": "string",
                                            "limit": 0
                                        },
                                        {
                                            "label": "Email",
                                            "name": "email",
                                            "api": true,
                                            "operator": "textWithRef",
                                            "type": "dropdown",
                                            "dataType": "string",
                                            "limit": 15
                                        }
                                    ],
                                    "registration_holder_info": [
                                        {
                                            "label": "First Name",
                                            "name": "firstName",
                                            "api": false,
                                            "operator": "textWithRef",
                                            "type": "text",
                                            "dataType": "string",
                                            "limit": 0
                                        },
                                        {
                                            "label": "Last Name",
                                            "name": "lastName",
                                            "api": false,
                                            "operator": "textWithRef",
                                            "type": "text",
                                            "dataType": "string",
                                            "limit": 0
                                        },
                                        {
                                            "label": "Email",
                                            "name": "email",
                                            "api": true,
                                            "operator": "textWithRef",
                                            "type": "dropdown",
                                            "dataType": "string",
                                            "limit": 15
                                        }
                                    ]
                                }
                            },
                            "engagement": {
                                "label": "Engagement",
                                "columns": [
                                    {
                                        "label": "Event Content",
                                        "values": [
                                            {
                                                "label": "Joined a Session",
                                                "name": "joinedsession",
                                                "api": true,
                                                "fieldType": "scaler",
                                                "operator": "enum",
                                                "type": "dropdown",
                                                "dataType": "string",
                                                "limit": 1000,
                                                "mappingKey": "sessionid",
                                                "mappingDataType": "number",
                                                "attribute": [
                                                    "eventName"
                                                ]
                                            },
                                            {
                                                "label": "Bookmarked a Session",
                                                "name": "bookmarksession",
                                                "api": true,
                                                "fieldType": "scaler",
                                                "operator": "enum",
                                                "type": "dropdown",
                                                "dataType": "string",
                                                "limit": 1000,
                                                "mappingKey": "sessionid",
                                                "mappingDataType": "number",
                                                "attribute": [
                                                    "eventName"
                                                ]
                                            },
                                            {
                                                "label": "Event Name",
                                                "name": "eventName",
                                                "api": true,
                                                "mappingKey": "eventid",
                                                "mappingDataType": "number",
                                                "operator": "enum",
                                                "type": "dropdown",
                                                "dataType": "string",
                                                "fieldType": "scaler",
                                                "limit": 15
                                            }
                                        ]
                                    },
                                    {
                                        "label": "Social Activity",
                                        "values": [
                                            {
                                                "label": "Liked a Post",
                                                "name": "likepost",
                                                "api": false,
                                                "fieldType": "scaler",
                                                "operator": "text",
                                                "type": "dropdown",
                                                "dataType": "string",
                                                "limit": 1000,
                                                "attribute": [
                                                    "eventName"
                                                ]
                                            },
                                            {
                                                "label": "Comment",
                                                "name": "comment",
                                                "api": false,
                                                "fieldType": "scaler",
                                                "operator": "text",
                                                "type": "dropdown",
                                                "dataType": "string",
                                                "limit": 1000,
                                                "attribute": [
                                                    "eventName"
                                                ]
                                            },
                                            {
                                                "label": "Posts",
                                                "name": "feed",
                                                "api": false,
                                                "fieldType": "scaler",
                                                "operator": "text",
                                                "type": "dropdown",
                                                "dataType": "string",
                                                "limit": 1000,
                                                "attribute": [
                                                    "eventName"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4030201",
                    "developerMessage": "Not Event Host"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113585,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTicketOrderDetailByOrderId",
        "executor_version": "v1",
        "executor_display_name": "Get ticket order detail by order id",
        "executor_description": "This API is used to get order details and event details by particular order id. When the user clicks on the My Activity page from the profile menu, the user gets the list of event ticket details for a particular event like eventTicketId, orderId, paidAmount, etc. and use these order Ids in this API to get order details. We need to pass the authorization token in API in the header. Authorization token will be generated when the user login to the system.",
        "executor_category": "MyActivity",
        "executor_category_group": "MyActivity",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/myticket/order/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "It is the ticket purchase order id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693288186999,
        "lastModifiedTime": 1693288186999,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "eventLogoImage": "default_ae_images/Smooth_AE_Icon_700x350.png",
                    "eventName": "Test event 27/12/2021",
                    "eventUrl": "test-event-27122021",
                    "eventStartDate": 1640585700000,
                    "eventEndDate": 1640619000000,
                    "ticketOrderNumber": 65245,
                    "ticketOrderAmount": 1.44,
                    "purchaseDate": 1640584986000,
                    "seatNumbers": ",,",
                    "allowAttendeeToEditInfo": false,
                    "currency": "$",
                    "totalPurchasedTicketsInOrder": 3,
                    "holderAttribute": true,
                    "eventLocation": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "User is not authorized to view the resource."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Order you are looking for is not found"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113587,
        "executor_type": "THIRDPARTY",
        "executor_name": "getUserTicketDetailsByOrderId",
        "executor_version": "v1",
        "executor_display_name": "Get user ticket details by order id",
        "executor_description": "This API is used to get user purchased ticket order details by order id. When the user clicks on the My Activity page from the profile menu, the user gets the list of event ticket details for a particular event like eventTicketId, orderId, paidAmount, etc. We need to pass the authorization token in API in the header. Authorization token will be generated when the user login to the system.",
        "executor_category": "MyActivity",
        "executor_category_group": "MyActivity",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/myticket/order/tickets/{orderId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "orderId",
                "value": "",
                "description": "It is the ticket purchase order id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693288432302,
        "lastModifiedTime": 1693288432302,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": 58151,
                        "barcode": "eb8a1d8b-c668-4a3a-ae47-38d9d92bc301",
                        "amount": 0,
                        "checkInDate": null,
                        "ticketTypeName": "Free Admission",
                        "seatsNumber": "",
                        "chartKey": null,
                        "allowPDFDownload": false
                    },
                    {
                        "id": 58152,
                        "barcode": "5640e17c-8229-42c3-99d6-ee178eee80bd",
                        "amount": 0,
                        "checkInDate": null,
                        "ticketTypeName": "Free Admission",
                        "seatsNumber": "",
                        "chartKey": null,
                        "allowPDFDownload": false
                    },
                    {
                        "id": 58153,
                        "barcode": "20d39c81-3a17-4040-bee7-c14deaac5a3f",
                        "amount": 1.44,
                        "checkInDate": null,
                        "ticketTypeName": "General Admission",
                        "seatsNumber": "",
                        "chartKey": null,
                        "allowPDFDownload": true
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "User is not authorized to view the resource."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Order you are looking for is not found"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113589,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadTicketOrderPdf",
        "executor_version": "v1",
        "executor_display_name": "Download ticket order pdf",
        "executor_description": "This API is used to Download Ticket order pdf. When the user clicks on the My Activity page from the profile menu, the user gets the list of event ticket details for a particular event like eventTicketId, orderId, paidAmount, etc. We need to pass the authorization token in API in the header. Authorization token will be generated when the user login to the system.",
        "executor_category": "MyActivity",
        "executor_category_group": "MyActivity",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/myticket/download/order/pdf/{orderId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "orderId",
                "value": "",
                "description": "It is the ticket purchase order id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693288609365,
        "lastModifiedTime": 1693288609365,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "User is not authorized to view the resource."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113588,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTicketHolderDetailByTicketId",
        "executor_version": "v1",
        "executor_display_name": "Get ticket holder detail by ticket id",
        "executor_description": "This API is used to get ticketing holder data by ticket/order id. When the user clicks on the My Activity page from the profile menu, the user gets the list of event ticket details for a particular event like eventTicketId, orderId, paidAmount, etc. We need to pass the authorization token in API in the header. Authorization token will be generated when the user login to the system.",
        "executor_category": "MyActivity",
        "executor_category_group": "MyActivity",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/myticket/holderData/ticket/{ticketId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "ticketId",
                "value": "",
                "description": "It is the ticket holder ticket id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693288520869,
        "lastModifiedTime": 1693288520869,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "attributes": [
                        {
                            "name": "First Name",
                            "type": "text",
                            "value": "Attendee",
                            "defaultValue": null,
                            "mandatory": true,
                            "eventTicketTypeId": "11665,11666"
                        },
                        {
                            "name": "Last Name",
                            "type": "text",
                            "value": "s",
                            "defaultValue": null,
                            "mandatory": true,
                            "eventTicketTypeId": "11665,11666"
                        },
                        {
                            "name": "Email",
                            "type": "email",
                            "value": "meghna.c+attendee@brilworks.com",
                            "defaultValue": null,
                            "mandatory": true,
                            "eventTicketTypeId": "11665,11666"
                        }
                    ],
                    "questions": [],
                    "seatNumber": "",
                    "eventTicketingId": 58167,
                    "eventKey": "9662"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "User is not authorized to view the resource."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Order you are looking for is not found"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113590,
        "executor_type": "THIRDPARTY",
        "executor_name": "resendMailToTicketBuyer",
        "executor_version": "v1",
        "executor_display_name": "Resend mail to ticket buyer",
        "executor_description": "This API is used to resend mail to ticket buyers and ticket holders. When the user clicks on the My Activity page from the profile menu, the user gets the list of event ticket details for a particular event like eventTicketId, orderId, paidAmount, etc. We need to pass the authorization token in API in the header. Authorization token will be generated when the user login to the system.",
        "executor_category": "MyActivity",
        "executor_category_group": "MyActivity",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/myticket/resendmail/order/{orderId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "orderId",
                "value": "",
                "description": "It is the ticket purchase order id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693288757226,
        "lastModifiedTime": 1693288757226,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Email has been successfully sent."
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "User is not authorized to view the resource."
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Order you are looking for is not found"
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Not acceptable"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113584,
        "executor_type": "THIRDPARTY",
        "executor_name": "getListOfUserActivitiesForAllEvents",
        "executor_version": "v1",
        "executor_display_name": "Get list of user activities for all events",
        "executor_description": "This API is used to get a list of user activities for all events. This API is used when the user clicks on the My Activity page from the Profile menu. We need to pass the authorization token in API in the header. Authorization token will be generated when the user login to the system.",
        "executor_category": "MyActivity",
        "executor_category_group": "MyActivity",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/activity",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693287965126,
        "lastModifiedTime": 1693287965126,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "eventName": "Test event 24/12/2021",
                        "eventId": 9500,
                        "eventUrl": "test-event-24122021",
                        "silentActivitys": [],
                        "raffleActivitys": [],
                        "purchasedRaffleActivitys": [],
                        "causeAuctionActivitys": [],
                        "eventTicketsDto": [
                            {
                                "eventTicketId": 58086,
                                "paidAmount": 0,
                                "orderId": 65191,
                                "refundedAmount": 0,
                                "seatNumber": "",
                                "recurringEventId": null
                            },
                            {
                                "eventTicketId": 58090,
                                "paidAmount": 1.44,
                                "orderId": 65196,
                                "refundedAmount": 0,
                                "seatNumber": "",
                                "recurringEventId": null
                            },
                            {
                                "eventTicketId": 58123,
                                "paidAmount": 0,
                                "orderId": 65220,
                                "refundedAmount": 0,
                                "seatNumber": "",
                                "recurringEventId": null
                            },
                            {
                                "eventTicketId": 58124,
                                "paidAmount": 0,
                                "orderId": 65220,
                                "refundedAmount": 0,
                                "seatNumber": "",
                                "recurringEventId": null
                            },
                            {
                                "eventTicketId": 58125,
                                "paidAmount": 0,
                                "orderId": 65220,
                                "refundedAmount": 0,
                                "seatNumber": "",
                                "recurringEventId": null
                            },
                            {
                                "eventTicketId": 58126,
                                "paidAmount": 0,
                                "orderId": 65220,
                                "refundedAmount": 0,
                                "seatNumber": "",
                                "recurringEventId": null
                            },
                            {
                                "eventTicketId": 58127,
                                "paidAmount": 0,
                                "orderId": 65220,
                                "refundedAmount": 0,
                                "seatNumber": "",
                                "recurringEventId": null
                            }
                        ],
                        "currency": "$",
                        "basicEventInfo": {
                            "eventName": "Test event 24/12/2021",
                            "eventUrl": "test-event-24122021"
                        },
                        "availableRaffleTickets": 0,
                        "raffleEnabled": false,
                        "causeAuctionEnabled": false,
                        "silentAuctionEnabled": false,
                        "donationEnabled": false,
                        "currentEvent": true,
                        "textToGiveEnabled": false
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "User is not authorized to view the resource."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Event Not Found"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113586,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTicketPurchaseDetailByOrderId",
        "executor_version": "v1",
        "executor_display_name": "Get ticket purchase detail by order id",
        "executor_description": "This API is used to get ticketing purchaser data by order id. When the user clicks on the My Activity page from the profile menu, the user gets the list of event ticket details for a particular event like eventTicketId, orderId, paidAmount, etc. We need to pass the authorization token in API in the header. Authorization token will be generated when the user login to the system.",
        "executor_category": "MyActivity",
        "executor_category_group": "MyActivity",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/myticket/purchaserData/order/{orderId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "orderId",
                "value": "",
                "description": "It is the ticket purchase order id"
            }
        ],
        "queryParams": [
            {
                "key": "dataType",
                "value": "",
                "description": "It is the data type required to get ticket holder attribute data",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693288318344,
        "lastModifiedTime": 1693288318344,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "attributes": [
                        {
                            "name": "First Name",
                            "type": "text",
                            "value": "Attendee",
                            "defaultValue": null,
                            "mandatory": true,
                            "eventTicketTypeId": null
                        },
                        {
                            "name": "Last Name",
                            "type": "text",
                            "value": "s",
                            "defaultValue": null,
                            "mandatory": true,
                            "eventTicketTypeId": null
                        },
                        {
                            "name": "Email",
                            "type": "email",
                            "value": "meghna.c+attendee@brilworks.com",
                            "defaultValue": null,
                            "mandatory": true,
                            "eventTicketTypeId": null
                        }
                    ],
                    "questions": [],
                    "seatNumber": null,
                    "eventTicketingId": null,
                    "eventKey": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "User is not authorized to view the resource."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Order you are looking for is not found"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113595,
        "executor_type": "THIRDPARTY",
        "executor_name": "eventStaffDetails",
        "executor_version": "v1",
        "executor_display_name": "Event staff details",
        "executor_description": "This API returns the list of event staff details like firstName, lastName, country, country code, phone number, photo, state, and many more. This endpoint can be accessed by users with event admin access or greater. This API is used on the manage team page.",
        "executor_category": "ManageTeam",
        "executor_category_group": "ManageTeam",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/usermanagement/event/staffs",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693289447754,
        "lastModifiedTime": 1693289447754,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "allowAttendeeAccess": true,
                    "allowDirectMessages": false,
                    "allowToBookMeeting": false,
                    "email": "string",
                    "eventOrganizerCreator": true,
                    "firstName": "string",
                    "id": 0,
                    "lastName": "string",
                    "loggedInAtVEH": true,
                    "role": "string",
                    "ticketTypesForStaff": [
                        {
                            "staffOrder": true,
                            "ticketTypeId": 0,
                            "userId": 0
                        }
                    ],
                    "user": {
                        "address1": "string",
                        "address2": "string",
                        "cityOrProvidence": "string",
                        "country": "string",
                        "countryCode": "US",
                        "coverPhoto": "string",
                        "email": "string",
                        "fbUserId": "string",
                        "firstName": "string",
                        "googleUserId": "string",
                        "languageCode": "string",
                        "lastName": "string",
                        "linkedinUserId": "string",
                        "marketingOptIn": true,
                        "mostRecentEventId": 0,
                        "password": "string",
                        "passwordResetToken": "string",
                        "phoneNumber": 0,
                        "photo": "string",
                        "pushNotificationToken": "string",
                        "showExhibitorMenu": true,
                        "signUpDate": "2021-12-24T09:13:07.056Z",
                        "state": "string",
                        "userId": 0,
                        "zipcode": "string"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113598,
        "executor_type": "THIRDPARTY",
        "executor_name": "resendEmailToTheStaff",
        "executor_version": "v1",
        "executor_display_name": "Resend email to the staff",
        "executor_description": "This API is used to resend emails to staff for the event This API can be accessed by event admin and super admin. We need to pass the authentication key to authenticate the user, staffId pass as path param. This API is used on the manage team page.",
        "executor_category": "ManageTeam",
        "executor_category_group": "ManageTeam",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/usermanagement/resendmail/staff/{staffId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "staffId",
                "value": "",
                "description": "Staff id is unique number, Contains staff user id."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693289745263,
        "lastModifiedTime": 1693289745263,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Your invitation has been resent."
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113602,
        "executor_type": "THIRDPARTY",
        "executor_name": "changeEmailNotificationsSettingsForStaff",
        "executor_version": "v1",
        "executor_display_name": "Change Email Notifications Settings For Staff",
        "executor_description": "This API is used to change email notification settings and returns notification details and save notifications for the staff. This API can be accessed by event admin and super admin. We need to pass the authentication key to authenticate the user and,and email as path param and request body of NotificationDetailRequest. This API is used on the manage team page. This API returns data like buyItNow, ticketing, weeklySales, participantQuestions and many more.",
        "executor_category": "ManageTeam",
        "executor_category_group": "ManageTeam",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/usermanagement/notification/user/{email}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "email",
                "value": "",
                "description": "Email of the user. A valid email example is john@accelevents.com"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "notificationDetail": {
                    "buyItNowEnable": true,
                    "ticketingEnable": true,
                    "participantQuestions": true,
                    "weeklySalesReportEnable": true
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693291079990,
        "lastModifiedTime": 1693291079990,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "buyItNow": {
                        "enabled": false,
                        "moduleEnable": false,
                        "text": "string"
                    },
                    "participantQuestions": {
                        "enabled": false,
                        "moduleEnable": false,
                        "text": "string"
                    },
                    "ticketing": {
                        "enabled": false,
                        "moduleEnable": false,
                        "text": "string"
                    },
                    "weeklySales": {
                        "enabled": false,
                        "moduleEnable": false,
                        "text": "string"
                    }
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113600,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteStaff",
        "executor_version": "v1",
        "executor_display_name": "Delete Staff",
        "executor_description": "This API is used to delete event staff from the event by staff id. This API can be accessed by event admin and super admin. We need to pass the authentication key to authenticate the user, staffId pass as path param. This API is used on the manage team page.",
        "executor_category": "ManageTeam",
        "executor_category_group": "ManageTeam",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/usermanagement/staff/{staffId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "staffId",
                "value": "",
                "description": "Staff id is unique number, Contains staff user id."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693290865749,
        "lastModifiedTime": 1693290865749,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "successfully removed"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113596,
        "executor_type": "THIRDPARTY",
        "executor_name": "addEventStaff",
        "executor_version": "v1",
        "executor_display_name": "Add Event staff",
        "executor_description": "This API is used to add staff to the event. This API can be accessed by event admin and super admin. We need to pass the authentication key to authenticate the user and body param of staff. It contains staff details of the staff for the event. This API is used on the manage team page.",
        "executor_category": "ManageTeam",
        "executor_category_group": "ManageTeam",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/usermanagement/staff",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "email": "string",
                "firstName": "string",
                "lastName": "string",
                "id": 0,
                "role": "string",
                "allowToBookMeeting": true,
                "allowDirectMessages": true,
                "isLoggedInAtVEH": true,
                "isAllowAttendeeAccess": true,
                "ticketTypesForStaff": [
                    {
                        "userId": 0,
                        "ticketTypeId": 0,
                        "isStaffOrder": true
                    }
                ],
                "user": {
                    "userId": 0,
                    "password": "string",
                    "email": "string",
                    "firstName": "string",
                    "lastName": "string",
                    "phoneNumber": 0,
                    "address1": "string",
                    "address2": "string",
                    "zipcode": "string",
                    "state": "string",
                    "cityOrProvidence": "string",
                    "country": "string",
                    "passwordResetToken": "string",
                    "mostRecentEventId": 0,
                    "marketingOptIn": true,
                    "fbUserId": "string",
                    "googleUserId": "string",
                    "linkedinUserId": "string",
                    "photo": "string",
                    "coverPhoto": "string",
                    "showExhibitorMenu": true,
                    "languageCode": "string",
                    "pushNotificationToken": "string",
                    "": "string",
                    "signUpDate": "2023-08-29",
                    "countryCode": "US(1)"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693289556632,
        "lastModifiedTime": 1693289556632,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Staff added to event"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113597,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateEventStaff",
        "executor_version": "v1",
        "executor_display_name": "Update Event staff",
        "executor_description": "This API is used to update staff to the event. This API can be accessed by event admin and super admin. We need to pass the authentication key to authenticate the user, staffId, and body param of staff pass. It contains staff details of the staff for the event. this API is used on the manage team page. Users can use this API to update first name, last name, email, and many more.",
        "executor_category": "ManageTeam",
        "executor_category_group": "ManageTeam",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/usermanagement/staff/{staffId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "staffId",
                "value": "",
                "description": "Staff id is unique number, Contains staff user id."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "email": "string",
                "firstName": "string",
                "lastName": "string",
                "id": 0,
                "role": "string",
                "allowToBookMeeting": true,
                "allowDirectMessages": true,
                "isLoggedInAtVEH": true,
                "isAllowAttendeeAccess": true,
                "ticketTypesForStaff": [
                    {
                        "userId": 0,
                        "ticketTypeId": 0,
                        "isStaffOrder": true
                    }
                ],
                "user": {
                    "userId": 0,
                    "password": "string",
                    "email": "string",
                    "firstName": "string",
                    "lastName": "string",
                    "phoneNumber": 0,
                    "address1": "string",
                    "address2": "string",
                    "zipcode": "string",
                    "state": "string",
                    "cityOrProvidence": "string",
                    "country": "string",
                    "passwordResetToken": "string",
                    "mostRecentEventId": 0,
                    "marketingOptIn": true,
                    "fbUserId": "string",
                    "googleUserId": "string",
                    "linkedinUserId": "string",
                    "photo": "string",
                    "coverPhoto": "string",
                    "showExhibitorMenu": true,
                    "languageCode": "string",
                    "pushNotificationToken": "string",
                    "": "string",
                    "signUpDate": "2023-08-29",
                    "countryCode": "US(1)"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693289650389,
        "lastModifiedTime": 1693289650389,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Admin updated for event"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113601,
        "executor_type": "THIRDPARTY",
        "executor_name": "emailNotificationsSettingsForStaff",
        "executor_version": "v1",
        "executor_display_name": "Email Notifications Settings For Staff",
        "executor_description": "This API is used to return notifications setting for the staff of the event. This API can be accessed by event admin and super admin. We need to pass the authentication key to authenticate the user and email. This API is used on the manage team page. This API returns data like buyItNow, ticketing, weeklySales, participantQuestions.",
        "executor_category": "ManageTeam",
        "executor_category_group": "ManageTeam",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/usermanagement/notification/user/{email}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "email",
                "value": "",
                "description": "Email of the user. A valid email example is john@accelevents.com"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693290980060,
        "lastModifiedTime": 1693290980060,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "buyItNow": {
                        "enabled": false,
                        "moduleEnable": false,
                        "text": "string"
                    },
                    "participantQuestions": {
                        "enabled": false,
                        "moduleEnable": false,
                        "text": "string"
                    },
                    "ticketing": {
                        "enabled": false,
                        "moduleEnable": false,
                        "text": "string"
                    },
                    "weeklySales": {
                        "enabled": false,
                        "moduleEnable": false,
                        "text": "string"
                    }
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113622,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteSalesTaxDetails",
        "executor_version": "v1",
        "executor_display_name": "Delete sales tax details",
        "executor_description": "This API is used to delete sales tax details. To get this API we need to pass the authentication key to authenticate the user.",
        "executor_category": "PaymentProcessing",
        "executor_category_group": "PaymentProcessing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/salesTax",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693294882374,
        "lastModifiedTime": 1693294882374,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Sales tax details are deleted successfully"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Not Event Host"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113623,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateSalesTaxDetails",
        "executor_version": "v1",
        "executor_display_name": "Update sales tax details",
        "executor_description": "This API is used to update sales tax details and update data like salesTaxId, salesTaxName, salesTaxRate and many more. To get this API we need to pass the authentication key to authenticate the user.",
        "executor_category": "PaymentProcessing",
        "executor_category_group": "PaymentProcessing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/salesTax",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "country": "string",
                "salesTaxId": "string",
                "salesTaxName": "string",
                "ticketingTypeIds": [
                    0
                ],
                "absorbTax": true,
                "salesTaxRate": 0,
                "allTicketType": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693294967998,
        "lastModifiedTime": 1693294967998,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Sales tax details are updated successfully"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Not Event Host"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113626,
        "executor_type": "THIRDPARTY",
        "executor_name": "connectSquare",
        "executor_version": "v1",
        "executor_display_name": "Connect Square",
        "executor_description": "This API is used for connecting Square. To get this API we need to pass the authentication key to authenticate the user.",
        "executor_category": "PaymentProcessing",
        "executor_category_group": "PaymentProcessing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/settings/squareConnect",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693295317918,
        "lastModifiedTime": 1693295317918,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "redirecttostripe": "false"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Not Event Host"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113619,
        "executor_type": "THIRDPARTY",
        "executor_name": "getTotalSalesTax",
        "executor_version": "v1",
        "executor_display_name": "Get total sales tax",
        "executor_description": "This API is used to retrieve the total sales tax. It returns data double format. If no sales tax is generated it returns 0.0. This endpoint can be accessed by users with event admin access or greater.",
        "executor_category": "PaymentProcessing",
        "executor_category_group": "PaymentProcessing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/salesTax/totalSalesTax",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693294655007,
        "lastModifiedTime": 1693294655007,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": 0
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Not Event Host"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113618,
        "executor_type": "THIRDPARTY",
        "executor_name": "getHostCreditCardSettingsDetails",
        "executor_version": "v1",
        "executor_display_name": "Get host credit card settings details",
        "executor_description": "This API is used to get host credit card setting details. This API returns data like stripeConnected , stripeActivated , connectButtonEnabled , allowConnectingSquarePayments and many more. To get this API we need to pass the authentication key to authenticate the user. This API is used on the payment processing page.",
        "executor_category": "PaymentProcessing",
        "executor_category_group": "PaymentProcessing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/settings/creditCard",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693294587499,
        "lastModifiedTime": 1693294587499,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "creditCardEnabled": true,
                    "processingFeesToPurchaser": true,
                    "ccRequireForBidConfirm": false,
                    "taxId": null,
                    "stripeConnected": true,
                    "stripeActivated": false,
                    "connectButtonEnabled": false,
                    "allowConnectingSquarePayments": true,
                    "paymentGateway": "STRIPE",
                    "stripeAccountEmail": null,
                    "stripeAccountName": null
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Not Event Host"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113620,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSalesTaxDetails",
        "executor_version": "v1",
        "executor_display_name": "Get sales tax details",
        "executor_description": "This API is used to retrieve sales tax details. It returns data like country, salesTaxId, salesTaxName and many more. This endpoint can be accessed by users with event admin access or greater.",
        "executor_category": "PaymentProcessing",
        "executor_category_group": "PaymentProcessing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/salesTax",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693294730379,
        "lastModifiedTime": 1693294730379,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "country": null,
                    "salesTaxId": null,
                    "salesTaxName": null,
                    "absorbTax": false,
                    "salesTaxRate": null,
                    "allTickeType": null,
                    "ticketTypes": [],
                    "ticketingTypeIds": null
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Not Event Host"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113625,
        "executor_type": "THIRDPARTY",
        "executor_name": "connectStripe",
        "executor_version": "v1",
        "executor_display_name": "Connect Stripe",
        "executor_description": "This API is used for connecting Stripe. To get this API we need to pass the authentication key to authenticate the user.",
        "executor_category": "PaymentProcessing",
        "executor_category_group": "PaymentProcessing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/settings/stripeConnect",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693295238917,
        "lastModifiedTime": 1693295238917,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "stripeConnectUrl": "https://connect.stripe.com/oauth/authorize?response_type=code&scope=read_write&client_id=ca_JUzgFRs9UtpO9czEQc8ZEj1ieZsZBSwj&state=eyJhbGciOiJIUzUxMiJ9.eyJyZW1lbWJlciI6dHJ1ZSwic3ViIjoiYWF5dXNoaS5zQGJyaWx3b3Jrcy5jb20iLCJhdWRpZW5jZSI6IndlYiIsImNyZWF0ZWQiOjE2NDA2ODk1MDEyODcsImV4cGRhdGUiOjE2NDI4MzY5ODQ5MzR9.3yjECPN4NSudDVJsDBi8IS_T-1JQSBHti4RenoT36OCJQfRGJWDYM_-xnVLTHR5kx8onJq6wFx0BQ_yMl4ba3A",
                    "redirecttostripe": "true"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Not Event Host"
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Created"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113627,
        "executor_type": "THIRDPARTY",
        "executor_name": "disconnectSquare",
        "executor_version": "v1",
        "executor_display_name": "Disconnect Square",
        "executor_description": "This API is used to disconnect the Square account. To get this API we need to pass the authentication key to authenticate the user.",
        "executor_category": "PaymentProcessing",
        "executor_category_group": "PaymentProcessing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/settings/disconnect/square",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693295398903,
        "lastModifiedTime": 1693295398903,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Account Disconnected successfully"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Not Event Host"
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Created"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113621,
        "executor_type": "THIRDPARTY",
        "executor_name": "saveSalesTaxDetails",
        "executor_version": "v1",
        "executor_display_name": "Save sales tax details",
        "executor_description": "This API is used to save sales tax details like country, salesTaxName, salesTaxId and many more. To get this API we need to pass the authentication key to authenticate the user and body parameter of salesTaxDto.",
        "executor_category": "PaymentProcessing",
        "executor_category_group": "PaymentProcessing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/salesTax",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "country": "string",
                "salesTaxId": "string",
                "salesTaxName": "string",
                "ticketingTypeIds": [
                    0
                ],
                "absorbTax": true,
                "salesTaxRate": 0,
                "allTicketType": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693294812609,
        "lastModifiedTime": 1693294812609,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Sales tax details are saved successfully"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Not Event Host"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113628,
        "executor_type": "THIRDPARTY",
        "executor_name": "disconnectStripe",
        "executor_version": "v1",
        "executor_display_name": "Disconnect Stripe",
        "executor_description": "This API is used to disconnect the Stripe account. To get this API we need to pass the authentication key to authenticate the user.",
        "executor_category": "PaymentProcessing",
        "executor_category_group": "PaymentProcessing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/settings/disconnect/stripe",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693295462831,
        "lastModifiedTime": 1693295462831,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Account Disconnected successfully"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Not Event Host"
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Created"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113624,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateHostCreditCardSettings",
        "executor_version": "v1",
        "executor_display_name": "Update host credit card settings",
        "executor_description": "This API is used to update host credit card settings like creditCardEnabled , processingFeesToPurchaser, ccRequireForBidConfirm, and taxId. To get this API we need to pass the authentication key to authenticate the user and body parameter of HostCreditCardSettings which contains creditCardEnabled, processingFeesToPurchaser, ccRequireForBidConfirm, taxId.This API is used on the payment processing page.",
        "executor_category": "PaymentProcessing",
        "executor_category_group": "PaymentProcessing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/settings/creditCard",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "creditCardEnabled": false,
                "processingFeesToPurchaser": false,
                "ccRequireForBidConfirm": false,
                "taxId": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693295095403,
        "lastModifiedTime": 1693295095403,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Host credit card settings saved successfully"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Not Event Host"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113629,
        "executor_type": "THIRDPARTY",
        "executor_name": "createLounge",
        "executor_version": "v1",
        "executor_display_name": "Create Lounge",
        "executor_description": "This API is used to create a lounge.",
        "executor_category": "LoungeTabAPI",
        "executor_category_group": "LoungeTabAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/virtual/event/{eventUrl}/networking-lounge",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event Url is unique identifier for your event. e.g.: https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "id": "string",
                "eventId": "string",
                "name": "string",
                "description": "string",
                "createdBy": "string",
                "photos": "string",
                "profileImage": "string",
                "createAt": "string",
                "meetingObj": "string",
                "bannerImage": "string",
                "position": 0
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693295636033,
        "lastModifiedTime": 1693295636033,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "lounge Id"
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "A networking lounge with the same name already exists",
                    "errorCode": "4070005",
                    "developerMessage": "A networking lounge with the same name already exists"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113635,
        "executor_type": "THIRDPARTY",
        "executor_name": "getFeedTokenForLounge",
        "executor_version": "v1",
        "executor_display_name": "Get Feed Token for Lounge",
        "executor_description": "This API provides feed token for lounge feed component.",
        "executor_category": "LoungeTabAPI",
        "executor_category_group": "LoungeTabAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/feed/token/networking-lounge/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique lounge id of lounge"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693296416636,
        "lastModifiedTime": 1693296416636,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "feed token"
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "4060001",
                    "errorMessage": "Event Not Found",
                    "developerMessage": "No Event could be found"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "4040200",
                    "errorMessage": "Event Not Found",
                    "developerMessage": "No Event could be found"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113636,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllAttendeesWithConnectedNetworkingLoungById",
        "executor_version": "v1",
        "executor_display_name": "Get All Attendees With Connected Networking Lounge by ID",
        "executor_description": "This API provides a list of attendees who are connected in a particular networking lounge.",
        "executor_category": "LoungeTabAPI",
        "executor_category_group": "LoungeTabAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/virtual/event/{eventUrl}/networking-lounge/{id}/joinedAttendee",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Lounge Id of created lounge"
            }
        ],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "fetch data based on given page value",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "return data according to size value if data is more than size",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693296541812,
        "lastModifiedTime": 1693296541812,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 108,
                    "recordsFiltered": 1,
                    "data": [
                        {
                            "id": "id",
                            "userId": 1234,
                            "firstName": "first",
                            "lastName": "last",
                            "pronouns": "",
                            "photo": "69b49924-3ed2-411a-9a61-3d2cea5d226a",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": "REQUESTED",
                            "rejectedBy": null,
                            "eventId": 9491,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "exposeProfileToOtherUser": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "user": 14
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "40600013",
                    "errorMessage": "Cant create url",
                    "developerMessage": "Cant create url"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "4040200",
                    "errorMessage": "Event Not Found",
                    "developerMessage": "No Event could be found"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113638,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteImageOfNetworkingLounge",
        "executor_version": "v1",
        "executor_display_name": "Delete Image of Networking Lounge",
        "executor_description": "This API uses the lounge ID to delete the image of the networking lounge.",
        "executor_category": "LoungeTabAPI",
        "executor_category_group": "LoungeTabAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/virtual/event/{eventUrl}/networking-lounge/{id}/photo/{photoUrl}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique lounge id"
            },
            {
                "key": "photoUrl",
                "value": "",
                "description": "unique photo URL of lounge images that image will be deleted"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693296821957,
        "lastModifiedTime": 1693296821957,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Networking lounge photo deleted."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "4070001",
                    "errorMessage": "Networking Lounge Not Found.",
                    "developerMessage": "Networking Lounge Not Found."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "4040200",
                    "errorMessage": "Event Not Found",
                    "developerMessage": "No Event could be found"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113631,
        "executor_type": "THIRDPARTY",
        "executor_name": "joinNetworkingLounge",
        "executor_version": "v1",
        "executor_display_name": "Join Networking Lounge",
        "executor_description": "This API checks the ticketing type and all ticketing related to this for joining the networking lounge.",
        "executor_category": "LoungeTabAPI",
        "executor_category_group": "LoungeTabAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/virtual/event/{eventUrl}/networking-lounge/{id}/join",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "This is For Lounge session id And it is unique id for all networking lounge session"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693295956593,
        "lastModifiedTime": 1693295956593,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Networking lounge joined."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "4070001",
                    "errorMessage": "Networking Lounge Not Found.",
                    "developerMessage": "Networking Lounge Not Found."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "4040200",
                    "errorMessage": "Event Not Found",
                    "developerMessage": "No Event could be found"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113632,
        "executor_type": "THIRDPARTY",
        "executor_name": "getNetworkingLoungesWithPaginationAndMembersCount",
        "executor_version": "v1",
        "executor_display_name": "Get Networking Lounges with pagination and members count",
        "executor_description": "This API provides you with a list of all lounges including pagination and members count for the current event.",
        "executor_category": "LoungeTabAPI",
        "executor_category_group": "LoungeTabAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/virtual/event/{eventUrl}/networking-lounge/getNetworkingLoungesWithPagination",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "searchString",
                "value": "",
                "description": "Get filter contact records according to search value passing in request",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Size will returns number of records when call api default will returns 10 records",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693296153049,
        "lastModifiedTime": 1693296153049,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 2,
                    "recordsFiltered": 2,
                    "data": [
                        {
                            "networkingLounge": {
                                "id": "nl_1911",
                                "eventId": "8067",
                                "name": "Second lounge",
                                "description": "test 2",
                                "createdBy": "8533",
                                "photos": "",
                                "profileImage": "",
                                "createAt": "2021/12/20 15:20",
                                "meetingObj": null,
                                "bannerImage": "",
                                "position": 2000,
                                "enableVirtualization": false
                            },
                            "userDetailsDtos": [],
                            "memberCount": 0,
                            "userJoined": false
                        },
                        {
                            "networkingLounge": {
                                "id": "nl_1910",
                                "eventId": "8067",
                                "name": "First Lounge",
                                "description": "test",
                                "createdBy": "8533",
                                "photos": "",
                                "profileImage": "",
                                "createAt": "2021/12/20 15:20",
                                "meetingObj": null,
                                "bannerImage": "",
                                "position": 1000,
                                "enableVirtualization": false
                            },
                            "userDetailsDtos": [],
                            "memberCount": 0,
                            "userJoined": false
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "40600013",
                    "errorMessage": "Cant create url",
                    "developerMessage": "Cant create url"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "4040200",
                    "errorMessage": "Event Not Found",
                    "developerMessage": "No Event could be found"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113641,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateNetworkingLoungeForVideoUrl",
        "executor_version": "v1",
        "executor_display_name": "Update Networking Lounge for Video URL",
        "executor_description": "This API provides to update networking lounge for",
        "executor_category": "LoungeTabAPI",
        "executor_category_group": "LoungeTabAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/virtual/event/{eventUrl}/networking-lounge/{id}/networkingLoungeVideoUpload",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique lounge id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "eventUrl": "string",
                "uploadId": "string",
                "videoDuration": "string",
                "playBackRestrictionToken": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693297167947,
        "lastModifiedTime": 1693297167947,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Success"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "40600013",
                    "errorMessage": "Cant create url",
                    "developerMessage": "Cant create url"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "40600013",
                    "errorMessage": "Cant create url",
                    "developerMessage": "Cant create url"
                }
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Mux duration not available.",
                    "errorCode": "4044009",
                    "developerMessage": "Mux duration not available."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113633,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllDetailsofNetworkingLoungeById",
        "executor_version": "v1",
        "executor_display_name": "Get All Details of Networking Lounge by ID",
        "executor_description": "This API uses the Lounge ID to get all details of the lounge.",
        "executor_category": "LoungeTabAPI",
        "executor_category_group": "LoungeTabAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/virtual/event/{eventUrl}/networking-lounge/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "This is For Lounge session id And it is unique id for all networking lounge session"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693296245853,
        "lastModifiedTime": 1693296245853,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "nl_1911",
                    "eventId": "8067",
                    "name": "Second lounge",
                    "description": "test 2",
                    "createdBy": "8533",
                    "photos": "",
                    "profileImage": "",
                    "createAt": null,
                    "meetingObj": "{\"MeetingId\":\"1cca83f8-70f5-4e6c-aaf8-2f3a488f0706\",\"MediaPlacement\":{\"AudioHostUrl\":\"6564318b5c4100d6265c9662be1b6464.k.m1.ue1.app.chime.aws:3478\",\"AudioFallbackUrl\":\"wss://haxrp.m1.ue1.app.chime.aws:443/calls/1cca83f8-70f5-4e6c-aaf8-2f3a488f0706\",\"ScreenDataUrl\":\"wss://bitpw.m1.ue1.app.chime.aws:443/v2/screen/1cca83f8-70f5-4e6c-aaf8-2f3a488f0706\",\"ScreenSharingUrl\":\"wss://bitpw.m1.ue1.app.chime.aws:443/v2/screen/1cca83f8-70f5-4e6c-aaf8-2f3a488f0706\",\"ScreenViewingUrl\":\"wss://bitpw.m1.ue1.app.chime.aws:443/ws/connect?passcode=null&viewer_uuid=null&X-BitHub-Call-Id=1cca83f8-70f5-4e6c-aaf8-2f3a488f0706\",\"SignalingUrl\":\"wss://signal.m1.ue1.app.chime.aws/control/1cca83f8-70f5-4e6c-aaf8-2f3a488f0706\",\"TurnControlUrl\":\"https://ccp.cp.ue1.app.chime.aws/v2/turn_sessions\"},\"MediaRegion\":\"us-east-1\"}",
                    "bannerImage": "",
                    "position": 2000
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "4070001",
                    "errorMessage": "Networking Lounge Not Found.",
                    "developerMessage": "Networking Lounge Not Found."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "4040200",
                    "errorMessage": "Event Not Found",
                    "developerMessage": "No Event could be found"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113634,
        "executor_type": "THIRDPARTY",
        "executor_name": "joinLoungeMeeting",
        "executor_version": "v1",
        "executor_display_name": "Join Lounge Meeting",
        "executor_description": "This API is useful for joining lounge meetings.",
        "executor_category": "LoungeTabAPI",
        "executor_category_group": "LoungeTabAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/virtual/event/{eventUrl}/networking-lounge/{id}/meeting",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique lounge id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693296342832,
        "lastModifiedTime": 1693296342832,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "meeting": "{\"MeetingId\":\"af0d5552-b6ad-4f87-b23c-b0ee3cf70706\",\"MediaPlacement\":{\"AudioHostUrl\":\"f2b8ffba2e9486c61e618013af86d659.k.m2.ue1.app.chime.aws:3478\",\"AudioFallbackUrl\":\"wss://haxrp.m2.ue1.app.chime.aws:443/calls/af0d5552-b6ad-4f87-b23c-b0ee3cf70706\",\"ScreenDataUrl\":\"wss://bitpw.m2.ue1.app.chime.aws:443/v2/screen/af0d5552-b6ad-4f87-b23c-b0ee3cf70706\",\"ScreenSharingUrl\":\"wss://bitpw.m2.ue1.app.chime.aws:443/v2/screen/af0d5552-b6ad-4f87-b23c-b0ee3cf70706\",\"ScreenViewingUrl\":\"wss://bitpw.m2.ue1.app.chime.aws:443/ws/connect?passcode=null&viewer_uuid=null&X-BitHub-Call-Id=af0d5552-b6ad-4f87-b23c-b0ee3cf70706\",\"SignalingUrl\":\"wss://signal.m2.ue1.app.chime.aws/control/af0d5552-b6ad-4f87-b23c-b0ee3cf70706\",\"TurnControlUrl\":\"https://ccp.cp.ue1.app.chime.aws/v2/turn_sessions\"},\"MediaRegion\":\"us-east-1\"}",
                    "attendee": "{\"ExternalUserId\":\"Milan Dobariya_8533\",\"AttendeeId\":\"4a839913-2880-3893-2820-cf1e59aeb9ff\",\"JoinToken\":\"NGE4Mzk5MTMtMjg4MC0zODkzLTI4MjAtY2YxZTU5YWViOWZmOmNkZWUyMGM4LTY4ODMtNGQ1OC04MzkzLTk2NDFlMjZjYzk3ZQ\"}",
                    "eventAdmins": [
                        8533
                    ],
                    "title": "Second lounge"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "4060001",
                    "errorMessage": "Event Not Found",
                    "developerMessage": "No Event could be found"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "4040200",
                    "errorMessage": "Event Not Found",
                    "developerMessage": "No Event could be found"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113637,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllImagesInNetworkingLounge",
        "executor_version": "v1",
        "executor_display_name": "Get All Images in Networking Lounge",
        "executor_description": "This API uses the lounge ID to get all lounge images.",
        "executor_category": "LoungeTabAPI",
        "executor_category_group": "LoungeTabAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/virtual/event/{eventUrl}/networking-lounge/{id}/allNetworkingLoungeImage",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "This is For lounge id and it is unique id for all networking lounge."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693296682980,
        "lastModifiedTime": 1693296682980,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 3,
                    "recordsFiltered": 1,
                    "data": [
                        {
                            "key": "07876de0-f431-4741-878f-1e52f917cd27",
                            "value": "7559"
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "4070001",
                    "errorMessage": "Networking Lounge Not Found.",
                    "developerMessage": "Networking Lounge Not Found."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "4040200",
                    "errorMessage": "Event Not Found",
                    "developerMessage": "No Event could be found"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113630,
        "executor_type": "THIRDPARTY",
        "executor_name": "uploadAllTypesOfLoungeImages",
        "executor_version": "v1",
        "executor_display_name": "Upload All Types of Lounge Images",
        "executor_description": "This API is used to upload images of the lounge. It has request parameters to upload images of the banner image, profile image and if the request parameter is not passed then the image is considered as a lounge image.",
        "executor_category": "LoungeTabAPI",
        "executor_category_group": "LoungeTabAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/event/upload/networkingLoungeImage/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "This is for lounge id and it is unique id for all networking lounge"
            }
        ],
        "queryParams": [
            {
                "key": "isBannerImage",
                "value": "",
                "description": "This flag is used when user upload lounge banner image.",
                "req": false
            },
            {
                "key": "isProfileImage",
                "value": "",
                "description": "This flag is used when use upload profile image",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "fileName": "string",
                "secureUrl": "string",
                "originalImgUrl": "string",
                "croppedImgUrl": "string",
                "croppedImgName": "string",
                "height": 0,
                "width": 0,
                "x": 0,
                "y": 0,
                "faviconImage": true
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693295804211,
        "lastModifiedTime": 1693295804211,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "fileName": "Sony-A6000-Sample-Images-23-1024x1536",
                    "secureUrl": "https://res.cloudinary.com/devaccel/image/upload/v1640924203/e5a4nlf4m7brl12d4ofd.jpg",
                    "originalImgUrl": "4407788f-38f9-4ec4-8bf0-d960bc4ecf96_original",
                    "croppedImgUrl": "4407788f-38f9-4ec4-8bf0-d960bc4ecf96",
                    "croppedImgName": null,
                    "height": 1024,
                    "width": 1024,
                    "x": 0,
                    "y": 0,
                    "faviconImage": false
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "File not found or unreadable: securUrl",
                    "errorCode": "4060001",
                    "developerMessage": "File not found or unreadable: securUrl"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113640,
        "executor_type": "THIRDPARTY",
        "executor_name": "generateNetworkingLoungeVideoUrl",
        "executor_version": "v1",
        "executor_display_name": "Generate Networking Lounge Video URL",
        "executor_description": "This API is used to generate networking lounge video URLs before uploading a video.",
        "executor_category": "LoungeTabAPI",
        "executor_category_group": "LoungeTabAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/virtual/event/{eventUrl}/networking-lounge/generate/networkingLoungeVideoUrl",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693297035205,
        "lastModifiedTime": 1693297035205,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "playBackRestrictionToken": "eyJraWQiOiJNSEJvMXhaR09PUGlHUTJ4Y3AwMjFOOXNVVnkzcTVURFBnNUN3Sk1McTAyQlUiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJqWEhjWHJ5UkNiRFJCUEZkdjhVd2E0NzAyZXY3ZVdYV1owMUhrS1RyYzAxQ2V3IiwiYXVkIjoidiIsInBsYXliYWNrX3Jlc3RyaWN0aW9uX2lkIjoiNmtPdFNjWXFPMDJhTG5jZktySXo1Ylp1VTAxd3N4Qlg5RDNmdmU2enBYSUdjIiwiZXhwIjoxODYxNDE4Nzg5fQ.YevPKKCaKNCZ0Lmp3Z4zDbIH-VF9wQU1-YLXvv1Vpsund4aWGxcUY4JoNVVhj1SI7p3NWYZm2ke7sgEjKcDcAIqvFRekojjHiaAsIRTeBCyvUDRO_alChMi6lTOFZwQKFNb8Y5U4897yU72bgXdmZezd4FrFb3RhQjJjZ6z3sNlp3Og2Mad8PAbmwVeA-4zT5ioEkVWTogt00SI9oQ636_4qFCkbvWLYwuMxRIEh4ny-K9EwmXxyWVjzInqpGwyIDt5cDIxKML5Ei8_LKAHgfRr0fQf97x-EJgbZKdoonpk5n66S6WIj21_mSxkP1c_TAK-vSBZzfhZfGzoSDhMyIQ",
                        "thumbnailRestrictionToken": "eyJraWQiOiJNSEJvMXhaR09PUGlHUTJ4Y3AwMjFOOXNVVnkzcTVURFBnNUN3Sk1McTAyQlUiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJqWEhjWHJ5UkNiRFJCUEZkdjhVd2E0NzAyZXY3ZVdYV1owMUhrS1RyYzAxQ2V3IiwiYXVkIjoidCIsInBsYXliYWNrX3Jlc3RyaWN0aW9uX2lkIjoiNmtPdFNjWXFPMDJhTG5jZktySXo1Ylp1VTAxd3N4Qlg5RDNmdmU2enBYSUdjIiwiZXhwIjoxODYxNDE4Nzg5fQ.tovcDNGAemp9OuYqh4D9_UX05e3yo4cRw0Poc-UcVcL-5ca7OgpEHg3QYAHDzCDIJCINhl5JiS8mVlbKB2hE6MlgYHPywJnfW_sEuBZWO2TT_l8EC6t5gtO3U1HiAPozECRcES6qRsZtmA6HAM8WVznYRKuTbp8JVjDejrDJudYgjn7Ji2MUkx6SYG_AmlQlxtlZnbQXCl_aQGCLLR8S7g3zlOVRVUiUn0IEgVr_w5gnxAB1baCF_BZhKolM7eLgiGc6jyyubZxcbSq0yjBMBxa5uyo_qYm4Y3-GgWUgamjBGwhqtcI1RiRySGkUMUZzADFKj8tk5D88DtyXbfAOBQ",
                        "id": 3969,
                        "createdAt": 1640666789000,
                        "duration": 30.033333,
                        "playBackId": "jXHcXryRCbDRBPFdv8Uwa4702ev7eWXWZ01HkKTrc01Cew",
                        "assetId": "h5wisH01pNbrX02a5JAg9AVeHFq5WyPneJ9pWTZ0100fbc4",
                        "defaultPlayback": false,
                        "fileName": "NetworkingLoungeVideo.mp4",
                        "createdBy": 7559,
                        "signed": null
                    }
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "40600013",
                    "errorMessage": "Cant create url",
                    "developerMessage": "Cant create url"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "40600013",
                    "errorMessage": "Cant create url",
                    "developerMessage": "Cant create url"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113639,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllLiveStreamAssetForNetworkingLounge",
        "executor_version": "v1",
        "executor_display_name": "Get All Live Stream Asset for Networking Lounge",
        "executor_description": "This API uses lounge id to get all live stream assets of networking lounge.",
        "executor_category": "LoungeTabAPI",
        "executor_category_group": "LoungeTabAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/virtual/event/{eventUrl}/networking-lounge/{id}/allNetworkingLoungeVideo",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique lounge id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693296945054,
        "lastModifiedTime": 1693296945054,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "playBackRestrictionToken": "eyJraWQiOiJNSEJvMXhaR09PUGlHUTJ4Y3AwMjFOOXNVVnkzcTVURFBnNUN3Sk1McTAyQlUiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJqWEhjWHJ5UkNiRFJCUEZkdjhVd2E0NzAyZXY3ZVdYV1owMUhrS1RyYzAxQ2V3IiwiYXVkIjoidiIsInBsYXliYWNrX3Jlc3RyaWN0aW9uX2lkIjoiNmtPdFNjWXFPMDJhTG5jZktySXo1Ylp1VTAxd3N4Qlg5RDNmdmU2enBYSUdjIiwiZXhwIjoxODYxNDE4Nzg5fQ.YevPKKCaKNCZ0Lmp3Z4zDbIH-VF9wQU1-YLXvv1Vpsund4aWGxcUY4JoNVVhj1SI7p3NWYZm2ke7sgEjKcDcAIqvFRekojjHiaAsIRTeBCyvUDRO_alChMi6lTOFZwQKFNb8Y5U4897yU72bgXdmZezd4FrFb3RhQjJjZ6z3sNlp3Og2Mad8PAbmwVeA-4zT5ioEkVWTogt00SI9oQ636_4qFCkbvWLYwuMxRIEh4ny-K9EwmXxyWVjzInqpGwyIDt5cDIxKML5Ei8_LKAHgfRr0fQf97x-EJgbZKdoonpk5n66S6WIj21_mSxkP1c_TAK-vSBZzfhZfGzoSDhMyIQ",
                        "thumbnailRestrictionToken": "eyJraWQiOiJNSEJvMXhaR09PUGlHUTJ4Y3AwMjFOOXNVVnkzcTVURFBnNUN3Sk1McTAyQlUiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJqWEhjWHJ5UkNiRFJCUEZkdjhVd2E0NzAyZXY3ZVdYV1owMUhrS1RyYzAxQ2V3IiwiYXVkIjoidCIsInBsYXliYWNrX3Jlc3RyaWN0aW9uX2lkIjoiNmtPdFNjWXFPMDJhTG5jZktySXo1Ylp1VTAxd3N4Qlg5RDNmdmU2enBYSUdjIiwiZXhwIjoxODYxNDE4Nzg5fQ.tovcDNGAemp9OuYqh4D9_UX05e3yo4cRw0Poc-UcVcL-5ca7OgpEHg3QYAHDzCDIJCINhl5JiS8mVlbKB2hE6MlgYHPywJnfW_sEuBZWO2TT_l8EC6t5gtO3U1HiAPozECRcES6qRsZtmA6HAM8WVznYRKuTbp8JVjDejrDJudYgjn7Ji2MUkx6SYG_AmlQlxtlZnbQXCl_aQGCLLR8S7g3zlOVRVUiUn0IEgVr_w5gnxAB1baCF_BZhKolM7eLgiGc6jyyubZxcbSq0yjBMBxa5uyo_qYm4Y3-GgWUgamjBGwhqtcI1RiRySGkUMUZzADFKj8tk5D88DtyXbfAOBQ",
                        "id": 3969,
                        "createdAt": 1640666789000,
                        "duration": 30.033333,
                        "playBackId": "jXHcXryRCbDRBPFdv8Uwa4702ev7eWXWZ01HkKTrc01Cew",
                        "assetId": "h5wisH01pNbrX02a5JAg9AVeHFq5WyPneJ9pWTZ0100fbc4",
                        "defaultPlayback": false,
                        "fileName": "NetworkingLoungeVideo.mp4",
                        "createdBy": 7559,
                        "signed": null
                    }
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "4070001",
                    "errorMessage": "Networking Lounge Not Found.",
                    "developerMessage": "Networking Lounge Not Found."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "40600013",
                    "errorMessage": "Cant create url",
                    "developerMessage": "Cant create url"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113643,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateNetworkingLoungePosition",
        "executor_version": "v1",
        "executor_display_name": "Update Networking Lounge Position",
        "executor_description": "This API is used to delete networking lounge video using unique playback id.",
        "executor_category": "LoungeTabAPI",
        "executor_category_group": "LoungeTabAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/virtual/event/{eventUrl}/networking-lounge/{id}/topNetworkingLounge/{topLoungeId}/topBottomNetworkingLounge/{topBottomLoungeId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique lounge id of changed position using drag & drop"
            },
            {
                "key": "topLoungeId",
                "value": "",
                "description": "The position we have to put lounge, the top lounge id is nearest upper index of lounge for updated lounge position."
            },
            {
                "key": "topBottomLoungeId",
                "value": "",
                "description": "The position we have to put lounge, the top lounge id is nearest lower index of lounge for updated lounge position."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693297525092,
        "lastModifiedTime": 1693297525092,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Success"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Networking Lounge Not Found.",
                    "errorCode": "4070001",
                    "developerMessage": "Networking Lounge Not Found."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113642,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteNetworkingLoungeVideo",
        "executor_version": "v1",
        "executor_display_name": "Delete Networking Lounge Video",
        "executor_description": "This API is used to delete networking lounge videos using unique playback IDs.",
        "executor_category": "LoungeTabAPI",
        "executor_category_group": "LoungeTabAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/virtual/event/{eventUrl}/networking-lounge/video/{playbackId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "playbackId",
                "value": "",
                "description": "it is unique id of mux assets details for each records"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693297327471,
        "lastModifiedTime": 1693297327471,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Networking lounge video deleted."
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "You Can Delete Only Own Networking Lounge Video.",
                    "errorCode": "4070004",
                    "developerMessage": "You Can Delete Only Own Networking Lounge Video."
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorCode": "40600013",
                    "errorMessage": "Cant create url",
                    "developerMessage": "Cant create url"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113431,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadQuestionAnswerCsvForExhibitor",
        "executor_version": "v1",
        "executor_display_name": "Download Question Answer CSV for Exhibitor",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. it will return the exhibitor's question and answer data. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "ExhibitorAnalytics",
        "executor_category_group": "ExhibitorAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/exhibitor/{exhibitorId}/download/questionAnswers/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "exhibitorId",
                "value": "",
                "description": "Unique exhibitor Id of event for getting exhibitor details"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693207832814,
        "lastModifiedTime": 1693207832814,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "\"#\",\"Question\",\"Asker Name\",\"Answer(s)\",\"AnswerType\",\"Status\"\n\"1\",\"dlk;df\n\",\"aalok mistry\",,,\"OPEN\"\n\"2\",\"dclkjdlk\",\"aalok mistry\",,,\"OPEN\"\n\"3\",\"test\n\n\",\"Tammy N\",,,\"OPEN\"\n\"4\",\"send as private\",\"Heta Admin Shah\",,,\"OPEN\"\n"
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found."
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113432,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadExhibitorAnalyticsCsv",
        "executor_version": "v1",
        "executor_display_name": "Download Exhibitor Analytics CSV",
        "executor_description": "This API will download CSV file for individual Exhibitor Analytics.  The CSV will include details of attendees who visited and interacted with the exhibitor. Column Headers will be First Name, Last Name, Email, Phone Number, Company, Title, Number of times booth visited, etc.",
        "executor_category": "ExhibitorAnalytics",
        "executor_category_group": "ExhibitorAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/exhibitor/{id}/download/userExhibitorAnalytics/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique exhibitor Id of event for getting exhibitor details"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693208003394,
        "lastModifiedTime": 1693208003394,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    "First Name",
                    "Last Name",
                    "Email",
                    "Phone Number",
                    "Company",
                    "Title",
                    "Number of times booth was visited",
                    "Comma separated list of documents download",
                    "Staff",
                    "Total time in Booth",
                    "Video Played",
                    "Chat",
                    "Sanket",
                    "mehta",
                    "",
                    "",
                    "Reliance Industries Limited",
                    "Title",
                    "1",
                    "No",
                    "0",
                    "No",
                    "No",
                    "First Name",
                    "Lastname",
                    "fnln@yopmail.com",
                    "0",
                    "",
                    "",
                    "1",
                    "No",
                    "0",
                    "Yes",
                    "Yes",
                    "Expo",
                    "vdsnbfk",
                    "expolead@yopmail.com",
                    "",
                    "",
                    "",
                    "0",
                    "",
                    "No",
                    "NA",
                    "NA",
                    "NA"
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found."
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113425,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadExhibitorPollCsv",
        "executor_version": "v1",
        "executor_display_name": "Download Exhibitor Poll CSV",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. This API is used to download exhibitor poll CSV detail like questions, answer, question types, status, etc. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "ExhibitorAnalytics",
        "executor_category_group": "ExhibitorAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/exhibitor/{id}/download/poll/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo."
            },
            {
                "key": "id",
                "value": "",
                "description": "This field contains exhibitor id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693206677712,
        "lastModifiedTime": 1693206677712,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "\"#\",\"Question\",\"Question Type\",\"Choices\",\"Status\",\"Answer(s)\",\"Answer By\"\n\"1\",\"clka\",\"SINGLE CHOICE\",\"csd,ef\",\"PUBLISH\",\"\",\"\"\n"
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113434,
        "executor_type": "THIRDPARTY",
        "executor_name": "getExpoExhibitorVisitorData",
        "executor_version": "v1",
        "executor_display_name": "Get Expo Exhibitor Visitor Data",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. It will return the expo visitor's data like first name, last name, when expo visited, document link, and document name information. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "ExhibitorAnalytics",
        "executor_category_group": "ExhibitorAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/exhibitor/{id}/visitor",
        "dataroot": null,
        "pathParams": [
            {
                "key": "id",
                "value": "",
                "description": "Unique exhibitor Id of event for getting exhibitor details"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693208248698,
        "lastModifiedTime": 1693208248698,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "firstName": "string",
                        "lastName": "string",
                        "visited": "string",
                        "documentName": "string",
                        "documentLink": "string"
                    }
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found."
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113439,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadTheExhibitorsLeadCsv",
        "executor_version": "v1",
        "executor_display_name": "Download The Exhibitor's Lead CSV",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. This API will return the exhibitor's Lead data like first name, last name, email, lead has download the document, play a video, visit the link, etc. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "ExhibitorAnalytics",
        "executor_category_group": "ExhibitorAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/exhibitor/download/event/lead/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Unique Event URL of event for getting event details"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693208728405,
        "lastModifiedTime": 1693208728405,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "\"ITC Hotels \"\n\"First Name\",\"Last Name\",\"Email\",\"Event Ticket Id\",\"Note\",\"Rating\",\"Created On\",\"Role\",\"Owner\",\"Staff\",\"Manually\",\"Visit\",\"CTA Button\",\"Document\",\"Total time in Booth\",\"Link Clicked\",\"Game Type\",\"Video Played\",\"Chat\",\"Document Downloaded\",\"Number of times booth was visited\"\n\"Ekta\",\"Kabra\",\"\",\"111316\",\"VISIT\",\"Unrated\",\"2021/11/22 21:26\",\"Attendee\",\"Unassigned\",\"Yes\",\"No\",\"Yes\",\"No\",\"No\",\"\",\"\",\"\",\"\",\"\",,\"1\"\n\"sweety\",\"jain\",\"sweety.j@brillworks.com\",\"111326\",\"VISIT\",\"Unrated\",\"2021/11/22 18:32\",\"Attendee\",\"Unassigned\",\"No\",\"No\",\"Yes\",\"No\",\"No\",\"\",\"\",\"\",\"\",\"\",,\"1\"\n\"Heta\",\"Admin Shah\",\"heta.s@brilworks.com\",\"111324\",\"VISIT\",\"Unrated\",\"2021/11/28 15:51\",\"Attendee\",\"Unassigned\",\"Yes\",\"No\",\"Yes\",\"Yes\",\"No\",\"\",\"\",\"\",\"\",\"\",,\"1\"\n\n\n\"New expo \"\n\"First Name\",\"Last Name\",\"Email\",\"Event Ticket Id\",\"Note\",\"Rating\",\"Created On\",\"Role\",\"Owner\",\"Staff\",\"Manually\",\"Visit\",\"CTA Button\",\"Document\",\"Total time in Booth\",\"Link Clicked\",\"Game Type\",\"Video Played\",\"Chat\",\"Document Downloaded\",\"Number of times booth was visited\""
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found."
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113433,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllExhibitorAnalyticsData",
        "executor_version": "v1",
        "executor_display_name": "Get All Exhibitor Analytics Data",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. This API will return all exhibitor data like exhibitor name, chat message count, click count average lead rating, document downloaded, meeting booked etc. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "ExhibitorAnalytics",
        "executor_category_group": "ExhibitorAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/exhibitor/analytics",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "searchString",
                "value": "",
                "description": "String for searching to get specific result data",
                "req": false
            },
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Size will returns number of records, by default it will returns 10 records.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693208151242,
        "lastModifiedTime": 1693208151242,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 0,
                    "recordsFiltered": 0,
                    "numberOfExhibitors": 0,
                    "totalLeadsCollected": 0,
                    "averageLeadsPerExhibitor": 0,
                    "totalMeetingsBooked": 0,
                    "exhibitors": [
                        {
                            "id": 0,
                            "clickCount": 0,
                            "viewsByUniqueUsersCount": 0,
                            "documentDownload": 0,
                            "uniqueDocumentDownload": 0,
                            "meetingBooked": null,
                            "averageLeadRating": null,
                            "productViews": null,
                            "chatMessagesCount": null,
                            "leads": 0,
                            "exhibitorName": "string",
                            "pageViews": 0
                        }
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found."
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113438,
        "executor_type": "THIRDPARTY",
        "executor_name": "getExpoExhibitorAnalyticsDetails",
        "executor_version": "v1",
        "executor_display_name": "Get Expo Exhibitor Analytics Details",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. This API will return the count of attendees who is viewing the exhibitor's booth. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "ExhibitorAnalytics",
        "executor_category_group": "ExhibitorAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/expo/analytics",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693208613293,
        "lastModifiedTime": 1693208613293,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "numberOfExhibitorBoothView": 99
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found."
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113426,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAttendeeExhibitorAnalytics",
        "executor_version": "v1",
        "executor_display_name": "Get attendee exhibitor analytics",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. This API will return the attendee exhibitor data like average lead rating, product view, meeting booked, how many documents were downloaded, exhibitor booth view, etc. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "ExhibitorAnalytics",
        "executor_category_group": "ExhibitorAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/expo/user/{userId}/analytics",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "userId",
                "value": "",
                "description": "Unique user id for getting user details"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693206776728,
        "lastModifiedTime": 1693206776728,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "averageLeadRating": "string",
                    "averageViewPerExhibitor": 0,
                    "documentsDownloaded": 0,
                    "exhibitorBoothViewed": 0,
                    "exhibitorsEngagedByChat": 0,
                    "meetingBooked": 0,
                    "productViews": 0
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113435,
        "executor_type": "THIRDPARTY",
        "executor_name": "getExpoExhibitorDocumentDownloadedData",
        "executor_version": "v1",
        "executor_display_name": "Get Expo Exhibitor Document Downloaded Data",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. It will return the expo document downloaded data like first name, last name, when expo visited, document link, and document name information. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "ExhibitorAnalytics",
        "executor_category_group": "ExhibitorAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/exhibitor/{id}/documentDownloaded",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique exhibitor Id of event for getting exhibitor details"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693208354790,
        "lastModifiedTime": 1693208354790,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "firstName": "string",
                        "lastName": "string",
                        "visited": "string",
                        "documentName": "string",
                        "documentLink": "string"
                    }
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found."
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113436,
        "executor_type": "THIRDPARTY",
        "executor_name": "getExhibitorAnalyticsByExhibitorId",
        "executor_version": "v1",
        "executor_display_name": "Get Exhibitor Analytics By Exhibitor Id",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. This API will return all exhibitor data like exhibitor name, chat message count, click count average lead rating, document downloaded, meeting booked, etc. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "ExhibitorAnalytics",
        "executor_category_group": "ExhibitorAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/expo/{exhibitorId}/analytics",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "exhibitorId",
                "value": "",
                "description": "Unique exhibitor Id of event for getting exhibitor details"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693208533444,
        "lastModifiedTime": 1693208533444,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": 0,
                    "clickCount": 0,
                    "viewsByUniqueUsersCount": 0,
                    "documentDownload": 0,
                    "uniqueDocumentDownload": 0,
                    "meetingBooked": 0,
                    "averageLeadRating": "Cold",
                    "productViews": 0,
                    "chatMessagesCount": 0
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found."
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113473,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadTicketBuyerDataInCsvFormat",
        "executor_version": "v1",
        "executor_display_name": "Download Ticket Buyer Data in CSV Format",
        "executor_description": "This API used to download the Ticket Buyer data in CSV format for a specified event.",
        "executor_category": "RegistrationAnalytics",
        "executor_category_group": "RegistrationAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/performance/ticketing/holder/CSV(COPY)",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "For recurring events, enter the recurring Event ID.",
                "req": false
            },
            {
                "key": "dataType",
                "value": "",
                "description": "Pass Ticket Holder data type. E.g. TICKET or ADDON.",
                "req": false
            },
            {
                "key": "startTime",
                "value": "",
                "description": "Add the Start Time for the order date that you want returned in the CSV. e.g. 2023/02/27 13:57:21",
                "req": false
            },
            {
                "key": "endTime",
                "value": "",
                "description": "Add the End Time for the order date that you want returned in the CSV. e.g. 2023/02/27 13:57:21",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693216288763,
        "lastModifiedTime": 1693216288763,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorize to access",
                    "errorCode": "4060001",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4060001",
                    "developerMessage": "Not Event Host"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found\n"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "The request could not be understood by the server due to malformed syntax.",
                    "type": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113476,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadQuestionAndAnswersCsvOfEvent",
        "executor_version": "v1",
        "executor_display_name": "Download Question and Answers CSV of Event",
        "executor_description": "This API is used to get the event's question and answer details which are asked by the attendee and answered by the event staff.  API will return number, question, asker name, answer, answer type, and status in the CSV file.",
        "executor_category": "RegistrationAnalytics",
        "executor_category_group": "RegistrationAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/performance/ticketing/download/questionAnswers/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693216583977,
        "lastModifiedTime": 1693216583977,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "\"#\",\"Question\",\"Asker Name\",\"Answer(s)\",\"AnswerType\",\"Status\"\n\"1\",\"test\",\"Meghraj G\",\"yes\",,\"ANSWERED\"\n\"2\",\"Test\",\"Meghraj Gungewale\",\"yes\",,\"ANSWERED\"\n\"3\",\"test\",\"Anurag Sharma\",\"\",\"live\",\"ANSWERED\"\n\"4\",\"hey\",\"Meghraj G\",\"\",\"live\",\"ANSWERED\""
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113474,
        "executor_type": "THIRDPARTY",
        "executor_name": "getEventTicketDetails",
        "executor_version": "v1",
        "executor_display_name": "Get Event Ticket Details",
        "executor_description": "This API is used to get the event ticket details associated with the specified event. This API used on the host side, meaning that event admins and super admin can access it. It will return data like Start date, End date, Number Of Sold Tickets, and Collected Amount. To call this API, users have to pass an authentication key to authenticate the user.",
        "executor_category": "RegistrationAnalytics",
        "executor_category_group": "RegistrationAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/homeHostEventTicketDetail",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693216381140,
        "lastModifiedTime": 1693216381140,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "startDate": 1625451540000,
                    "endDate": 1635508020000,
                    "collectedAmout": 529.9999999999999,
                    "numberOfTicketSold": 16793,
                    "active": true,
                    "totalTickets": 80020,
                    "totalFreeTickets": 50000,
                    "totalPaidTickets": 30020,
                    "totalFreeTicketsSold": 9262,
                    "totalPaidTicketsSold": 7531,
                    "totalDonationTicketsSold": 0
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4060001",
                    "developerMessage": "Not Event Host"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found\n"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113470,
        "executor_type": "THIRDPARTY",
        "executor_name": "accessTokenforAnalytics",
        "executor_version": "v1",
        "executor_display_name": "Access Token for Analytics",
        "executor_description": "Call this API to generate tokens for analytics.",
        "executor_category": "RegistrationAnalytics",
        "executor_category_group": "RegistrationAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/analytics/getAccessToken",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693215481746,
        "lastModifiedTime": 1693215481746,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "viewId": "182825504",
                    "accessToken": "ya29.a0ARrdaM9Lg7WpDE_E6iByp3_jmvSdMwgQ1FKLLWsr8Oqhfgnj1-JkULBiuZ3oVaxHSk_PCiPHopdA3AB0L6MWrLUXAVCqKNR3OkQbclLN0ADewjBwkBDzS1PIFieTdpIrt1dUUy1GiZ-g2PYfcuY0PNo-PeVKlBw"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorize to access",
                    "errorCode": "4060001",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4060001",
                    "developerMessage": "Not Event Host"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found\n"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113472,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadTicketHolderDatainCsvFormat",
        "executor_version": "v1",
        "executor_display_name": "Download Ticket Holder Data in CSV Format",
        "executor_description": "This API used to download the ticket holder data in CSV format for a specified event.",
        "executor_category": "RegistrationAnalytics",
        "executor_category_group": "RegistrationAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/performance/ticketing/holder/CSV",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "For recurring events, enter the recurring Event ID.",
                "req": false
            },
            {
                "key": "dataType",
                "value": "",
                "description": "Pass Ticket Holder data type. E.g. TICKET or ADDON.",
                "req": false
            },
            {
                "key": "startTime",
                "value": "",
                "description": "Add the Start Time for the order date that you want returned in the CSV. e.g. 2023/02/27 13:57:21",
                "req": false
            },
            {
                "key": "endTime",
                "value": "",
                "description": "Add the End Time for the order date that you want returned in the CSV. e.g. 2023/02/27 13:57:21",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693216180199,
        "lastModifiedTime": 1693216180199,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorize to access",
                    "errorCode": "4060001",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4060001",
                    "developerMessage": "Not Event Host"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found\n"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "The request could not be understood by the server due to malformed syntax.",
                    "type": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113475,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadAbandonedRegistrantsDataInCsvFormat",
        "executor_version": "v1",
        "executor_display_name": "Download Abandoned Registrants Data in CSV Format",
        "executor_description": "This API will return a list of attendees who have not completed the registration process.",
        "executor_category": "RegistrationAnalytics",
        "executor_category_group": "RegistrationAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/performance/ticketing/cartAbandonedRegistrants/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "this is unique event id of recurring event for which we can download abandoned registrants data in csv format",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693216494207,
        "lastModifiedTime": 1693216494207,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "\"Attendee First Name\",\"Attendee Last Name\",\"Attendee Email\"\n\"mitul\",\"s\",\"Mitul.s@brilworks.com\"\n\"vishwa\",\"p\",\"vishwa123@gmail.com\"\n\"vishwa\",\"p\",\"vishwa123@gmail.com\"\n\"vishwa\",\"nar\",\"vishwa.n@brilworks.com\"\n\"vishwa\",\"nar\",\"vishwa.n@brilworks.com\""
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113483,
        "executor_type": "THIRDPARTY",
        "executor_name": "getNetworkingLoungeAttendee",
        "executor_version": "v1",
        "executor_display_name": "Get Networking Lounge Attendee",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. This API will return the lounge attendee data like First Name and Last Name. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "LoungeAnalytics",
        "executor_category_group": "LoungeAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/networking-lounge/{id}/attendee",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique lounge Id of event for getting lounge details."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693217562732,
        "lastModifiedTime": 1693217562732,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "userId": 8972,
                        "firstName": "Prahalad",
                        "lastName": "Shekhawat"
                    },
                    {
                        "userId": 43449,
                        "firstName": "Tammy",
                        "lastName": "N"
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Internal server error."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113482,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadNetworkingLoungeCsvForUser",
        "executor_version": "v1",
        "executor_display_name": "Download Networking Lounge CSV For User",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. This API will return the user's lounge data like First Name, Last Name, Email, and Vaccination Certificate. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "LoungeAnalytics",
        "executor_category_group": "LoungeAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/networking-lounge/user/{userId}/download/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "userId",
                "value": "",
                "description": "Unique user Id for getting user details."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693217486071,
        "lastModifiedTime": 1693217486071,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "\"Lounge Name\",\"Lounge Description\",\"Timestamp\"\n\"Lounge_1\",\"descriptio \",\"2021/11/22 06:02\"\n\"Lounges\",\"\",\"2021/11/22 12:43\"\n"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Internal server error."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113478,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadNetworkingLoungeAttendanceCsv",
        "executor_version": "v1",
        "executor_display_name": "Download Networking Lounge Attendance CSV",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. This API will return lounge attendance data like First name, Last Nam, Email, Photo Upload Count, Video Upload Count, Attendee Count, and Duration Time. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "LoungeAnalytics",
        "executor_category_group": "LoungeAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/networking-lounge/{id}/download/networking-lounge-attendance/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique lounge Id of event for getting lounge details."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693217067916,
        "lastModifiedTime": 1693217067916,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "\"Attendee First Name\",\"Attendee Last Name\",\"Attendee Email\",\"Photo Upload Count\",\"Video Upload Count\",\"Attend Count\",\"Duration Time\"\n\"Prahalad\",\"Shekhawat\",\"prahalad.s@brilworks.com\",\"0\",\"0\",\"2\",\"00:08:20\"\n\"Akshat\",\"Shah\",\"akshat.shah306@gmail.com\",\"0\",\"0\",\"1\",\"00:09:13\"\n\"aalok\",\"mistry\",\"aalok.m+2@brilworks.com\",\"1\",\"1\",\"2\",\"00:09:56\"\n"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Internal server error."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113479,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadTheChatCsvForLounge",
        "executor_version": "v1",
        "executor_display_name": "Download the Chat CSV For Lounge",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. This API will return details of the chat of the attendee like user-name, message, timestamp, and thread messages. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "LoungeAnalytics",
        "executor_category_group": "LoungeAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/networking-lounge/{id}/download/chat/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique lounge Id of event for getting lounge details."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693217154651,
        "lastModifiedTime": 1693217154651,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "\"User name\",\"Message\",\"Timestamp\",\"Thread Messages\"\n\"Hina Admin admin\",\"hi\",\"11/22/2021 18:10:04\",\"\"\n\"Akshat Shah\",\"Edit\",\"11/22/2021 18:10:05\",\"Hina Admin admin:??????????????:11/22/2021 18:11:48\"\n\"aalok mistry\",\"test\",\"11/22/2021 18:11:16\",\"\""
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Internal server error."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113477,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadTheLoungeUsersCsv",
        "executor_version": "v1",
        "executor_display_name": "Download The Lounge Users CSV",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. This API will return lounge user's data like First Name, Last Name, Email, and Vaccination Certificate. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "LoungeAnalytics",
        "executor_category_group": "LoungeAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/networking/download/loungeUser/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693216968368,
        "lastModifiedTime": 1693216968368,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "\"Prefix\",\"First Name\",\"Last Name\",\"Email\",\"Please upload a photo of your completed COVID-19 Vaccination Card\",\"Gender\",\"Birthday\",\"Age\",\"Organization\",\"Job title\",\"Image\",\"Upload\",\"Pronouns\",\"What Does Your Company Do?\",\"Facebook\",\"Instagram\",\"LinkedIn\",\"Twitter\"\n\"Mr.\",\"Prahalad\",\"Singh\",\"prahalad.s@brilworks.com\",\"https://s3.amazonaws.com/v2-dev-images-public/ticket_buyer_uploads/9ccfa2a0-c5a8-4768-8d4e-386472c05756_buildingjpg.jpg\",\"Male\",\"2021-11-01\",\"29\",\"Brill\",\"QA\",\"https://s3.amazonaws.com/v2-dev-images-public/ticket_buyer_uploads/d8270331-f213-4fb7-8fb0-00a44ba1f7be_buildingjpg.jpg\",\"https://s3.amazonaws.com/v2-dev-images-public/ticket_buyer_uploads/bce2f016-35a9-4c62-8fc9-35acde0e1fed_BoardingPasspdf.pdf|BoardingPass.pdf\",\"He/Him\",\"Testing\",\"https://www.facebook.com/\",\"https://www.instagram.com/\",\"https://www.linkedin.com/signup\",\"https://twitter.com/home?lang=en\"\n\"Mr.\",\"Akshat\",\"Shah\",\"akshat.shah306@gmail.com\",\"https://s3.amazonaws.com/v2-dev-images-public/ticket_buyer_uploads/4404e7a6-1f67-40f9-a712-545bfc60ec69_image53png.png\",\"Male\",\"2021-11-17\",\"24\",\"Brilworks\",\"QA\",\"https://s3.amazonaws.com/v2-dev-images-public/ticket_buyer_uploads/e1d10e91-e32b-4266-b95b-ac375033520e_6606jpeg.jpeg\",\"https://s3.amazonaws.com/v2-dev-images-public/ticket_buyer_uploads/361455ff-83b3-45b4-8cf8-cba9b9f4be76_image53png.png|image (53).png\",\"He/HIm\",\"test\",\"https://www.facebook.com/\",\"https://www.instagram.com/\",\"https://www.linkedin.com/feed/\",\"https://twitter.com/home?lang=en\""
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Internal server error."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113481,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllNetworkingLoungeData",
        "executor_version": "v1",
        "executor_display_name": "Get All Networking Lounge Data",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. This API will return all lounge data like Name, Photo Upload Count, Video Upload Count, Attendee Count, and created date. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "LoungeAnalytics",
        "executor_category_group": "LoungeAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/networking-lounge/analytics",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693217392064,
        "lastModifiedTime": 1693217392064,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 1,
                    "recordsFiltered": 1,
                    "data": [
                        {
                            "loungeId": "nl_3003",
                            "eventId": "14951",
                            "name": "Lounge_1",
                            "createdDate": "2021/11/22 11:32",
                            "attendeeCount": 10,
                            "photoCount": 2,
                            "videoCount": 2
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Internal server error."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113480,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadTheFeedCsvForLounge",
        "executor_version": "v1",
        "executor_display_name": "Download The Feed CSV For Lounge",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. This API will return details of the feed CSV like user-name, post, timestamp, attachment, and comments. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "LoungeAnalytics",
        "executor_category_group": "LoungeAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/networking-lounge/{id}/download/feed/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "Unique lounge Id of event for getting lounge details."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693217237763,
        "lastModifiedTime": 1693217237763,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "\"User name\",\"Post\",\"Attachment\",\"Timestamp\",\"Comments\"\n\"aalok mistry\",\"diksdjks\",\"\",\"11/22/2021 18:19:02\",\"\"\n\"aalok mistry\",\"test\",\"\",\"11/22/2021 18:18:57\",\"\"\n\"Heta Admin Shah\",\"hello\",\"\",\"11/22/2021 18:10:23\",\"aalok mistry:sdjsdkslj:11/22/2021 18:19:07\""
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Internal server error."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113487,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAttendedLoungesList",
        "executor_version": "v1",
        "executor_display_name": "Get Attended Lounges List",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. This API will return the attended lounge list for the user. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "LoungeAnalytics",
        "executor_category_group": "LoungeAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/networking-lounge/user/{userId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "userId",
                "value": "",
                "description": "Unique user Id for getting user details."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693218947086,
        "lastModifiedTime": 1693218947086,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "loungeId": "nl_3095",
                        "name": "cricket",
                        "description": "aa",
                        "createdAt": "2022/01/03 11:43"
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Internal server error."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113492,
        "executor_type": "THIRDPARTY",
        "executor_name": "getNetworkingMeetUpSessionActivity",
        "executor_version": "v1",
        "executor_display_name": "Get Networking Meet Up Session Activity",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. it will get networking analytics data like connections made, title, matches, and members. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "NetworkingAnalytics",
        "executor_category_group": "NetworkingAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/networking/meetUp/activity",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693219410268,
        "lastModifiedTime": 1693219410268,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "members": 7,
                        "matches": 11,
                        "sessionId": 25515,
                        "title": "Networking Session",
                        "connectionsMade": null
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Internal Server Error"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113491,
        "executor_type": "THIRDPARTY",
        "executor_name": "getNetworkingAnalytics",
        "executor_version": "v1",
        "executor_display_name": "Get Networking Analytics",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. it will get networking analytics data like connections, average connection per attendee, matches, and meetings. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "NetworkingAnalytics",
        "executor_category_group": "NetworkingAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/virtual/event/{eventUrl}/networking-analytics",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Unique event URL for getting event details"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693219338886,
        "lastModifiedTime": 1693219338886,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "connections": 11,
                    "avgConnectionPerAttendee": 1.57,
                    "meetings": 3,
                    "matches": 11
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Internal Server Error"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113469,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAttendeeNetworkingAnalytics",
        "executor_version": "v1",
        "executor_display_name": "Get Attendee Networking Analytics",
        "executor_description": "This API is used to get attendee networking analytics details.",
        "executor_category": "NetworkingAnalytics",
        "executor_category_group": "NetworkingAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/virtual/event/{eventUrl}/networking-analytics/attendee/{userId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "This field contains event URL"
            },
            {
                "key": "userId",
                "value": "",
                "description": "This field contains user id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693215347829,
        "lastModifiedTime": 1693215347829,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "attendedSessions": 0,
                    "connectedAttendees": [
                        {
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": true,
                            "availabilityDuration": 0,
                            "availabilityEndTime": "string",
                            "availabilityStartAndEndTime": {
                                "additionalProp1": [
                                    "string"
                                ],
                                "additionalProp2": [
                                    "string"
                                ],
                                "additionalProp3": [
                                    "string"
                                ]
                            },
                            "availabilityStartTime": "string",
                            "availabilityTimezoneId": "string",
                            "city": "string",
                            "company": "string",
                            "country": "string",
                            "countryRelatedValue": {
                                "additionalProp1": [
                                    "string"
                                ],
                                "additionalProp2": [
                                    "string"
                                ],
                                "additionalProp3": [
                                    "string"
                                ]
                            },
                            "deleted": true,
                            "email": "string",
                            "emailNotification": true,
                            "equivalentTimezone": "string",
                            "eventId": 0,
                            "exposeProfileToOtherUser": true,
                            "extraInfo": {
                                "aboutMe": "string",
                                "knows": "string",
                                "wantsToLearn": "string",
                                "wantsToMeet": "string"
                            },
                            "facebook": "string",
                            "firstEvent": "string",
                            "firstName": "string",
                            "id": "string",
                            "industry": "string",
                            "instagram": "string",
                            "interests": [
                                {
                                    "id": "string",
                                    "name": "string"
                                }
                            ],
                            "languageCode": "string",
                            "lastActive": "string",
                            "lastName": "string",
                            "linkedIn": "string",
                            "photo": "string",
                            "pronouns": "string",
                            "rejectedBy": "string",
                            "request": true,
                            "rules": [
                                {
                                    "date": "string",
                                    "intervals": [
                                        {
                                            "error": "string",
                                            "from": "string",
                                            "to": "string"
                                        }
                                    ],
                                    "type": "string",
                                    "wday": "string"
                                }
                            ],
                            "showContactInfo": true,
                            "showProfile": true,
                            "status": "string",
                            "timeZonRelatedValue": {
                                "additionalProp1": [
                                    "string"
                                ],
                                "additionalProp2": [
                                    "string"
                                ],
                                "additionalProp3": [
                                    "string"
                                ]
                            },
                            "timezoneId": "string",
                            "title": "string",
                            "twitter": "string",
                            "user": 0,
                            "userDetail": {
                                "address1": "string",
                                "address2": "string",
                                "cityOrProvidence": "string",
                                "country": "string",
                                "countryCode": "US",
                                "email": "string",
                                "fbUserId": "string",
                                "firstName": "string",
                                "languageCode": "string",
                                "lastName": "string",
                                "marketingOptIn": true,
                                "mostRecentEventId": 0,
                                "password": "string",
                                "passwordResetToken": "string",
                                "phoneNumber": 0,
                                "photo": "string",
                                "pushNotificationToken": "string",
                                "showExhibitorMenu": true,
                                "signUpDate": "2021-10-05T10:09:23.247Z",
                                "state": "string",
                                "userId": 0,
                                "zipcode": "string"
                            },
                            "userId": 0,
                            "videoIntro": "string",
                            "website": "string"
                        }
                    ],
                    "sessions": [
                        {
                            "attended": true,
                            "connectedAttendeesSessionWise": [
                                {
                                    "acceptDirectMessages": true,
                                    "acceptMeetingRequests": true,
                                    "allowCallsAndVideosFromNotConnectedAttendees": true,
                                    "availabilityDuration": 0,
                                    "availabilityEndTime": "string",
                                    "availabilityStartAndEndTime": {
                                        "additionalProp1": [
                                            "string"
                                        ],
                                        "additionalProp2": [
                                            "string"
                                        ],
                                        "additionalProp3": [
                                            "string"
                                        ]
                                    },
                                    "availabilityStartTime": "string",
                                    "availabilityTimezoneId": "string",
                                    "city": "string",
                                    "company": "string",
                                    "country": "string",
                                    "countryRelatedValue": {
                                        "additionalProp1": [
                                            "string"
                                        ],
                                        "additionalProp2": [
                                            "string"
                                        ],
                                        "additionalProp3": [
                                            "string"
                                        ]
                                    },
                                    "deleted": true,
                                    "email": "string",
                                    "emailNotification": true,
                                    "equivalentTimezone": "string",
                                    "eventId": 0,
                                    "exposeProfileToOtherUser": true,
                                    "extraInfo": {
                                        "aboutMe": "string",
                                        "knows": "string",
                                        "wantsToLearn": "string",
                                        "wantsToMeet": "string"
                                    },
                                    "facebook": "string",
                                    "firstEvent": "string",
                                    "firstName": "string",
                                    "id": "string",
                                    "industry": "string",
                                    "instagram": "string",
                                    "interests": [
                                        {
                                            "id": "string",
                                            "name": "string"
                                        }
                                    ],
                                    "languageCode": "string",
                                    "lastActive": "string",
                                    "lastName": "string",
                                    "linkedIn": "string",
                                    "photo": "string",
                                    "pronouns": "string",
                                    "rejectedBy": "string",
                                    "request": true,
                                    "rules": [
                                        {
                                            "date": "string",
                                            "intervals": [
                                                {
                                                    "error": "string",
                                                    "from": "string",
                                                    "to": "string"
                                                }
                                            ],
                                            "type": "string",
                                            "wday": "string"
                                        }
                                    ],
                                    "showContactInfo": true,
                                    "showProfile": true,
                                    "status": "string",
                                    "timeZonRelatedValue": {
                                        "additionalProp1": [
                                            "string"
                                        ],
                                        "additionalProp2": [
                                            "string"
                                        ],
                                        "additionalProp3": [
                                            "string"
                                        ]
                                    },
                                    "timezoneId": "string",
                                    "title": "string",
                                    "twitter": "string",
                                    "user": 0,
                                    "userDetail": {
                                        "address1": "string",
                                        "address2": "string",
                                        "cityOrProvidence": "string",
                                        "country": "string",
                                        "countryCode": "US",
                                        "email": "string",
                                        "fbUserId": "string",
                                        "firstName": "string",
                                        "languageCode": "string",
                                        "lastName": "string",
                                        "marketingOptIn": true,
                                        "mostRecentEventId": 0,
                                        "password": "string",
                                        "passwordResetToken": "string",
                                        "phoneNumber": 0,
                                        "photo": "string",
                                        "pushNotificationToken": "string",
                                        "showExhibitorMenu": true,
                                        "signUpDate": "2021-10-05T10:09:23.247Z",
                                        "state": "string",
                                        "userId": 0,
                                        "zipcode": "string"
                                    },
                                    "userId": 0,
                                    "videoIntro": "string",
                                    "website": "string"
                                }
                            ],
                            "endTime": "string",
                            "engagement": "string",
                            "networkMatches": [
                                {
                                    "company": "string",
                                    "fullName": "string",
                                    "matTimeDate": "2021-10-05T10:09:23.247Z",
                                    "matchStarted": true,
                                    "profileImage": "string",
                                    "sessionId": 0,
                                    "title": "string",
                                    "userIdOfMatch": 0
                                }
                            ],
                            "sessionId": 0,
                            "startTime": "string",
                            "status": "string",
                            "title": "string"
                        }
                    ],
                    "totalConnection": 0,
                    "totalMatch": 0
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource\n"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden\n"
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found\n"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113493,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadTheMatchUserCsv",
        "executor_version": "v1",
        "executor_display_name": "Download The Match User CSV",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. It will download networking matches user data like session title, company, job title, match user title, match user company, name, etc. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "NetworkingAnalytics",
        "executor_category_group": "NetworkingAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/networking/download/matchesUser/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693219480382,
        "lastModifiedTime": 1693219480382,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "\"Session Title\",\"Title\",\"Company\",\"Match User Title\",\"Match User Company\",\"Name\",\"Match User Name\",\"Match date/time\"\n\"Networking Session\",\"\",\"\",\"BVCX\",\"GFD\",\"Heta admin qwwee Shahwwwwww\",\"Tammy N\",\"11/22/2021 17:54:42\"\n\"Networking Session\",\"\",\"Company\",\"QA\",\"Company\",\"Akshat Shah\",\"Ekta Speaker L1\",\"11/22/2021 17:54:45\"\n\"Networking Session\",\"\",\"\",\"QA\",\"Company\",\"Prahalad Shekhawat\",\"Ekta Speaker L1\",\"11/22/2021 17:54:56\"\n\"Networking Session\",\"BVCX\",\"GFD\",\"\",\"Company\",\"Tammy N\",\"Akshat Shah\",\"11/22/2021 17:55:08\""
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Internal Server Error"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113579,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllEventsbyUser",
        "executor_version": "v1",
        "executor_display_name": "Get All Events by User",
        "executor_description": "This API is used to get all events of a particular user while deleting the user's profile.  This API is used when the user clicks on Delete Account from the Edit Profile page from the Profile menu.  To use this API, the user needs to pass body parameters with user details and authorization token in API in the header.  An authorization token will be generated when the user login to the system.",
        "executor_category": "MyProfile",
        "executor_category_group": "MyProfile",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/u/soleAdminUser/events",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "userLoginDto": {
                    "username": "string",
                    "password": "string",
                    "rememberme": true,
                    "currentDomain": "string"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693286283925,
        "lastModifiedTime": 1693286283925,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "[\n  \"Test event 24 Dec\",\n  \"Test event 24 Dec 2\"\n]"
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "User is not authorized to view the resource."
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The email or password doesn't match"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113581,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteUserAccount",
        "executor_version": "v1",
        "executor_display_name": "Delete User Account",
        "executor_description": "This API is used to delete the user account/profile when the user clicks on the My Activity page from the Profile menu.  To use this API, the user needs to pass the reason for deleting the user/event and authorization token in API in the header.  An authorization token will be generated when the user logs into the system.  Super admin users cannot be deleted using this API.",
        "executor_category": "MyProfile",
        "executor_category_group": "MyProfile",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/u/user/delete",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "reasonForDeletingUser": "string",
                "commentForDeletingUser": "string",
                "reasonForDeletingEvent": "string",
                "commentForDeletingEvent": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693286549954,
        "lastModifiedTime": 1693286549954,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "User is deleted successfully"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "User is not authorized to view the resource."
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden."
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not allowed to delete Super Admin account"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113580,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateuserDetails",
        "executor_version": "v1",
        "executor_display_name": "Update User Details",
        "executor_description": "This API is used to update user profile details.  This API is used when the user clicks on the My Profile page from the Profile menu.  This API is used by the user to update profile details like email, firstName, lastName, phoneNum, country, state, address, etc.  To use this API, the user needs to pass body parameters with the user details and authorization token in API in the header.  An authorization token will be generated when the user login to the system.",
        "executor_category": "MyProfile",
        "executor_category_group": "MyProfile",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/u/myProfile",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "UserProfileUpdateDto": {
                    "email": "string",
                    "firstName": "string",
                    "lastName": "string",
                    "countryCode": "string",
                    "phoneNumber": 0,
                    "address1": "string",
                    "address2": "string",
                    "cityOrProvidence": "string",
                    "zipcode": "string",
                    "state": "string",
                    "country": "string",
                    "zapierEnabled": true
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693286395781,
        "lastModifiedTime": 1693286395781,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Successfully updated user"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113546,
        "executor_type": "THIRDPARTY",
        "executor_name": "getUserProfileDetails",
        "executor_version": "v1",
        "executor_display_name": "Get User Profile Details",
        "executor_description": "This API is used to get the user profile details when the user clicks on the My Profile page from the Profile menu.  We need to pass the authorization token in API in the header.  An authorization token will be generated when the user logs into the system.",
        "executor_category": "MyProfile",
        "executor_category_group": "MyProfile",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/myprofile",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693226850090,
        "lastModifiedTime": 1693226850090,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "email": "meghna.c@brilworks.com",
                    "firstName": "dd",
                    "lastName": "123",
                    "countryCode": "IN",
                    "phoneNumber": 1472583690,
                    "address1": "aaabb",
                    "address2": "www12",
                    "cityOrProvidence": null,
                    "zipcode": null,
                    "state": null,
                    "country": null,
                    "zapierEnabled": false,
                    "admin": true,
                    "userLabel": "Admin",
                    "userProfilePhoto": "811d5187-dec0-4a83-a2a7-daef64c753f2"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "User is not authorized to view the resource."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113406,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllChallengeListFilteredChallengeList",
        "executor_version": "v1",
        "executor_display_name": "Get All Challenge List/ Filtered Challenge List",
        "executor_description": "This API is used to get all the event challenge details associated with the specified event.  This API is used at host side. Event admins and super admins can access this API. It will return data like recordsFiltered, recordsTotal, error, and other details.  To call this API, users have to pass query parameters with API URL like page, size, and authentication key to authenticate the user.  The searchString parameter is used to get Filtered Challenge List, passing Empty String will retrieve the All Challenge list.",
        "executor_category": "HostChallengeConfigAPI",
        "executor_category_group": "HostChallengeConfigAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/challenge",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Size will returns number of records when call api default will returns 10 records.",
                "req": false
            },
            {
                "key": "searchString",
                "value": "",
                "description": "Search String will be used to get filtered Challenge List, pass empty when need to get all Challenges",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693202368107,
        "lastModifiedTime": 1693202368107,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 1,
                    "recordsFiltered": 1,
                    "data": [
                        {
                            "area": "Expo",
                            "action": [
                                {
                                    "perVisitPoint": 1,
                                    "name": "visit",
                                    "minVisitDuration": 20,
                                    "point": 5
                                },
                                {
                                    "name": "document download",
                                    "point": 5
                                },
                                {
                                    "name": "chat",
                                    "point": 20
                                }
                            ],
                            "trigger": {
                                "exhibitor": [
                                    2048,
                                    2047,
                                    2046
                                ]
                            },
                            "eventChallengeId": 4043,
                            "name": "Default Challenge",
                            "description": "",
                            "startDate": "2021/09/14 17:55",
                            "endDate": "2021/10/14 12:18",
                            "goal": 10,
                            "rewards": [],
                            "ticketTypeAllowInChallenge": [
                                7277
                            ],
                            "gamificationTabDisabled": false,
                            "startDateUtc": 1631622300000,
                            "endDateUtc": 1634194080000,
                            "type": "STANDARD"
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4030201",
                    "developerMessage": "Not Event Host"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113412,
        "executor_type": "THIRDPARTY",
        "executor_name": "getActionDetailsAreaWise",
        "executor_version": "v1",
        "executor_display_name": "Get Action Details Area Wise",
        "executor_description": "This API Used to get action details area wise associated with the specified event.  This API is used at the host side. Event admins and super admins can access this API. It will return data like list of action, trigger, & configuration for those fields including type of field & minimum value.  To call this API, users have to pass a query path with API URL like area & authentication key.",
        "executor_category": "HostChallengeConfigAPI",
        "executor_category_group": "HostChallengeConfigAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/challenge/action/{area}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "area",
                "value": "",
                "description": "It's conatins the area of the challlenge. It will return data like Expo, Sessions and Networking."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693203818765,
        "lastModifiedTime": 1693203818765,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "area": "Expo",
                    "action": [
                        {
                            "name": "visit",
                            "label": "Visit",
                            "config": [
                                {
                                    "element": "point",
                                    "elementType": "text",
                                    "valueType": "numeric",
                                    "label": "Points per First Visit",
                                    "minValue": 0
                                },
                                {
                                    "element": "minVisitDuration",
                                    "elementType": "text",
                                    "valueType": "numeric",
                                    "label": "Minimum Visit Duration (In Seconds)"
                                },
                                {
                                    "element": "perVisitPoint",
                                    "elementType": "text",
                                    "valueType": "numeric",
                                    "label": "Points for Succeeding Visits",
                                    "minValue": 0
                                }
                            ]
                        },
                        {
                            "name": "watch",
                            "label": "Watch",
                            "config": [
                                {
                                    "element": "point",
                                    "elementType": "text",
                                    "valueType": "numeric",
                                    "label": "Points for Watching the Promo Video"
                                },
                                {
                                    "element": "minimumWatchDuration",
                                    "elementType": "text",
                                    "valueType": "numeric",
                                    "label": "Minimum Watch Duration (In Seconds)"
                                }
                            ]
                        },
                        {
                            "name": "chat",
                            "label": "Chat",
                            "config": [
                                {
                                    "element": "point",
                                    "elementType": "text",
                                    "valueType": "numeric",
                                    "label": "Points for Submitting a Chat Message"
                                }
                            ]
                        },
                        {
                            "name": "link click",
                            "label": "Link Click",
                            "config": [
                                {
                                    "element": "point",
                                    "elementType": "text",
                                    "valueType": "numeric",
                                    "label": "Points for Clicking Links in the Document & Links Area"
                                }
                            ]
                        },
                        {
                            "name": "document download",
                            "label": "Document Download",
                            "config": [
                                {
                                    "element": "point",
                                    "elementType": "text",
                                    "valueType": "numeric",
                                    "label": "Points per Document Downloaded"
                                }
                            ]
                        },
                        {
                            "name": "request meeting",
                            "label": "Request Meeting",
                            "config": [
                                {
                                    "element": "point",
                                    "elementType": "text",
                                    "valueType": "numeric",
                                    "label": "Points for Clicking the Call-To-Action Button"
                                }
                            ]
                        }
                    ],
                    "trigger": [
                        {
                            "element": "exhibitor",
                            "elementType": "multiSelectBox",
                            "label": "Exhibitor"
                        },
                        {
                            "element": "category",
                            "elementType": "multiSelectBox",
                            "label": "Category"
                        }
                    ],
                    "maxPoints": null
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113413,
        "executor_type": "THIRDPARTY",
        "executor_name": "getMasterAreaDetails",
        "executor_version": "v1",
        "executor_display_name": "Get Master Area Details",
        "executor_description": "This API used to get the master area details associated with the specified event.  This API used at the host side. Event admisn and super admins can access it. It will return data like Expo, Sessions, Networking and Event.  Users will have to pass an authentication key for user authentication.",
        "executor_category": "HostChallengeConfigAPI",
        "executor_category_group": "HostChallengeConfigAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/challenge/area",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693203884246,
        "lastModifiedTime": 1693203884246,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    "Expo",
                    "Sessions",
                    "Networking",
                    "Event"
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113418,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadLeaderboardDataCsv",
        "executor_version": "v1",
        "executor_display_name": "Download Leaderboard Data CSV",
        "executor_description": "This API used to download leaderBoard data CSV. This API can be used by admin and super admin to download leaderboard data like First Name, Last Name, Title, Point and List of challenge data. We need to pass an authorization token here, which is generated after successful login into account with the other details. This API used at host side to download leaderboard data CSV.",
        "executor_category": "HostChallengeConfigAPI",
        "executor_category_group": "HostChallengeConfigAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/csv/download/leaderboard/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693206008783,
        "lastModifiedTime": 1693206008783,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    "First Name",
                    "Last Name",
                    "Title",
                    "challenge2",
                    "Motivational",
                    "ddddd",
                    "Motivational123",
                    "dddd",
                    "Update",
                    "Scavenger Hunt Challenge",
                    "First"
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113419,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadLeaderboardDataCsvByChallengeId",
        "executor_version": "v1",
        "executor_display_name": "Download Leaderboard Data CSV By Challenge ID",
        "executor_description": "This API used to download leaderboard data CSV by challenge id. This API can be used by admin and super admin to download leaderboard data like First Name, Last Name, Title and name of challenge. We need to pass an authorization token here, which is generated after successful login into account with the other details. This API used at host side to download leaderboard data CSV using challenge id.",
        "executor_category": "HostChallengeConfigAPI",
        "executor_category_group": "HostChallengeConfigAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/csv/{challengeId}/download/leaderboard/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "challengeId",
                "value": "",
                "description": "Challenge Details By Challenge Id required"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693206167275,
        "lastModifiedTime": 1693206167275,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    "First Name",
                    "Last Name",
                    "Title",
                    "Motivational"
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113407,
        "executor_type": "THIRDPARTY",
        "executor_name": "addEventChallengeDetails",
        "executor_version": "v1",
        "executor_display_name": "Add Event Challenge Details",
        "executor_description": "This API is used to create event challenge details for gamification.  This API can be accessed by event admins and super admins for creating new event challenges.  Users have to pass an authentication key to access this API.",
        "executor_category": "HostChallengeConfigAPI",
        "executor_category_group": "HostChallengeConfigAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/challenge",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "eventChallengeDTO": {
                    "eventChallengeId": 0,
                    "name": "string",
                    "description": "string",
                    "type": "STANDARD",
                    "area": "string",
                    "action": [
                        {
                            "name": "string",
                            "point": "string",
                            "+": [
                                "string"
                            ]
                        }
                    ],
                    "trigger": [
                        {
                            "name": "string",
                            "ids": [
                                0
                            ]
                        }
                    ],
                    "startDate": "string",
                    "endDate": "string",
                    "goal": 0,
                    "ticketTypeAllowInChallenge": [
                        0
                    ],
                    "gamificationTabDisabled": true,
                    "startDateUtc": "2023-08-28",
                    "endDateUtc": "2023-08-28"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693202473523,
        "lastModifiedTime": 1693202473523,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "area": "Expo",
                    "action": [
                        {
                            "name": "visit",
                            "point": 1,
                            "minVisitDuration": 1,
                            "perVisitPoint": 1
                        }
                    ],
                    "trigger": {
                        "exhibitor": [
                            2048,
                            2047,
                            2046
                        ]
                    },
                    "eventChallengeId": 4351,
                    "name": "Motivational",
                    "startDate": "2021/09/14 17:55",
                    "endDate": "2021/10/14 12:18",
                    "goal": 10,
                    "ticketTypeAllowInChallenge": [
                        7277
                    ],
                    "gamificationTabDisabled": false,
                    "startDateUtc": 1631622300000,
                    "endDateUtc": 1634194080000,
                    "subArea": "exhibitor",
                    "type": "STANDARD"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113421,
        "executor_type": "THIRDPARTY",
        "executor_name": "allCategoriesList",
        "executor_version": "v1",
        "executor_display_name": "All Categories List",
        "executor_description": "This API is used to get all categories list associated with the specified event.  This API used at the host side. Event admins and super admins can access this API. It will return data like ID, name, position, and categoryColor.",
        "executor_category": "HostChallengeConfigAPI",
        "executor_category_group": "HostChallengeConfigAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/exhibitor/categories",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693206306597,
        "lastModifiedTime": 1693206306597,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "exhibitorCategories": [
                        {
                            "id": 256,
                            "name": "cat11",
                            "position": 1000,
                            "categoryColor": ""
                        },
                        {
                            "id": 257,
                            "name": "cat22",
                            "position": 2000,
                            "categoryColor": ""
                        },
                        {
                            "id": 258,
                            "name": "cat33",
                            "position": 3000,
                            "categoryColor": ""
                        }
                    ]
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113411,
        "executor_type": "THIRDPARTY",
        "executor_name": "deleteChallengeDetailsbyEventChallengeId",
        "executor_version": "v1",
        "executor_display_name": "Delete Challenge Details by Event Challenge ID",
        "executor_description": "This API is used to delete challenge details using the event challenge ID. This API can be access by event admins and super admins.  To call this API, users have to pass an authentication key to authenticate the user.  This API used at the event host side to delete challenge details.",
        "executor_category": "HostChallengeConfigAPI",
        "executor_category_group": "HostChallengeConfigAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "DELETE",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/challenge/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "pass event challenge detail id required."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693203469501,
        "lastModifiedTime": 1693203469501,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Challenge Details Deleted Successfully"
                }
            },
            {
                "statusCode": 204,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113423,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllAvailableTicketingTypes",
        "executor_version": "v1",
        "executor_display_name": "Get All Available Ticketing Types",
        "executor_description": "This API is used to get all available ticketing types associated with the specified event. API is used as host side event admin and super admin can access this API. It will return data like allowEditingOfDisclaimer, currencySymbol, equivalentTimezone, eventStartDate, eventEndDate, ticketTypes and many more. To call this API, user will have to pass query param with API URL like fetchHiddenTicketsOnly, dataType, recurringEventId and authentication key to authenticate user.",
        "executor_category": "HostChallengeConfigAPI",
        "executor_category_group": "HostChallengeConfigAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/ticketing/{eventUrl}/ticketTypes",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "fetchHiddenTicketsOnly",
                "value": "",
                "description": "It's contains the fetch hidden ticketing types only. By default value is false.",
                "req": false
            },
            {
                "key": "dataType",
                "value": "",
                "description": "It's contains the ticketing datatype like TICKET and ADDON.",
                "req": false
            },
            {
                "key": "recurringEventId",
                "value": "",
                "description": "It's contains the ticket type recurring event id.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693206520469,
        "lastModifiedTime": 1693206520469,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "eventStartDate": "2021/09/14 17:55",
                    "eventEndDate": "2021/10/14 17:48",
                    "eventAddress": null,
                    "latitude": null,
                    "longitude": null,
                    "ticketTypes": [
                        {
                            "salesTaxRate": 0,
                            "ticketingTypeIds": null,
                            "absorbTax": true,
                            "typeId": 7277,
                            "categoryId": null,
                            "name": "Free Admission",
                            "price": 0,
                            "numberOfTicket": 100,
                            "ticketTypeDescription": null,
                            "enableTicketDescription": false,
                            "passfeetobuyer": true,
                            "startDate": "2021/09/14 17:48",
                            "endDate": "2021/10/14 12:18",
                            "hidden": false,
                            "maxTickerPerBuyer": 10,
                            "minTickerPerBuyer": 0,
                            "bundleType": "INDIVIDUAL_TICKET",
                            "ticketsPerTable": 1,
                            "ticketType": "FREE",
                            "categoryColor": null,
                            "recurringEventId": null,
                            "createdFrom": null,
                            "recurringEventSalesEndTime": null,
                            "recurringEventSalesEndStatus": null,
                            "eventCategories": [],
                            "allowPDFDownload": false,
                            "maxSessionRegisterUser": null,
                            "dataType": "TICKET",
                            "ticketTypeFormat": "VIRTUAL",
                            "aeFees": 0,
                            "ccFees": 0,
                            "chnageToTabel": false,
                            "totalPayable": 0,
                            "wlFees": 0
                        }
                    ],
                    "timezoneId": "India Time",
                    "equivalentTimezone": "Asia/Calcutta",
                    "showRemainingTickets": true,
                    "allowEditingOfDisclaimer": true,
                    "customDisclaimer": null,
                    "eventVenueType": "ONLINE_VIRTUAL_EVENT",
                    "ticketingFee": [
                        {
                            "aeFeeFlat": 0,
                            "aeFeePercentage": 0,
                            "wlFeeFlat": 0,
                            "wlFeePercentage": 0,
                            "creditCardProcessingFlat": 0.3,
                            "creditCardProcessingPercentage": 2.9,
                            "fromThreshold": "-Infinity",
                            "toThreshold": 0.01,
                            "operator": "<",
                            "inPerson": false,
                            "addon": false
                        },
                        {
                            "aeFeeFlat": 0,
                            "aeFeePercentage": 7,
                            "wlFeeFlat": 0,
                            "wlFeePercentage": 0,
                            "creditCardProcessingFlat": 0.3,
                            "creditCardProcessingPercentage": 2.9,
                            "fromThreshold": 0.01,
                            "toThreshold": "Infinity",
                            "operator": ">=",
                            "inPerson": false,
                            "addon": false
                        }
                    ],
                    "availableTimeZone": [
                        {
                            "name": "American Samoa Time",
                            "displayOffset": "GMT-11:00",
                            "equivalentTimezone": "Pacific/Pago_Pago"
                        },
                        {
                            "name": "Niue Time",
                            "displayOffset": "GMT-11:00",
                            "equivalentTimezone": "Pacific/Niue"
                        },
                        {
                            "name": "U.S. Outlying Islands (Midway) Time",
                            "displayOffset": "GMT-11:00",
                            "equivalentTimezone": "Pacific/Midway"
                        },
                        {
                            "name": "Cook Islands Time",
                            "displayOffset": "GMT-10:00",
                            "equivalentTimezone": "Pacific/Rarotonga"
                        },
                        {
                            "name": "French Polynesia Time",
                            "displayOffset": "GMT-10:00",
                            "equivalentTimezone": "Pacific/Tahiti"
                        },
                        {
                            "name": "United States (Honolulu) Time",
                            "displayOffset": "GMT-10:00",
                            "equivalentTimezone": "Pacific/Honolulu"
                        },
                        {
                            "name": "World (Adak) Time",
                            "displayOffset": "GMT-09:00",
                            "equivalentTimezone": "America/Adak"
                        },
                        {
                            "name": "World (Marquesas) Time",
                            "displayOffset": "GMT-09:30",
                            "equivalentTimezone": "Pacific/Marquesas"
                        },
                        {
                            "name": "World (Gambier) Time",
                            "displayOffset": "GMT-09:00",
                            "equivalentTimezone": "Pacific/Gambier"
                        },
                        {
                            "name": "United States (Anchorage) Time",
                            "displayOffset": "GMT-08:00",
                            "equivalentTimezone": "America/Anchorage"
                        },
                        {
                            "name": "United States (Juneau) Time",
                            "displayOffset": "GMT-08:00",
                            "equivalentTimezone": "America/Juneau"
                        },
                        {
                            "name": "United States (Metlakatla) Time",
                            "displayOffset": "GMT-08:00",
                            "equivalentTimezone": "America/Metlakatla"
                        },
                        {
                            "name": "United States (Nome) Time",
                            "displayOffset": "GMT-08:00",
                            "equivalentTimezone": "America/Nome"
                        },
                        {
                            "name": "United States (Sitka) Time",
                            "displayOffset": "GMT-08:00",
                            "equivalentTimezone": "America/Sitka"
                        },
                        {
                            "name": "United States (Yakutat) Time",
                            "displayOffset": "GMT-08:00",
                            "equivalentTimezone": "America/Yakutat"
                        },
                        {
                            "name": "World (Pitcairn) Time",
                            "displayOffset": "GMT-08:00",
                            "equivalentTimezone": "Pacific/Pitcairn"
                        },
                        {
                            "name": "Canada (Vancouver) Time",
                            "displayOffset": "GMT-07:00",
                            "equivalentTimezone": "America/Vancouver"
                        },
                        {
                            "name": "Mexico (Santa Isabel) Time",
                            "displayOffset": "GMT-07:00",
                            "equivalentTimezone": "America/Santa_Isabel"
                        },
                        {
                            "name": "Mexico (Tijuana) Time",
                            "displayOffset": "GMT-07:00",
                            "equivalentTimezone": "America/Tijuana"
                        },
                        {
                            "name": "United States (Los Angeles) Time",
                            "displayOffset": "GMT-07:00",
                            "equivalentTimezone": "America/Los_Angeles"
                        },
                        {
                            "name": "Canada (Creston) Time",
                            "displayOffset": "GMT-07:00",
                            "equivalentTimezone": "America/Creston"
                        },
                        {
                            "name": "Canada (Dawson Creek) Time",
                            "displayOffset": "GMT-07:00",
                            "equivalentTimezone": "America/Dawson_Creek"
                        },
                        {
                            "name": "Canada (Dawson) Time",
                            "displayOffset": "GMT-07:00",
                            "equivalentTimezone": "America/Dawson"
                        },
                        {
                            "name": "Canada (Fort Nelson) Time",
                            "displayOffset": "GMT-07:00",
                            "equivalentTimezone": "America/Fort_Nelson"
                        },
                        {
                            "name": "Canada (Whitehorse) Time",
                            "displayOffset": "GMT-07:00",
                            "equivalentTimezone": "America/Whitehorse"
                        },
                        {
                            "name": "Mexico (Hermosillo) Time",
                            "displayOffset": "GMT-07:00",
                            "equivalentTimezone": "America/Hermosillo"
                        },
                        {
                            "name": "United States (Phoenix) Time",
                            "displayOffset": "GMT-07:00",
                            "equivalentTimezone": "America/Phoenix"
                        },
                        {
                            "name": "Canada (Cambridge Bay) Time",
                            "displayOffset": "GMT-06:00",
                            "equivalentTimezone": "America/Cambridge_Bay"
                        },
                        {
                            "name": "Canada (Edmonton) Time",
                            "displayOffset": "GMT-06:00",
                            "equivalentTimezone": "America/Edmonton"
                        },
                        {
                            "name": "Canada (Inuvik) Time",
                            "displayOffset": "GMT-06:00",
                            "equivalentTimezone": "America/Inuvik"
                        },
                        {
                            "name": "Canada (Yellowknife) Time",
                            "displayOffset": "GMT-06:00",
                            "equivalentTimezone": "America/Yellowknife"
                        },
                        {
                            "name": "Mexico (Chihuahua) Time",
                            "displayOffset": "GMT-06:00",
                            "equivalentTimezone": "America/Chihuahua"
                        },
                        {
                            "name": "Mexico (Mazatlan) Time",
                            "displayOffset": "GMT-06:00",
                            "equivalentTimezone": "America/Mazatlan"
                        },
                        {
                            "name": "Mexico (Ojinaga) Time",
                            "displayOffset": "GMT-06:00",
                            "equivalentTimezone": "America/Ojinaga"
                        },
                        {
                            "name": "United States (Boise) Time",
                            "displayOffset": "GMT-06:00",
                            "equivalentTimezone": "America/Boise"
                        },
                        {
                            "name": "United States (Denver) Time",
                            "displayOffset": "GMT-06:00",
                            "equivalentTimezone": "America/Denver"
                        },
                        {
                            "name": "Belize Time",
                            "displayOffset": "GMT-06:00",
                            "equivalentTimezone": "America/Belize"
                        },
                        {
                            "name": "Canada (Regina) Time",
                            "displayOffset": "GMT-06:00",
                            "equivalentTimezone": "America/Regina"
                        },
                        {
                            "name": "Canada (Swift Current) Time",
                            "displayOffset": "GMT-06:00",
                            "equivalentTimezone": "America/Swift_Current"
                        },
                        {
                            "name": "Costa Rica Time",
                            "displayOffset": "GMT-06:00",
                            "equivalentTimezone": "America/Costa_Rica"
                        },
                        {
                            "name": "Ecuador (Galapagos) Time",
                            "displayOffset": "GMT-06:00",
                            "equivalentTimezone": "Pacific/Galapagos"
                        },
                        {
                            "name": "El Salvador Time",
                            "displayOffset": "GMT-06:00",
                            "equivalentTimezone": "America/El_Salvador"
                        },
                        {
                            "name": "Guatemala Time",
                            "displayOffset": "GMT-06:00",
                            "equivalentTimezone": "America/Guatemala"
                        },
                        {
                            "name": "Honduras Time",
                            "displayOffset": "GMT-06:00",
                            "equivalentTimezone": "America/Tegucigalpa"
                        },
                        {
                            "name": "Nicaragua Time",
                            "displayOffset": "GMT-06:00",
                            "equivalentTimezone": "America/Managua"
                        },
                        {
                            "name": "Canada (Rainy River) Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/Rainy_River"
                        },
                        {
                            "name": "Canada (Rankin Inlet) Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/Rankin_Inlet"
                        },
                        {
                            "name": "Canada (Resolute) Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/Resolute"
                        },
                        {
                            "name": "Canada (Winnipeg) Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/Winnipeg"
                        },
                        {
                            "name": "Chile (Easter) Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "Pacific/Easter"
                        },
                        {
                            "name": "Mexico (Bahia Banderas) Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/Bahia_Banderas"
                        },
                        {
                            "name": "Mexico (Matamoros) Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/Matamoros"
                        },
                        {
                            "name": "Mexico (Merida) Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/Merida"
                        },
                        {
                            "name": "Mexico (Mexico City) Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/Mexico_City"
                        },
                        {
                            "name": "Mexico (Monterrey) Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/Monterrey"
                        },
                        {
                            "name": "United States (Beulah, North Dakota) Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/North_Dakota/Beulah"
                        },
                        {
                            "name": "United States (Center, North Dakota) Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/North_Dakota/Center"
                        },
                        {
                            "name": "United States (Chicago) Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/Chicago"
                        },
                        {
                            "name": "United States (Knox, Indiana) Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/Indiana/Knox"
                        },
                        {
                            "name": "United States (Menominee) Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/Menominee"
                        },
                        {
                            "name": "United States (New Salem, North Dakota) Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/North_Dakota/New_Salem"
                        },
                        {
                            "name": "United States (Tell City, Indiana) Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/Indiana/Tell_City"
                        },
                        {
                            "name": "Brazil (Eirunepe) Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/Eirunepe"
                        },
                        {
                            "name": "Brazil (Rio Branco) Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/Rio_Branco"
                        },
                        {
                            "name": "Canada (Atikokan) Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/Atikokan"
                        },
                        {
                            "name": "Cayman Islands Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/Cayman"
                        },
                        {
                            "name": "Colombia Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/Bogota"
                        },
                        {
                            "name": "Ecuador (Guayaquil) Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/Guayaquil"
                        },
                        {
                            "name": "Jamaica Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/Jamaica"
                        },
                        {
                            "name": "Mexico (Cancun) Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/Cancun"
                        },
                        {
                            "name": "Panama Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/Panama"
                        },
                        {
                            "name": "Peru Time",
                            "displayOffset": "GMT-05:00",
                            "equivalentTimezone": "America/Lima"
                        },
                        {
                            "name": "Bahamas Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Nassau"
                        },
                        {
                            "name": "Canada (Iqaluit) Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Iqaluit"
                        },
                        {
                            "name": "Canada (Nipigon) Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Nipigon"
                        },
                        {
                            "name": "Canada (Pangnirtung) Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Pangnirtung"
                        },
                        {
                            "name": "Canada (Thunder Bay) Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Thunder_Bay"
                        },
                        {
                            "name": "Canada (Toronto) Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Toronto"
                        },
                        {
                            "name": "Cuba Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Havana"
                        },
                        {
                            "name": "Haiti Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Port-au-Prince"
                        },
                        {
                            "name": "Turks & Caicos Islands Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Grand_Turk"
                        },
                        {
                            "name": "United States (Detroit) Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Detroit"
                        },
                        {
                            "name": "United States (Indianapolis) Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Indiana/Indianapolis"
                        },
                        {
                            "name": "United States (Louisville) Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Kentucky/Louisville"
                        },
                        {
                            "name": "United States (Marengo, Indiana) Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Indiana/Marengo"
                        },
                        {
                            "name": "United States (Monticello, Kentucky) Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Kentucky/Monticello"
                        },
                        {
                            "name": "United States (New York) Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/New_York"
                        },
                        {
                            "name": "United States (Petersburg, Indiana) Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Indiana/Petersburg"
                        },
                        {
                            "name": "United States (Vevay, Indiana) Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Indiana/Vevay"
                        },
                        {
                            "name": "United States (Vincennes, Indiana) Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Indiana/Vincennes"
                        },
                        {
                            "name": "United States (Winamac, Indiana) Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Indiana/Winamac"
                        },
                        {
                            "name": "Anguilla Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Anguilla"
                        },
                        {
                            "name": "Antigua & Barbuda Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Antigua"
                        },
                        {
                            "name": "Aruba Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Aruba"
                        },
                        {
                            "name": "Barbados Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Barbados"
                        },
                        {
                            "name": "Bolivia Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/La_Paz"
                        },
                        {
                            "name": "Brazil (Boa Vista) Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Boa_Vista"
                        },
                        {
                            "name": "Brazil (Campo Grande) Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Campo_Grande"
                        },
                        {
                            "name": "Brazil (Cuiaba) Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Cuiaba"
                        },
                        {
                            "name": "Brazil (Manaus) Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Manaus"
                        },
                        {
                            "name": "Brazil (Porto Velho) Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Porto_Velho"
                        },
                        {
                            "name": "British Virgin Islands Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Tortola"
                        },
                        {
                            "name": "Canada (Blanc-Sablon) Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Blanc-Sablon"
                        },
                        {
                            "name": "Caribbean Netherlands Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Kralendijk"
                        },
                        {
                            "name": "Cura\u00e7ao Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Curacao"
                        },
                        {
                            "name": "Dominica Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Dominica"
                        },
                        {
                            "name": "Dominican Republic Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Santo_Domingo"
                        },
                        {
                            "name": "Grenada Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Grenada"
                        },
                        {
                            "name": "Guadeloupe Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Guadeloupe"
                        },
                        {
                            "name": "Guyana Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Guyana"
                        },
                        {
                            "name": "Martinique Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Martinique"
                        },
                        {
                            "name": "Montserrat Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Montserrat"
                        },
                        {
                            "name": "Puerto Rico Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Puerto_Rico"
                        },
                        {
                            "name": "Sint Maarten Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Lower_Princes"
                        },
                        {
                            "name": "St. Barth\u00e9lemy Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/St_Barthelemy"
                        },
                        {
                            "name": "St. Kitts & Nevis Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/St_Kitts"
                        },
                        {
                            "name": "St. Lucia Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/St_Lucia"
                        },
                        {
                            "name": "St. Martin Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Marigot"
                        },
                        {
                            "name": "St. Vincent & Grenadines Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/St_Vincent"
                        },
                        {
                            "name": "Trinidad & Tobago Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Port_of_Spain"
                        },
                        {
                            "name": "U.S. Virgin Islands Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/St_Thomas"
                        },
                        {
                            "name": "Venezuela Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Caracas"
                        },
                        {
                            "name": "Bermuda Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "Atlantic/Bermuda"
                        },
                        {
                            "name": "Canada (Glace Bay) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Glace_Bay"
                        },
                        {
                            "name": "Canada (Goose Bay) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Goose_Bay"
                        },
                        {
                            "name": "Canada (Halifax) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Halifax"
                        },
                        {
                            "name": "Canada (Moncton) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Moncton"
                        },
                        {
                            "name": "Chile (Santiago) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Santiago"
                        },
                        {
                            "name": "Greenland (Thule) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Thule"
                        },
                        {
                            "name": "Paraguay Time",
                            "displayOffset": "GMT-04:00",
                            "equivalentTimezone": "America/Asuncion"
                        },
                        {
                            "name": "Canada (St. John\u2019s) Time",
                            "displayOffset": "GMT-02:30",
                            "equivalentTimezone": "America/St_Johns"
                        },
                        {
                            "name": "Antarctica (Palmer) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "Antarctica/Palmer"
                        },
                        {
                            "name": "Antarctica (Rothera) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "Antarctica/Rothera"
                        },
                        {
                            "name": "Argentina (Argentina/La Rioja) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Argentina/La_Rioja"
                        },
                        {
                            "name": "Argentina (Argentina/Rio Gallegos) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Argentina/Rio_Gallegos"
                        },
                        {
                            "name": "Argentina (Argentina/Salta) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Argentina/Salta"
                        },
                        {
                            "name": "Argentina (Argentina/San Juan) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Argentina/San_Juan"
                        },
                        {
                            "name": "Argentina (Argentina/San Luis) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Argentina/San_Luis"
                        },
                        {
                            "name": "Argentina (Argentina/Tucuman) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Argentina/Tucuman"
                        },
                        {
                            "name": "Argentina (Argentina/Ushuaia) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Argentina/Ushuaia"
                        },
                        {
                            "name": "Argentina (Buenos Aires) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Argentina/Buenos_Aires"
                        },
                        {
                            "name": "Argentina (Catamarca) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Argentina/Catamarca"
                        },
                        {
                            "name": "Argentina (Cordoba) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Argentina/Cordoba"
                        },
                        {
                            "name": "Argentina (Jujuy) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Argentina/Jujuy"
                        },
                        {
                            "name": "Argentina (Mendoza) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Argentina/Mendoza"
                        },
                        {
                            "name": "Brazil (Araguaina) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Araguaina"
                        },
                        {
                            "name": "Brazil (Bahia) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Bahia"
                        },
                        {
                            "name": "Brazil (Belem) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Belem"
                        },
                        {
                            "name": "Brazil (Fortaleza) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Fortaleza"
                        },
                        {
                            "name": "Brazil (Maceio) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Maceio"
                        },
                        {
                            "name": "Brazil (Recife) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Recife"
                        },
                        {
                            "name": "Brazil (Santarem) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Santarem"
                        },
                        {
                            "name": "Brazil (Sao Paulo) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Sao_Paulo"
                        },
                        {
                            "name": "Falkland Islands Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "Atlantic/Stanley"
                        },
                        {
                            "name": "French Guiana Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Cayenne"
                        },
                        {
                            "name": "Suriname Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Paramaribo"
                        },
                        {
                            "name": "Unknown Region (Punta Arenas) Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Punta_Arenas"
                        },
                        {
                            "name": "Uruguay Time",
                            "displayOffset": "GMT-03:00",
                            "equivalentTimezone": "America/Montevideo"
                        },
                        {
                            "name": "World (Miquelon) Time",
                            "displayOffset": "GMT-02:00",
                            "equivalentTimezone": "America/Miquelon"
                        },
                        {
                            "name": "Brazil (Noronha) Time",
                            "displayOffset": "GMT-02:00",
                            "equivalentTimezone": "America/Noronha"
                        },
                        {
                            "name": "South Georgia & South Sandwich Islands Time",
                            "displayOffset": "GMT-02:00",
                            "equivalentTimezone": "Atlantic/South_Georgia"
                        },
                        {
                            "name": "Cape Verde Time",
                            "displayOffset": "GMT-01:00",
                            "equivalentTimezone": "Atlantic/Cape_Verde"
                        },
                        {
                            "name": "Greenland (Ittoqqortoormiit) Time",
                            "displayOffset": "GMT+00:00",
                            "equivalentTimezone": "America/Scoresbysund"
                        },
                        {
                            "name": "Portugal (Azores) Time",
                            "displayOffset": "GMT+00:00",
                            "equivalentTimezone": "Atlantic/Azores"
                        },
                        {
                            "name": "Burkina Faso Time",
                            "displayOffset": "GMT+00:00",
                            "equivalentTimezone": "Africa/Ouagadougou"
                        },
                        {
                            "name": "C\u00f4te d\u2019Ivoire Time",
                            "displayOffset": "GMT+00:00",
                            "equivalentTimezone": "Africa/Abidjan"
                        },
                        {
                            "name": "Gambia Time",
                            "displayOffset": "GMT+00:00",
                            "equivalentTimezone": "Africa/Banjul"
                        },
                        {
                            "name": "Ghana Time",
                            "displayOffset": "GMT+00:00",
                            "equivalentTimezone": "Africa/Accra"
                        },
                        {
                            "name": "Greenland (Danmarkshavn) Time",
                            "displayOffset": "GMT+00:00",
                            "equivalentTimezone": "America/Danmarkshavn"
                        },
                        {
                            "name": "Guinea Time",
                            "displayOffset": "GMT+00:00",
                            "equivalentTimezone": "Africa/Conakry"
                        },
                        {
                            "name": "Guinea-Bissau Time",
                            "displayOffset": "GMT+00:00",
                            "equivalentTimezone": "Africa/Bissau"
                        },
                        {
                            "name": "Iceland Time",
                            "displayOffset": "GMT+00:00",
                            "equivalentTimezone": "Atlantic/Reykjavik"
                        },
                        {
                            "name": "Liberia Time",
                            "displayOffset": "GMT+00:00",
                            "equivalentTimezone": "Africa/Monrovia"
                        },
                        {
                            "name": "Mali Time",
                            "displayOffset": "GMT+00:00",
                            "equivalentTimezone": "Africa/Bamako"
                        },
                        {
                            "name": "Mauritania Time",
                            "displayOffset": "GMT+00:00",
                            "equivalentTimezone": "Africa/Nouakchott"
                        },
                        {
                            "name": "S\u00e3o Tom\u00e9 & Pr\u00edncipe Time",
                            "displayOffset": "GMT+00:00",
                            "equivalentTimezone": "Africa/Sao_Tome"
                        },
                        {
                            "name": "Senegal Time",
                            "displayOffset": "GMT+00:00",
                            "equivalentTimezone": "Africa/Dakar"
                        },
                        {
                            "name": "Sierra Leone Time",
                            "displayOffset": "GMT+00:00",
                            "equivalentTimezone": "Africa/Freetown"
                        },
                        {
                            "name": "St. Helena Time",
                            "displayOffset": "GMT+00:00",
                            "equivalentTimezone": "Atlantic/St_Helena"
                        },
                        {
                            "name": "Togo Time",
                            "displayOffset": "GMT+00:00",
                            "equivalentTimezone": "Africa/Lome"
                        },
                        {
                            "name": "Coordinated Universal Time (UTC)",
                            "displayOffset": "GMT+00:00",
                            "equivalentTimezone": "UTC"
                        },
                        {
                            "name": "Faroe Islands Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Atlantic/Faroe"
                        },
                        {
                            "name": "Guernsey Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Europe/Guernsey"
                        },
                        {
                            "name": "Ireland Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Europe/Dublin"
                        },
                        {
                            "name": "Isle of Man Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Europe/Isle_of_Man"
                        },
                        {
                            "name": "Jersey Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Europe/Jersey"
                        },
                        {
                            "name": "Morocco Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Africa/Casablanca"
                        },
                        {
                            "name": "Portugal (Lisbon) Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Europe/Lisbon"
                        },
                        {
                            "name": "Portugal (Madeira) Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Atlantic/Madeira"
                        },
                        {
                            "name": "Spain (Canary) Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Atlantic/Canary"
                        },
                        {
                            "name": "United Kingdom Time",
                            "displayOffset": "GMT+00:00",
                            "equivalentTimezone": "Europe/London"
                        },
                        {
                            "name": "Western Sahara Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Africa/El_Aaiun"
                        },
                        {
                            "name": "World (Troll) Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Antarctica/Troll"
                        },
                        {
                            "name": "Algeria Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Africa/Algiers"
                        },
                        {
                            "name": "Angola Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Africa/Luanda"
                        },
                        {
                            "name": "Benin Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Africa/Porto-Novo"
                        },
                        {
                            "name": "Cameroon Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Africa/Douala"
                        },
                        {
                            "name": "Central African Republic Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Africa/Bangui"
                        },
                        {
                            "name": "Chad Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Africa/Ndjamena"
                        },
                        {
                            "name": "Congo - Brazzaville Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Africa/Brazzaville"
                        },
                        {
                            "name": "Congo - Kinshasa (Kinshasa) Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Africa/Kinshasa"
                        },
                        {
                            "name": "Equatorial Guinea Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Africa/Malabo"
                        },
                        {
                            "name": "Gabon Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Africa/Libreville"
                        },
                        {
                            "name": "Niger Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Africa/Niamey"
                        },
                        {
                            "name": "Nigeria Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Africa/Lagos"
                        },
                        {
                            "name": "Tunisia Time",
                            "displayOffset": "GMT+01:00",
                            "equivalentTimezone": "Africa/Tunis"
                        },
                        {
                            "name": "European Central Time (CET)",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "CET"
                        },
                        {
                            "name": "Albania Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Tirane"
                        },
                        {
                            "name": "Andorra Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Andorra"
                        },
                        {
                            "name": "Austria Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Vienna"
                        },
                        {
                            "name": "Belgium Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Brussels"
                        },
                        {
                            "name": "Bosnia & Herzegovina Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Sarajevo"
                        },
                        {
                            "name": "Croatia Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Zagreb"
                        },
                        {
                            "name": "Czech Republic Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Prague"
                        },
                        {
                            "name": "Denmark Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Copenhagen"
                        },
                        {
                            "name": "France Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Paris"
                        },
                        {
                            "name": "Germany (Berlin) Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Berlin"
                        },
                        {
                            "name": "Germany (Busingen) Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Busingen"
                        },
                        {
                            "name": "Gibraltar Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Gibraltar"
                        },
                        {
                            "name": "Hungary Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Budapest"
                        },
                        {
                            "name": "Italy Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Rome"
                        },
                        {
                            "name": "Liechtenstein Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Vaduz"
                        },
                        {
                            "name": "Luxembourg Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Luxembourg"
                        },
                        {
                            "name": "Macedonia Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Skopje"
                        },
                        {
                            "name": "Malta Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Malta"
                        },
                        {
                            "name": "Monaco Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Monaco"
                        },
                        {
                            "name": "Montenegro Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Podgorica"
                        },
                        {
                            "name": "Netherlands Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Amsterdam"
                        },
                        {
                            "name": "Norway Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Oslo"
                        },
                        {
                            "name": "Poland Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Warsaw"
                        },
                        {
                            "name": "San Marino Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/San_Marino"
                        },
                        {
                            "name": "Serbia Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Belgrade"
                        },
                        {
                            "name": "Slovakia Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Bratislava"
                        },
                        {
                            "name": "Slovenia Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Ljubljana"
                        },
                        {
                            "name": "Spain (Ceuta) Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Africa/Ceuta"
                        },
                        {
                            "name": "Spain (Madrid) Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Madrid"
                        },
                        {
                            "name": "Svalbard & Jan Mayen Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Arctic/Longyearbyen"
                        },
                        {
                            "name": "Sweden Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Stockholm"
                        },
                        {
                            "name": "Switzerland Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Zurich"
                        },
                        {
                            "name": "Vatican City Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Vatican"
                        },
                        {
                            "name": "Botswana Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Africa/Gaborone"
                        },
                        {
                            "name": "Burundi Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Africa/Bujumbura"
                        },
                        {
                            "name": "Congo - Kinshasa (Lubumbashi) Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Africa/Lubumbashi"
                        },
                        {
                            "name": "Egypt Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Africa/Cairo"
                        },
                        {
                            "name": "Lesotho Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Africa/Maseru"
                        },
                        {
                            "name": "Libya Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Africa/Tripoli"
                        },
                        {
                            "name": "Malawi Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Africa/Blantyre"
                        },
                        {
                            "name": "Mozambique Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Africa/Maputo"
                        },
                        {
                            "name": "Namibia Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Africa/Windhoek"
                        },
                        {
                            "name": "Russia (Kaliningrad) Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Europe/Kaliningrad"
                        },
                        {
                            "name": "Rwanda Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Africa/Kigali"
                        },
                        {
                            "name": "South Africa Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Africa/Johannesburg"
                        },
                        {
                            "name": "Sudan Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Africa/Khartoum"
                        },
                        {
                            "name": "Swaziland Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Africa/Mbabane"
                        },
                        {
                            "name": "Zambia Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Africa/Lusaka"
                        },
                        {
                            "name": "Zimbabwe Time",
                            "displayOffset": "GMT+02:00",
                            "equivalentTimezone": "Africa/Harare"
                        },
                        {
                            "name": "\u00c5land Islands Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Europe/Mariehamn"
                        },
                        {
                            "name": "Bulgaria Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Europe/Sofia"
                        },
                        {
                            "name": "Cyprus Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Asia/Nicosia"
                        },
                        {
                            "name": "Eastern European Time (EET)",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "EET"
                        },
                        {
                            "name": "Estonia Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Europe/Tallinn"
                        },
                        {
                            "name": "Finland Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Europe/Helsinki"
                        },
                        {
                            "name": "Greece Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Europe/Athens"
                        },
                        {
                            "name": "Israel Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Asia/Jerusalem"
                        },
                        {
                            "name": "Jordan Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Asia/Amman"
                        },
                        {
                            "name": "Latvia Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Europe/Riga"
                        },
                        {
                            "name": "Lebanon Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Asia/Beirut"
                        },
                        {
                            "name": "Lithuania Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Europe/Vilnius"
                        },
                        {
                            "name": "Moldova Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Europe/Chisinau"
                        },
                        {
                            "name": "Romania Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Europe/Bucharest"
                        },
                        {
                            "name": "Syria Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Asia/Damascus"
                        },
                        {
                            "name": "Ukraine (Kiev) Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Europe/Kiev"
                        },
                        {
                            "name": "Ukraine (Uzhhorod) Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Europe/Uzhgorod"
                        },
                        {
                            "name": "Ukraine (Zaporozhye) Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Europe/Zaporozhye"
                        },
                        {
                            "name": "Unknown Region (Famagusta) Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Asia/Famagusta"
                        },
                        {
                            "name": "World (Gaza) Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Asia/Gaza"
                        },
                        {
                            "name": "World (Hebron) Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Asia/Hebron"
                        },
                        {
                            "name": "Antarctica (Syowa) Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Antarctica/Syowa"
                        },
                        {
                            "name": "Bahrain Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Asia/Bahrain"
                        },
                        {
                            "name": "Belarus Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Europe/Minsk"
                        },
                        {
                            "name": "Comoros Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Indian/Comoro"
                        },
                        {
                            "name": "Djibouti Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Africa/Djibouti"
                        },
                        {
                            "name": "Eritrea Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Africa/Asmara"
                        },
                        {
                            "name": "Ethiopia Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Africa/Addis_Ababa"
                        },
                        {
                            "name": "Iraq Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Asia/Baghdad"
                        },
                        {
                            "name": "Kenya Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Africa/Nairobi"
                        },
                        {
                            "name": "Kuwait Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Asia/Kuwait"
                        },
                        {
                            "name": "Madagascar Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Indian/Antananarivo"
                        },
                        {
                            "name": "Mayotte Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Indian/Mayotte"
                        },
                        {
                            "name": "Qatar Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Asia/Qatar"
                        },
                        {
                            "name": "Russia (Moscow) Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Europe/Moscow"
                        },
                        {
                            "name": "Russia (Simferopol) Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Europe/Simferopol"
                        },
                        {
                            "name": "Saudi Arabia Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Asia/Riyadh"
                        },
                        {
                            "name": "Somalia Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Africa/Mogadishu"
                        },
                        {
                            "name": "South Sudan Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Africa/Juba"
                        },
                        {
                            "name": "Tanzania Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Africa/Dar_es_Salaam"
                        },
                        {
                            "name": "Turkey Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Europe/Istanbul"
                        },
                        {
                            "name": "Uganda Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Africa/Kampala"
                        },
                        {
                            "name": "Unknown Region (Kirov) Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Europe/Kirov"
                        },
                        {
                            "name": "Yemen Time",
                            "displayOffset": "GMT+03:00",
                            "equivalentTimezone": "Asia/Aden"
                        },
                        {
                            "name": "Iran Time",
                            "displayOffset": "GMT+03:30",
                            "equivalentTimezone": "Asia/Tehran"
                        },
                        {
                            "name": "Armenia Time",
                            "displayOffset": "GMT+04:00",
                            "equivalentTimezone": "Asia/Yerevan"
                        },
                        {
                            "name": "Azerbaijan Time",
                            "displayOffset": "GMT+04:00",
                            "equivalentTimezone": "Asia/Baku"
                        },
                        {
                            "name": "Georgia Time",
                            "displayOffset": "GMT+04:00",
                            "equivalentTimezone": "Asia/Tbilisi"
                        },
                        {
                            "name": "Mauritius Time",
                            "displayOffset": "GMT+04:00",
                            "equivalentTimezone": "Indian/Mauritius"
                        },
                        {
                            "name": "Oman Time",
                            "displayOffset": "GMT+04:00",
                            "equivalentTimezone": "Asia/Muscat"
                        },
                        {
                            "name": "R\u00e9union Time",
                            "displayOffset": "GMT+04:00",
                            "equivalentTimezone": "Indian/Reunion"
                        },
                        {
                            "name": "Russia (Samara) Time",
                            "displayOffset": "GMT+04:00",
                            "equivalentTimezone": "Europe/Samara"
                        },
                        {
                            "name": "Russia (Volgograd) Time",
                            "displayOffset": "GMT+04:00",
                            "equivalentTimezone": "Europe/Volgograd"
                        },
                        {
                            "name": "Seychelles Time",
                            "displayOffset": "GMT+04:00",
                            "equivalentTimezone": "Indian/Mahe"
                        },
                        {
                            "name": "United Arab Emirates Time",
                            "displayOffset": "GMT+04:00",
                            "equivalentTimezone": "Asia/Dubai"
                        },
                        {
                            "name": "Unknown Region (Astrakhan) Time",
                            "displayOffset": "GMT+04:00",
                            "equivalentTimezone": "Europe/Astrakhan"
                        },
                        {
                            "name": "Unknown Region (Saratov) Time",
                            "displayOffset": "GMT+04:00",
                            "equivalentTimezone": "Europe/Saratov"
                        },
                        {
                            "name": "Unknown Region (Ulyanovsk) Time",
                            "displayOffset": "GMT+04:00",
                            "equivalentTimezone": "Europe/Ulyanovsk"
                        },
                        {
                            "name": "Afghanistan Time",
                            "displayOffset": "GMT+04:30",
                            "equivalentTimezone": "Asia/Kabul"
                        },
                        {
                            "name": "Antarctica (Mawson) Time",
                            "displayOffset": "GMT+05:00",
                            "equivalentTimezone": "Antarctica/Mawson"
                        },
                        {
                            "name": "French Southern Territories Time",
                            "displayOffset": "GMT+05:00",
                            "equivalentTimezone": "Indian/Kerguelen"
                        },
                        {
                            "name": "Kazakhstan (Aqtau) Time",
                            "displayOffset": "GMT+05:00",
                            "equivalentTimezone": "Asia/Aqtau"
                        },
                        {
                            "name": "Kazakhstan (Aqtobe) Time",
                            "displayOffset": "GMT+05:00",
                            "equivalentTimezone": "Asia/Aqtobe"
                        },
                        {
                            "name": "Kazakhstan (Oral) Time",
                            "displayOffset": "GMT+05:00",
                            "equivalentTimezone": "Asia/Oral"
                        },
                        {
                            "name": "Kazakhstan (Qyzylorda) Time",
                            "displayOffset": "GMT+05:00",
                            "equivalentTimezone": "Asia/Qyzylorda"
                        },
                        {
                            "name": "Maldives Time",
                            "displayOffset": "GMT+05:00",
                            "equivalentTimezone": "Indian/Maldives"
                        },
                        {
                            "name": "Pakistan Time",
                            "displayOffset": "GMT+05:00",
                            "equivalentTimezone": "Asia/Karachi"
                        },
                        {
                            "name": "Russia (Yekaterinburg) Time",
                            "displayOffset": "GMT+05:00",
                            "equivalentTimezone": "Asia/Yekaterinburg"
                        },
                        {
                            "name": "Tajikistan Time",
                            "displayOffset": "GMT+05:00",
                            "equivalentTimezone": "Asia/Dushanbe"
                        },
                        {
                            "name": "Turkmenistan Time",
                            "displayOffset": "GMT+05:00",
                            "equivalentTimezone": "Asia/Ashgabat"
                        },
                        {
                            "name": "Unknown Region (Atyrau) Time",
                            "displayOffset": "GMT+05:00",
                            "equivalentTimezone": "Asia/Atyrau"
                        },
                        {
                            "name": "Uzbekistan (Samarkand) Time",
                            "displayOffset": "GMT+05:00",
                            "equivalentTimezone": "Asia/Samarkand"
                        },
                        {
                            "name": "Uzbekistan (Tashkent) Time",
                            "displayOffset": "GMT+05:00",
                            "equivalentTimezone": "Asia/Tashkent"
                        },
                        {
                            "name": "India Time",
                            "displayOffset": "GMT+05:30",
                            "equivalentTimezone": "Asia/Calcutta"
                        },
                        {
                            "name": "Sri Lanka Time",
                            "displayOffset": "GMT+05:30",
                            "equivalentTimezone": "Asia/Colombo"
                        },
                        {
                            "name": "Nepal Time",
                            "displayOffset": "GMT+05:45",
                            "equivalentTimezone": "Asia/Kathmandu"
                        },
                        {
                            "name": "Antarctica (Vostok) Time",
                            "displayOffset": "GMT+06:00",
                            "equivalentTimezone": "Antarctica/Vostok"
                        },
                        {
                            "name": "Bangladesh Time",
                            "displayOffset": "GMT+06:00",
                            "equivalentTimezone": "Asia/Dhaka"
                        },
                        {
                            "name": "Bhutan Time",
                            "displayOffset": "GMT+06:00",
                            "equivalentTimezone": "Asia/Thimphu"
                        },
                        {
                            "name": "British Indian Ocean Territory Time",
                            "displayOffset": "GMT+06:00",
                            "equivalentTimezone": "Indian/Chagos"
                        },
                        {
                            "name": "China (Urumqi) Time",
                            "displayOffset": "GMT+06:00",
                            "equivalentTimezone": "Asia/Urumqi"
                        },
                        {
                            "name": "Kazakhstan (Almaty) Time",
                            "displayOffset": "GMT+06:00",
                            "equivalentTimezone": "Asia/Almaty"
                        },
                        {
                            "name": "Kyrgyzstan Time",
                            "displayOffset": "GMT+06:00",
                            "equivalentTimezone": "Asia/Bishkek"
                        },
                        {
                            "name": "Russia (Omsk) Time",
                            "displayOffset": "GMT+06:00",
                            "equivalentTimezone": "Asia/Omsk"
                        },
                        {
                            "name": "Unknown Region (Qostanay) Time",
                            "displayOffset": "GMT+06:00",
                            "equivalentTimezone": "Asia/Qostanay"
                        },
                        {
                            "name": "Cocos (Keeling) Islands Time",
                            "displayOffset": "GMT+06:30",
                            "equivalentTimezone": "Indian/Cocos"
                        },
                        {
                            "name": "Myanmar (Burma) Time",
                            "displayOffset": "GMT+06:30",
                            "equivalentTimezone": "Asia/Rangoon"
                        },
                        {
                            "name": "Unknown Region (Yangon) Time",
                            "displayOffset": "GMT+06:30",
                            "equivalentTimezone": "Asia/Yangon"
                        },
                        {
                            "name": "Antarctica (Davis) Time",
                            "displayOffset": "GMT+07:00",
                            "equivalentTimezone": "Antarctica/Davis"
                        },
                        {
                            "name": "Cambodia Time",
                            "displayOffset": "GMT+07:00",
                            "equivalentTimezone": "Asia/Phnom_Penh"
                        },
                        {
                            "name": "Christmas Island Time",
                            "displayOffset": "GMT+07:00",
                            "equivalentTimezone": "Indian/Christmas"
                        },
                        {
                            "name": "Indonesia (Jakarta) Time",
                            "displayOffset": "GMT+07:00",
                            "equivalentTimezone": "Asia/Jakarta"
                        },
                        {
                            "name": "Indonesia (Pontianak) Time",
                            "displayOffset": "GMT+07:00",
                            "equivalentTimezone": "Asia/Pontianak"
                        },
                        {
                            "name": "Laos Time",
                            "displayOffset": "GMT+07:00",
                            "equivalentTimezone": "Asia/Vientiane"
                        },
                        {
                            "name": "Russia (Krasnoyarsk) Time",
                            "displayOffset": "GMT+07:00",
                            "equivalentTimezone": "Asia/Krasnoyarsk"
                        },
                        {
                            "name": "Russia (Novokuznetsk) Time",
                            "displayOffset": "GMT+07:00",
                            "equivalentTimezone": "Asia/Novokuznetsk"
                        },
                        {
                            "name": "Russia (Novosibirsk) Time",
                            "displayOffset": "GMT+07:00",
                            "equivalentTimezone": "Asia/Novosibirsk"
                        },
                        {
                            "name": "Thailand Time",
                            "displayOffset": "GMT+07:00",
                            "equivalentTimezone": "Asia/Bangkok"
                        },
                        {
                            "name": "Unknown Region (Barnaul) Time",
                            "displayOffset": "GMT+07:00",
                            "equivalentTimezone": "Asia/Barnaul"
                        },
                        {
                            "name": "Unknown Region (Tomsk) Time",
                            "displayOffset": "GMT+07:00",
                            "equivalentTimezone": "Asia/Tomsk"
                        },
                        {
                            "name": "Vietnam Time",
                            "displayOffset": "GMT+07:00",
                            "equivalentTimezone": "Asia/Ho_Chi_Minh"
                        },
                        {
                            "name": "World (Hovd) Time",
                            "displayOffset": "GMT+07:00",
                            "equivalentTimezone": "Asia/Hovd"
                        },
                        {
                            "name": "Antarctica (Casey) Time",
                            "displayOffset": "GMT+08:00",
                            "equivalentTimezone": "Antarctica/Casey"
                        },
                        {
                            "name": "Australia (Perth) Time",
                            "displayOffset": "GMT+08:00",
                            "equivalentTimezone": "Australia/Perth"
                        },
                        {
                            "name": "Brunei Time",
                            "displayOffset": "GMT+08:00",
                            "equivalentTimezone": "Asia/Brunei"
                        },
                        {
                            "name": "China (Shanghai) Time",
                            "displayOffset": "GMT+08:00",
                            "equivalentTimezone": "Asia/Shanghai"
                        },
                        {
                            "name": "Hong Kong SAR China Time",
                            "displayOffset": "GMT+08:00",
                            "equivalentTimezone": "Asia/Hong_Kong"
                        },
                        {
                            "name": "Indonesia (Makassar) Time",
                            "displayOffset": "GMT+08:00",
                            "equivalentTimezone": "Asia/Makassar"
                        },
                        {
                            "name": "Macau SAR China Time",
                            "displayOffset": "GMT+08:00",
                            "equivalentTimezone": "Asia/Macau"
                        },
                        {
                            "name": "Malaysia (Kuala Lumpur) Time",
                            "displayOffset": "GMT+08:00",
                            "equivalentTimezone": "Asia/Kuala_Lumpur"
                        },
                        {
                            "name": "Malaysia (Kuching) Time",
                            "displayOffset": "GMT+08:00",
                            "equivalentTimezone": "Asia/Kuching"
                        },
                        {
                            "name": "Mongolia (Choibalsan) Time",
                            "displayOffset": "GMT+08:00",
                            "equivalentTimezone": "Asia/Choibalsan"
                        },
                        {
                            "name": "Mongolia (Ulaanbaatar) Time",
                            "displayOffset": "GMT+08:00",
                            "equivalentTimezone": "Asia/Ulaanbaatar"
                        },
                        {
                            "name": "Philippines Time",
                            "displayOffset": "GMT+08:00",
                            "equivalentTimezone": "Asia/Manila"
                        },
                        {
                            "name": "Russia (Irkutsk) Time",
                            "displayOffset": "GMT+08:00",
                            "equivalentTimezone": "Asia/Irkutsk"
                        },
                        {
                            "name": "Singapore Time",
                            "displayOffset": "GMT+08:00",
                            "equivalentTimezone": "Asia/Singapore"
                        },
                        {
                            "name": "Taiwan Time",
                            "displayOffset": "GMT+08:00",
                            "equivalentTimezone": "Asia/Taipei"
                        },
                        {
                            "name": "World (Eucla) Time",
                            "displayOffset": "GMT+08:45",
                            "equivalentTimezone": "Australia/Eucla"
                        },
                        {
                            "name": "Indonesia (Jayapura) Time",
                            "displayOffset": "GMT+09:00",
                            "equivalentTimezone": "Asia/Jayapura"
                        },
                        {
                            "name": "Japan Time",
                            "displayOffset": "GMT+09:00",
                            "equivalentTimezone": "Asia/Tokyo"
                        },
                        {
                            "name": "North Korea Time",
                            "displayOffset": "GMT+09:00",
                            "equivalentTimezone": "Asia/Pyongyang"
                        },
                        {
                            "name": "Palau Time",
                            "displayOffset": "GMT+09:00",
                            "equivalentTimezone": "Pacific/Palau"
                        },
                        {
                            "name": "Russia (Chita) Time",
                            "displayOffset": "GMT+09:00",
                            "equivalentTimezone": "Asia/Chita"
                        },
                        {
                            "name": "Russia (Khandyga) Time",
                            "displayOffset": "GMT+09:00",
                            "equivalentTimezone": "Asia/Khandyga"
                        },
                        {
                            "name": "Russia (Yakutsk) Time",
                            "displayOffset": "GMT+09:00",
                            "equivalentTimezone": "Asia/Yakutsk"
                        },
                        {
                            "name": "South Korea Time",
                            "displayOffset": "GMT+09:00",
                            "equivalentTimezone": "Asia/Seoul"
                        },
                        {
                            "name": "Timor-Leste Time",
                            "displayOffset": "GMT+09:00",
                            "equivalentTimezone": "Asia/Dili"
                        },
                        {
                            "name": "Australia (Darwin) Time",
                            "displayOffset": "GMT+09:30",
                            "equivalentTimezone": "Australia/Darwin"
                        },
                        {
                            "name": "Australia (Adelaide) Time",
                            "displayOffset": "GMT+09:30",
                            "equivalentTimezone": "Australia/Adelaide"
                        },
                        {
                            "name": "Australia (Broken Hill) Time",
                            "displayOffset": "GMT+09:30",
                            "equivalentTimezone": "Australia/Broken_Hill"
                        },
                        {
                            "name": "Antarctica (Dumont d\u2019Urville) Time",
                            "displayOffset": "GMT+10:00",
                            "equivalentTimezone": "Antarctica/DumontDUrville"
                        },
                        {
                            "name": "Australia (Brisbane) Time",
                            "displayOffset": "GMT+10:00",
                            "equivalentTimezone": "Australia/Brisbane"
                        },
                        {
                            "name": "Australia (Lindeman) Time",
                            "displayOffset": "GMT+10:00",
                            "equivalentTimezone": "Australia/Lindeman"
                        },
                        {
                            "name": "Guam Time",
                            "displayOffset": "GMT+10:00",
                            "equivalentTimezone": "Pacific/Guam"
                        },
                        {
                            "name": "Micronesia (Chuuk) Time",
                            "displayOffset": "GMT+10:00",
                            "equivalentTimezone": "Pacific/Chuuk"
                        },
                        {
                            "name": "Northern Mariana Islands Time",
                            "displayOffset": "GMT+10:00",
                            "equivalentTimezone": "Pacific/Saipan"
                        },
                        {
                            "name": "Papua New Guinea (Port Moresby) Time",
                            "displayOffset": "GMT+10:00",
                            "equivalentTimezone": "Pacific/Port_Moresby"
                        },
                        {
                            "name": "Russia (Ust-Nera) Time",
                            "displayOffset": "GMT+10:00",
                            "equivalentTimezone": "Asia/Ust-Nera"
                        },
                        {
                            "name": "Russia (Vladivostok) Time",
                            "displayOffset": "GMT+10:00",
                            "equivalentTimezone": "Asia/Vladivostok"
                        },
                        {
                            "name": "Australia (Currie) Time",
                            "displayOffset": "GMT+10:00",
                            "equivalentTimezone": "Australia/Currie"
                        },
                        {
                            "name": "Australia (Hobart) Time",
                            "displayOffset": "GMT+10:00",
                            "equivalentTimezone": "Australia/Hobart"
                        },
                        {
                            "name": "Australia (Melbourne) Time",
                            "displayOffset": "GMT+10:00",
                            "equivalentTimezone": "Australia/Melbourne"
                        },
                        {
                            "name": "Australia (Sydney) Time",
                            "displayOffset": "GMT+10:00",
                            "equivalentTimezone": "Australia/Sydney"
                        },
                        {
                            "name": "World (Lord Howe) Time",
                            "displayOffset": "GMT+10:30",
                            "equivalentTimezone": "Australia/Lord_Howe"
                        },
                        {
                            "name": "Australia (Macquarie) Time",
                            "displayOffset": "GMT+11:00",
                            "equivalentTimezone": "Antarctica/Macquarie"
                        },
                        {
                            "name": "Micronesia (Kosrae) Time",
                            "displayOffset": "GMT+11:00",
                            "equivalentTimezone": "Pacific/Kosrae"
                        },
                        {
                            "name": "Micronesia (Pohnpei) Time",
                            "displayOffset": "GMT+11:00",
                            "equivalentTimezone": "Pacific/Pohnpei"
                        },
                        {
                            "name": "New Caledonia Time",
                            "displayOffset": "GMT+11:00",
                            "equivalentTimezone": "Pacific/Noumea"
                        },
                        {
                            "name": "Papua New Guinea (Bougainville) Time",
                            "displayOffset": "GMT+11:00",
                            "equivalentTimezone": "Pacific/Bougainville"
                        },
                        {
                            "name": "Russia (Magadan) Time",
                            "displayOffset": "GMT+11:00",
                            "equivalentTimezone": "Asia/Magadan"
                        },
                        {
                            "name": "Russia (Sakhalin) Time",
                            "displayOffset": "GMT+11:00",
                            "equivalentTimezone": "Asia/Sakhalin"
                        },
                        {
                            "name": "Russia (Srednekolymsk) Time",
                            "displayOffset": "GMT+11:00",
                            "equivalentTimezone": "Asia/Srednekolymsk"
                        },
                        {
                            "name": "Solomon Islands Time",
                            "displayOffset": "GMT+11:00",
                            "equivalentTimezone": "Pacific/Guadalcanal"
                        },
                        {
                            "name": "Vanuatu Time",
                            "displayOffset": "GMT+11:00",
                            "equivalentTimezone": "Pacific/Efate"
                        },
                        {
                            "name": "Norfolk Island Time",
                            "displayOffset": "GMT+11:00",
                            "equivalentTimezone": "Pacific/Norfolk"
                        },
                        {
                            "name": "Fiji Time",
                            "displayOffset": "GMT+12:00",
                            "equivalentTimezone": "Pacific/Fiji"
                        },
                        {
                            "name": "Kiribati (Tarawa) Time",
                            "displayOffset": "GMT+12:00",
                            "equivalentTimezone": "Pacific/Tarawa"
                        },
                        {
                            "name": "Marshall Islands (Kwajalein) Time",
                            "displayOffset": "GMT+12:00",
                            "equivalentTimezone": "Pacific/Kwajalein"
                        },
                        {
                            "name": "Marshall Islands (Majuro) Time",
                            "displayOffset": "GMT+12:00",
                            "equivalentTimezone": "Pacific/Majuro"
                        },
                        {
                            "name": "Nauru Time",
                            "displayOffset": "GMT+12:00",
                            "equivalentTimezone": "Pacific/Nauru"
                        },
                        {
                            "name": "Russia (Anadyr) Time",
                            "displayOffset": "GMT+12:00",
                            "equivalentTimezone": "Asia/Anadyr"
                        },
                        {
                            "name": "Russia (Kamchatka) Time",
                            "displayOffset": "GMT+12:00",
                            "equivalentTimezone": "Asia/Kamchatka"
                        },
                        {
                            "name": "Tuvalu Time",
                            "displayOffset": "GMT+12:00",
                            "equivalentTimezone": "Pacific/Funafuti"
                        },
                        {
                            "name": "U.S. Outlying Islands (Wake) Time",
                            "displayOffset": "GMT+12:00",
                            "equivalentTimezone": "Pacific/Wake"
                        },
                        {
                            "name": "Wallis & Futuna Time",
                            "displayOffset": "GMT+12:00",
                            "equivalentTimezone": "Pacific/Wallis"
                        },
                        {
                            "name": "Antarctica (McMurdo) Time",
                            "displayOffset": "GMT+12:00",
                            "equivalentTimezone": "Antarctica/McMurdo"
                        },
                        {
                            "name": "New Zealand Time",
                            "displayOffset": "GMT+12:00",
                            "equivalentTimezone": "Pacific/Auckland"
                        },
                        {
                            "name": "World (Chatham) Time",
                            "displayOffset": "GMT+12:45",
                            "equivalentTimezone": "Pacific/Chatham"
                        },
                        {
                            "name": "Kiribati (Enderbury) Time",
                            "displayOffset": "GMT+13:00",
                            "equivalentTimezone": "Pacific/Enderbury"
                        },
                        {
                            "name": "Tokelau Time",
                            "displayOffset": "GMT+13:00",
                            "equivalentTimezone": "Pacific/Fakaofo"
                        },
                        {
                            "name": "Tonga Time",
                            "displayOffset": "GMT+13:00",
                            "equivalentTimezone": "Pacific/Tongatapu"
                        },
                        {
                            "name": "Samoa Time",
                            "displayOffset": "GMT+13:00",
                            "equivalentTimezone": "Pacific/Apia"
                        },
                        {
                            "name": "Kiribati (Kiritimati) Time",
                            "displayOffset": "GMT+14:00",
                            "equivalentTimezone": "Pacific/Kiritimati"
                        }
                    ],
                    "currencySymbol": "$",
                    "seatingChartKey": null,
                    "eventKey": "4383",
                    "seating": false
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113408,
        "executor_type": "THIRDPARTY",
        "executor_name": "getChallengeDetailsbyEventChallengeId",
        "executor_version": "v1",
        "executor_display_name": "Get Challenge Details by Event Challenge ID",
        "executor_description": "This API is used to get challenge details using the event challenge ID associated with the specified event.  This API is used on the host side. Event admins and super admins can access it.  It will return data like area, name, description, startDate, endDate, action, startDateUtc, endDateUtc, eventChallengeId, gamificationTabDisabled and other details.  To call this API, users have to pass query parameters with API URL like eventChallengeDetailId and authentication key to authenticate user.",
        "executor_category": "HostChallengeConfigAPI",
        "executor_category_group": "HostChallengeConfigAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/challenge/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "pass event challenge detail id required."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693202581307,
        "lastModifiedTime": 1693202581307,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "area": "Event",
                    "action": [
                        {
                            "name": "ticketPurchase",
                            "point": 10,
                            "users": 10
                        }
                    ],
                    "trigger": {
                        "event": [
                            4383
                        ]
                    },
                    "eventChallengeId": 4348,
                    "name": "challenge2",
                    "description": "",
                    "startDate": "2021/09/21 14:45",
                    "endDate": "2021/10/14 12:18",
                    "goal": 0,
                    "rewards": [],
                    "ticketTypeAllowInChallenge": [
                        7277
                    ],
                    "gamificationTabDisabled": false,
                    "startDateUtc": 1632215700000,
                    "endDateUtc": 1634194080000,
                    "type": "EARLY_BIRD"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113420,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllExhibitorHostDetails",
        "executor_version": "v1",
        "executor_display_name": "Get All Exhibitor Host Details",
        "executor_description": "This API Used to get all exhibitor host details associated with the specified event.  This API is used at the host side. Event admins and super admins can access this API. It will return data like ID and name.",
        "executor_category": "HostChallengeConfigAPI",
        "executor_category_group": "HostChallengeConfigAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/exhibitor/dropdown",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693206237713,
        "lastModifiedTime": 1693206237713,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "id": 2219,
                        "name": "exh5"
                    },
                    {
                        "id": 2218,
                        "name": "exh4"
                    },
                    {
                        "id": 2048,
                        "name": "exh333333333333333333"
                    },
                    {
                        "id": 2047,
                        "name": "exh2"
                    },
                    {
                        "id": 2046,
                        "name": "exh1"
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113409,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateChallengeDetailsbyEventChallengeId",
        "executor_version": "v1",
        "executor_display_name": "Update Challenge Details by Event Challenge ID",
        "executor_description": "This API is used to update challenge details using the event challenge ID.  This API can be used by admins and super admins to update challenge details. User can use this api to update challenge detail related to it like area, name, description, startDate, endDate, action, startDateUtc, endDateUtc, eventChallengeId, gamificationTabDisabled and other details.  To call this API, users have to pass query parameters with API URL like challenge details, eventChallengeDetailId and authentication key to authenticate user.",
        "executor_category": "HostChallengeConfigAPI",
        "executor_category_group": "HostChallengeConfigAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/challenge/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "pass event challenge detail id required."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "eventChallengeDTO": {
                    "eventChallengeId": 0,
                    "name": "string",
                    "description": "string",
                    "type": "STANDARD",
                    "area": "string",
                    "action": [
                        {
                            "name": "string",
                            "point": "string",
                            "+": [
                                "string"
                            ]
                        }
                    ],
                    "trigger": [
                        {
                            "name": "string",
                            "ids": [
                                0
                            ]
                        }
                    ],
                    "startDate": "string",
                    "endDate": "string",
                    "goal": 0,
                    "ticketTypeAllowInChallenge": [
                        0
                    ],
                    "gamificationTabDisabled": true,
                    "startDateUtc": "2023-08-28",
                    "endDateUtc": "2023-08-28"
                }
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693202677746,
        "lastModifiedTime": 1693202677746,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "string",
                    "type": "string"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113591,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllEventsOfUserByStatus",
        "executor_version": "v1",
        "executor_display_name": "Get All Events of User by Status",
        "executor_description": "This API is used to get a list of All Events Information of a user according to status.  This API is used when the user clicks on the My Events page from the Profile menu.  To call this API, we need to pass the path parameter of status and authorization token in API in the header.  An authorization token will be generated when the user login to the system.",
        "executor_category": "MyEvents",
        "executor_category_group": "MyEvents",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/myprofile/events/{status}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "status",
                "value": "",
                "description": "It contains event Status. It is either active or past."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693288917252,
        "lastModifiedTime": 1693288917252,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "name": "Test event 27/12/2021",
                        "eventURL": "test-event-27122021",
                        "eventStartDate": 1640585700000,
                        "eventEndDate": 1640619000000,
                        "eventType": "user",
                        "type": "OTHER",
                        "address": null,
                        "eventStripePublishableKey": "pk_test_51KBCFMB46n1TEDU7OVytF1Tt5ihjD70Ew0a3qEOQLq98AZXiVQ5d6qEnMO01tXEBd8BZFL0uxW5v18Mk7OX46Uoq00finz7xXY",
                        "eventLogo": "default_ae_images/Smooth_AE_Icon_700x350.png",
                        "numberOfTicketSold": 13,
                        "numberOfTotalTickets": 115
                    },
                    {
                        "name": "Test event 2 24/12/2021",
                        "eventURL": "test-event-2-24122021",
                        "eventStartDate": 1640326500000,
                        "eventEndDate": 1640446200000,
                        "eventType": "user",
                        "type": null,
                        "address": null,
                        "eventStripePublishableKey": "pk_test_51KAC3QHOA2QzvEuVPUd3avByinB46sV0OgcoK3PdhqWOjtkPX3512YI68sE3e91TTCQGJWY0mvJtzvYTlMoOeLSX00UnZcNL4n",
                        "eventLogo": "default_ae_images/Smooth_AE_Icon_700x350.png",
                        "numberOfTicketSold": 18,
                        "numberOfTotalTickets": 150
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113603,
        "executor_type": "THIRDPARTY",
        "executor_name": "getGeneralSettingsDetails",
        "executor_version": "v1",
        "executor_display_name": "Get general settings details",
        "executor_description": "This API is used to return data like currency, fundRaisingGoal, goalStartingAmount, raffleEnabled, currencySymbol and many more. This endpoint can be accessed by users with event admin access or greater.",
        "executor_category": "GeneralSettings",
        "executor_category_group": "GeneralSettings",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/settings/general",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693291162836,
        "lastModifiedTime": 1693291162836,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "allCurrencies": {
                        "additionalProp1": "string",
                        "additionalProp2": "string",
                        "additionalProp3": "string"
                    },
                    "analyticsId": "string",
                    "causeAuctionEnabled": false,
                    "currency": "AUD",
                    "currencySymbol": "string",
                    "donationEnabled": false,
                    "eventVenueType": "string",
                    "fundRaisingGoal": 0,
                    "goalStartingAmount": 0,
                    "raffleEnabled": false,
                    "replyToEmail": "string",
                    "silentAuctionEnabled": false,
                    "socialSharingEnabled": false,
                    "textToGiveAvailableUntil": "string",
                    "textToGiveEnabled": false,
                    "textToGiveSubscriptionStatus": "string",
                    "ticketingEnabled": false,
                    "totalFundRaisedShow": false,
                    "trackinPixelId": "string",
                    "trackingScript": "string",
                    "virtualEventScript": "string"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113604,
        "executor_type": "THIRDPARTY",
        "executor_name": "changeGeneralSettings",
        "executor_version": "v1",
        "executor_display_name": "Change General Settings",
        "executor_description": "This API is used to update data like Enable Ticketing, Enable Raffle, Enable Donation Page, Enable Silent Auctions, Enable Fund a Need, Enable Text To Give, Default 'Reply-to' email, Select Currency, Event Fundraising Goal (used for event display), Goal Starting Amount. This endpoint can be accessed by users with event admin access or greater. We need to pass the authentication key to authenticate the user,and the request body of HostGeneralSettings.",
        "executor_category": "GeneralSettings",
        "executor_category_group": "GeneralSettings",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/settings/general",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "currency": "AUD",
                "fundRaisingGoal": 0,
                "goalStartingAmount": 0,
                "silentAuctionEnabled": true,
                "raffleEnabled": true,
                "causeAuctionEnabled": true,
                "donationEnabled": true,
                "ticketingEnabled": true,
                "textToGiveEnabled": true,
                "analyticsId": "string",
                "totalFundRaisedShow": true,
                "socialSharingEnabled": true,
                "replyToEmail": "string",
                "trackingScript": "string",
                "virtualEventScript": "string",
                "textToGiveAvailableUntil": "string",
                "textToGiveSubscriptionStatus": "string",
                "eventVenueType": "string",
                "trackinPixelId": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693291254298,
        "lastModifiedTime": 1693291254299,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Host general settings saved successfully",
                    "type": "Success"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Not Event Host"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113606,
        "executor_type": "THIRDPARTY",
        "executor_name": "changeAttendeeProfileSettings",
        "executor_version": "v1",
        "executor_display_name": "Change attendee profile settings",
        "executor_description": "This API is used to update the value of Enable Pronouns Field and Accept Direct Messages. By default, value of Enable Pronouns Field and Accept Direct Messages is true. This endpoint can be accessed by users with event admin access or greater. We need to pass the authentication key to authenticate the user and type isActive pass as path param.",
        "executor_category": "GeneralSettings",
        "executor_category_group": "GeneralSettings",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/settings/{type}/isActive/{isActive}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "type",
                "value": "",
                "description": "Type contain either isAcceptDirectMessages or isPronoun"
            },
            {
                "key": "isActive",
                "value": "",
                "description": "It contain either true or false"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693291446926,
        "lastModifiedTime": 1693291446926,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Host general settings saved successfully",
                    "type": "Success"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Not Event Host"
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": "Created",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": null
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113611,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadTheUniqueCheckedInAttendeesCsv",
        "executor_version": "v1",
        "executor_display_name": "Download the unique checked-in attendees CSV",
        "executor_description": "This API is used to download the attendee list of the specific event ID. Note that this API does not contain any Accelevent employee or admin@admin.com account checked-in records as they will not be added and get charged for attendee overages.",
        "executor_category": "Billing",
        "executor_category_group": "Billing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/event/{eventId}/AttendeeList",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventId",
                "value": "",
                "description": "Unique identifier of an event."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693293171250,
        "lastModifiedTime": 1693293171250,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "There are no checked in attendees available for this event",
                    "errorCode": "4060525",
                    "developerMessage": "There are no checked in attendees available for this event"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized to download list of Attendees.",
                    "errorCode": "4060526",
                    "developerMessage": "Not authorized to download list of Attendees."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113615,
        "executor_type": "THIRDPARTY",
        "executor_name": "reactivateChargebeePlanForTextToGive",
        "executor_version": "v1",
        "executor_display_name": "Reactivate Chargebee Plan For Text-To-Give",
        "executor_description": "This API is used to reactivate the Chargebee plan for text-to-give module.",
        "executor_category": "Billing",
        "executor_category_group": "Billing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/chargebee/billing/textToGive/reactivate/{subscriptionId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "subscriptionId",
                "value": "",
                "description": "It contain the subscription Id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693293722099,
        "lastModifiedTime": 1693293722099,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Renewing your subscription will take effect at 07/04/2022."
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Created"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Not Event Host"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113613,
        "executor_type": "THIRDPARTY",
        "executor_name": "updateChargebeeBillingSettings",
        "executor_version": "v1",
        "executor_display_name": "Update Chargebee Billing Settings",
        "executor_description": "This API is used to update billing settings through Chargebee. This endpoint can be accessed by users with event admin access or greater. We need to request body of ActiveModulesDto, query param of token, country code. In ActiveModulesDto pass a module Name like RAFFLE, TEXT_TO_GIVE etc and plan name like Starter, Professional, etc and quantity, needToActivate.",
        "executor_category": "Billing",
        "executor_category_group": "Billing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/chargebee/billing",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "token",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "countryCode",
                "value": "",
                "description": "Country code",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": [
                {
                    "moduleName": "SILENT_AUCTION",
                    "moduleActivationCharge": "STARTER",
                    "quantity": 0,
                    "needToActivate": true
                }
            ],
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693293452106,
        "lastModifiedTime": 1693293452106,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "message": "Success",
                    "type": "Success"
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Created"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Not Event Host"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113610,
        "executor_type": "THIRDPARTY",
        "executor_name": "getHostBillingSettings",
        "executor_version": "v1",
        "executor_display_name": "Get host billing settings",
        "executor_description": "This API is used to download the attendee list of event. We need to pass the authentication key to authenticate the user.",
        "executor_category": "Billing",
        "executor_category_group": "Billing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/settings/billing",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693293033233,
        "lastModifiedTime": 1693293033234,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "billingType": "Paid",
                    "causeAuctionActivated": false,
                    "countryCodes": [
                        "US"
                    ],
                    "numberOfDaysOfEvent": 0,
                    "numberOfExhibitor": 0,
                    "numberOfPurchasedExhibitor": 0,
                    "publicKey": "string",
                    "raffleActivated": false,
                    "slientAuctionActivated": false,
                    "textToGiveActivated": false,
                    "textToGiveAmount": 0,
                    "textToGiveSubscriptionId": "string",
                    "ticketingActivated": false
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Not Event Host"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113608,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadAttendeeList",
        "executor_version": "v1",
        "executor_display_name": "Download attendee list",
        "executor_description": "This API is used to download the attendee list of event. We need to pass the authentication key to authenticate the user.",
        "executor_category": "Billing",
        "executor_category_group": "Billing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/csv/billing/attendee/download",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693291565782,
        "lastModifiedTime": 1693291565782,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": ""
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Not Event Host"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113612,
        "executor_type": "THIRDPARTY",
        "executor_name": "getWhitelabelBillingSummery",
        "executor_version": "v1",
        "executor_display_name": "Get whitelabel billing summery",
        "executor_description": "This API will get the list of item usages to reflect on the billing summary and will return details such as plan purchase, paid ticket fees, fundraiser modules activation, attendee upload charge, attendee overages, and fundraiser usage.",
        "executor_category": "Billing",
        "executor_category_group": "Billing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/whiteLabelURL/{whiteLabelURL}/billing/summery",
        "dataroot": null,
        "pathParams": [
            {
                "key": "whiteLabelURL",
                "value": "",
                "description": "White label URL is a unique URL that is managed and provided by the Whitelabel admin. You can have multiple events within the same white label URL."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693293263382,
        "lastModifiedTime": 1693293263382,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "billingDay": "28",
                    "remainingAttendeesDays": 1500,
                    "usagesDetailsDtos": [
                        {
                            "date": 1640689129000,
                            "description": "Attendee Day Credits",
                            "count": 1500
                        },
                        {
                            "date": 1640689069000,
                            "description": "Enterprise Platform License",
                            "count": 1
                        }
                    ],
                    "currentBalance": 0
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "There are no checked in attendees available for this event",
                    "errorCode": "4060525",
                    "developerMessage": "There are no checked in attendees available for this event"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "This white label event does not exist",
                    "errorCode": "4040201",
                    "developerMessage": "This white label event does not exist"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113614,
        "executor_type": "THIRDPARTY",
        "executor_name": "unsubscribeChargebeePlanForTextToGive",
        "executor_version": "v1",
        "executor_display_name": "Unsubscribe Chargebee Plan For Text To Give",
        "executor_description": "This API is used to unsubscribe Chargebee plan for text-to-give module.",
        "executor_category": "Billing",
        "executor_category_group": "Billing",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/chargebee/billing/textToGive/unsubscribe/{subscriptionId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "subscriptionId",
                "value": "",
                "description": "It contain the subscription Id"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693293578400,
        "lastModifiedTime": 1693293578400,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Your cancellation request has been accepted. You will still be able to use the service until 07/04/2022."
                }
            },
            {
                "statusCode": 201,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Created"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Not Event Host"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113617,
        "executor_type": "THIRDPARTY",
        "executor_name": "embedWidgetSettingsByOrganizerId",
        "executor_version": "v1",
        "executor_display_name": "Embed widget settings by organizer id",
        "executor_description": "This API is used to get data from the embed widget setting. We need to pass the authentication key to authenticate the user and query param with recurringEventId, path param with id, name. It returns data like eventpage, id, organizerPage, and many more.",
        "executor_category": "WidgetOptions",
        "executor_category_group": "WidgetOptions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/widgets/settings/type/{name}/organizer/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "name",
                "value": "",
                "description": "EVENT/ORGANIZER Type"
            },
            {
                "key": "id",
                "value": "",
                "description": "It contain organizer Id"
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "It contain recurring Event Id",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693294452931,
        "lastModifiedTime": 1693294452931,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "buyTicketsButton": {
                        "additionalProp1": {},
                        "additionalProp2": {},
                        "additionalProp3": {}
                    },
                    "calender": {
                        "additionalProp1": {},
                        "additionalProp2": {},
                        "additionalProp3": {}
                    },
                    "countdown": {
                        "additionalProp1": {},
                        "additionalProp2": {},
                        "additionalProp3": {}
                    },
                    "donation": {
                        "additionalProp1": {},
                        "additionalProp2": {},
                        "additionalProp3": {}
                    },
                    "eventpage": "string",
                    "id": 0,
                    "organizerPage": "string",
                    "recurringEventId": 0,
                    "ticketingWidget": {
                        "additionalProp1": {},
                        "additionalProp2": {},
                        "additionalProp3": {}
                    },
                    "type": "string",
                    "widgetSettingId": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113616,
        "executor_type": "THIRDPARTY",
        "executor_name": "embedWidgetSettingsByEventId",
        "executor_version": "v1",
        "executor_display_name": "Embed widget settings by event id",
        "executor_description": "This API is used to get data from the embed widget setting. We need to pass the authentication key to authenticate the user and query param with recurringEventId, path param with id, name. It returns data like eventpage, id, organizerPage and many more.",
        "executor_category": "WidgetOptions",
        "executor_category_group": "WidgetOptions",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/widgets/settings/type/{name}/event/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "name",
                "value": "",
                "description": "EVENT/ORGANIZER Type"
            },
            {
                "key": "id",
                "value": "",
                "description": "It contain event Id"
            }
        ],
        "queryParams": [
            {
                "key": "recurringEventId",
                "value": "",
                "description": "It contain recurring Event Id",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693294375575,
        "lastModifiedTime": 1693294375575,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "buyTicketsButton": {
                        "additionalProp1": {},
                        "additionalProp2": {},
                        "additionalProp3": {}
                    },
                    "calender": {
                        "additionalProp1": {},
                        "additionalProp2": {},
                        "additionalProp3": {}
                    },
                    "countdown": {
                        "additionalProp1": {},
                        "additionalProp2": {},
                        "additionalProp3": {}
                    },
                    "donation": {
                        "additionalProp1": {},
                        "additionalProp2": {},
                        "additionalProp3": {}
                    },
                    "eventpage": "string",
                    "id": 0,
                    "organizerPage": "string",
                    "recurringEventId": 0,
                    "ticketingWidget": {
                        "additionalProp1": {},
                        "additionalProp2": {},
                        "additionalProp3": {}
                    },
                    "type": "string",
                    "widgetSettingId": 0
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113444,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadAllSessionsForAttendee",
        "executor_version": "v1",
        "executor_display_name": "Download all sessions for attendee",
        "executor_description": "This API is used to download CSV of all sessions for attendee.",
        "executor_category": "HostAttendeeAnalytics",
        "executor_category_group": "HostAttendeeAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/attendee/user/{id}/download/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "This field contains user id of attendee."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693209465333,
        "lastModifiedTime": 1693209465333,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "attended": true,
                        "endTime": "string",
                        "engagement": "string",
                        "sessionId": 0,
                        "startTime": "string",
                        "status": "string",
                        "title": "string"
                    }
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113447,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAttendeeAnalyticsProfileInformation",
        "executor_version": "v1",
        "executor_display_name": "Get attendee analytics profile information",
        "executor_description": "This API used to get analytics profile information of Attendee.",
        "executor_category": "HostAttendeeAnalytics",
        "executor_category_group": "HostAttendeeAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/attendee/{userId}/profile",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "userId",
                "value": "",
                "description": "This field contains user id for which this api returns all analytics profile information."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693209661269,
        "lastModifiedTime": 1693209661269,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "company": "string",
                    "email": "string",
                    "firstName": "string",
                    "lastName": "string",
                    "phoneNumber": 0,
                    "photo": "string",
                    "title": "string",
                    "userId": 0,
                    "userTicketTypeName": [
                        "string"
                    ]
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113446,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllAttendeesofEvent",
        "executor_version": "v1",
        "executor_display_name": "Get All Attendees of Event",
        "executor_description": "This API returns all the attendees of event.",
        "executor_category": "HostAttendeeAnalytics",
        "executor_category_group": "HostAttendeeAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/host/attendee/analytics",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "size": 50,
                "page": 0,
                "search": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693209551385,
        "lastModifiedTime": 1693209551385,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "email": "string",
                        "firstName": "string",
                        "lastName": "string",
                        "photo": "string",
                        "userId": 0
                    }
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113448,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllSessionsforAttendee",
        "executor_version": "v1",
        "executor_display_name": "Get all sessions for attendee",
        "executor_description": "This API is used to get all Sessions for attendee.",
        "executor_category": "HostAttendeeAnalytics",
        "executor_category_group": "HostAttendeeAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/attendee/user/{id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "This field contains id of attendee"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693209744675,
        "lastModifiedTime": 1693209744675,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "attended": true,
                        "endTime": "string",
                        "engagement": "string",
                        "sessionId": 0,
                        "startTime": "string",
                        "status": "string",
                        "title": "string"
                    }
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113449,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAttendeeCheckInDetails",
        "executor_version": "v1",
        "executor_display_name": "Get Attendee Check-In Details",
        "executor_description": "This API is used to get a count of attendees checked-in for specific Ticket Type ID. It is separated into the total number of logged-in users, the number of users checked-in by Admin or Staff, the number of users checked-in as ticket holders, the number of users checked-in as exhibitors, or the number of users checked-in as speakers.  If the date has passed then only that days count will be fetched, otherwise it will return the count from all checked-in logs.  If ticketTypeId is passed then that specific ticket type count will be fetched, otherwise it will return the count from all checked-in logs.",
        "executor_category": "HostAttendeeAnalytics",
        "executor_category_group": "HostAttendeeAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/attendee/attendeeCheckInAnalytics",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "date",
                "value": "",
                "description": "Required date format is \"dd/MM/yyyy\"",
                "req": false
            },
            {
                "key": "ticketTypeId",
                "value": "",
                "description": "",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693209849054,
        "lastModifiedTime": 1693209849054,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "noOfCheckedInByAdminOrStaff": 0,
                    "noOfCheckedInByExhibitor": 0,
                    "noOfCheckedInBySpeaker": 0,
                    "noOfCheckedInByTicketHolder": 0,
                    "noOfLoggedInUser": 0
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not Event Host",
                    "errorCode": "4060001",
                    "developerMessage": "Not Event Host"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113592,
        "executor_type": "THIRDPARTY",
        "executor_name": "getUserActiveOrderDetails",
        "executor_version": "v1",
        "executor_display_name": "Get user active order details",
        "executor_description": "This API is used to get active user ticket order details. When the user clicks on the My Activity page from the profile menu, the user gets the list of event ticket details for a particular event like eventTicketId, orderId, paidAmount, etc. To call this API, We need to pass the authorization token in API in the header. Authorization token will be generated when the user login to the system.",
        "executor_category": "MyTickets",
        "executor_category_group": "MyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/myticket/orders/active",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "sort",
                "value": "",
                "description": "[field]It contains the filed on which data need to be sorted",
                "req": false
            },
            {
                "key": "sort",
                "value": "",
                "description": "[direction]It contains the sort direction like asc or desc",
                "req": false
            },
            {
                "key": "orderId",
                "value": "",
                "description": "It contains the order Id to filter record for the particular order",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693289118777,
        "lastModifiedTime": 1693289118777,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 2,
                    "recordsFiltered": 1,
                    "userEventOrders": [
                        {
                            "eventLogoImage": "default_ae_images/Smooth_AE_Icon_700x350.png",
                            "eventName": "Test event 2 24/12/2021",
                            "eventUrl": "test-event-2-24122021",
                            "eventStartDate": 1640326500000,
                            "eventEndDate": 1640446200000,
                            "ticketOrderNumber": 65232,
                            "ticketOrderAmount": 0,
                            "purchaseDate": 1640345131000,
                            "seatNumbers": "",
                            "allowAttendeeToEditInfo": false,
                            "currency": "$",
                            "totalPurchasedTicketsInOrder": 2,
                            "holderAttribute": true,
                            "eventLocation": null
                        }
                    ],
                    "totalPurchaseTickets": 0
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113593,
        "executor_type": "THIRDPARTY",
        "executor_name": "getUserPastOrderDetails",
        "executor_version": "v1",
        "executor_display_name": "Get user past order details",
        "executor_description": "This API is used to get past user ticket order details. When the user clicks on the Past tab from the My Activity page of the profile menu, a user gets the list of past event ticket details for a particular event like eventTicketId, orderId, paidAmount, etc. To call this API, We need to pass the authorization token in API in the header. Authorization token will be generated when the user login to the system.",
        "executor_category": "MyTickets",
        "executor_category_group": "MyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/myticket/orders/past",
        "dataroot": null,
        "pathParams": [],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "",
                "req": false
            },
            {
                "key": "sort",
                "value": "",
                "description": "[field]It contains the filed on which data need to be sorted",
                "req": false
            },
            {
                "key": "sort",
                "value": "",
                "description": "[direction]It contains the sort direction like asc or desc",
                "req": false
            },
            {
                "key": "orderId",
                "value": "",
                "description": "It contains the order Id to filter record for the particular order",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693289202005,
        "lastModifiedTime": 1693289202005,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 2,
                    "recordsFiltered": 1,
                    "userEventOrders": [
                        {
                            "eventLogoImage": "default_ae_images/Smooth_AE_Icon_700x350.png",
                            "eventName": "Test event 2 24/12/2021",
                            "eventUrl": "test-event-2-24122021",
                            "eventStartDate": 1640326500000,
                            "eventEndDate": 1640446200000,
                            "ticketOrderNumber": 65232,
                            "ticketOrderAmount": 0,
                            "purchaseDate": 1640345131000,
                            "seatNumbers": "",
                            "allowAttendeeToEditInfo": false,
                            "currency": "$",
                            "totalPurchasedTicketsInOrder": 2,
                            "holderAttribute": true,
                            "eventLocation": null
                        }
                    ],
                    "totalPurchaseTickets": 0
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource"
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113594,
        "executor_type": "THIRDPARTY",
        "executor_name": "getHolderUserInformationListByHolderTicketIds",
        "executor_version": "v1",
        "executor_display_name": "Get holder user information list by holder ticket ids",
        "executor_description": "This API is used to get the Ticket holder user attribute list by their user ids. This API provides a list of holder information that was captured while buying the ticket. User needs to log in before accessing this API as an authorization token is needed to get these details.",
        "executor_category": "MyTickets",
        "executor_category_group": "MyTickets",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/u/myticket/holderData/tickets/{holderTicketIds}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "holderTicketIds",
                "value": "",
                "description": "This will be list of holder ticket ids."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693289348476,
        "lastModifiedTime": 1693289348476,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "attributes": [
                            {
                                "name": "First Name",
                                "type": "text",
                                "value": "Jigar",
                                "defaultValue": null,
                                "mandatory": true,
                                "eventTicketTypeId": "21618,21619,21620"
                            },
                            {
                                "name": "Last Name",
                                "type": "text",
                                "value": "p1",
                                "defaultValue": null,
                                "mandatory": true,
                                "eventTicketTypeId": "21618,21619,21620"
                            },
                            {
                                "name": "Email",
                                "type": "email",
                                "value": "jigar.p@brilworks.com",
                                "defaultValue": null,
                                "mandatory": true,
                                "eventTicketTypeId": "21618,21619,21620"
                            }
                        ],
                        "questions": [],
                        "seatNumber": "",
                        "eventTicketingId": 16582,
                        "eventKey": "2470"
                    },
                    {
                        "attributes": [
                            {
                                "name": "First Name",
                                "type": "text",
                                "value": "Jigar",
                                "defaultValue": null,
                                "mandatory": true,
                                "eventTicketTypeId": "21618,21619,21620"
                            },
                            {
                                "name": "Last Name",
                                "type": "text",
                                "value": "p3",
                                "defaultValue": null,
                                "mandatory": true,
                                "eventTicketTypeId": "21618,21619,21620"
                            },
                            {
                                "name": "Email",
                                "type": "email",
                                "value": "jigar.p@brilworks.com",
                                "defaultValue": null,
                                "mandatory": true,
                                "eventTicketTypeId": "21618,21619,21620"
                            }
                        ],
                        "questions": [],
                        "seatNumber": "",
                        "eventTicketingId": 16584,
                        "eventKey": "2470"
                    }
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "DELETE",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "Request method 'POST' not supported"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "For input string: \"1658.\"",
                    "errorCode": "4060001",
                    "developerMessage": "For input string: \"1658.\""
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113440,
        "executor_type": "THIRDPARTY",
        "executor_name": "getAllSponsorClickAnalytics",
        "executor_version": "v1",
        "executor_display_name": "Get All Sponsor Click Analytics",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. This API is used to get sponsor click analytics. Returning a list of sponsors present in the event with the count of how many times one sponsor gets clicked by attendees. We are not collecting admin and staff users' clicks if they click on any sponsor that will be not counted. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "SponsorsAnalytics",
        "executor_category_group": "SponsorsAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/sponsors/analytics",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [
            {
                "key": "page",
                "value": "",
                "description": "Pages are zero indexed, thus providing 0 for page will return the first page.",
                "req": false
            },
            {
                "key": "size",
                "value": "",
                "description": "Size will returns number of records when call api default will returns 10 records.",
                "req": false
            },
            {
                "key": "searchString",
                "value": "",
                "description": "Filter sponsors by their name specifying searchString.",
                "req": false
            }
        ],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693209045700,
        "lastModifiedTime": 1693209045700,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 3,
                    "recordsFiltered": 3,
                    "data": [
                        {
                            "id": 1247,
                            "sponsorName": "s3",
                            "countBySource": {
                                "total": 2586,
                                "event_site": 1010,
                                "virtual_event_hub": 1576
                            }
                        },
                        {
                            "id": 1246,
                            "sponsorName": "sp2",
                            "countBySource": {
                                "total": 1544,
                                "event_site": 1006,
                                "virtual_event_hub": 538
                            }
                        },
                        {
                            "id": 1245,
                            "sponsorName": "sp1",
                            "countBySource": {
                                "total": 2102,
                                "event_site": 510,
                                "virtual_event_hub": 1592
                            }
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax"
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113443,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadSponsorAnalyticsCsv",
        "executor_version": "v1",
        "executor_display_name": "Download Sponsor Analytics CSV",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. This API is used to download sponsor analytics data in CSV format. CSV contains Information like sponsors' names, clicks in different sources like event site page, the area above chat (carousel) and sponsor tab, etc. We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "SponsorsAnalytics",
        "executor_category_group": "SponsorsAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/sponsors/analytics/csv",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693209332187,
        "lastModifiedTime": 1693209332187,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    "Name",
                    "Total Clicks",
                    "Landing Page Clicks",
                    "Virtual Event Hub clicks",
                    "Landing Page Anonymous Clicks",
                    "Landing Page Logged in User clicks",
                    "Lobby Carousel Clicks",
                    "Lobby Sponsor Tab Clicks",
                    "Session Carousel Clicks",
                    "Session Sponsor Tab Clicks",
                    "Medium Sponsor1",
                    "3",
                    "1",
                    "2",
                    "0",
                    "1",
                    "0",
                    "0",
                    "0",
                    "2",
                    "Small Sponsor2",
                    "6",
                    "1",
                    "5",
                    "0",
                    "1",
                    "0",
                    "0",
                    "1",
                    "4"
                ]
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource"
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113442,
        "executor_type": "THIRDPARTY",
        "executor_name": "getSponsorsAnalytics",
        "executor_version": "v1",
        "executor_display_name": "Get Sponsor's Analytics",
        "executor_description": "API used at host side event admin, super admin, and organizer admin can access this API. On the host side when we click on Analytics -> Sponsors -> Details ( on sponsors row), it will give us a sponsors Id and it will return the information of how many times the sponsor gets clicked by attendees in the provided source. Possible sources where attendees can click on sponsors cards are the sponsor tab on the event site, the sponsor tab in the lobby, the area above chat, and inside sessions. On the event site page if the user is not logged in then clicks on this user will be counted as Anonymous clicks We need to pass an authorization token here, which is generated after successful login into the account.",
        "executor_category": "SponsorsAnalytics",
        "executor_category_group": "SponsorsAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/sponsors/{sponsorId}/analytics/source/{source}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "sponsorId",
                "value": "",
                "description": "Unique id of the sponsor"
            },
            {
                "key": "source",
                "value": "",
                "description": "Different source where attendees can click on sponsors. Sources are : lobby, session and event_site"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693209197194,
        "lastModifiedTime": 1693209197194,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": 1245,
                    "sponsorName": "sp1",
                    "countBySource": {
                        "logged_in": 5,
                        "anonymous": 505
                    }
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {}
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113488,
        "executor_type": "THIRDPARTY",
        "executor_name": "returnsAttendeeCountByTicketStatus",
        "executor_version": "v1",
        "executor_display_name": "Returns attendee count by ticket status",
        "executor_description": "This API is used at the host side event admin and super admin can access this API. This API Used to get attendee count by ticket status associated with the specified event. It will return data like ticket status and count. We need to pass an authorization token here, which is generated after successful login into account with the other details.",
        "executor_category": "GamificationAnalytics",
        "executor_category_group": "GamificationAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/attendee/attendeesCountByStatus",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693219077004,
        "lastModifiedTime": 1693219077004,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    {
                        "ticketStatus": "CHECKED_IN",
                        "count": 2
                    },
                    {
                        "ticketStatus": "BOOKED",
                        "count": 2
                    }
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 403,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "Accessing the resource you were trying to reach is forbidden."
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The resource you were trying to reach is not found."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113490,
        "executor_type": "THIRDPARTY",
        "executor_name": "downloadGamificationLeaderBoardCsv",
        "executor_version": "v1",
        "executor_display_name": "Download Gamification LeaderBoard CSV",
        "executor_description": "This API is used on the host side to download Gamification Leaderboard data as a CSV.  CSV will contain attendee data with columns: First Name, Last Name, Title, Points, and List of challenge data.",
        "executor_category": "GamificationAnalytics",
        "executor_category_group": "GamificationAnalytics",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/host/event/{eventUrl}/attendee/leaderboard/download/CSV",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693219231572,
        "lastModifiedTime": 1693219231572,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": [
                    "First Name",
                    "Last Name",
                    "Company",
                    "Country",
                    "Job Role",
                    "Email Address",
                    "Total Points Earned",
                    "Points Earned Via Visiting Exhibitor Booth",
                    "Points Earned Via Re-Visiting Exhibitor Booth",
                    "Points Earned Via Downloading Booth Document",
                    "Points Earned Via Exhibitor Booth Chat",
                    "Points Earned Via Watching Exhibitor Video",
                    "Points Earned Via Clicking Links in the Document & Links Area of Exhibitor",
                    "Points Earned Via Exhibitor Request Meeting",
                    "Points Earned Via Visiting Session",
                    "Points Earned Via Re-Visiting Session",
                    "Points Earned Via Watching Session Live Stream/Uploaded Stream",
                    "Points Earned Via Watching Session Recording",
                    "Points Earned Via Networking Match",
                    "Points Earned Via Networking Connections",
                    "Points Earned Via Ticket Purchase (Early Bird Challenge)",
                    "Points Earned Via Event Check-in (Early Bird Challenge)",
                    "Ekta Speaker",
                    "L1",
                    "Company",
                    "",
                    "QA",
                    "ekta.k+26@brilworks.com",
                    "10",
                    "0",
                    "0",
                    "0",
                    "0",
                    "0",
                    "0",
                    "0",
                    "0",
                    "0",
                    "0",
                    "0",
                    "0",
                    "0",
                    "0",
                    "10"
                ]
            },
            {
                "statusCode": 400,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "text/plain"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "You are not authorized to view the resource."
            },
            {
                "statusCode": 500,
                "name": null,
                "statusText": null,
                "methodType": "GET",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": "The request could not be understood by the server due to malformed syntax."
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113646,
        "executor_type": "THIRDPARTY",
        "executor_name": "suggestedPeopleList",
        "executor_version": "v1",
        "executor_display_name": "Suggested People List",
        "executor_description": "This API retrieves a list of suggested people based on interest that has been added to the profile. To apply a filter, need to pass the JSON object with the title, company, and interest and set the variable value accordingly (i.e. the set company which needs to filter.). The areas that are used for the filter are company, job title, and interests To get all suggested attendees, in JSON object title, company, interest, and interest ID's should be an empty array and search. The string should be an empty string. To apply the search feature, need to pass the value on searchString and it would be searching on the attendee's first name, last name, interest, job title, and company.",
        "executor_category": "PeopleAPI",
        "executor_category_group": "PeopleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/event/${eventURL}/people/getAttendeesUsingInterest",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventURL",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "page": 0,
                "size": 100,
                "searchString": "",
                "title": "",
                "company": "",
                "interest": "",
                "interestIds": ""
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693298057656,
        "lastModifiedTime": 1693298057656,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 2,
                    "recordsFiltered": 2,
                    "data": [
                        {
                            "id": "1358031",
                            "userId": 1358031,
                            "firstName": "Phoinix",
                            "lastName": "+99",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "Coordinated Universal Time (UTC)",
                            "equivalentTimezone": "",
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 49888,
                            "videoIntro": "",
                            "extraInfo": {
                                "aboutMe": "",
                                "wantsToLearn": "",
                                "knows": "",
                                "wantsToMeet": ""
                            },
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "customFields": "[{\"value\":\"\",\"key\":\"custom\"}]",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "India Standard Time (IST)",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "vaccinationCardInformationEnabled": false,
                            "exposeProfileToOtherUser": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "emailNotification": true,
                            "user": 1358031
                        },
                        {
                            "id": "1058681",
                            "userId": 1058681,
                            "firstName": "Riddhi",
                            "lastName": "Parmar",
                            "pronouns": "",
                            "photo": "10ce4ff0-9ceb-4e8c-96e8-41025cb5026c",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": "Asia/Calcutta",
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 59118,
                            "videoIntro": "",
                            "extraInfo": {
                                "aboutMe": "Software Testing is the process of identifying the accuracy and quality of the software product and service under test. Apparently, it was born to validate whether the product fulfills the particular prerequisites, needs, and desires of the client. At the end of the day, testing executes a framework or application with a specific end goal to point out bugs, errors or defects. The responsibility of testing is to point out the issues of bugs and give Dev (Developers) a clue to help them fix it right following the requirements",
                                "wantsToLearn": "",
                                "knows": "",
                                "wantsToMeet": ""
                            },
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "customFields": "[{\"value\":\"\",\"key\":\"custom\"}]",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Eastern Time (EST/EDT)",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "vaccinationCardInformationEnabled": false,
                            "exposeProfileToOtherUser": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": true,
                            "emailNotification": true,
                            "user": 1058681
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "timestamp": 1640796771904,
                    "status": 404,
                    "error": "Not Found",
                    "message": "No message available",
                    "path": "rest/event/prod1stmar/people/getFilterConnectedAttendee"
                }
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "Request method 'POST' not supported"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113645,
        "executor_type": "THIRDPARTY",
        "executor_name": "myConnectionList",
        "executor_version": "v1",
        "executor_display_name": "My Connection List",
        "executor_description": "This API is used to get the connected attendees of the login user from the event. To apply a filter, need to pass the JSON object with the title, company, and interest and set the variable value accordingly (i.e. the set company which needs to filter.). The areas that are used for the filter are company, job title, and interests To get all connected attendees, in JSON object title, company, interest, and interest ID's should be an empty array and search. The string should be an empty string. To apply the search feature, need to pass the value on searchString and it would be searching on the attendee's first name, last name, interest, job title, and company.",
        "executor_category": "PeopleAPI",
        "executor_category_group": "PeopleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/event/${eventURL}/people/getFilterConnectedAttendee",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventURL",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "page": 0,
                "size": 100,
                "searchString": "",
                "title": "",
                "company": "",
                "interest": "",
                "interestIds": ""
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693297930146,
        "lastModifiedTime": 1693297930146,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 15,
                    "recordsFiltered": 15,
                    "data": [
                        {
                            "id": "45407",
                            "userId": 45407,
                            "firstName": "Rob",
                            "lastName": "Masters",
                            "pronouns": "",
                            "photo": "9c41f42a-a725-47f5-a3bc-17600a24f311",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": "America/New_York",
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": "",
                            "extraInfo": {
                                "aboutMe": "",
                                "wantsToLearn": "Technology",
                                "knows": "That all I know is that I know nothing",
                                "wantsToMeet": "Bugs, all the Bugs"
                            },
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "email": "testrkm2021@yahoo.com",
                            "country": "",
                            "city": "",
                            "website": "",
                            "industry": "",
                            "languageCode": "EN",
                            "lastActive": null,
                            "firstEvent": null,
                            "deleted": null,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": true,
                            "exposeProfileToOtherUser": true,
                            "user": 45407
                        },
                        {
                            "id": "35809",
                            "userId": 35809,
                            "firstName": "aalok",
                            "lastName": "mistry",
                            "pronouns": "",
                            "photo": "1e3f11e1-bfbb-494a-8048-a25aab9d509c",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Brilworks",
                            "title": "QA",
                            "timezoneId": "India Time",
                            "equivalentTimezone": "Asia/Calcutta",
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15204,
                            "videoIntro": "",
                            "extraInfo": {
                                "aboutMe": "tester",
                                "wantsToLearn": "Football",
                                "knows": "",
                                "wantsToMeet": ""
                            },
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "email": "aalok.m+2@brilworks.com",
                            "country": "",
                            "city": "",
                            "website": "",
                            "industry": "",
                            "languageCode": "EN",
                            "lastActive": null,
                            "firstEvent": null,
                            "deleted": null,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 35809
                        },
                        {
                            "id": "45410",
                            "userId": 45410,
                            "firstName": "Abdallah",
                            "lastName": "Mostafa",
                            "pronouns": "He",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "Bugbasher",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": "America/New_York",
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": "",
                            "extraInfo": {
                                "aboutMe": "",
                                "wantsToLearn": "dscsd",
                                "knows": "",
                                "wantsToMeet": ""
                            },
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "email": "amoostafa+1@accelevents.com",
                            "country": "",
                            "city": "",
                            "website": "",
                            "industry": "",
                            "languageCode": "EN",
                            "lastActive": null,
                            "firstEvent": null,
                            "deleted": null,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 45410
                        },
                        {
                            "id": "43449",
                            "userId": 43449,
                            "firstName": "Tammy",
                            "lastName": "N",
                            "pronouns": "ABCD",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": false,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "GFD",
                            "title": "BVCX",
                            "timezoneId": "India Time",
                            "equivalentTimezone": "Asia/Calcutta",
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15204,
                            "videoIntro": "",
                            "extraInfo": {
                                "aboutMe": "Welcome",
                                "wantsToLearn": "Welcome",
                                "knows": "ABCd",
                                "wantsToMeet": "Abcd"
                            },
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "https://instagram.com/chikarinkatotoka",
                            "facebook": "https://www.facebook.com/tammy.n/",
                            "twitter": "https://www.twitter.com/chikarinkatotoka",
                            "linkedIn": "https://www.linkedin.com/in/tamanna-nawlani-6bb34919b/",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "email": "tamanna.n@brilworks.com",
                            "country": "",
                            "city": "",
                            "website": "",
                            "industry": "",
                            "languageCode": "EN",
                            "lastActive": null,
                            "firstEvent": null,
                            "deleted": null,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43449
                        },
                        {
                            "id": "43819",
                            "userId": 43819,
                            "firstName": "Sanju",
                            "lastName": "Patel",
                            "pronouns": "",
                            "photo": "779ae755-7662-4e18-b1bd-58fdf164dda3",
                            "coverPhoto": null,
                            "acceptDirectMessages": false,
                            "acceptMeetingRequests": "MY_CONNECTION",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "Devloper",
                            "timezoneId": "India Time",
                            "equivalentTimezone": "Asia/Calcutta",
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15187,
                            "videoIntro": "",
                            "extraInfo": {
                                "aboutMe": "",
                                "wantsToLearn": "",
                                "knows": "",
                                "wantsToMeet": ""
                            },
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "email": "Sanjay.radadiya.dev+500@gmail.com",
                            "country": "",
                            "city": "",
                            "website": "",
                            "industry": "",
                            "languageCode": "EN",
                            "lastActive": null,
                            "firstEvent": null,
                            "deleted": null,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43819
                        },
                        {
                            "id": "30651",
                            "userId": 30651,
                            "firstName": "malhar",
                            "lastName": "rathod",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": "Asia/Calcutta",
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15012,
                            "videoIntro": "",
                            "extraInfo": {
                                "aboutMe": "",
                                "wantsToLearn": "",
                                "knows": "",
                                "wantsToMeet": ""
                            },
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "email": "malhar.r@brilworks.com",
                            "country": "",
                            "city": "",
                            "website": "",
                            "industry": "",
                            "languageCode": "EN",
                            "lastActive": null,
                            "firstEvent": null,
                            "deleted": null,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 30651
                        },
                        {
                            "id": "30738",
                            "userId": 30738,
                            "firstName": "malhar",
                            "lastName": "rathod",
                            "pronouns": "",
                            "photo": "290a5e1c-3caf-48d6-a79a-8dd962d9b050",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": "Asia/Calcutta",
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15063,
                            "videoIntro": "",
                            "extraInfo": {
                                "aboutMe": "",
                                "wantsToLearn": "",
                                "knows": "",
                                "wantsToMeet": ""
                            },
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "email": "malhar.r+006@brilworks.com",
                            "country": "",
                            "city": "",
                            "website": "",
                            "industry": "",
                            "languageCode": "EN",
                            "lastActive": null,
                            "firstEvent": null,
                            "deleted": null,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 30738
                        },
                        {
                            "id": "43589",
                            "userId": 43589,
                            "firstName": "$p\u00e9\u00f1$\u00ebr",
                            "lastName": "Russell-Snyder",
                            "pronouns": "",
                            "photo": "9ca56d84-4446-4b1e-878b-b040523750f2",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "CX",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": "America/New_York",
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": "",
                            "extraInfo": {
                                "aboutMe": "Just a person trying to hold it down as best we can.",
                                "wantsToLearn": "",
                                "knows": "",
                                "wantsToMeet": ""
                            },
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "email": "srussellsnyder@accelevents.com",
                            "country": "",
                            "city": "",
                            "website": "",
                            "industry": "",
                            "languageCode": "EN",
                            "lastActive": null,
                            "firstEvent": null,
                            "deleted": null,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43589
                        },
                        {
                            "id": "33932",
                            "userId": 33932,
                            "firstName": "Akshat",
                            "lastName": "Shah",
                            "pronouns": "He/Him",
                            "photo": "b8dca061-236d-4e04-94c1-71c695b05508",
                            "coverPhoto": null,
                            "acceptDirectMessages": false,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Company",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": "Asia/Calcutta",
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15164,
                            "videoIntro": "",
                            "extraInfo": {
                                "aboutMe": "In this article, we have great professional bio examples you should compare yours to \u2014 and a series of free bio templates you can use to make it perfect.\n\nIf you\u2019re anything like me, you probably don't think about your professional bio until you\u2019re suddenly asked to \"shoot one over via email.\" You have approximately one afternoon to come up with it, and that's when you scramble, and the bio ends up reading like this:",
                                "wantsToLearn": "Autmation,API Testing ",
                                "knows": "knows",
                                "wantsToMeet": "Wants to meet Wants to meet Wants to meet"
                            },
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "email": "akshat.shah306@gmail.com",
                            "country": "",
                            "city": "",
                            "website": "",
                            "industry": "",
                            "languageCode": "EN",
                            "lastActive": null,
                            "firstEvent": null,
                            "deleted": null,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": false,
                            "user": 33932
                        },
                        {
                            "id": "30533",
                            "userId": 30533,
                            "firstName": "Garvi",
                            "lastName": "Shah",
                            "pronouns": "",
                            "photo": "258f6bf2-ce0c-49a7-b36b-04336f369b70",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": "Asia/Calcutta",
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": "",
                            "extraInfo": {
                                "aboutMe": "",
                                "wantsToLearn": "",
                                "knows": "",
                                "wantsToMeet": ""
                            },
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": null,
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "email": "garvi.s@brilworks.com",
                            "country": "",
                            "city": "",
                            "website": "",
                            "industry": "",
                            "languageCode": null,
                            "lastActive": null,
                            "firstEvent": null,
                            "deleted": null,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 30533
                        },
                        {
                            "id": "43960",
                            "userId": 43960,
                            "firstName": "heta Admin",
                            "lastName": "shah",
                            "pronouns": "",
                            "photo": "4715a30b-9a9f-40a7-ab03-bb3f0275dc9c",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "MY_CONNECTION",
                            "showContactInfo": true,
                            "company": "Ahbhbwdifisuiiiiiiiw Ahbhbwdifisuiiiiiiiw Ahbhbwdifisuiiiiiiiw Ahbhbwdifisuiiiiiiiw Ahbhbwdifisuiiiiiiiw",
                            "title": "Ahbhbwdifisuiiiiiiiw Ahbhbwdifisuiiiiiiiw  Ahbhbwdifisuiiiiiiiw  Ahbhbwdifisuiiiiiiiw  Ahbhbwdifisuiiiiiiiw  Ahbhbwdifisuiiiiiiiw  Ahbhbwdifisuiiiiiiiw  Ahbhbwdifisuiiiiiiiw  Ahbhbwdifisuiiiiiiiw  v Ahbhbwdifisuiiiiiiiw Ahbhbwdifisuiiiiiiiw Ahbhbwdifisuii",
                            "timezoneId": "Sri Lanka Time",
                            "equivalentTimezone": "Asia/Colombo",
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15240,
                            "videoIntro": "https://www.youtube.com/watch?v=3lAlQ__9XuAhttps://www.youtube.com/watch?v=3lAlQ__9XuAhttps://www.youtube.com/watch?v=3lAlQ__9XuA",
                            "extraInfo": {
                                "aboutMe": "Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!Hello , i Am speaker.............!",
                                "wantsToLearn": "booksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooksbooks",
                                "knows": "i would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cookingi would like to cooking so i have know of cooking",
                                "wantsToMeet": "need need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet need to meet to meet "
                            },
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "www.instagram.com/login",
                            "facebook": "www.facebook.com/login",
                            "twitter": "www.twitter.com/login",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "email": "heta.s@brilworks.com",
                            "country": "",
                            "city": "",
                            "website": "",
                            "industry": "",
                            "languageCode": "EN",
                            "lastActive": null,
                            "firstEvent": null,
                            "deleted": null,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43960
                        },
                        {
                            "id": "8972",
                            "userId": 8972,
                            "firstName": "Prahalad",
                            "lastName": "Shekhawat",
                            "pronouns": "",
                            "photo": "96dd7cf4-9155-4198-8ed0-ec3ad40ed9e7",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "NO_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": "Asia/Calcutta",
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15239,
                            "videoIntro": "https://vimeo.com/30790437",
                            "extraInfo": {
                                "aboutMe": "This Is dummy data for Bio dlknln feafeklfc efwef wfefagvsdvasdv",
                                "wantsToLearn": "Java",
                                "knows": "C, C++",
                                "wantsToMeet": "Automation 1qw"
                            },
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "https://www.instagram.com/PSS",
                            "facebook": "https://www.facebook.com/prahalad",
                            "twitter": "https://twitter.com/pss",
                            "linkedIn": "https://www.facebook.com/prahalad.singh.7/85",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "email": "prahalad.s@brilworks.com",
                            "country": "",
                            "city": "",
                            "website": "",
                            "industry": "",
                            "languageCode": "EN",
                            "lastActive": null,
                            "firstEvent": null,
                            "deleted": null,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": true,
                            "exposeProfileToOtherUser": true,
                            "user": 8972
                        },
                        {
                            "id": "33217",
                            "userId": 33217,
                            "firstName": "bharat",
                            "lastName": "zala",
                            "pronouns": "",
                            "photo": "e08dc5d2-8abe-4ee9-8821-89225f56f2b7",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "NO_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "Eastern Time (EST/EDT)",
                            "equivalentTimezone": "Asia/Calcutta",
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 9520,
                            "videoIntro": "",
                            "extraInfo": {
                                "aboutMe": "Hi",
                                "wantsToLearn": "",
                                "knows": "",
                                "wantsToMeet": ""
                            },
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Eastern Time (EST/EDT)",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "email": "bharat.z@brilworks.com",
                            "country": "",
                            "city": "",
                            "website": "",
                            "industry": "",
                            "languageCode": "EN",
                            "lastActive": null,
                            "firstEvent": null,
                            "deleted": null,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 33217
                        },
                        {
                            "id": "34467",
                            "userId": 34467,
                            "firstName": "Bhargav",
                            "lastName": "Zanzrukia",
                            "pronouns": "His/Him",
                            "photo": "754da215-4f62-41b3-a573-08ed018dfbd6",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "MY_CONNECTION",
                            "showContactInfo": true,
                            "company": "Qa",
                            "title": "Qa",
                            "timezoneId": "India Time",
                            "equivalentTimezone": "Asia/Calcutta",
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15133,
                            "videoIntro": "",
                            "extraInfo": {
                                "aboutMe": "hy",
                                "wantsToLearn": "",
                                "knows": "",
                                "wantsToMeet": ""
                            },
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "https://www.instagram.com/username",
                            "facebook": "https://Google.com",
                            "twitter": "https://Google.com",
                            "linkedIn": "https://www.linkedin.com/in/bhargav-zanzrukia-196b226a/",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "GMT-11:00 Niue Time",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "email": "bhargav.z@brilworks.com",
                            "country": "",
                            "city": "",
                            "website": "",
                            "industry": "",
                            "languageCode": "EN",
                            "lastActive": null,
                            "firstEvent": null,
                            "deleted": null,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": true,
                            "exposeProfileToOtherUser": true,
                            "user": 34467
                        },
                        {
                            "id": "35923",
                            "userId": 35923,
                            "firstName": "Ekta",
                            "lastName": null,
                            "pronouns": "",
                            "photo": "53fe1997-6324-4230-a60b-3d0f3cd2b84b",
                            "coverPhoto": null,
                            "acceptDirectMessages": false,
                            "acceptMeetingRequests": "NO_ONE",
                            "showContactInfo": false,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": "Asia/Calcutta",
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15168,
                            "videoIntro": "",
                            "extraInfo": {
                                "aboutMe": "Working in Nature ",
                                "wantsToLearn": "Interest in Playing ",
                                "knows": "",
                                "wantsToMeet": ""
                            },
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": false,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "email": "ekta.k@brilworks.com",
                            "country": "",
                            "city": "",
                            "website": "",
                            "industry": "",
                            "languageCode": "EN",
                            "lastActive": null,
                            "firstEvent": null,
                            "deleted": null,
                            "emailNotification": false,
                            "allowCallsAndVideosFromNotConnectedAttendees": true,
                            "exposeProfileToOtherUser": true,
                            "user": 35923
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "timestamp": 1640796771904,
                    "status": 404,
                    "error": "Not Found",
                    "message": "No message available",
                    "path": "rest/event/prod1stmar/people/getFilterConnectedAttendee"
                }
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "Request method 'POST' not supported"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113644,
        "executor_type": "THIRDPARTY",
        "executor_name": "getPeopleListFilteredPeopleList",
        "executor_version": "v1",
        "executor_display_name": "Get People List/ Filtered People List",
        "executor_description": "This API is used to get the Attendees from the event. To apply a filter, need to pass the JSON object with the title, company, and interest and set the variable value accordingly (i.e. the set company which needs to filter.). The areas that are used for the filter are company, job title, and interests To get all people list, in JSON object title, company, interest, and interest ID's should be an empty array and search. The string should be an empty string. To apply the search feature, need to pass the value on searchString and it would be searching on the attendee's first name, last name, interest, job title, and company.",
        "executor_category": "PeopleAPI",
        "executor_category_group": "PeopleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/event/${eventURL}/people/getFilterAttendee",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventURL",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "page": 0,
                "size": 100,
                "searchString": "",
                "title": "",
                "company": "",
                "interest": "",
                "interestIds": ""
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693297811472,
        "lastModifiedTime": 1693297811472,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 114,
                    "recordsFiltered": 100,
                    "data": [
                        {
                            "id": "8118",
                            "userId": 8118,
                            "firstName": "@Rch3r",
                            "lastName": "$h!3ld$",
                            "pronouns": "",
                            "photo": "66851d0f-ad09-40e5-8f2a-6194dda46d5a",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "Puptern (puppy intern)",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "India Time",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": false,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 8118
                        },
                        {
                            "id": "7787",
                            "userId": 7787,
                            "firstName": "C@r50n",
                            "lastName": "0'$h\u00f8n\u00e9y",
                            "pronouns": "",
                            "photo": "5c705642-adb3-422e-a5b0-5a186235efca",
                            "coverPhoto": null,
                            "acceptDirectMessages": false,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 13889,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "India Time",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 7787
                        },
                        {
                            "id": "34293",
                            "userId": 34293,
                            "firstName": "Sanju",
                            "lastName": "2",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": true,
                            "exposeProfileToOtherUser": true,
                            "user": 34293
                        },
                        {
                            "id": "31830",
                            "userId": 31830,
                            "firstName": "Ruby",
                            "lastName": "Abanto",
                            "pronouns": "",
                            "photo": "5ee01df8-2563-4ee6-847d-1e67f01b43a4",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 31830
                        },
                        {
                            "id": "1",
                            "userId": 1,
                            "firstName": "Admin",
                            "lastName": "Admin",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15134,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 1
                        },
                        {
                            "id": "43707",
                            "userId": 43707,
                            "firstName": "Nicholas",
                            "lastName": "Alley",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": null,
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": null,
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43707
                        },
                        {
                            "id": "43509",
                            "userId": 43509,
                            "firstName": "Shella",
                            "lastName": "Avena",
                            "pronouns": "she/her",
                            "photo": "50728764-e20c-4f9a-b4a1-06faab8cc66d",
                            "coverPhoto": null,
                            "acceptDirectMessages": false,
                            "acceptMeetingRequests": "NO_ONE",
                            "showContactInfo": false,
                            "company": "Accelevents",
                            "title": "CX",
                            "timezoneId": "China (Shanghai) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14907,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Shanghai",
                            "showProfile": false,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": false,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": false,
                            "user": 43509
                        },
                        {
                            "id": "15841",
                            "userId": 15841,
                            "firstName": "Divyesh",
                            "lastName": "B",
                            "pronouns": "",
                            "photo": "b1f14248-b4c6-40df-b4d0-4127e33d1def",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "Web dev",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": "REQUESTED",
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": true,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 15841
                        },
                        {
                            "id": "33327",
                            "userId": 33327,
                            "firstName": "raj",
                            "lastName": "bhatt",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "brillworks 2",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 33327
                        },
                        {
                            "id": "43713",
                            "userId": 43713,
                            "firstName": "Kathryn",
                            "lastName": "Bienvenu",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43713
                        },
                        {
                            "id": "45426",
                            "userId": 45426,
                            "firstName": "MeLLi$a",
                            "lastName": "Blakemore",
                            "pronouns": "",
                            "photo": "19a49cca-884a-48f1-9c8e-aba176e0616b",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 45426
                        },
                        {
                            "id": "8978",
                            "userId": 8978,
                            "firstName": "Mellisa",
                            "lastName": "Blakemore",
                            "pronouns": "",
                            "photo": "bae2d1dd-ca25-487e-a08b-8c9002f546de",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15088,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "India Time",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": true,
                            "exposeProfileToOtherUser": true,
                            "user": 8978
                        },
                        {
                            "id": "34914",
                            "userId": 34914,
                            "firstName": "Juned",
                            "lastName": "Brilworks",
                            "pronouns": "f",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": false,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "bril",
                            "title": "s/w",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": "REQUESTED",
                            "rejectedBy": null,
                            "eventId": 15133,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "Https://Www.Google.com",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": false,
                            "user": 34914
                        },
                        {
                            "id": "43701",
                            "userId": 43701,
                            "firstName": "Marissa",
                            "lastName": "Burks",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43701
                        },
                        {
                            "id": "43513",
                            "userId": 43513,
                            "firstName": "Dhara",
                            "lastName": "C",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43513
                        },
                        {
                            "id": "31610",
                            "userId": 31610,
                            "firstName": "Cristina",
                            "lastName": "Castillo",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "Pacific Time (PST/PDT)",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Pacific Time (PST/PDT)",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 31610
                        },
                        {
                            "id": "43851",
                            "userId": 43851,
                            "firstName": "Meghna",
                            "lastName": "Chhatrapati",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43851
                        },
                        {
                            "id": "44003",
                            "userId": 44003,
                            "firstName": "Tania",
                            "lastName": "Cox",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 44003
                        },
                        {
                            "id": "45406",
                            "userId": 45406,
                            "firstName": "K!nn3r",
                            "lastName": "D!inn3r",
                            "pronouns": "she/her",
                            "photo": "1836b1d2-326f-42a1-9df6-48dd94732e6e",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "Customer Success Manager",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 45406
                        },
                        {
                            "id": "43653",
                            "userId": 43653,
                            "firstName": "Milan",
                            "lastName": "Dobariya",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Brilworks",
                            "title": "What is Helthy",
                            "timezoneId": "United States (Los Angeles) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15137,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/Los_Angeles",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43653
                        },
                        {
                            "id": "33683",
                            "userId": 33683,
                            "firstName": "Vitor",
                            "lastName": "Domingos",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 33683
                        },
                        {
                            "id": "33901",
                            "userId": 33901,
                            "firstName": "Nikhil",
                            "lastName": "FIReFox",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 33901
                        },
                        {
                            "id": "43550",
                            "userId": 43550,
                            "firstName": "Carly",
                            "lastName": "Ford",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "https://www.instagram.com/carly_jean3/",
                            "facebook": "https://www.facebook.com/carly.ford.3910",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43550
                        },
                        {
                            "id": "45250",
                            "userId": 45250,
                            "firstName": "Michael",
                            "lastName": "Galvin",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 45250
                        },
                        {
                            "id": "45409",
                            "userId": 45409,
                            "firstName": "Michael",
                            "lastName": "Galvin",
                            "pronouns": "They/Them/",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "Tester",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14963,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 45409
                        },
                        {
                            "id": "45399",
                            "userId": 45399,
                            "firstName": "Ariane Exhibitor",
                            "lastName": "Gmail",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 45399
                        },
                        {
                            "id": "30541",
                            "userId": 30541,
                            "firstName": "Marvin",
                            "lastName": "Go",
                            "pronouns": "he/him/his",
                            "photo": "379b451c-2946-40b5-a782-e8c57e37557d",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "CX Lead",
                            "timezoneId": "China (Shanghai) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15088,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "https://www.facebook.com/marvquago",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Shanghai",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 30541
                        },
                        {
                            "id": "34629",
                            "userId": 34629,
                            "firstName": "Umesh",
                            "lastName": "Goti",
                            "pronouns": "",
                            "photo": "8da7c5c1-56ba-4a58-9239-b3424a3a7666",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Brilworks",
                            "title": "Java Developer",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15043,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 34629
                        },
                        {
                            "id": "33549",
                            "userId": 33549,
                            "firstName": "Meghraj",
                            "lastName": "Gungewale",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": "REQUESTED",
                            "rejectedBy": null,
                            "eventId": 15066,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": true,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 33549
                        },
                        {
                            "id": "43700",
                            "userId": 43700,
                            "firstName": "Jason",
                            "lastName": "Hardman",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (Chicago) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/Chicago",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43700
                        },
                        {
                            "id": "7636",
                            "userId": 7636,
                            "firstName": "Thariq",
                            "lastName": "Jacoby",
                            "pronouns": "He/Him",
                            "photo": "9cd1711f-86c4-496e-be93-932dec90985f",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "Brazil (Sao Paulo) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15136,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/Sao_Paulo",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 7636
                        },
                        {
                            "id": "33406",
                            "userId": 33406,
                            "firstName": "Rajesh",
                            "lastName": "Jethva",
                            "pronouns": "",
                            "photo": "images/user-icon-placeholder.png",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 33406
                        },
                        {
                            "id": "8024",
                            "userId": 8024,
                            "firstName": "Fabrice",
                            "lastName": "Joseph",
                            "pronouns": null,
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": false,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": null,
                            "facebook": null,
                            "twitter": null,
                            "linkedIn": null,
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "India Time",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 8024
                        },
                        {
                            "id": "7498",
                            "userId": 7498,
                            "firstName": "Lavesh",
                            "lastName": "K",
                            "pronouns": "Him",
                            "photo": "3021bc52-ef83-4e95-ac9a-2ee3cfa2204e",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Brilworks",
                            "title": "Team Lead",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15134,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 7498
                        },
                        {
                            "id": "36131",
                            "userId": 36131,
                            "firstName": "Ekta  Attendee",
                            "lastName": "Kabra",
                            "pronouns": "",
                            "photo": "c3dcffb1-a4e4-4b16-9198-61fae4b960c6",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15136,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 36131
                        },
                        {
                            "id": "31921",
                            "userId": 31921,
                            "firstName": "Disha",
                            "lastName": "Kakani",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15203,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 31921
                        },
                        {
                            "id": "45432",
                            "userId": 45432,
                            "firstName": "Rutu",
                            "lastName": "Kathiriya",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 45432
                        },
                        {
                            "id": "43667",
                            "userId": 43667,
                            "firstName": "Rutu",
                            "lastName": "Kathiriya",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43667
                        },
                        {
                            "id": "7537",
                            "userId": 7537,
                            "firstName": "Alex",
                            "lastName": "Kazarian",
                            "pronouns": "",
                            "photo": "ab038fa4-c7c7-4a47-81f5-5c62605bd4d0",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "Sales",
                            "timezoneId": "United States (Chicago) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/Chicago",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 7537
                        },
                        {
                            "id": "7504",
                            "userId": 7504,
                            "firstName": "Alex",
                            "lastName": "Kazarian personal",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "India Time",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 7504
                        },
                        {
                            "id": "45422",
                            "userId": 45422,
                            "firstName": "Juned",
                            "lastName": "Lanja",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 45422
                        },
                        {
                            "id": "31254",
                            "userId": 31254,
                            "firstName": "(-: Megan",
                            "lastName": "Leetz :-)",
                            "pronouns": "She/Her",
                            "photo": "f49c41c2-6505-4ec4-91bb-e28d3de070e9",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/Phoenix",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 31254
                        },
                        {
                            "id": "43829",
                            "userId": 43829,
                            "firstName": "Ethan",
                            "lastName": "Leonard",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43829
                        },
                        {
                            "id": "15875",
                            "userId": 15875,
                            "firstName": "Viviane",
                            "lastName": "Lima",
                            "pronouns": "",
                            "photo": "4f987855-11df-43c8-8255-98e62b97ce4b",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "Support",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15088,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "India Time",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": true,
                            "exposeProfileToOtherUser": true,
                            "user": 15875
                        },
                        {
                            "id": "31259",
                            "userId": 31259,
                            "firstName": "Hydee",
                            "lastName": "Mariazeta",
                            "pronouns": "",
                            "photo": "787bc1ad-a36d-4ee2-96d8-d977f564051a",
                            "coverPhoto": null,
                            "acceptDirectMessages": false,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "Customer Support",
                            "timezoneId": "Philippines Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "https://www.instagram.com/username",
                            "facebook": "https://www.facebook.com/username",
                            "twitter": "https://www.twitter.com/username",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Manila",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 31259
                        },
                        {
                            "id": "45427",
                            "userId": 45427,
                            "firstName": "Robert",
                            "lastName": "Masters",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 45427
                        },
                        {
                            "id": "45407",
                            "userId": 45407,
                            "firstName": "Rob",
                            "lastName": "Masters",
                            "pronouns": "",
                            "photo": "9c41f42a-a725-47f5-a3bc-17600a24f311",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": "ACCEPT",
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": true,
                            "exposeProfileToOtherUser": true,
                            "user": 45407
                        },
                        {
                            "id": "35869",
                            "userId": 35869,
                            "firstName": "Devin",
                            "lastName": "May",
                            "pronouns": "She/Her",
                            "photo": "b7ed2f5c-4f00-439c-b7ca-f3cac213e69e",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Other",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 35869
                        },
                        {
                            "id": "43705",
                            "userId": 43705,
                            "firstName": "Harry",
                            "lastName": "McGovern",
                            "pronouns": "he/him",
                            "photo": "682db427-8caa-4e0f-b74e-61f9cf462534",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "Account Executive",
                            "timezoneId": "Coordinated Universal Time (UTC)",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43705
                        },
                        {
                            "id": "35809",
                            "userId": 35809,
                            "firstName": "aalok",
                            "lastName": "mistry",
                            "pronouns": "",
                            "photo": "1e3f11e1-bfbb-494a-8048-a25aab9d509c",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Brilworks",
                            "title": "QA",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": "ACCEPT",
                            "rejectedBy": null,
                            "eventId": 15204,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 35809
                        },
                        {
                            "id": "45425",
                            "userId": 45425,
                            "firstName": "Lavesh",
                            "lastName": "Mobile",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 45425
                        },
                        {
                            "id": "43678",
                            "userId": 43678,
                            "firstName": "Spenser",
                            "lastName": "Mobile",
                            "pronouns": "",
                            "photo": "efcacd39-b61c-4a1c-8ca8-03eec64b51a3",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43678
                        },
                        {
                            "id": "45410",
                            "userId": 45410,
                            "firstName": "Abdallah",
                            "lastName": "Mostafa",
                            "pronouns": "He",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "Bugbasher",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": "ACCEPT",
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 45410
                        },
                        {
                            "id": "43597",
                            "userId": 43597,
                            "firstName": "Elone",
                            "lastName": "Musk",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": "REQUESTED",
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": true,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": null,
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43597
                        },
                        {
                            "id": "43449",
                            "userId": 43449,
                            "firstName": "Tammy",
                            "lastName": "N",
                            "pronouns": "ABCD",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": false,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "GFD",
                            "title": "BVCX",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": "ACCEPT",
                            "rejectedBy": null,
                            "eventId": 15204,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "https://instagram.com/chikarinkatotoka",
                            "facebook": "https://www.facebook.com/tammy.n/",
                            "twitter": "https://www.twitter.com/chikarinkatotoka",
                            "linkedIn": "https://www.linkedin.com/in/tamanna-nawlani-6bb34919b/",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43449
                        },
                        {
                            "id": "31751",
                            "userId": 31751,
                            "firstName": "jigar",
                            "lastName": "p",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 7901,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 31751
                        },
                        {
                            "id": "36812",
                            "userId": 36812,
                            "firstName": "Alex",
                            "lastName": "Padilla",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "Account Executive",
                            "timezoneId": "Eastern Time (EST/EDT)",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Eastern Time (EST/EDT)",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 36812
                        },
                        {
                            "id": "35895",
                            "userId": 35895,
                            "firstName": "kinjal",
                            "lastName": "Patel",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "bril",
                            "title": "sw",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15187,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "http://instagram.com",
                            "facebook": "",
                            "twitter": "http://twwitter.com",
                            "linkedIn": "https://www.linkedin.com/in/username/",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": true,
                            "exposeProfileToOtherUser": false,
                            "user": 35895
                        },
                        {
                            "id": "33005",
                            "userId": 33005,
                            "firstName": "vishwa",
                            "lastName": "patel",
                            "pronouns": "hello",
                            "photo": "d4807ac6-ae6d-4adf-9a9b-034aa0d1d067",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "brilworks",
                            "title": "testing",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 8802,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": true,
                            "exposeProfileToOtherUser": true,
                            "user": 33005
                        },
                        {
                            "id": "39200",
                            "userId": 39200,
                            "firstName": "Umang",
                            "lastName": "Patel",
                            "pronouns": "",
                            "photo": "4ed139fa-2939-489e-8866-a959f3b09116",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15134,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "http://www.facebook.com/profile.php?id=100012139920190",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 39200
                        },
                        {
                            "id": "43819",
                            "userId": 43819,
                            "firstName": "Sanju",
                            "lastName": "Patel",
                            "pronouns": "",
                            "photo": "779ae755-7662-4e18-b1bd-58fdf164dda3",
                            "coverPhoto": null,
                            "acceptDirectMessages": false,
                            "acceptMeetingRequests": "MY_CONNECTION",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "Devloper",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": "ACCEPT",
                            "rejectedBy": null,
                            "eventId": 15187,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43819
                        },
                        {
                            "id": "43703",
                            "userId": 43703,
                            "firstName": "Kim",
                            "lastName": "Petersen",
                            "pronouns": "",
                            "photo": "c61ce571-6018-4c24-86f4-e6252347ba46",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "Sales",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43703
                        },
                        {
                            "id": "43768",
                            "userId": 43768,
                            "firstName": "Ariane",
                            "lastName": "Ramirez",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "Philippines Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Manila",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43768
                        },
                        {
                            "id": "45433",
                            "userId": 45433,
                            "firstName": "Ariane",
                            "lastName": "Ramirez",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 45433
                        },
                        {
                            "id": "45462",
                            "userId": 45462,
                            "firstName": "Ariane",
                            "lastName": "Ramirez",
                            "pronouns": "She",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "",
                            "timezoneId": "Philippines Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "http://www.instagram.com/ariane2",
                            "facebook": "http://www.facebook.com/ariane2",
                            "twitter": "http://www.twitter.com/ariane2",
                            "linkedIn": "http://www.linkedin.com/ariane2",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Manila",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 45462
                        },
                        {
                            "id": "7164",
                            "userId": 7164,
                            "firstName": "Ariane",
                            "lastName": "Ramirez",
                            "pronouns": "Ms",
                            "photo": "846efec7-face-47ad-a150-6c08e8be51a6",
                            "coverPhoto": null,
                            "acceptDirectMessages": false,
                            "acceptMeetingRequests": "MY_CONNECTION",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "CX Lead",
                            "timezoneId": "China (Shanghai) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15088,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "https://www.instagram.com/shopify/?hl=en",
                            "facebook": "https://www.facebook.com/ShopifyLA/",
                            "twitter": "https://twitter.com/Shopify?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Shanghai",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 7164
                        },
                        {
                            "id": "7452",
                            "userId": 7452,
                            "firstName": "Nirmal",
                            "lastName": "Rathod",
                            "pronouns": "",
                            "photo": "d8ac884f-2559-4b4f-b923-73bc0e4cc80b",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15075,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 7452
                        },
                        {
                            "id": "36626",
                            "userId": 36626,
                            "firstName": "Rachel",
                            "lastName": "Rose",
                            "pronouns": "She/Her",
                            "photo": "f9012c26-1c2c-42f3-9d34-1ac5d79c290e",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "Customer Success Manager",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": "REQUESTED",
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": true,
                            "exposeProfileToOtherUser": true,
                            "user": 36626
                        },
                        {
                            "id": "34234",
                            "userId": 34234,
                            "firstName": "Rachel",
                            "lastName": "Rose",
                            "pronouns": "She / Her",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "CSM",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15088,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 34234
                        },
                        {
                            "id": "44001",
                            "userId": 44001,
                            "firstName": "Phyllis",
                            "lastName": "Rush",
                            "pronouns": "She",
                            "photo": "3b10caa0-22ab-4b59-8192-26b6bf2cc1f2",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Accelefrankenfurter",
                            "title": "Director of Content",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 44001
                        },
                        {
                            "id": "43589",
                            "userId": 43589,
                            "firstName": "$p\u00e9\u00f1$\u00ebr",
                            "lastName": "Russell-Snyder",
                            "pronouns": "",
                            "photo": "9ca56d84-4446-4b1e-878b-b040523750f2",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "CX",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": "ACCEPT",
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43589
                        },
                        {
                            "id": "6350",
                            "userId": 6350,
                            "firstName": "Sachin",
                            "lastName": "S",
                            "pronouns": "His/Him",
                            "photo": "2ea28c27-0223-4166-bd1e-5389006d7bfd",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Brilworks",
                            "title": "Software Engineer",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 7377,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 6350
                        },
                        {
                            "id": "31874",
                            "userId": 31874,
                            "firstName": "divy sss",
                            "lastName": "s patel",
                            "pronouns": "",
                            "photo": "95b88319-377e-4f1a-99d2-812a0a0d031c",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15187,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": null,
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 31874
                        },
                        {
                            "id": "31235",
                            "userId": 31235,
                            "firstName": "Ankur",
                            "lastName": "Savaliya",
                            "pronouns": "",
                            "photo": "9af4a999-e244-404d-bf4e-f15dd4a68740",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14465,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 31235
                        },
                        {
                            "id": "30922",
                            "userId": 30922,
                            "firstName": "Parth",
                            "lastName": "Savaliya",
                            "pronouns": "",
                            "photo": "e2b751a9-18e1-4b5a-9915-d86d9d66fbb6",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "Alaska Time (AST/ADT)",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15187,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Alaska Time (AST/ADT)",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 30922
                        },
                        {
                            "id": "33932",
                            "userId": 33932,
                            "firstName": "Akshat",
                            "lastName": "Shah",
                            "pronouns": "He/Him",
                            "photo": "b8dca061-236d-4e04-94c1-71c695b05508",
                            "coverPhoto": null,
                            "acceptDirectMessages": false,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Company",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": "ACCEPT",
                            "rejectedBy": null,
                            "eventId": 15164,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": false,
                            "user": 33932
                        },
                        {
                            "id": "43960",
                            "userId": 43960,
                            "firstName": "heta Admin",
                            "lastName": "shah",
                            "pronouns": "",
                            "photo": "4715a30b-9a9f-40a7-ab03-bb3f0275dc9c",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "MY_CONNECTION",
                            "showContactInfo": true,
                            "company": "Ahbhbwdifisuiiiiiiiw Ahbhbwdifisuiiiiiiiw Ahbhbwdifisuiiiiiiiw Ahbhbwdifisuiiiiiiiw Ahbhbwdifisuiiiiiiiw",
                            "title": "Ahbhbwdifisuiiiiiiiw Ahbhbwdifisuiiiiiiiw  Ahbhbwdifisuiiiiiiiw  Ahbhbwdifisuiiiiiiiw  Ahbhbwdifisuiiiiiiiw  Ahbhbwdifisuiiiiiiiw  Ahbhbwdifisuiiiiiiiw  Ahbhbwdifisuiiiiiiiw  Ahbhbwdifisuiiiiiiiw  v Ahbhbwdifisuiiiiiiiw Ahbhbwdifisuiiiiiiiw Ahbhbwdifisuii",
                            "timezoneId": "Sri Lanka Time",
                            "equivalentTimezone": null,
                            "status": "ACCEPT",
                            "rejectedBy": null,
                            "eventId": 15239,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "www.instagram.com/login",
                            "facebook": "www.facebook.com/login",
                            "twitter": "www.twitter.com/login",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43960
                        },
                        {
                            "id": "30533",
                            "userId": 30533,
                            "firstName": "Garvi",
                            "lastName": "Shah",
                            "pronouns": "",
                            "photo": "258f6bf2-ce0c-49a7-b36b-04336f369b70",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": "ACCEPT",
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": null,
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 30533
                        },
                        {
                            "id": "33006",
                            "userId": 33006,
                            "firstName": "Anurag",
                            "lastName": "Sharma",
                            "pronouns": "",
                            "photo": "beb13277-c3d7-4907-bb87-a6d555482e77",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "Front End Dev",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15134,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": true,
                            "exposeProfileToOtherUser": true,
                            "user": 33006
                        },
                        {
                            "id": "8972",
                            "userId": 8972,
                            "firstName": "Prahalad",
                            "lastName": "Shekhawat",
                            "pronouns": "",
                            "photo": "96dd7cf4-9155-4198-8ed0-ec3ad40ed9e7",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "NO_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": "ACCEPT",
                            "rejectedBy": null,
                            "eventId": 15234,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "https://www.instagram.com/PSS",
                            "facebook": "https://www.facebook.com/prahalad",
                            "twitter": "https://twitter.com/pss",
                            "linkedIn": "https://www.facebook.com/prahalad.singh.7/85",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": true,
                            "exposeProfileToOtherUser": true,
                            "user": 8972
                        },
                        {
                            "id": "7894",
                            "userId": 7894,
                            "firstName": "Natashia",
                            "lastName": "Shields",
                            "pronouns": "",
                            "photo": "5feec9a3-6ada-4883-9fa4-ffe57abc3bdb",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "CX Lead",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14988,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 7894
                        },
                        {
                            "id": "30811",
                            "userId": 30811,
                            "firstName": "Aayushi",
                            "lastName": "Shyamkunver",
                            "pronouns": "",
                            "photo": "images/user-icon-placeholder.png",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Brilworks LLP",
                            "title": "SDE",
                            "timezoneId": "India Standard Time (IST)",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "India Standard Time (IST)",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 30811
                        },
                        {
                            "id": "8780",
                            "userId": 8780,
                            "firstName": "Prahalad",
                            "lastName": "singh",
                            "pronouns": "",
                            "photo": "6a51fe46-9263-473b-8b2c-a2e89749dfb4",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": false,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15164,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 8780
                        },
                        {
                            "id": "36228",
                            "userId": 36228,
                            "firstName": "Nikhil",
                            "lastName": "Singh",
                            "pronouns": "",
                            "photo": "2cc48a7a-718b-4661-b5fe-7157734b70cf",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Bril",
                            "title": "SDE",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 12123,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 36228
                        },
                        {
                            "id": "7830",
                            "userId": 7830,
                            "firstName": "vikas",
                            "lastName": "singh",
                            "pronouns": "",
                            "photo": "images/user-icon-placeholder.png",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 7830
                        },
                        {
                            "id": "44050",
                            "userId": 44050,
                            "firstName": "Mits",
                            "lastName": "Soni",
                            "pronouns": "",
                            "photo": "ea4716e9-7f11-4904-ba85-068b49cc47d9",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 44050
                        },
                        {
                            "id": "34623",
                            "userId": 34623,
                            "firstName": "Mitul",
                            "lastName": "Soni",
                            "pronouns": "mjs",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 15054,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 34623
                        },
                        {
                            "id": "15850",
                            "userId": 15850,
                            "firstName": "test",
                            "lastName": "tes",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": null,
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "India Time",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": true,
                            "exposeProfileToOtherUser": false,
                            "user": 15850
                        },
                        {
                            "id": "7892",
                            "userId": 7892,
                            "firstName": "vicky",
                            "lastName": "test",
                            "pronouns": "he/him",
                            "photo": "b858690f-c35c-43d4-bdd7-55a9e27661d9",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 7892
                        },
                        {
                            "id": "43706",
                            "userId": 43706,
                            "firstName": "Suzanna",
                            "lastName": "Thompson",
                            "pronouns": "she/her",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "Accelevents",
                            "title": "Sales",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43706
                        },
                        {
                            "id": "43714",
                            "userId": 43714,
                            "firstName": "Freddy",
                            "lastName": "Torres",
                            "pronouns": "",
                            "photo": "6307a3a6-fe1c-4da1-a47b-36e9648ce231",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 43714
                        },
                        {
                            "id": "7757",
                            "userId": 7757,
                            "firstName": "Hitesh",
                            "lastName": "Umaletiya",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 7757
                        },
                        {
                            "id": "7499",
                            "userId": 7499,
                            "firstName": "minal",
                            "lastName": "Vaghasiya",
                            "pronouns": "",
                            "photo": "1b7a9302-f38f-42da-bae6-a38c24355d82",
                            "coverPhoto": null,
                            "acceptDirectMessages": false,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "India Time",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 7499
                        },
                        {
                            "id": "43710",
                            "userId": 43710,
                            "firstName": "Leigh",
                            "lastName": "Weedon",
                            "pronouns": "she/her",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": true,
                            "exposeProfileToOtherUser": true,
                            "user": 43710
                        },
                        {
                            "id": "45258",
                            "userId": 45258,
                            "firstName": "Catherine",
                            "lastName": "Weldon",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 45258
                        },
                        {
                            "id": "36919",
                            "userId": 36919,
                            "firstName": "dw",
                            "lastName": "wqwqe",
                            "pronouns": "pro",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": false,
                            "acceptMeetingRequests": "MY_CONNECTION",
                            "showContactInfo": false,
                            "company": "technology",
                            "title": "apple",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14228,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "https://instagram.com/abc",
                            "facebook": "https://facebook.com/abc",
                            "twitter": "https://twitter.com/abc",
                            "linkedIn": "https://www.linkedin.com/pub/some-name/1/1b3/b45",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Pacific/Niue",
                            "showProfile": false,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": false,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": false,
                            "user": 36919
                        },
                        {
                            "id": "33217",
                            "userId": 33217,
                            "firstName": "bharat",
                            "lastName": "zala",
                            "pronouns": "",
                            "photo": "e08dc5d2-8abe-4ee9-8821-89225f56f2b7",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "NO_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "Eastern Time (EST/EDT)",
                            "equivalentTimezone": null,
                            "status": "ACCEPT",
                            "rejectedBy": null,
                            "eventId": 9520,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Eastern Time (EST/EDT)",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 33217
                        },
                        {
                            "id": "39077",
                            "userId": 39077,
                            "firstName": "Bhargav",
                            "lastName": "Zanzrukia",
                            "pronouns": "",
                            "photo": null,
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "EVERY_ONE",
                            "showContactInfo": true,
                            "company": "",
                            "title": "",
                            "timezoneId": "United States (New York) Time",
                            "equivalentTimezone": null,
                            "status": null,
                            "rejectedBy": null,
                            "eventId": 14943,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "America/New_York",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": false,
                            "exposeProfileToOtherUser": true,
                            "user": 39077
                        },
                        {
                            "id": "34467",
                            "userId": 34467,
                            "firstName": "Bhargav",
                            "lastName": "Zanzrukia",
                            "pronouns": "His/Him",
                            "photo": "754da215-4f62-41b3-a573-08ed018dfbd6",
                            "coverPhoto": null,
                            "acceptDirectMessages": true,
                            "acceptMeetingRequests": "MY_CONNECTION",
                            "showContactInfo": true,
                            "company": "Qa",
                            "title": "Qa",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": "ACCEPT",
                            "rejectedBy": null,
                            "eventId": 15133,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "https://www.instagram.com/username",
                            "facebook": "https://Google.com",
                            "twitter": "https://Google.com",
                            "linkedIn": "https://www.linkedin.com/in/bhargav-zanzrukia-196b226a/",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "GMT-11:00 Niue Time",
                            "showProfile": true,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": true,
                            "allowCallsAndVideosFromNotConnectedAttendees": true,
                            "exposeProfileToOtherUser": true,
                            "user": 34467
                        },
                        {
                            "id": "35923",
                            "userId": 35923,
                            "firstName": "Ekta",
                            "lastName": null,
                            "pronouns": "",
                            "photo": "53fe1997-6324-4230-a60b-3d0f3cd2b84b",
                            "coverPhoto": null,
                            "acceptDirectMessages": false,
                            "acceptMeetingRequests": "NO_ONE",
                            "showContactInfo": false,
                            "company": "",
                            "title": "",
                            "timezoneId": "India Time",
                            "equivalentTimezone": null,
                            "status": "ACCEPT",
                            "rejectedBy": null,
                            "eventId": 15168,
                            "videoIntro": null,
                            "extraInfo": null,
                            "interests": null,
                            "availabilityDuration": 20,
                            "request": false,
                            "instagram": "",
                            "facebook": "",
                            "twitter": "",
                            "linkedIn": "",
                            "availabilityStartTime": null,
                            "availabilityEndTime": null,
                            "availabilityTimezoneId": "Asia/Calcutta",
                            "showProfile": false,
                            "rules": [],
                            "meetingAvailabilitySetted": true,
                            "emailNotification": false,
                            "allowCallsAndVideosFromNotConnectedAttendees": true,
                            "exposeProfileToOtherUser": true,
                            "user": 35923
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "timestamp": 1640796771904,
                    "status": 404,
                    "error": "Not Found",
                    "message": "No message available",
                    "path": "/rest/event/bugbash/peopleaa"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113653,
        "executor_type": "THIRDPARTY",
        "executor_name": "getListOfJobTitlesOfAttendeesOfAnEventWithPagination",
        "executor_version": "v1",
        "executor_display_name": "Get list of Job titles of attendees of an event with pagination",
        "executor_description": "This API is used to get the list of job titles of all the attendees of an event. The response is paginated and sorted in alphabetical order. To call this API, you need to pass  the eventurl in the path parameter. authorisation token in the header. A JSON object, in the request body, which has a page, size of the page, and the search string. The response includes a JSON object containing job titles as per the page, size, and search string.",
        "executor_category": "PeopleAPI",
        "executor_category_group": "PeopleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/event/${eventUrl}/people/getJobTitleListOfEventAttendeesWithPaginationAndAscendingByTitle",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "size": 50,
                "page": 0,
                "search": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693298893235,
        "lastModifiedTime": 1693298893235,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 6,
                    "recordsFiltered": 6,
                    "data": [
                        {
                            "title": "Admin",
                            "company": null,
                            "count": null
                        },
                        {
                            "title": "Developer",
                            "company": null,
                            "count": null
                        },
                        {
                            "title": "HR",
                            "company": null,
                            "count": null
                        },
                        {
                            "title": "Software Developer",
                            "company": null,
                            "count": null
                        },
                        {
                            "title": "Tester",
                            "company": null,
                            "count": null
                        },
                        {
                            "title": "Titl",
                            "company": null,
                            "count": null
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Event Not Found",
                    "errorCode": "4040200",
                    "developerMessage": "No Event could be found"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "Not Valid Json Format"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113648,
        "executor_type": "THIRDPARTY",
        "executor_name": "acceptConnectionRequestOfUser",
        "executor_version": "v1",
        "executor_display_name": "Accept Connection Request Of User",
        "executor_description": "This API is used to accept a connection request received from another user. To call this API you will need a connection request of the user otherwise it will give an error. To call this API, you need to pass eventurl, user id, and authorisation token in the request API. For the authorisation token, you need to call login API.",
        "executor_category": "PeopleAPI",
        "executor_category_group": "PeopleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/event/${eventUrl}/attendee/${id}/acceptRequest",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "This id of user, It is unique id for every users"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693298264374,
        "lastModifiedTime": 1693298264374,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Attendee Connected"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "timestamp": 1640796771904,
                    "status": 404,
                    "error": "Not Found",
                    "message": "No message available",
                    "path": "rest/event/prod1stmar/people/getFilterConnectedAttendee"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Attendee can not connect to self.",
                    "errorCode": "4068005",
                    "developerMessage": "Attendee can not connect to self."
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113652,
        "executor_type": "THIRDPARTY",
        "executor_name": "getInterestTagsList",
        "executor_version": "v1",
        "executor_display_name": "Get interest tags list with pagination sorted based on their name in ascending order",
        "executor_description": "This API is used to get the list of interest tags of an event sorted in ascending order based on their name. To call this API, you need to pass  the eventurl in the path parameter. authorisation token in the header. A JSON object, in the request body, which has a page, size of the result, and the search string (the empty string used to retrieve all data and non-empty string used to retrieve filter data). In response, it includes total records, filtered records, data array which include the name of interest and error if have.",
        "executor_category": "PeopleAPI",
        "executor_category_group": "PeopleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/event/${eventUrl}/people/getEventInterestsWithPaginationAndAscendingByInterestName",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "size": 50,
                "page": 0,
                "search": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693298770797,
        "lastModifiedTime": 1693298770798,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 497,
                    "recordsFiltered": 40,
                    "data": [
                        "I13",
                        "I130",
                        "I131",
                        "I132",
                        "I133",
                        "I134",
                        "I135",
                        "I136",
                        "I137",
                        "I138",
                        "I139",
                        "I14",
                        "I140",
                        "I141",
                        "I142",
                        "I143",
                        "I144",
                        "I145",
                        "I146",
                        "I147",
                        "I148",
                        "I149",
                        "I15",
                        "I150",
                        "I151",
                        "I152",
                        "I153",
                        "I154",
                        "I155",
                        "I156",
                        "I157",
                        "I158",
                        "I159",
                        "I16",
                        "I160",
                        "I161",
                        "I162",
                        "I163",
                        "I164",
                        "I165"
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Event Not Found",
                    "errorCode": "4040200",
                    "developerMessage": "No Event could be found"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "Not Valid Json Format"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113654,
        "executor_type": "THIRDPARTY",
        "executor_name": "getListOfCompanies",
        "executor_version": "v1",
        "executor_display_name": "Get list of Companies, from attendee profile, of attendees of an event with pagination",
        "executor_description": "This API is used to get the list of companies of all the attendees of the event. The returned list is paginated and sorted alphabetically. To call this API, you need to pass,  the eventurl in the path parameter. authorisation token in the header. A JSON object, in the request body, which should have page size, page and a search string. The search string can be empty to fetch all the companies. If any value is passed in the search string parameter then only the companies whose name matches the search string will be returned. The response includes total records, filtered records, list of JSON elements representing the company. If there is any error then an error message will also be present.",
        "executor_category": "PeopleAPI",
        "executor_category_group": "PeopleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/event/${eventUrl}/people/getCompanyListOfEventAttendeeWithPaginationAndAscendingByCompany",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {
                "size": 50,
                "page": 0,
                "search": "string"
            },
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693298988100,
        "lastModifiedTime": 1693298988101,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "recordsTotal": 6,
                    "recordsFiltered": 6,
                    "data": [
                        {
                            "title": null,
                            "company": "1AndOnly",
                            "count": null
                        },
                        {
                            "title": null,
                            "company": "Brandy",
                            "count": null
                        },
                        {
                            "title": null,
                            "company": "Brilworks",
                            "count": null
                        },
                        {
                            "title": null,
                            "company": "Brilworks PVT LTD",
                            "count": null
                        },
                        {
                            "title": null,
                            "company": "ECW",
                            "count": null
                        },
                        {
                            "title": null,
                            "company": "ElitInfoChip",
                            "count": null
                        }
                    ],
                    "error": null
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Event Not Found",
                    "errorCode": "4040200",
                    "developerMessage": "No Event could be found"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "Not Valid Json Format"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113649,
        "executor_type": "THIRDPARTY",
        "executor_name": "sendConnectionRequestToUser",
        "executor_version": "v1",
        "executor_display_name": "Send Connection Request To User",
        "executor_description": "This API is Used to send the connection request to specific Users from a List of People from the event. Using this API you can make new connections with other people. To call this API you will make sure that the user is part of the event otherwise, it will return an error. To call this API, you need to pass eventurl, user id, and authorisation token in the request API. For the authorisation token, you need to call login API.",
        "executor_category": "PeopleAPI",
        "executor_category_group": "PeopleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/event/${eventUrl}/attendee/${id}/connect",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "This id of user, It is unique id for every users"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693298444512,
        "lastModifiedTime": 1693298444513,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Attendee Connected"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Event Not Found",
                    "errorCode": "4040200",
                    "developerMessage": "No Event could be found"
                }
            },
            {
                "statusCode": 406,
                "name": null,
                "statusText": null,
                "methodType": "PUT",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Attendee already connected.",
                    "errorCode": "4068003",
                    "developerMessage": "Attendee already connected"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113650,
        "executor_type": "THIRDPARTY",
        "executor_name": "callToUser",
        "executor_version": "v1",
        "executor_display_name": "Call to User",
        "executor_description": "This API is used to call other users. This API is used to create meetings for 1:1 calls. To call this API you will make sure that the user is part of the event otherwise, it will return an error. To call this API, you need to pass eventurl, user id, and authorisation token in the request API. For the authorisation token, you need to call login API.",
        "executor_category": "PeopleAPI",
        "executor_category_group": "PeopleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "PUT",
        "apiUrl": "https://api.accelevents.com/rest/events/${eventurl}/chime/meeting/${id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventurl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "This id of user, It is unique id for every users"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693298528192,
        "lastModifiedTime": 1693298528192,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "capacity": 0,
                    "chatEnabled": false,
                    "pollEnabled": false,
                    "quesAndAnsEnabled": false,
                    "hideSessionFromAttendees": false,
                    "meeting": "{\"MeetingId\":\"4d10846e-5b82-473f-b117-568456250706\",\"MediaPlacement\":{\"AudioHostUrl\":\"6027b8146f8ec5955794996489e140b4.k.m3.ue1.app.chime.aws:3478\",\"AudioFallbackUrl\":\"wss://haxrp.m3.ue1.app.chime.aws:443/calls/4d10846e-5b82-473f-b117-568456250706\",\"ScreenDataUrl\":\"wss://bitpw.m3.ue1.app.chime.aws:443/v2/screen/4d10846e-5b82-473f-b117-568456250706\",\"ScreenSharingUrl\":\"wss://bitpw.m3.ue1.app.chime.aws:443/v2/screen/4d10846e-5b82-473f-b117-568456250706\",\"ScreenViewingUrl\":\"wss://bitpw.m3.ue1.app.chime.aws:443/ws/connect?passcode=null&viewer_uuid=null&X-BitHub-Call-Id=4d10846e-5b82-473f-b117-568456250706\",\"SignalingUrl\":\"wss://signal.m3.ue1.app.chime.aws/control/4d10846e-5b82-473f-b117-568456250706\",\"TurnControlUrl\":\"https://ccp.cp.ue1.app.chime.aws/v2/turn_sessions\"},\"MediaRegion\":\"us-east-1\"}",
                    "attendee": "{\"ExternalUserId\":\"Vivek ramoliya_73\",\"AttendeeId\":\"7fe412e1-0fbc-e707-7a44-fe2e853730df\",\"JoinToken\":\"N2ZlNDEyZTEtMGZiYy1lNzA3LTdhNDQtZmUyZTg1MzczMGRmOjYwZjkxODAyLWI3NGItNGUzYi05M2M1LTExODE0ZGRkN2M4Yg\"}"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Meeting not found or meeting expired.",
                    "errorCode": "40440205",
                    "developerMessage": "Meeting not found or meeting expired"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113651,
        "executor_type": "THIRDPARTY",
        "executor_name": "sendDirectMessageToUser",
        "executor_version": "v1",
        "executor_display_name": "Send Direct Message To User",
        "executor_description": "This API is used to send direct messages to any user. To call this API you will make sure that the user is part of the event otherwise, it will return an error. To call this API, you need to pass eventurl, user id, channel id, and authorisation token in the request API.",
        "executor_category": "PeopleAPI",
        "executor_category_group": "PeopleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "POST",
        "apiUrl": "https://api.accelevents.com/rest/event/{eventUrl}/virtualEventPortal/channel/{id}/matchedUser/{matchedUserId}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventUrl",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "This id of channel, it is always unique for every channels"
            },
            {
                "key": "matchedUserId",
                "value": "",
                "description": "This id of user, It is unique id for every users"
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            },
            {
                "key": "Content-Type",
                "value": "application/json",
                "description": "",
                "req": false
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": {},
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693298640636,
        "lastModifiedTime": 1693298640636,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "type": "Success",
                    "message": "Success"
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Event Not Found",
                    "errorCode": "4040200",
                    "developerMessage": "No Event could be found"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    },
    {
        "id": 113647,
        "executor_type": "THIRDPARTY",
        "executor_name": "peopleProfileDetails",
        "executor_version": "v1",
        "executor_display_name": "People Profile Details",
        "executor_description": "This API is used to get the profile details of the user.",
        "executor_category": "PeopleAPI",
        "executor_category_group": "PeopleAPI",
        "service_provider": "accelevents",
        "executor_scope": null,
        "partner": "b2b",
        "account_id": "b2b",
        "executor_method_type": "GET",
        "apiUrl": "https://api.accelevents.com/rest/event/${eventURL}/people/${id}",
        "dataroot": null,
        "pathParams": [
            {
                "key": "eventURL",
                "value": "",
                "description": "Event url is unique identifier for your event. E.g https://www.accelevents.com/events/demo. Here demo is the event url."
            },
            {
                "key": "id",
                "value": "",
                "description": "This will be People ID of User."
            }
        ],
        "queryParams": [],
        "headers": [
            {
                "description": ""
            }
        ],
        "authModel": {
            "authType": "api_key",
            "authAttributes": {
                "add_to": "header"
            }
        },
        "requestBody": {
            "value": "",
            "key": "payload",
            "description": "Document in JSON format",
            "annotation": "RequestBody"
        },
        "prerequisites": null,
        "executors": null,
        "functions": null,
        "responseAttributes": [
            {
                "attributeName": null,
                "displayName": null,
                "description": null,
                "type": null,
                "size": 0,
                "precision": 0,
                "autoIncrement": false,
                "defaultValue": null,
                "subType": [],
                "attributeType": "None",
                "required": false,
                "dataStoragePolicy": "None",
                "apiAccessPolicy": "None",
                "displayPolicy": "None",
                "array": false,
                "customType": false,
                "updateOption": null,
                "previousAttributeName": null,
                "compliances": null
            }
        ],
        "response": null,
        "attributeMappings": null,
        "source": null,
        "block_attributes": null,
        "workflow_credentials": null,
        "disabled": false,
        "published": true,
        "scopeOfAccess": "public",
        "registeredAsIs": true,
        "creationTime": 1693298134746,
        "lastModifiedTime": 1693298134746,
        "executionLib": null,
        "isDocumentationPublished": true,
        "mockResponses": [
            {
                "statusCode": 200,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": "Ok",
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "id": "8118",
                    "userId": 8118,
                    "firstName": "@Rch3r",
                    "lastName": "$h!3ld$",
                    "pronouns": "",
                    "photo": "66851d0f-ad09-40e5-8f2a-6194dda46d5a",
                    "coverPhoto": null,
                    "acceptDirectMessages": true,
                    "acceptMeetingRequests": "EVERY_ONE",
                    "showContactInfo": true,
                    "company": "Accelevents",
                    "title": "Puptern (puppy intern)",
                    "timezoneId": "United States (New York) Time",
                    "equivalentTimezone": "America/New_York",
                    "status": null,
                    "rejectedBy": null,
                    "eventId": 14943,
                    "videoIntro": "",
                    "extraInfo": {
                        "aboutMe": "",
                        "wantsToLearn": "",
                        "knows": "",
                        "wantsToMeet": ""
                    },
                    "interests": [
                        {
                            "id": "88fc57db-72bc-4271-81b0-e938a9308cb4",
                            "name": "DOGS"
                        },
                        {
                            "id": "6251c1d8-751a-42ee-b6df-40dda4884e90",
                            "name": "YOGA"
                        },
                        {
                            "id": "b72d756c-7abe-41c3-9a88-1fd31fb1175b",
                            "name": "COOKING"
                        }
                    ],
                    "availabilityDuration": 10,
                    "request": false,
                    "instagram": "",
                    "facebook": "",
                    "twitter": "",
                    "linkedIn": "",
                    "availabilityStartTime": null,
                    "availabilityEndTime": null,
                    "availabilityTimezoneId": "India Time",
                    "showProfile": true,
                    "rules": [
                        {
                            "intervals": [
                                {
                                    "from": "09:45",
                                    "to": "10:15",
                                    "error": null
                                }
                            ],
                            "type": "wday",
                            "wday": "monday",
                            "date": ""
                        }
                    ],
                    "meetingAvailabilitySetted": true,
                    "emailNotification": false,
                    "allowCallsAndVideosFromNotConnectedAttendees": false,
                    "exposeProfileToOtherUser": true,
                    "user": 8118
                }
            },
            {
                "statusCode": 401,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "errorMessage": "Not authorized",
                    "errorCode": "4010101",
                    "developerMessage": "Not authorize to access"
                }
            },
            {
                "statusCode": 404,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "timestamp": 1640796771904,
                    "status": 404,
                    "error": "Not Found",
                    "message": "No message available",
                    "path": "rest/event/prod1stmar/people/getFilterConnectedAttendee"
                }
            },
            {
                "statusCode": 405,
                "name": null,
                "statusText": null,
                "methodType": "POST",
                "message": null,
                "description": null,
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "cookies": null,
                "responseAttributes": [],
                "sampleData": {
                    "error": "Request method 'POST' not supported"
                }
            }
        ],
        "isMockResponseEnabled": false,
        "block_id": null,
        "gatewaySettings": null,
        "apiQueryModel": null,
        "properties": null,
        "vid": null,
        "nid": null
    }
]